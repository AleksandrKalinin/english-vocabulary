{"version":3,"sources":["ModalWord.js","actions/index.js","VocabWord.js","VocabSideMenu.js","TopMenu.js","VocabTopMenu.js","Vocabulary.js","GrammarList.js","Statistics.js","CoursesSimpleItem.js","CoursesSimple.js","CoursesMedium.js","CoursesList.js","Training.js","Main.js","ConstructWord.js","Proverbs.js","Cards.js","Audio.js","EnglishToRussian.js","RussianToEnglish.js","Videos.js","Fragments.js","Pronunciation.js","RecreateText.js","RecreateAudioText.js","InsertSpaces.js","videos/TED.js","videos/EngVid.js","videos/BritishCouncil.js","videos/Khan.js","videos/Coursera.js","videos/JimmyFallon.js","videos/JimmyKimmel.js","videos/ConanOBrien.js","videos/Ellen.js","videos/JamesCorden.js","videos/SethMeyers.js","videos/StephenColbert.js","TextsList.js","Decks.js","AudioList.js","Settings.js","BookList.js","Materials.js","Example.js","Rightwrong.js","grammar/GrammarPresentSimple.js","grammar/GrammarItem.js","grammar/GrammarPastSimple.js","grammar/GrammarFutureSimple.js","grammar/GrammarPresentContinuous.js","grammar/GrammarPastContinuous.js","grammar/GrammarFutureContinuous.js","grammar/GrammarPresentPerfect.js","grammar/GrammarFuturePerfect.js","grammar/GrammarPastPerfect.js","grammar/GrammarPresentPerfectContinuous.js","grammar/GrammarPastPerfectContinuous.js","grammar/GrammarFuturePerfectContinuous.js","AudioPlayer.js","books/SidebarMenu.js","books/SingleBook.js","books/SettingsFont.js","books/SettingsPalette.js","books/ActiveBook.js","books/Books.js","reducers/index.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["Component","actions","updateTotalScore","score","type","payload","updateTodayScore","updateExerciseScore","number","updateTestsScore","updateWordsTotal","updateWordsRemaining","updateWordsStudied","changeColorScheme","val","changeSoundVolume","toggleVocabModal","selectVocabWord","word","voiceVocabWord","VocabWord","voiceWord","speech","say","openWord","console","log","_this","props","id","this","delete","react_default","a","createElement","List","Item","react","Image","avatar","src","image","Content","className","onClick","bind","Header","as","name","transcription","translation","Button","Group","title","Icon","connect","state","store","reducer","dispatch","bindActionCreators","VocabSideMenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","consoleParams","newItems","items","map","item","i","push","key","text","category","value","setState","options","getUnique","arr","unique","e","final","indexOf","filter","newFunc","slice","newObj","callbackFromParent","handleChange","_ref","consoleProps","_this2","axios","get","then","res","data","Menu","vertical","active","Dropdown","placeholder","fluid","clearable","search","selection","onChange","TopMenu","showModal","isModalVisible","changeLogin","event","inputLogin","target","changePassword","inputPassword","changeMail","inputMail","changeDoublePassword","doublePassword","Link","to","VocabTopMenu","updateSearch","substr","searchFunction","changeNameValue","inputName","changeTranslationValue","inputTranslation","changeMeaningValue","inputMeaning","changeCategoryValue","inputCategory","changeImageValue","inputImage","submitForm","newWords","words","inputStringDate","Date","toUTCString","inputDate","obj","meaning","date","unshift","callbackFromApp","searchFromApp","categories","categoryValue","voiceWordFromModal","sortByName","sortByTranslation","sortByDate","newFunction","Modal","trigger","primary","closeIcon","Form","Field","accept","Input","icon","Vocabulary","loadMore","prev","visible","isOldestFirst","sort","b","localeCompare","splice","findIndex","deleteWord","toggleModal","myCallback","dataFromChild","topMenuCallback","searchCallback","consoleState","vocabModalOpen","query","searchString","handler","assertThisInitialized","_this3","filteredWords","toLowerCase","size","selectedVocabWord","src_TopMenu","src_VocabSideMenu","src_VocabTopMenu","relaxed","index","src_VocabWord","length","GrammarList","grammar","Table","celled","fixed","Row","columns","HeaderCell","rules","Body","Cell","description","link","Statistics","splitIntoArrays","nameArrays","create","forEach","nameArray","names","keys","values","finalData","tmp","lng","fin","Math","floor","barChartData","getYesterdaysDate","days","dateArray","setDate","getDate","getDay","j","lineChartData","contentArray","areTextsVisible","isMenuVisible","isSingleTextVisible","isResultVisible","isResultWrong","negativeWords","positiveWords","content","spllittedSentences","reservedSentences","seconds","minutes","secondsRemaining","intervalHandle","wrongIndexes","totalSecondsSpent","secondsSpent","minutesSpent","Card","itemsPerRow","Description","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","stroke","activeDot","r","CoursesSimple","con","headerVisible","updateSentence","targ","textContent","newSentence","sentence","concat","visibleSentence","continueTraining","propsToState","exercises","submitAnswer","positiveAnswers","negativeAnswers","correct_answer","replace","correctAnswer","incorrectAnswer","renderArray","currentArray","doubleWords","currentExerciseId","currentId","isFinalVisible","isWordGroupVisible","nextSentence","courses","exerciseId","full_sentence","variants","result","sentenceVisible","course","Meta","time","tasks","mapCourses","arrays","CoursesSimpleItem","exerciseName","exerciseTranslation","CoursesList","extra","BrowserRouter","Route","path","component","CoursesMedium","Training","Main","ConstructWord","setStateOnStart","currentWord","currentFullWord","currentTranslation","currentMeaning","isStarterVisible","isCardVisible","inputValue","wordNameArray","nameArrayId","currentValue","currentImage","areButtonsVisible","isImageVisible","wordId","mistakeCount","animationState","fade","initialLoad","split","randomNameArray","random","document","body","addEventListener","myHandler","tempParam","checkValue","keyCode","startTraining","wordsLength","_ref2","newWord","currentName","compareWord","currentLetter","btn","React","createRef","Container","Label","onAnimationEnd","readOnly","maxLength","Divider","Message","Proverbs","shuffleArray","negativeProverbs","positiveProverbs","proverbs","currentProverbName","proverb","constructedProverb","isCheckButtonVisible","isDKButtonVisible","isContinueButtonVisible","nameClass","setValue","indexTarget","parentElement","children","previousElementSibling","removeValue","dontKnow","checkProverb","join","el","_ref3","Cards","isButtonVisible","isTranslationVisible","showNavButtons","showContinueButton","renderComponent","checkResponse","Audio","tempSearch","positiveResponse","isInputVisible","isLinkVisible","correctNameVisible","showImage","correctName","correctNameClass","metaClass","EnglishToRussian","flagState","disabled","selectedWord","find","x","ref","currentButtonColor","RussianToEnglish","Videos","cons","videos","channelId","currentDescription","currentChannelId","currentLink","video","Fragments","texts","currentTempArray","currentStringArray","currentRandomWord","currentFinalArray","currentRandomArray","currentOneArray","activeInput","activeArray","sortedRandomArray","comparativeRandomArray","fragmentArrayIndexes","rightAnswers","livesArray","setMenuParams","difficulty","selectValue","readMore","buildLives","builtArray","backToTexts","pop","currentFullArray","currentWordArray","currentRandomIndexes","curArr","resetValue","activeTargetTitle","fragmentArray","fragmentDescription","getElementsByClassName","array","element","innerText","submitText","currentSortedArray","count","tryAgain","lives","livesCount","Pronunciation","startListening","submitResponse","objectTranscription","getElementById","positiveSentences","negativeSentences","currentSentence","currentSentenceContent","splittedText","newId","stopListening","callSubmit","resetTranscript","clearTranscription","transcript","newTranscript","substring","currentText","currentTextContent","showSubmitButtons","autostart","browserSupportsSpeechRecognition","recognition","isDeleteVisible","all","spread","textsRes","lang","SpeechRecognition","RecreateText","makeTextsVisible","createMenuItems","splitText","splittedSentenceVisible","startCountDown","tick","clearInterval","timeIsOut","setInterval","onDragStart","draggedItem","dataTransfer","effectAllowed","setData","setDragImage","onDragOver","draggedOverItem","onDragEnd","draggedIdx","checkSentences","splittedSentences","wrongCount","showFinal","selectCategory","menuChange","idx","draggable","RecreateAudioText","createTrack","currentTrack","Howl","html5","volume","audio","playing","playText","play","pause","InsertSpaces","inputContent","newContent","textsLoaded","isTaskStarted","setCaretPosition","ctrl","pos","setSelectionRange","focus","createTextRange","range","collapse","moveEnd","moveStart","select","updateValue","indexOfSpace","newstr","startExercise","TED","handleClick","currentPage","Number","loaded","Embed","autoplay","videoId","snippet","thumbnails","high","url","source","EngVid","BritishCouncil","Khan","currentComment","addComment","comments","temp","thumbsUp","likes","thumbsDown","dislikes","author","comment","Coursera","JimmyFallon","JimmyKimmel","ConanOBrien","Ellen","JamesCorden","SethMeyers","StephenColbert","TextsList","activeTargetContent","activeTargetImage","Decks","constructMenu","level","arrayOfButtons","iconsArray","colors","arrayOfColors","allWords","currentWords","currentColor","isDropdownVisible","addToList","addedItems","selected","addedFirst","sortedByTranslationUp","addedUp","sortedByNameUp","deleteItem","deleteAll","contentLoaded","firstResponse","secondResponse","style","backgroundColor","sendWords","float","color","AudioList","categoryArray","startPlayer","currentState","playState","playAudio","currentAudio","backToDecks","Settings","changeColor","colorValue","email","password","colorOptions","BookList","handleCheckChange","isChecked","checked","prevState","checkedItems","set","callFunctions","populateDropdown","books","genre","newPage","bookVal","bookValue","handlePageChange","getElementIndex","node","checkInterval","audiobooks","currentBook","parsedBook","HTMLReactParser","splitBook","activeTargetDescription","activeTargetAuthor","areBooksVisible","isPreviewVisible","parseHtml","book","currentArrayBooks","indexArray","pages","ceil","currentMin","currentIndexArray","renderPagination","backToBooks","isSingleBookVisible","isBookNavPanelVisible","bookPages","currentPageIndex","renderFirstButton","renderLastButton","prevButton","scrollToTop","goToPage","nextButton","window","scrollTo","myRef","offsetTop","chapterIndex","page","bookObject","errors","currentEmail","updateComment","updateName","updateEmail","checkChange","handleRate","rating","maxRating","newAudio","duration","hours","currentDuration","scrollForward","currentTime","scrollBackward","player","currentRange","setVolume","currentVolume","setRange","bookHTML","Map","currentAudioId","thumbArray","scrollForwardState","scrollBackwardState","controls","Rating","onRate","min","max","step","onInput","downloadBook","TextArea","Materials","Example","_this$state","getMenuParams","tests","testChange","parentid","getAttribute","currentTest","Array","selectTest","testId","activeTest","testItem","correctResults","areTestsVisible","isSingleTestVisible","backToTests","curIndexTest","curIndexCheckbox","correctAnswers","incorrectAnswers","checkResults","resultsArray","finalResults","isTooltipVisible","defineProperty","boxShadow","totalScore","param","ind","label","Rightwrong","response","GrammarPresentSimple","goBack","fullData","stepId","currentTitle","currentExamples","examples","isBackButtonVisible","newfullData","consoleFunction","main_points","steps","exampleName","exampleTranslation","GrammarPastSimple","GrammarFutureSimple","GrammarPresentContinuos","GrammarPastContinuos","GrammarFutureContinuos","GrammarPresentPerfect","GrammarFuturePerfect","GrammarPastPerfect","GrammarPresentPerfectContinuous","GrammarPastPerfectContinuous","GrammarFuturePerfectContinuous","AudioPlayer","soundVolume","on","decodingFinished","continuePlay","readTags","resetState","progress","currentMinutes","currentSeconds","jsmediatags","read","onSuccess","tag","currentTrackInfo","decodeTrackInfo","onError","error","info","currentTrackPicture","tags","artist","picture","_this$state$currentTr","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","currentTrackTitle","currentTrackArtist","playMusic","interval","startCycle","stop","changeVolume","nextTrack","prevTrack","muteSound","muted","mute","incTime","updateProgress","round","seek","toFixed","setSeek","currentTrackLength","order","tracksVisible","alt","SidebarMenu","changeSort","callbackSort","changeRating","callbackRating","changeSize","callbackSize","setCheckbox","callbackCheckbox","required","SingleBook","consoleLength","openBook","react_rating_esm","readonly","initialRating","emptySymbol","fullSymbol","summary","SettingsFont","closeModal","callbackModal","changeValue","applyChanges","changeFont","changeFontFamily","fontFamily","changeLineHeight","lineHeight","changeFontWeight","fontWeight","fontSize","SettingsPalette","setFontColor","fontState","currentTarget","activeFontColor","setBgColor","bgState","activeBgColor","changeFontColor","changeBackgroundColor","changeBgState","changeFontState","colorScheme","data-index","colorvalue","ActiveBook","openSettings","splitIntoPages","pagesArray","currentMax","pageIndexes","currentPageId","selectPage","showBook","callbackCloseModal","callbackChangeFont","callbackChangeFontFamily","callbackChangeLineHeight","callbackChangeFontWeight","callbackChangeFontColor","callbackChangeBackgroundColor","callbackChangeFontState","callbackChangeBgState","changePage","settingsFont","toString","books_SettingsFont","settingsPalette","books_SettingsPalette","settingsVisible","closeBook","Books","sortByYear","isYearAscending","year","sortByRating","isRatingAscending","sortByPopularity","isPopularityAscending","views","sortByAuthor","isAuthorAscending","sortByTitle","isTitleAscending","isDateAscending","filterSize","callbackSortMenu","callbackRatingMenu","allBooks","age_restriction","callbackSizeMenu","callbackCheckboxMenu","filters","includes","callbackOpenBook","activeBookVisible","activeId","activeLink","activeTitle","activeAuthor","callbackCloseBook","filteredBooks","books_ActiveBook","books_SidebarMenu","books_SingleBook","page_number","initialState","todayScore","exercisesComplete","testsComplete","wordsTotal","wordsStudied","wordsRemaining","arguments","undefined","action","objectSpread","vocabWord","createRootReducer","combineReducers","createStore","ReactDOM","render","es","basename","process","exact","GrammarPresentContinuous","GrammarPastContinuous","GrammarFutureContinuous"],"mappings":"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","file":"static/js/main.43e0c519.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon, Image, Modal,Header } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass ModalWord extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Modal className=\"modal-word\" trigger = {\r\n          <List.Content >\r\n            <span className=\"word-icon-wrapper\">\r\n               <Icon name='right eye' />\r\n            </span>\r\n          </List.Content>\r\n            } closeIcon>\r\n            <Modal.Content image>\r\n              <Image wrapped size='medium' src={this.props.image} />\r\n              <Modal.Description className=\"modal-word-description\">\r\n\r\n                <Header><h4><span onClick={this.props.voiceWordFromModal.bind(this)} ></span>{this.props.name} - {this.props.translation}                   <span>\r\n                    <Icon name = 'right microphone'/>\r\n                  </span> </h4></Header>\r\n                <div className=\"modal-icon-wrapper-delete\">\r\n                  <span>\r\n                    <Icon name = 'right trash alternate outline'/>\r\n                  </span>\r\n                </div>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n        </Modal>\r\n  );\r\n  }\r\n}\r\n\r\nexport default ModalWord;","let actions = {\r\n\tupdateTotalScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TOTAL_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\r\n\t},\r\n\tupdateTodayScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TODAY_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\t\t\r\n\t},\r\n\tupdateExerciseScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_EXERCISES_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateTestsScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsTotal: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_TOTAL',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsRemaining: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_REMAINING',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsStudied: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_STUDIED',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tchangeColorScheme: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_COLOR_SCHEME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tchangeSoundVolume: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_SOUND_VOLUME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleVocabModal: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_VOCAB_MODAL',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tselectVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\r\n\t},\r\n\tvoiceVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'VOICE_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t}\t\t\t\t\t\t\t\r\n}\r\n\r\nexport default actions;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Icon, Image } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport ModalWord from './ModalWord';\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass VocabWord extends Component {\r\n\r\n\r\n  delete(id){\r\n    this.props.delete(id);\r\n  }\r\n\r\n\r\n   voiceWord = (word) =>{\r\n      speech.say(word);\r\n   }\r\n\r\n   openWord = (word) => {\r\n    console.log(word);\r\n    this.props.actions.selectVocabWord(word);\r\n    this.props.actions.toggleVocabModal(true);\r\n   }\r\n\r\n  render() {\r\n    var descriptionVisible = false;\r\n    return (\r\n      <List.Item >\r\n        <Fragment>\r\n          <Image avatar src={this.props.image} />\r\n          <List.Content className=\"word-content\" onClick={this.openWord.bind(this, this.props.word)}>\r\n            <List.Header as='a'>{this.props.name} - {this.props.transcription} - {this.props.translation}</List.Header>\r\n            {descriptionVisible ?         \r\n              <List.Description className=\"word-meaning\">\r\n                  <b>{this.props.meaning}</b>\r\n              </List.Description> :null\r\n            }\r\n          </List.Content>\r\n        </Fragment>  \r\n      <List.Content>\r\n            <Button.Group>\r\n              <span onClick={this.voiceWord.bind(this, this.props.name)} className=\"word-icon-wrapper\" title=\"Озвучить\">\r\n                 <Icon name = 'right microphone'/>\r\n              </span>\r\n              <span onClick={this.delete.bind(this, this.props.id)} className=\"word-icon-wrapper\" title=\"Удалить\">\r\n                  <Icon name='right trash alternate outline' />\r\n              </span>\r\n            </Button.Group>              \r\n      </List.Content>\r\n    </List.Item>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VocabWord);","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {  Dropdown} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass VocabSideMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       items: [],\r\n       options: [],\r\n       value: null\r\n\r\n    }\r\n  }\r\n\r\n  \tUNSAFE_componentWillMount() {\r\n   \r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const items = res.data;\r\n\t        this.setState({ items }, () => this.consoleParams() );\r\n\t      }) \r\n\t  }\r\n\r\n\t  consoleParams = () =>{\r\n\t  \tlet newItems = [];\r\n\t  \tthis.state.items.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.category, \r\n                        value: item.category \r\n                     }))\r\n\t  \tthis.setState({\r\n\t  \t\toptions: newItems\r\n\t  \t}, () => this.getUnique())\r\n\t  }\r\n\r\n\t  getUnique = () => {\r\n\t  \tvar arr = this.state.options;\r\n\t  \tvar comp = 'text';\r\n  \t\t\tconst unique = arr\r\n       \t\t.map(e => e[comp])\r\n   \t\t\t\t.map((e, i, final) => final.indexOf(e) === i && i)\r\n    \t\t\t.filter(e => arr[e]).map(e => arr[e]);\r\n\t   \tthis.setState({\r\n\t   \t\toptions: unique\r\n\t   \t})\t\t\r\n\t\t}\r\n\r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var value = this.state.value;\r\n      var newObj = {};\r\n      newObj['value'] = value;\r\n      newObj['options'] = options;\r\n      this.props.callbackFromParent(newObj);\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )\r\n\r\n    consoleProps = () =>{\r\n      console.log(this.props);\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical className=\"side-menu\">\r\n        <Menu.Item name='inbox' active >\r\n          <Dropdown placeholder='Выберите категорию'\r\n                    fluid\r\n                    clearable\r\n                    value={this.state.value} \r\n                    search\r\n                    key={this.state.options.id}\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} />\r\n        </Menu.Item>\r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabSideMenu;","import React, { Component } from 'react';\r\nimport {Menu, Image, Icon, Modal, Form, Button} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      inputLogin: '',\r\n      inputPassword: '',\r\n      doublePassword: '',\r\n      inputMail: ''\r\n    }\r\n  }\r\n\r\n  showModal = () =>{\r\n      let state = this.state.isModalVisible;\r\n      this.setState({\r\n        isModalVisible: !state\r\n      },() => console.log(this.state.isModalVisible) )\r\n  }\r\n\r\n    changeLogin = (event) =>{\r\n      this.setState({\r\n        inputLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    changePassword = (event) =>{\r\n      this.setState({\r\n        inputPassword: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMail = (event) =>{\r\n      this.setState({\r\n        inputMail: event.target.value\r\n      })\r\n    }\r\n\r\n    changeDoublePassword = (event) =>{\r\n      this.setState({\r\n        doublePassword: event.target.value\r\n      })\r\n    }    \r\n\r\n  render() {\r\n    return (\r\n        <Menu className=\"top-menu\">\r\n          <Menu.Item>\r\n            <Link to=\"/\">Главная</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/vocabulary\">Словарь</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item>\r\n            <Link to=\"/grammar\">Грамматика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/training\">Тренировки</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/tests\">Тесты</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/materials\">Материалы</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item>\r\n            <Link to=\"/statistics\">Статистика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/audioplayer\">Статистика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/settings\">Настройки</Link>\r\n          </Menu.Item>                    \r\n      \r\n\r\n        {/*\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Войти</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishLogin}>Войти</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Регистрация</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите e-mail</label>\r\n                  <input value={this.state.inputMail} onChange={this.changeMail} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>                   \r\n                <Form.Field>\r\n                  <label>Повторите пароль</label>\r\n                  <input value={this.state.doublePassword} onChange={this.changeDoublePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishRegistration}>Зарегистрироваться</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>                                             \r\n          <Menu.Item position=\"right\" className=\"menu-image\" >\r\n            {this.state.isModalVisible ?\r\n              <div className=\"user-modal\">\r\n                <div className=\"user-modal-pic\">\r\n                  <Image src=\"/icons/member.png\" />              \r\n                  <div className=\"user-modal-name\">\r\n                    <h5> User</h5>\r\n                    <h6>blabla@mail.com</h6>\r\n                  </div>                \r\n                </div>\r\n                <p><Link to=\"/statistics\"> <Icon name='chart bar outline' size='' />Статистика</Link></p>\r\n                <p><Link to=\"/settings\"> <Icon name='setting' size=''  />Настройки</Link></p>\r\n                <p><Link to=\"/statistics\"> <Icon name='log out' size=''  />Выйти</Link></p>\r\n              </div> : null\r\n            }\r\n            <Image className=\"user-avatar\" onClick={this.showModal} src=\"/icons/member.png\" />\r\n          </Menu.Item> \r\n        */}\r\n                                                                                                    \r\n        </Menu>\r\n \t);\r\n  }\r\n}\r\n\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport { Button, Menu, Modal, Form } from 'semantic-ui-react'\r\nimport { Input} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass VocabTopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      search: '',\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: '',\r\n      categories: [],\r\n      categoryValue: 'all'  \r\n    };\r\n    this.delete = this.delete;\r\n    this.voiceWord = this.voiceWord;\r\n    this.voiceWordFromModal = this.voiceWordFromModal;\r\n    this.sortByName = this.sortByName;\r\n    this.sortByTranslation = this.sortByTranslation;\r\n    this.sortByDate = this.sortByDate;\r\n    this.newFunction = this.newFunction;  \r\n    \r\n  }\r\n\r\n  consoleProps = () =>{\r\n    console.log(this.props)\r\n  }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({search: event.target.value.substr(0,20)}, ()=> this.searchFunction() );\r\n    } \r\n\r\n//загрузка слова\r\n    changeNameValue = (event) =>{\r\n      this.setState({\r\n        inputName: event.target.value\r\n      })\r\n    }\r\n\r\n    changeTranslationValue = (event) =>{\r\n      this.setState({\r\n        inputTranslation: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMeaningValue = (event) =>{\r\n      this.setState({\r\n        inputMeaning: event.target.value\r\n      })\r\n    }    \r\n\r\n    changeCategoryValue = (event) =>{\r\n      this.setState({\r\n        inputCategory: event.target.value\r\n      })\r\n    } \r\n\r\n    changeImageValue = (event) =>{\r\n      this.setState({\r\n        inputImage: event.target.value\r\n      })\r\n    }\r\n\r\n    submitForm = (e) =>{\r\n    var newWords = this.props.words.slice();\r\n    const inputName = this.state.inputName;\r\n    const inputTranslation = this.state.inputTranslation;\r\n    const inputMeaning = this.state.inputMeaning;\r\n    const inputCategory = this.state.inputCategory;\r\n    const inputStringDate = new Date().toUTCString();\r\n    console.log(inputStringDate);\r\n    const inputDate = new Date(inputStringDate);\r\n    const inputImage = this.state.inputImage;\r\n    const inputId = 30;\r\n    const obj ={'id': inputId,\r\n          'name': inputName, \r\n          'translation': inputTranslation, \r\n          'meaning': inputMeaning,\r\n          'image': inputImage, \r\n          'date': inputDate,\r\n          'category': inputCategory\r\n          } \r\n\r\n    newWords.unshift(obj); \r\n  \r\n      this.setState({ words: newWords}, () => console.log(this.state.words) );\r\n      this.setState({\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: ''\r\n      }, () => this.newFunc() )\r\n    }    \r\n\r\n    newFunc = () =>{\r\n      var words = this.state.words;\r\n      this.props.callbackFromApp(words);\r\n    }\r\n\r\n    searchFunction = () =>{\r\n      var search = this.state.search;\r\n      this.props.searchFromApp(search);\r\n    }    \r\n\r\n  render() {\r\n\r\n   return (\r\n      <Menu text className=\"vocab-top-menu-wrapper vocab-top-menu-wrapper-color\">\r\n        <Menu.Item>\r\n          <Modal className=\"modal-form\" trigger={<Button primary>Добавить слово</Button>} closeIcon>\r\n            <Form className=\"input-form\">\r\n              <Form.Field>\r\n                <label>Введите слово</label>\r\n                <input value={this.state.inputName} onChange={this.changeNameValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите перевод</label>\r\n                <input value={this.state.inputTranslation} onChange={this.changeTranslationValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите категорию</label>\r\n                <input value={this.state.inputCategory} onChange={this.changeCategoryValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Выберите изображение</label>\r\n                <input value={this.state.inputImage} onChange={this.changeImageValue} type=\"file\" accept=\"image/png, image/jpeg\" />\r\n              </Form.Field>                   \r\n              <Button primary onClick={this.submitForm}>Добавить</Button>\r\n            </Form>         \r\n          </Modal>\r\n        </Menu.Item>\r\n        <Menu.Item name='removeWords'> \r\n          <Button primary >\r\n            Удалить\r\n          </Button>\r\n        </Menu.Item>        \r\n        <Menu.Item name='byName'> \r\n          <Button primary onClick = {this.props.sortByName}>\r\n            по имени\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byTranslation'> \r\n          <Button primary onClick = {this.props.sortByTranslation}>\r\n            по переводу\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byMeaning'> \r\n          <Button primary onClick = {this.props.sortByDate}>\r\n            по дате\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n         <Input icon='search' placeholder='Search...' onChange={this.updateSearch}/>\r\n        </Menu.Item> \r\n   \r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabTopMenu;","import React, { Component, Fragment } from 'react';\r\nimport { List, Button, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport VocabWord from'./VocabWord'\r\nimport VocabSideMenu from'./VocabSideMenu'\r\nimport TopMenu from './TopMenu'\r\nimport VocabTopMenu from './VocabTopMenu'\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Vocabulary extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twords: [],\r\n\t\t\tisOldestFirst: true,\r\n\t\t\tvisible: 15,\r\n\t\t\tquery: '',\r\n\t\t\tsearchString: [],\r\n\t\t\tsearch: '',\r\n\t\t\tcategories: [],\r\n\t\t\tcategoryValue: 'all'\t\r\n\t\t};\r\n\t\tthis.delete = this.delete;\r\n\t\tthis.handler = this.handler.bind(this);\t\r\n\t\tthis.sortByName = this.sortByName;\r\n\t\tthis.sortByTranslation = this.sortByTranslation;\r\n\t\tthis.sortByDate = this.sortByDate;\r\n\t\r\n\t}\r\n\r\n handler() {\r\n    this.setState({\r\n     words: []\r\n    })\r\n  }\r\n\r\n//подгрузка слов\r\n\tloadMore = () => {\r\n\t    this.setState((prev) => {\r\n\t      return {visible: prev.visible + 15};\r\n\t    });\r\n\t  }\r\n\r\n//сортировка по дате\r\n\tsortByDate = () => {\r\n    const words = this.state.words.slice();\r\n    let newWords = [];\r\n    if(this.state.isOldestFirst){\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(b.date) - new Date(a.date);\r\n      });\r\n    }\r\n    else{\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(a.date) - new Date(b.date);\r\n      });      \r\n    }\r\n    this.setState({\r\n      isOldestFirst: !this.state.isOldestFirst,\r\n      words: newWords\r\n    })\r\n\t} \r\n\r\n//сортировка по имени\r\n\tsortByName = () =>{\r\n\t\tconst words = this.state.words;\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name) /*console.log('a,b ', a,b) */ );\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name) /*console.log('b,a ', b,a) */ );\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\twords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n//сортировка по переводу\r\n\tsortByTranslation = () =>{\r\n\t\tconst words = this.state.words;\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\twords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const words = res.data;\r\n\t        this.setState({ words });\r\n\t      })\r\n\t  }\r\n\r\n   delete = (id) =>{\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t})\r\n   }\r\n\r\n   deleteWord = (id) => {\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t}, () => this.toggleModal());\r\n   }\r\n\r\n   myCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tcategoryValue: dataFromChild.value,\r\n   \t\t\toptions: dataFromChild.options\r\n   \t\t}) \r\n   }\r\n\r\n   topMenuCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\twords: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   searchCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tsearch: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   consoleState = () => {\r\n   \tconsole.log(this.state)\r\n   }\r\n\r\n   toggleModal = () => {\r\n   \tlet value = this.props.store.vocabModalOpen;\r\n   \tthis.props.actions.toggleVocabModal(!value);\r\n   }\r\n\r\n\r\n\r\n  render() {  \t\r\n  \tlet filteredWords = this.state.words.filter(\r\n  \t\t(word) =>{\r\n  \t\t\treturn word.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n  \t\t}\r\n  \t);  \t\r\n    return (\r\n    \t<Fragment>\r\n    \t\t{this.props.store.vocabModalOpen ?\r\n\t    \t\t<div className=\"modal-container\">\r\n\t    \t\t\t<div className=\"modal-word\">\r\n\t    \t\t\t\t<span title=\"Закрыть\" onClick={this.toggleModal} className=\"modal-word__icon modal-word__icon--close\"><Icon name = 'close' size=\"large\" /></span>\r\n\t    \t\t\t\t<div className=\"modal-word__image\">\r\n\t    \t\t\t\t\t<img src = {this.props.store.selectedVocabWord.image} />\r\n\t    \t\t\t\t</div>\r\n\t    \t\t\t\t<p className=\"modal-word__title\">{this.props.store.selectedVocabWord.name} - <span className=\"modal-word__translation\">{this.props.store.selectedVocabWord.translation}</span></p>\r\n\t    \t\t\t\t<span onClick={this.deleteWord.bind(this, this.props.store.selectedVocabWord.id)} title=\"Удалить\" className=\"modal-word__icon modal-word__icon--delete\"><Icon size=\"large\" name = 'trash alternate outline'/></span>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n    \t\t: null}\r\n\t    \t<div className=\"content-wrapper\">\r\n\t    \t\t<TopMenu></TopMenu>\r\n\t    \t\t<div className=\"vocab-side-menu\">\r\n\t    \t\t\t<VocabSideMenu callbackFromParent={this.myCallback} items={this.state.words} ></VocabSideMenu>\r\n\t    \t\t\t<div className=\"vocab-top-menu\">\r\n\t    \t\t\t\t<VocabTopMenu \r\n\t    \t\t\t\t\thandler = {this.handler}\r\n\t    \t\t\t\t\tsortByName={this.sortByName}\r\n\t    \t\t\t\t\tsortByTranslation={this.sortByTranslation}\r\n\t    \t\t\t\t\tsortByDate ={this.sortByDate}\r\n\t     \t\t\t\t\tcallbackFromApp={this.topMenuCallback}\r\n\t    \t\t\t\t\tsearchFromApp={this.searchCallback} \r\n\t    \t\t\t\t\t>\r\n\t\t\t\t\t\t</VocabTopMenu>\r\n\t\t\t \t\t\t<List className=\"vocab-list\" relaxed='very'>\r\n\t\t\t\t\t\t\t{filteredWords.slice(0,this.state.visible).map((word,index) => \r\n\t\t\t\t\t\t\t\t(this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === word.category) && \r\n\t\t\t\t\t\t\t\t<VocabWord\r\n\t\t\t\t\t\t\t\t\tword = {word}\r\n\t\t\t\t\t\t\t\t\tdelete={this.delete}\r\n\t\t\t\t\t\t\t\t\tid={word.id}\r\n\t\t\t\t\t\t\t\t\tkey={word.id} \r\n\t\t\t\t\t\t\t\t\tname={word.name}\r\n\t\t\t\t\t\t\t\t\ttranscription = {word.transcription} \r\n\t\t\t\t\t\t\t\t\ttranslation={word.translation} \r\n\t\t\t\t\t\t\t\t\tmeaning={word.meaning}\r\n\t\t\t\t\t\t\t\t\timage={word.image} \r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t</VocabWord>\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t  \t\t\t</List>\r\n\t\t\t  \t\t\t<div className=\"load-more-button\">\r\n\t\t\t\t\t\t\t{this.state.visible < this.state.words.length &&\r\n\t\t\t\t            \t<Button onClick={this.loadMore} primary>Загрузить ещё</Button>\r\n\t\t\t\t          \t}\t\t\t\t  \t\t\t\t\r\n\t\t\t  \t\t\t</div>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    \t<footer></footer>\r\n\t    </Fragment>\t\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vocabulary);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass GrammarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      grammar: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          const grammar = res.data;\r\n          this.setState({ grammar });\r\n        })\r\n    } \r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {(this.state.grammar.length) ?\r\n          <Table celled fixed className=\"grammar-list\">\r\n            <Table.Header>\r\n              <Table.Row columns={1} >\r\n                <Table.HeaderCell>Грамматические правила</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>        \r\n            {this.state.grammar[0].rules.map((item,index) =>\r\n              <Table.Body>\r\n                <Table.Row columns={3}>\r\n                  <Table.Cell className=\"grammar-title\">\r\n                    {item.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-description\">\r\n                    {item.description}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-button\">\r\n                    <div className=\"link-wrapper\">\r\n                      <Link to={item.link}>Начать</Link>\r\n                    </div>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            )}\r\n          </Table>: null }        \r\n          </div>\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GrammarList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nclass Statistics extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      words: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n\r\n        this.setState({ \r\n          words\r\n        }, () => this.splitIntoArrays());\r\n      })\r\n\r\n\r\n        \r\n  }   \r\n\r\n  splitIntoArrays = () =>{\r\n    var nameArrays = Object.create(null);\r\n    let words = this.state.words.slice();\r\n    words.forEach(function(word) {\r\n      var nameArray = nameArrays[word.category];\r\n      if (!nameArray) {\r\n        nameArray = nameArrays[word.category] = [];\r\n      }\r\n      nameArray.push(word);\r\n    });\r\n  \tlet names = Object.keys(nameArrays);\r\n  \tlet values = Object.values(nameArrays);\r\n  \tlet finalData = [];\r\n  \tfor (var i = 0; i < names.length; i++) {\r\n  \t\tlet tmp = {};\r\n  \t\tlet lng = values[i].length;\r\n  \t\tlet fin = Math.floor(lng/3);\r\n      \ttmp['Всего слов'] = lng;\r\n      \ttmp['Добавлено слов'] = fin;\r\n      \ttmp['name'] = names[i];\r\n      \tfinalData.push(tmp);\r\n  \t}\r\n  \tthis.setState({\r\n  \t\tnameArrays: nameArrays,\r\n  \t\tbarChartData: finalData\r\n  \t}, () => this.getYesterdaysDate() )     \r\n\r\n  }\r\n\r\n\tgetYesterdaysDate = () => {\r\n    let data = this.state.barChartData.slice(0,6);\r\n\t\tvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let dateArray = [];\t\t\r\n    var date = new Date();\r\n    let i = 0;\r\n    while ( i < 6) {\r\n\t\t  date.setDate(date.getDate() - 1);\r\n      //date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\t    dateArray.push(days[date.getDay()]); \r\n\t    i++;  \t\r\n    }\r\n    for (var j = 0; j < data.length; j++) {\r\n      data[j][\"name\"] = dateArray[j]\r\n    }\r\n    this.setState({\r\n      lineChartData: data\r\n    }, () => console.log(this.state))\r\n\r\n\r\n\t}\r\n\r\n  consoleState = () =>{\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item>\r\n                    <Button onClick={this.getYesterdaysDate}>Press</Button>\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {this.state.areTextsVisible ?\r\n              <Card.Group className=\"texts-cards statistics-wrapper\" itemsPerRow={1} >\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Графики</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n    \t\t              <BarChart\r\n    \t\t                width={800}\r\n    \t\t                height={450}\r\n    \t\t                data={this.state.barChartData}\r\n    \t\t                margin={{\r\n    \t\t                  top: 20, right: 30, left: 20, bottom: 5,\r\n    \t\t                }}\r\n    \t\t              >\r\n    \t\t                <CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t\t                <XAxis dataKey=\"name\" />\r\n    \t\t                <YAxis />\r\n    \t\t                <Tooltip />\r\n    \t\t                <Legend />\r\n    \t\t                <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n    \t\t                <Bar dataKey=\"Добавлено слов\" fill=\"#444444\" />\r\n    \t\t              </BarChart>\r\n                    </Card.Description>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <LineChart\r\n                        width={800}\r\n                        height={450}\r\n                        data={this.state.lineChartData}\r\n                        margin={{\r\n                          top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"Всего слов\" stroke=\"#3281F0\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"Добавлено слов\" stroke=\"#444444\" />\r\n                      </LineChart>\r\n                    </Card.Description>                    \r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Результаты</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                    \t<a className=\"active\">сегодня</a>\r\n                    \t<a>за неделю</a>\r\n                    \t<a>за месяц</a>\r\n                      <a>за всё время</a>\r\n                    </div>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span>\r\n\t                      \t\t\t<Icon name = 'plus square outline'/>\r\n\t                      \t\t</span>\r\n\t                      \t\t<h1>24</h1>\r\n\t                      \t\t<p>Слов добавлено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'file text'/></span>\r\n\t                      \t\t<h1>3</h1>\r\n\t                      \t\t<p>Упражнений выполнено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'gem outline'/></span>\r\n\t                      \t\t<h1>5</h1>\r\n\t                      \t\t<p>Фраз выучено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>14</h1>\r\n\t                      \t\t<p>Страниц прочитано</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'cogs'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Курсов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Тестов пройдено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>           \t                      \t\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Слова</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>1210</h1>\r\n\t                      \t\t<p>Слов всего</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>54</h1>\r\n\t                      \t\t<p>Слов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'question circle outline'/></span>\r\n\t                      \t\t<h1>1156</h1>\r\n\t                      \t\t<p>Слов на изучении</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>                \r\n              </Card.Group>: null\r\n             } \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport { Card, Image, Button, Modal} from 'semantic-ui-react'\r\n//import TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass CoursesSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      data: [],\r\n\t\t\tsentence: '',\r\n      visibleSentence: '',\r\n\t\t\tcourses: [],\r\n\t\t\tcorrect_answer: '',\r\n\t\t\twords: [],\r\n      isWordGroupVisible: true,\r\n      isFinalVisible: false,\r\n      doubleWords: [],\r\n      currentArray: [],\r\n      currentId: 0,\r\n      correctAnswer: false,\r\n      incorrectAnswer: false,\r\n      currentExerciseId: 0,\r\n      exercises: [],\r\n      headerVisible: false,\r\n      sentenceVisible: true,\r\n      positiveAnswers: [],\r\n      negativeAnswers: [],\r\n      isResultVisible: false\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n  con = () =>{\r\n    this.setState({\r\n      headerVisible: true\r\n    })\r\n    console.log(this.state);\r\n  }\r\n\r\n  updateSentence =(e)=>{\r\n    var targ = e.target.textContent + ' ';\r\n  \tvar newSentence = this.state.sentence.concat([e.target.textContent]);\r\n    var visibleSentence = this.state.visibleSentence.concat([targ]);\r\n  \tthis.setState({\r\n  \t\tsentence: newSentence,\r\n      visibleSentence: visibleSentence\r\n  \t\t//sentence: [this.state.sentence, ...e.target.textContent]\r\n  \t}, () => this.continueTraining() )\r\n  \tconsole.log(visibleSentence);\r\n  }\r\n\r\n    componentDidMount() {\r\n      var exerciseId = this.state.currentExerciseId;\r\n      axios.get('/courses.json')\r\n        .then(res => {\r\n          const courses = res.data;\r\n          const correct_answer = res.data[0].exercises[exerciseId].full_sentence;\r\n          const words = res.data[0].exercises[exerciseId].words;\r\n          var newWords = []\r\n          for (var i = 0; i < words.length; i++) {\r\n            var a = words[i].variants;\r\n            for (var j = 0; j < a.length; j++) {\r\n              newWords.push(a[j]);\r\n            }\r\n          }          \r\n          var result = []; \r\n          for(var i=0;i < newWords.length;i = i+4){\r\n            result.push(newWords.slice(i,i+4));\r\n          }\r\n          console.log(this.props);\r\n          this.setState({ \r\n            courses: courses, \r\n            correct_answer: correct_answer, \r\n            words: words, \r\n            doubleWords: result,\r\n            exercises: this.props.exercises,\r\n            headerVisible: true \r\n          }, () => this.renderArray() );\r\n        })\r\n    }\r\n\r\n    propsToState = () =>{\r\n      this.setState({\r\n        exercises: this.props.exercises\r\n      })\r\n    }\r\n\r\n    submitAnswer = () =>{\r\n    \tvar sentence = this.state.sentence;\r\n      var positiveAnswers = this.state.positiveAnswers;\r\n      var negativeAnswers = this.state.negativeAnswers;\r\n    \tvar correct_answer = this.state.correct_answer.replace(/\\s/g, '');\r\n\r\n    \tif(sentence===correct_answer){\r\n        positiveAnswers.push(sentence);\r\n    \t\tthis.setState({\r\n          correctAnswer: true,\r\n          positiveAnswers: positiveAnswers\r\n\r\n        })\r\n\r\n    \t}\r\n    \telse{\r\n        negativeAnswers.push(sentence);        \r\n    \t\tthis.setState({\r\n          incorrectAnswer: true,\r\n          negativeAnswers: negativeAnswers\r\n\r\n        })\r\n    \t};\r\n\r\n    }\r\n\r\n    renderArray = () =>{\r\n      var array = this.state.doubleWords.slice();\r\n      var id  = this.state.currentExerciseId;\r\n      var currentArray = array[id];\r\n      this.setState({\r\n        currentArray: currentArray\r\n      })\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      var id  = this.state.currentId;\r\n      var words = this.state.doubleWords.slice();\r\n      id = id+1;\r\n      var currentArray = words[id];\r\n      if(id<words.length){\r\n        this.setState({\r\n          currentId: id,\r\n          currentArray: currentArray\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isWordGroupVisible: false,\r\n          currentId: 0\r\n        }, ()=>this.submitAnswer() )\r\n      }\r\n    }\r\n\r\n\r\n    nextSentence = () =>{\r\n      let courses = this.state.courses.slice();\r\n      let currentId = this.state.currentId;\r\n      let exerciseId = this.state.currentExerciseId;\r\n      exerciseId  = exerciseId + 1;\r\n      if(exerciseId<courses[0].exercises.length){\r\n\r\n        const correct_answer = courses[0].exercises[exerciseId].full_sentence;\r\n        const words = courses[0].exercises[exerciseId].words;\r\n        console.log(correct_answer);\r\n        console.log(words);\r\n            var newWords = []\r\n            for (var i = 0; i < words.length; i++) {\r\n              var a = words[i].variants;\r\n              for (var j = 0; j < a.length; j++) {\r\n                newWords.push(a[j]);\r\n              }\r\n            }          \r\n            var result = []; \r\n            for(var i=0;i < newWords.length;i = i+4){\r\n              result.push(newWords.slice(i,i+4));\r\n            }\r\n        console.log(result);\r\n        console.log(newWords);\r\n        var currentArray = result[currentId]; \r\n        console.log(currentArray);\r\n\r\n        this.setState({\r\n          currentExerciseId: exerciseId,\r\n          isWordGroupVisible: true,\r\n          isFinalVisible: false,\r\n          correct_answer: correct_answer,\r\n          words: words,\r\n          doubleWords: result,\r\n          currentArray: currentArray,\r\n          visibleSentence: '',\r\n          sentence: '',\r\n          incorrectAnswer: false,\r\n          correctAnswer: false\r\n\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          isResultVisible: true,\r\n          incorrectAnswer: false,\r\n          correctAnswer: false,\r\n          isWordGroupVisible: false,\r\n          isFinalVisible: false,\r\n          sentenceVisible: false,\r\n          headerVisible: false                      \r\n        })\r\n\r\n      } \r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    var id = this.state.currentExerciseId;\r\n    return (\r\n          <Card>\r\n            <Image src='/courses.png' />\r\n            <Card.Content>\r\n              <Card.Header>{this.props.course}</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Requires {this.props.time} minutes of your time</span>\r\n              </Card.Meta>\r\n              <Card.Description>This course consists of {this.props.tasks} exercises</Card.Description>\r\n              <Card.Description>\r\n                <Modal className=\"modal\" trigger={<Button primary>Start</Button>} closeIcon>\r\n                    <Card className=\"wrapper-variant\">\r\n                        <Card.Content>\r\n                        {this.state.isResultVisible ? <h1>Congratulations</h1>: null }\r\n                        {this.state.headerVisible ? \r\n                          <Card.Header className=\"header-variant course-simple-item-header\">{this.state.exercises[id].translation}</Card.Header>: null  \r\n                        }\r\n                        {this.state.sentenceVisible ?\r\n                            <Card.Header className=\"header-variant course-simple-item-sentence\">{this.state.visibleSentence}</Card.Header>: null\r\n                         }\r\n                          \r\n    \r\n                          <Card.Description className=\"button-wrap\">\r\n                            <Button.Group className=\"button-group button-variants\">\r\n                            { /*this.state.isWordGroupVisible ? this.state.words.map((word, index) =>\r\n                                <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{word}</Button>\r\n                                ) : null */\r\n                                /*\r\n                                this.state.doubleWords.map((item,index) => {\r\n                                    return item.map((word,index) => \r\n                                      <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{word}</Button>\r\n                                    )\r\n                                } */\r\n                                this.state.isWordGroupVisible ?\r\n                                this.state.currentArray.map((item,index) => \r\n                                  <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{item}</Button>\r\n                                ): null\r\n                              }                            \t\r\n                            </Button.Group>\r\n                            { (this.state.isFinalVisible && this.state.correctAnswer) ? <h1 className=\"course-simple-item right\">Right!</h1>: null }\r\n                            { (this.state.isFinalVisible && this.state.incorrectAnswer) ? <h1 className=\"course-simple-item wrong\">Wrong!</h1>: null }\r\n                            <Button.Group className=\"button-group\">\r\n                              <Button className=\"button-variant\" primary onClick={this.con}>Console</Button>\r\n                            </Button.Group>\r\n                            <Button.Group className=\"button-group\">\r\n                              <Button className=\"button-variant\" primary onClick={this.nextSentence}>Continue</Button>\r\n                            </Button.Group>                                                                                                                                                                                                        \r\n                          </Card.Description>                          \r\n                        </Card.Content>\r\n                    </Card>\r\n                </Modal>                \r\n              </Card.Description>\r\n             </Card.Content>\r\n          </Card> \r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button} from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport CoursesSimpleItem from './CoursesSimpleItem';\r\n\r\nclass CoursesSimple extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      courses: [],\r\n      words: [],\r\n      exercises: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/courses.json')\r\n        .then(res => {\r\n          const courses = res.data;\r\n          this.setState({ courses: courses }, () => this.mapCourses() );\r\n        })\r\n    }\r\n\r\n    mapCourses = () =>{\r\n      var courses = this.state.courses.slice();\r\n      var arrays = [];\r\n      for (var i = 0; i < courses.length; i++) {\r\n            var a = courses[i].exercises;\r\n            for (var j = 0; j < a.length; j++) {\r\n              arrays.push(a[j]);\r\n            }\r\n      }   \r\n      console.log(arrays) \r\n      this.setState({\r\n        exercises: arrays\r\n      })   \r\n      /*\r\n          for (var i = 0; i < words.length; i++) {\r\n            var a = words[i].variants;\r\n            for (var j = 0; j < a.length; j++) {\r\n              newWords.push(a[j]);\r\n            }\r\n          }   */    \r\n    }\r\n\r\n    con = () =>{\r\n      let courses = this.state.courses.slice();\r\n\r\n      console.log(courses[0].exercises[0].words[1].variants);\r\n      console.log(courses[0].exercises[1].words);\r\n      console.log(courses[1].exercises[0].words);\r\n      console.log(courses[1].exercises[1].words);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          {this.state.courses.map((course, index) =>\r\n            <CoursesSimpleItem\r\n                      \r\n              exerciseName={course.exercises[0].full_sentence}\r\n              exercises = {this.state.exercises}\r\n              exerciseTranslation={course.exercises[0].translation}\r\n              key={index}\r\n              name = {course.course}\r\n              time={course.time}\r\n              tasks={course.tasks}\r\n\r\n            />\r\n          )}\r\n        </Card.Group>\r\n        <Button onClick={this.con}>Console</Button>\r\n        <Button onClick={this.mapCourses}>Courses</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\nclass CoursesList extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card>                           \r\n        </Card.Group>        \r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport CoursesSimple from './CoursesSimple'\r\nimport CoursesMedium from './CoursesMedium'\r\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass CoursesList extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                  <Link to={\"/coursessimple\"}>Simple courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                <Link to={\"/coursesintermediate\"}>Intermediate courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                <Link to={\"/coursesadvanced\"}>Advanced courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card>       \r\n        </Card.Group>\r\n        <Router>\r\n          <div>\r\n            <Route path=\"/courses/simple\" component={CoursesSimple} />\r\n            <Route path=\"/courses/medium\" component={CoursesMedium} />     \r\n          </div>\r\n        </Router>                  \r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Training extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper training-cards\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/englishtorussian.jpg' />              \r\n              </div>\r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/englishtorussian\">С английского на русский</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/russiantoenglish.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/russiantoenglish\">С русского на английский</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/memory.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/cards\">Словарные карточки</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/audio\">Аудиотренировка</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/construct.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/constructword\">Конструктор слов</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/pronunciation.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/pronunciation\">Произношение</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>          \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/fillthegaps.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/fragments\">Заполни пробелы</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/recreatetext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreatetext\">Воспроизведи текст</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/recreateaudiotext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreateaudiotext\">Воспроизведи аудиоисторию</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/insertspaces.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/insertspaces\">Расставьте пробелы</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/truefalse.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/rightwrong\">Верно-неверно</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/proverbs.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/proverbs\">Пословицы и поговорки</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>                                                                                                               \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Training;","import React, { Component, Fragment } from 'react';\r\nimport {Image } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n}\r\n \r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper recommended-wrapper\">\r\n          \t<div className=\"main-section section-1\">\r\n          \t  <div className=\"section-overlay\">\r\n          \t  \t<div className=\"section-header\">\r\n          \t  \t\t<h2>Лучший способ выучить язык</h2>\r\n          \t  \t\t<Link to=\"/training\">Начать учиться</Link>\r\n          \t  \t</div>\r\n          \t  </div>              \r\n            </div>\r\n          \t<div className=\"advantage-section\">\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/settings.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Удобный интерфейс</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notebook.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Множество возможностей</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/user.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разнообразные тренировки</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notepad.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Большой каталог материалов</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/house.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Полностью бесплатно</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/pen.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разные уровни обучения</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>          \t                \r\n            </div>            \r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image words-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Изучайте слова</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>20 тематических наборов</li>\r\n\t            \t\t\t<li>4000 слов</li>\r\n\t            \t\t\t<li>Словарь с расширенным функционалом</li>            \t\t\t            \t\t\t\r\n\t            \t\t\t<li>Возможность изучать добавленные слова</li>            \t\t\t\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/vocabulary\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Тренируйтесь</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>10 видов тренировок</li>\r\n\t            \t\t\t<li>Тренировка чтения, говорения  и понимания на слух</li>\r\n\t            \t\t\t<li>Возможность добавлять на тренировку изучаемые слова</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/training\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image training-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image grammar-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Учите грамматику</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Изучение времен английского языка</li>\r\n\t            \t\t\t<li>Примеры употребления</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/grammar\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Улучшайте навыки чтения</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>120 учебных текстов</li>\r\n\t            \t\t\t<li>Различная тематика</li>\r\n\t            \t\t\t<li>Тексты разного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/texts\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image texts-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image books-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Читайте книги</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Книги на любой вкус</li>\r\n\t            \t\t\t<li>Возможность слушать аудиокниги</li>\r\n\t            \t\t\t<li>Книги различного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/books\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>     \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message, TextArea} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport './style.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass ConstructWord extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    \tthis.btn = React.createRef();\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentWord: '',\r\n        currentFullWord: null,\r\n        currentTranslation: '',\r\n        currentMeaning: '',\r\n        isStarterVisible: true,\r\n        isCardVisible: false,\r\n        isFinalVisible: false,\r\n        inputValue: null,\r\n        nameArray: [],\r\n        wordNameArray: [],\r\n        nameArrayId: 0,\r\n        currentValue: '',\r\n        search: '',\r\n        currentImage: null,\r\n        areButtonsVisible: true,\r\n        isImageVisible: false,\r\n        wordId: 0,\r\n        mistakeCount: 0,\r\n        animationState: false,\r\n        fade: false        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/vocabulary2.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        const currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n        const currentTranslation = words[id].translation;\r\n        const currentImage = words[id].image;\r\n        const currentMeaning = words[id].meaning;\r\n        const nameArray = currentWord.split('');\r\n        const randomNameArray = currentWord.split('');\r\n        for (let i = randomNameArray.length - 1; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n        }\r\n        const wordNameArray = [];\r\n        for (var i = 0; i < nameArray.length; i++) {\r\n          wordNameArray.push(' ');\r\n        }\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          currentFullWord\r\n          });\r\n      })\r\n      document.body.addEventListener(\"keydown\", this.myHandler);\r\n    }\r\n \r\n  myHandler = (e) =>{\r\n    const fade = this.state.fade;\r\n    let mistakeCount = this.state.mistakeCount;\r\n    let currentFullWord = this.state.currentFullWord;\r\n    let negativeWords = this.state.negativeWords.slice();\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let currentValue = this.state.currentValue;\r\n    let currentWord = this.state.currentWord;      \r\n    let id = this.state.nameArrayId;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let tempParam;\r\n    if ((e.key=== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        currentValue = currentValue + e.key;\r\n        this.state.wordNameArray[id] = e.key;\r\n        for (var i = 0; i < randomNameArray.length; i++) {\r\n          if (randomNameArray[i] === e.key) {\r\n            tempParam = i;\r\n            break;\r\n          }\r\n        }\r\n        randomNameArray.splice(tempParam,1);       \r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: e.key,\r\n          randomNameArray\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((e.key !== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        mistakeCount++;\r\n        this.setState({\r\n          mistakeCount,\r\n          fade: true\r\n        })\r\n      }\r\n      else if((e.keyCode == '13') && (this.state.isCardVisible) ){\r\n        this.continueTraining();\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false\r\n        })        \r\n      }\r\n  }    \r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let currentFullWord = this.state.currentFullWord;\r\n\t  let negativeWords = this.state.negativeWords.slice();\r\n\t  let positiveWords = this.state.positiveWords.slice();\r\n\t  let currentValue = this.state.currentValue;\r\n\t  let currentWord = this.state.currentWord;\t  \r\n\t\tif (mistakeCount > 2){\r\n\t\t\tnegativeWords.push(currentFullWord);\r\n\t\t}\r\n\r\n\t\telse if(currentWord !== currentValue){\r\n\t\t  \tnegativeWords.push(currentFullWord);\r\n\t\t  \tthis.setState({\r\n\t\t  \t\tnegativeWords\r\n\t\t  \t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpositiveWords.push(currentFullWord)\r\n\t\t} \r\n      let id = this.state.id;\r\n      let wordsLength = this.state.words.length;\r\n      let words = this.state.words; \r\n\r\n      id = id + 1;\r\n       if(id < wordsLength) {\r\n       \tconst currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n\t\tconst currentTranslation = words[id].translation;\r\n\t\tconst currentImage = words[id].image;\r\n\t\tconst currentMeaning = words[id].meaning;        \r\n\t\tconst nameArray = currentWord.split('');\r\n\t\tconst randomNameArray = currentWord.split('');\r\n\t\tfor (let i = randomNameArray.length - 1; i > 0; i--) {\r\n\t\t    const j = Math.floor(Math.random() * (i + 1));\r\n\t\t    [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n\t\t}\r\n\t\tconst wordNameArray = [];\r\n\t\tfor (var i = 0; i < nameArray.length; i++) {\r\n\t\t\twordNameArray.push(' ');\r\n\t\t}\r\n        this.setState({\r\n            id,\r\n            words, \r\n            currentWord,\r\n            currentFullWord,\r\n            currentTranslation,\r\n            currentImage,\r\n            currentMeaning,\r\n            randomNameArray,\r\n            nameArray,\r\n            wordNameArray,\r\n            isImageVisible: false,\r\n            areButtonsVisible: true,\r\n            currentValue: '',\r\n            nameArrayId: 0,\r\n            mistakeCount: 0,\r\n            positiveWords,\r\n            negativeWords\r\n        })\r\n      }\r\n        else{\r\n          this.setState({\r\n           isFinalVisible: true,\r\n           isCardVisible: false,\r\n           isStarterVisible: false,\r\n      \t\t\tpositiveWords,\r\n      \t\t\tnegativeWords           \r\n          })\r\n        }\r\n    }\r\n  \r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }  \r\n\r\n   checkValue = () =>{\r\n   \tvar currentWord = this.state.currentWord;\r\n    var currentValue = this.state.currentValue;\r\n    if(currentWord.length === currentValue.length){\r\n    \tthis.setState({\r\n    \t\tareButtonsVisible: false,\r\n    \t\tisImageVisible: true\r\n    \t})\r\n    }   \t\r\n   }\r\n\r\n   compareWord = (e) =>{\r\n    var id = this.state.nameArrayId;\r\n    var currentWord = this.state.currentWord;\r\n    var nameArray = this.state.nameArray;\r\n    var randomNameArray = this.state.randomNameArray;\r\n    var currentValue = this.state.currentValue;\r\n    var currentLetter = e.target.textContent.slice(0,1);\r\n    var mistakeCount = this.state.mistakeCount;\r\n      if( (currentLetter === nameArray[id]) && (currentValue.length < currentWord.length) ){\r\n        e.target.className = \"hidden\";\r\n        currentValue = currentValue + currentLetter;\r\n        this.state.wordNameArray[id] = currentLetter;\r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: currentLetter\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((currentLetter !== nameArray[id]) && (currentValue.length < currentWord.length)) {\r\n\t      mistakeCount++;\r\n\t      this.setState({\r\n\t      \tmistakeCount,\r\n          fade: true\r\n\t      })\r\n      }\r\n      else {\r\n      \tthis.setState({\r\n      \t\tisFinalVisible: true,\r\n      \t\tisCardVisible: false\r\n      \t})      \t\r\n      }\r\n} \r\n\r\n\r\n\r\n  render() {\r\n    const fade = this.state.fade;\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/construct.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n            <Container \r\n                onAnimationEnd={() => this.setState({ fade: false })}\r\n                className={fade ? 'fade construct-word-container' : 'construct-word-container'}>\r\n              <ul>\r\n              {this.state.wordNameArray.map((name,index) =>\r\n                <input key={index}  readOnly value={name} maxLength=\"1\" />\r\n               )}\r\n              </ul>\r\n              {this.state.areButtonsVisible ? \r\n\t              <ul>\r\n\t              {this.state.randomNameArray.map((name,index) =>\r\n\t                <li key={index} \r\n                      onClick={this.compareWord}\r\n                  > \r\n                      {name} \r\n                  </li>\r\n\t               )}\r\n\t              </ul>: null \r\n              }\r\n            {this.state.isImageVisible ?\r\n            \t<Fragment>\r\n            \t\t<p>{this.state.currentMeaning}</p>\r\n                   <div className=\"texts-image-wrapper\">\r\n                    <Image src={this.state.currentImage} ></Image>\r\n                  </div>\r\n            \t</Fragment> \r\n            \t : null\r\n            }\r\n            </Container>\r\n            <Button primary onClick={this.continueTraining} >Продолжить</Button>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default ConstructWord;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Proverbs extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n    shuffleArray = () =>{\r\n      let currentArray = this.state.currentArray.slice();\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n  \t  let mistakeCount = this.state.mistakeCount;\r\n  \t  let negativeProverbs = this.state.negativeProverbs.slice();\r\n  \t  let positiveProverbs = this.state.positiveProverbs.slice();\r\n      let id = this.state.id;\r\n      let proverbs = this.state.proverbs;\r\n      id = id + 1;\r\n      if (id < 2) {\r\n        const currentProverb = proverbs[id];\r\n        const currentProverbName = proverbs[id].proverb;\r\n        const currentTranslation = proverbs[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }        \r\n        this.setState({\r\n            id,\r\n            proverbs, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray,\r\n            constructedProverb: [],\r\n            positiveProverbs,\r\n            negativeProverbs,\r\n            isCheckButtonVisible: false,\r\n            isDKButtonVisible: true,\r\n            isContinueButtonVisible: false,\r\n            isResultWrong: false,\r\n            nameClass: ''\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false,\r\n          isStarterVisible: false,\r\n          positiveProverbs,\r\n          negativeProverbs           \r\n        })\r\n      }\r\n  }\r\n\r\n   setValue = (e) =>{\r\n    let target = e.target;\r\n    let parent = e.target.parentElement.children;\r\n    var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    currentArray.splice(indexTarget,1);\r\n    constructedProverb.push(e.target.textContent);\r\n\r\n    this.setState({\r\n      constructedProverb: constructedProverb\r\n    })\r\n    if(currentArray.length == 0){\r\n      this.setState({\r\n        isCheckButtonVisible: true,\r\n        isDKButtonVisible: false\r\n      })\r\n    }\r\n  } \r\n\r\n    removeValue = (e) =>{\r\n      let target = e.target;\r\n      let parent = e.target.parentElement.children;\r\n      var indexTarget = 0;\r\n          while ( (target = target.previousElementSibling) ) {\r\n            indexTarget++\r\n      }\r\n      let constructedProverb = this.state.constructedProverb;\r\n      let currentArray = this.state.currentArray;\r\n      constructedProverb.splice(indexTarget,1);\r\n      currentArray.push(e.target.textContent);\r\n      this.setState({\r\n        currentArray\r\n      })\r\n      if(currentArray.length > 0){\r\n        this.setState({\r\n          isCheckButtonVisible: false\r\n        })\r\n      }\r\n  }\r\n\r\n  dontKnow = (e) =>{\r\n    let negativeProverbs = this.state.negativeProverbs;    \r\n    let currentProverbName = this.state.currentProverbName;\r\n    let currentArray = currentProverbName.split(\" \");\r\n    let constructedProverb = [];\r\n    for (var i = 0; i < currentArray.length; i++) {\r\n      constructedProverb.push(currentArray[i])\r\n    }\r\n    negativeProverbs.push(currentProverbName);\r\n    this.setState({\r\n      currentArray: [],\r\n      isDKButtonVisible: false,\r\n      isContinueButtonVisible: true,\r\n      isCheckButtonVisible: false,\r\n      constructedProverb\r\n    })\r\n  }\r\n\r\n  checkProverb = (e) =>{\r\n    let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let negativeProverbs = this.state.negativeProverbs.slice();\r\n    var sentence = this.state.constructedProverb.slice().join(' ');\r\n    if(sentence === this.state.currentProverbName){\r\n      positiveProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        nameClass: 'audio-name-green',\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        positiveProverbs\r\n      })      \r\n    }\r\n    else {\r\n      negativeProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        nameClass: 'audio-name-red',\r\n        isResultWrong: true,\r\n        negativeProverbs\r\n      })      \r\n    }\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      proverbs: [],\r\n      id: 0,\r\n      currentProverbName: '',\r\n      currentTranslation: '',\r\n      mistakeCount: 0,\r\n      positiveProverbs: [],\r\n      negativeProverbs: [],\r\n      currentArray: [],\r\n      isStarterVisible: true,\r\n      isCardVisible: false,\r\n      isFinalVisible: false,\r\n      areButtonsVisible: false,\r\n      isContinueButtonVisible: false,\r\n      isCheckButtonVisible: false,\r\n      isDKButtonVisible: true,\r\n      constructedProverb: [],\r\n      nameClass: '',\r\n      isResultWrong: false      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/proverbs.json')\r\n      .then(res => {\r\n        const proverbs = res.data;\r\n        let random = [];\r\n        while(random.length < 2) {\r\n          var el = proverbs[Math.floor(Math.random() * proverbs.length)];\r\n          if (random.indexOf(el) === -1) {\r\n            random.push(el)\r\n          };                \r\n        }\r\n  \r\n        const currentProverb = random[id];\r\n        const currentProverbName = random[id].proverb;\r\n        const currentTranslation = random[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }                    \r\n        this.setState({ \r\n            proverbs: random, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray\r\n          });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/proverbs.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card proverb-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n              <div className={`proverb-result ${this.state.nameClass}`} >\r\n                  {this.state.constructedProverb.map((item,index) =>\r\n                      <span key={index} className=\"proverb-span\" onClick={this.removeValue}>{item}</span>\r\n                  )}\r\n              </div>\r\n              {this.state.isResultWrong ?\r\n                <div className={`proverb-result audio-name-green`}>\r\n                  {this.state.currentProverbName}\r\n                </div> : null\r\n              }\r\n              <div className=\"fragment-variants\">\r\n                {this.state.currentArray.map((item, index) =>\r\n                  <span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"proverb-button-container\">\r\n              {this.state.isCheckButtonVisible ? \r\n                <Button primary onClick={this.checkProverb} >Проверить</Button> : null\r\n              }\r\n              {this.state.isDKButtonVisible ? \r\n                <Button primary onClick={this.dontKnow}>Не знаю</Button> :null\r\n              }\r\n              {this.state.isContinueButtonVisible ? \r\n                <Button primary onClick={this.continueTraining} >Продолжить</Button> : null\r\n              }                \r\n              </div>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeProverbs.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveProverbs.length ? this.state.positiveProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          ) : null}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveProverbs.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {2 - this.state.positiveProverbs.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Proverbs;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\n\r\nclass Cards extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });          \r\n        })\r\n   }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (val) => {\r\n      if (val) {\r\n        var positiveWords = this.state.positiveWords.slice();\r\n        positiveWords.push(this.state.currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n        })        \r\n      } else {\r\n        var negativeWords = this.state.negativeWords.slice();\r\n        negativeWords.push(this.state.currentWord);      \r\n        this.setState({\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true\r\n        })        \r\n      }     \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      let result = this.state.result;\r\n      id = id + 1;\r\n      if (id < result.length){ \r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];       \r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n      })\r\n    }\r\n\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }    \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Словарные карточки</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent} >Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n           <div className=\"card-image-wrapper recognize-cards\">\r\n             <Image src={this.state.currentWord.image} />\r\n           </div>\r\n              <Card.Content>\r\n                <Card.Header>{this.state.currentWord.name} \r\n                <span onClick={this.voiceWord} className=\"training-card__icon\" title=\"Прослушать\">\r\n                  <Icon name = 'right sound'/> \r\n                </span>\r\n                </Card.Header>\r\n                {this.state.isTranslationVisible ? \r\n                  <Fragment>\r\n                    <Card.Meta>{this.state.currentWord.translation}</Card.Meta>\r\n                    <Card.Description>{}</Card.Description>                  \r\n                  </Fragment>:null\r\n                }\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} primary>Знаю</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} primary>Не знаю</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  { (this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Cards;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Audio extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({\r\n        search: event.target.value.substr(0,20),\r\n        tempSearch: event.target.value.substr(0,20)});\r\n    }  \r\n\r\n\r\n    positiveResponse = () =>{\r\n      let positiveWords = this.state.positiveWords.slice();\r\n      let negativeWords = this.state.negativeWords.slice();\r\n      let currentWord = this.state.currentWord;\r\n      let search = this.state.search;\r\n\r\n      if(currentWord.name === search){\r\n        positiveWords.push(currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-green'\r\n        })\r\n      }\r\n      else if(search === ''){\r\n        negativeWords.push(currentWord);        \r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red',\r\n          tempSearch: 'нет ответа'\r\n        }) \r\n      }\r\n\r\n      else {\r\n        negativeWords.push(currentWord);\r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red'\r\n        })        \r\n      }\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < result.length) { \r\n      const currentWord = result[id][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: true,\r\n          isInputVisible: true,\r\n          search: '',\r\n          correctNameVisible: false        \r\n        })\r\n      } \r\n\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          correctNameVisible: false,\r\n          search: ''\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var word = this.state.currentWord.name;\r\n      speech.say(word);\r\n   }  \r\n\r\n   showImage = () => {\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false,\r\n        correctNameVisible: false,\r\n        correctName: null,\r\n        correctNameClass: 'audio-name-green',\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        tempSearch: '',\r\n        metaClass: 'blue',\r\n        nameClass: ''         \r\n      }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result }, () => console.log(this.state.result));\r\n        })\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />\r\n            </div>  \r\n              <Card.Content>\r\n                <Card.Header>Аудирование</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group>:\r\n          null\r\n        }\r\n         {this.state.isCardVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"audio-header-wrapper\" >\r\n             <Card className=\"audio-training\"  >\r\n                <Card.Content>\r\n                  <Card.Header className=\"audio-header\">\r\n                    <Button onClick={this.voiceWord} primary><Icon size=\"big\" name=\"microphone\"></Icon></Button>\r\n                    {this.state.isInputVisible ?\r\n                      <Input placeholder=\"Введите прослушанное слово\" id=\"audo-input\" onChange={this.updateSearch}/>:null\r\n\r\n                    } \r\n                  </Card.Header>\r\n                  {this.state.isTranslationVisible ? \r\n                    <Fragment>\r\n                    {this.state.correctNameVisible ? <Card.Meta className={this.state.correctNameClass}>{this.state.currentWord.name}</Card.Meta>: null }\r\n                      <Card.Meta className={this.state.nameClass}>{this.state.tempSearch}</Card.Meta>\r\n                      <Card.Meta className={this.state.metaClass}>{this.state.currentWord.translation}</Card.Meta>\r\n                      <Card.Description className=\"audio-description\">{}</Card.Description>                  \r\n                    </Fragment>:null\r\n                  }\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className=\"audio-image-outer-wrapper\">\r\n                  {this.state.isImageVisible ?\r\n                   <div className=\"audio-image-wrapper\">\r\n                     <Image src={this.state.currentWord.image} />\r\n                   </div> :null\r\n                 }\r\n                 {this.state.isLinkVisible ?\r\n                   <div className=\"audio-image-text\">\r\n                       <a onClick={this.showImage}>Show hint</a>\r\n                   </div> :null\r\n                  }                 \r\n                </div>\r\n                  <Button.Group className=\"audio-buttons-wrapper\">\r\n                  {this.state.showNavButtons ?\r\n                  <Fragment>\r\n                    <Button onClick={this.positiveResponse} primary>Проверить</Button>\r\n                  </Fragment>:null\r\n                  }  \r\n                  {this.state.showContinueButton ?\r\n                    <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n\r\n                  }\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group> :\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          </div>\r\n          <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Audio;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EnglishToRussian extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      currentWord: '',\r\n      flagState: false,\r\n      result: [],\r\n      disabled: false        \r\n    }, () => {\r\n      this.initialLoad();\r\n    })\r\n  }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 10; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if (id < result.length) {\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({\r\n            id,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            currentWord,\r\n            disabled: false\r\n          })\r\n        }  \r\n\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          search: ''\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var name = this.state.currentName;\r\n      speech.say(name);\r\n   }  \r\n\r\n   showImage = ()=>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    var positiveWords = this.state.positiveWords.slice();\r\n    var negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  } \r\n\r\n   dontKnow = () =>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true\r\n    })\r\n   }\r\n\r\n      render() {\r\n        return (\r\n          <Fragment>\r\n          <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n           {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n              <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/englishtorussian.jpg' />\r\n              </div>  \r\n                <Card.Content>\r\n                  <Card.Header>Перевод</Card.Header>\r\n                  <Card.Description>\r\n                    <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n           {this.state.isCardVisible ?\r\n           \t<Container className=\"list-container\">\r\n           \t\t<Card className=\"training-card\">\r\n    \t       \t\t<Label>\r\n                  {this.state.currentWord.name}\r\n                    <span className=\"training-card__icon\" onClick={this.voiceWord} title=\"Прослушать\">\r\n                      <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n                    </span>\r\n                </Label>\r\n    \t       \t\t<Container className=\"list-inner-wrapper\">\r\n    \t\t\t        <List className=\"training-list\">\r\n    \t\t\t        {this.state.result[this.state.id].map((word, index) =>\r\n    \t\t\t            <List.Item key={index} className=\"training-list-item\">\r\n    \t\t\t              <List.Content>\r\n    \t\t\t                <List.Header as='a'>\r\n                            <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.translation}</Button>\r\n                          </List.Header>\r\n    \t\t\t              </List.Content>\r\n    \t\t\t            </List.Item>\r\n    \t\t\t        )}\r\n                    <List.Item className=\"training-list-item\">\r\n                      <List.Content>\r\n                        <List.Header as='a'>\r\n                          <Button onClick={this.dontKnow} className=\"help\" >Не знаю</Button>\r\n                        </List.Header>\r\n                      </List.Content>\r\n                    </List.Item>              \r\n    \t\t\t        </List>\r\n                  {this.state.isImageVisible ?\r\n                    <div className=\"training-right-wrapper\">\r\n                      <div className=\"training-image-wrapper\">\r\n                        <Image src={this.state.currentWord.image} className=\"training-image\">\r\n                        </Image>                \r\n                      </div>\r\n                    {this.state.flagState && this.state.isImageVisible ?\r\n                      <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n                    }                                     \r\n                    </div>: null               \r\n                   }\r\n    \t       \t\t</Container>\r\n           \t\t</Card>\r\n          \t</Container> :\r\n               null\r\n            }\r\n            {this.state.isFinalVisible ?\r\n             <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n                 <Card className=\"card-training\" >\r\n                    <Card.Content>\r\n                      <Card.Header>Результаты</Card.Header>\r\n                      <Divider/>\r\n                      <Card.Description className=\"audio-list-container\"> \r\n                      {(this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                       <Message>\r\n                          <Message.Header>Поздравляем!</Message.Header>\r\n                          <p>\r\n                            Все задания выполнены правильно\r\n                          </p>\r\n                       </Message> \r\n                      }\r\n                      </Card.Description>\r\n                      <Card.Description className=\"results-wrapper\">\r\n                        <div className=\"positive-results-wrapper\"> \r\n                          <div className=\"positive-results\">\r\n                            {this.state.positiveWords.length}\r\n                          </div>\r\n                          <Label>Верно</Label>                    \r\n                        </div>\r\n                        <div className=\"negative-results-wrapper\"> \r\n                          <div className=\"negative-results\">\r\n                            {this.state.result.length - this.state.positiveWords.length}\r\n                          </div> \r\n                          <Label>Неверно</Label>                   \r\n                        </div>\r\n                      </Card.Description>\r\n                      <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                      </Button.Group>\r\n                    </Card.Content>\r\n                  </Card>          \r\n            </Card.Group>                \r\n               : null\r\n            }\r\n            </div>\r\n            <footer></footer>\r\n        </Fragment>\r\n    \t);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnglishToRussian);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport classnames from 'classnames';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass RussianToEnglish extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n    this.state = {\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n  this.setStateOnStart()\r\n}\r\n\r\nsetStateOnStart = () => {\r\n  this.setState({\r\n    words: [],\r\n    negativeWords: [],\r\n    positiveWords: [],\r\n    id: 0,\r\n    isCardVisible: false,\r\n    isButtonVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: true,\r\n    showContinueButton: false,\r\n    isFinalVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: true,\r\n    isInputVisible: true,\r\n    search: '',\r\n    currentWord: '',\r\n    flagState: false,\r\n    result: [],\r\n    disabled: false    \r\n  }, () => this.initialLoad())\r\n}\r\n\r\n  initialLoad = () => {\r\n    var id = this.state.id;\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = [];\r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            var el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          result });\r\n      })\r\n  }\r\n\r\n\r\nstartTraining = () =>{\r\n  this.setState({\r\n    isButtonVisible: false,\r\n    isCardVisible: true\r\n  })\r\n}\r\n\r\ncontinueTraining = () =>{\r\n  let id = this.state.id;\r\n  id = id + 1;\r\n  const result = this.state.result;\r\n  if(id < result.length) {\r\n    const currentWord =  result[id][Math.floor(Math.random() * result[id].length)];\r\n    this.setState({\r\n      id,\r\n      currentWord, \r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      disabled: false\r\n    })\r\n  } \r\n  else this.setState({\r\n    isFinalVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: false,\r\n    showContinueButton: false, \r\n    isCardVisible: false,\r\n    isButtonVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: false,\r\n    isInputVisible: false,\r\n    search: ''   \r\n\r\n  }) \r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentName;\r\n  speech.say(newWords);\r\n}  \r\n\r\nshowImage = ()=>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    isLinkVisible: false\r\n  })\r\n}\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    var positiveWords = this.state.positiveWords.slice();\r\n    var negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  }\r\n\r\n\r\ndontKnow = () =>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    flagState: true\r\n  })\r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentWord.name;\r\n  speech.say(newWords);\r\n} \r\n\r\nrender() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n          {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n            <Image src='training/russiantoenglish.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n            <Card.Header>Перевод</Card.Header>\r\n            <Card.Description>\r\n            <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n            </Card.Description>\r\n            </Card.Content>\r\n            </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n          {this.state.isCardVisible ?\r\n            <Container className=\"list-container\">\r\n            <Card className=\"training-card\">\r\n            <Label>\r\n            {this.state.currentWord.translation}\r\n            <span onClick={this.voiceWord} className=\"training-card__icon\">\r\n            <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n            </span>\r\n            </Label>\r\n            <Container className=\"list-inner-wrapper\">\r\n            <List className=\"training-list\">\r\n            {this.state.result[this.state.id].map((word, index) =>\r\n             <List.Item key={index} className=\"training-list-item\">\r\n             <List.Content>\r\n             <List.Header as='a'>\r\n             <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.name}</Button>\r\n             </List.Header>\r\n             </List.Content>\r\n             </List.Item>\r\n             )}\r\n            <List.Item className=\"training-list-item \">\r\n            <List.Content>\r\n            <List.Header as='a'>\r\n            <Button className=\"dont-know\" onClick={this.dontKnow} >Не знаю</Button>\r\n            </List.Header>\r\n            </List.Content>\r\n            </List.Item>              \r\n            </List>\r\n            {this.state.isImageVisible ?\r\n              <div className=\"training-right-wrapper\">\r\n              <div className=\"training-image-wrapper\">\r\n              <Image src={this.state.currentWord.image} className=\"training-image\">\r\n              </Image>                \r\n              </div>\r\n              {this.state.flagState ?\r\n                <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n\r\n              }                                     \r\n              </div>: null               \r\n            }\r\n            </Container>\r\n            </Card>\r\n            </Container> :\r\n            null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n           <Card className=\"card-training\" >\r\n           <Card.Content>\r\n           <Card.Header>Результаты</Card.Header>\r\n           <Divider/>\r\n           <Card.Description className=\"audio-list-container\"> \r\n           {  (this.state.negativeWords.length !== 0 ) ?\r\n            <List className=\"audio-list\">\r\n            {this.state.negativeWords.map((item, index) => \r\n              <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n              )}\r\n            </List>: \r\n            <Message>\r\n            <Message.Header>Поздравляем!</Message.Header>\r\n            <p>\r\n            Все задания выполнены правильно\r\n            </p>\r\n            </Message> \r\n          }\r\n        </Card.Description>\r\n    <Card.Description className=\"results-wrapper\">\r\n    <div className=\"positive-results-wrapper\"> \r\n    <div className=\"positive-results\">\r\n    {this.state.positiveWords.length}\r\n    </div>\r\n    <Label>Верно</Label>                    \r\n    </div>\r\n    <div className=\"negative-results-wrapper\"> \r\n    <div className=\"negative-results\">\r\n    {this.state.result.length - this.state.positiveWords.length}\r\n    </div> \r\n    <Label>Неверно</Label>                   \r\n    </div>\r\n    </Card.Description>\r\n    <Button.Group className=\"card-buttons-wrapper\">\r\n    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n    </Button.Group>\r\n    </Card.Content>\r\n    </Card>          \r\n    </Card.Group>          \r\n    : null\r\n  }\r\n  </div>\r\n  <footer></footer>\r\n  </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nexport default RussianToEnglish;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button,Card,Image} from 'semantic-ui-react';\r\n\r\nclass Videos extends Component {\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      videos: [],\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      channelId: null,\r\n      image: '',\r\n      link: '',\r\n      visible: 4\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('/videos.json')\r\n        .then(res => {\r\n          const videos = res.data;\r\n          const currentName = videos[id].name;\r\n          const currentDescription = videos[id].description;\r\n          const currentChannelId = videos[id].channelId;\r\n          const currentImage = videos[id].image;\r\n          const currentLink = videos[id].link;\r\n           this.setState({ \r\n            videos: videos, \r\n            name: currentName, \r\n            description: currentDescription, \r\n            channelId: currentChannelId, \r\n            image: currentImage,\r\n            link: currentLink });\r\n        })\r\n    }\r\n\r\n    cons = () =>{\r\n      console.log(this.state);\r\n    }\r\n\r\n  loadMore = () => {\r\n      this.setState((prev) => {\r\n        return {visible: prev.visible + 4};\r\n      });\r\n    }    \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n        <Button onClick={this.cons} >console</Button>\r\n        <Card.Group itemsPerRow={4} className=\"videos-container\">\r\n          {this.state.videos.slice(0,this.state.visible).map((video,index) =>\r\n            <Card key={index}>\r\n              <Image src={video.image} />\r\n              <Card.Content className=\"video-wrapper\">\r\n                <Card.Header>{video.name}</Card.Header>\r\n                <Card.Description>{video.description}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra className=\"video-extra\">\r\n                 <Link to={video.link}>{video.name}</Link>\r\n              </Card.Content>\r\n            </Card> \r\n          )}                                                                           \r\n        </Card.Group>\r\n           <div className=\"load-more-button\">\r\n            {this.state.visible < this.state.videos.length &&\r\n                    <Button onClick={this.loadMore} primary>Загрузить</Button>\r\n                  }                 \r\n          </div>\r\n          </div>\r\n          <footer></footer>\r\n       </Fragment>\r\n  );\r\n  } \r\n\r\n\r\n}\r\n\r\nexport default Videos;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Fragments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        texts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setStateOnStart();\r\n    }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        texts: [],\r\n        options: [],\r\n        categoryValue: '',\r\n        value: null,\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isResultVisible: false,\r\n        title: '',\r\n        content: '',\r\n        image: null,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        rightAnswers: 0,\r\n        //livesCount: 3,\r\n        livesArray: []        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content) )\r\n          this.setState({ \r\n            texts,\r\n            contentArray\r\n          }, () => this.setMenuParams());\r\n        })\r\n    }\r\n\r\n    setMenuParams = () =>{\r\n      let options = [];\r\n      this.state.texts.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var options = this.state.options.slice();\r\n      var comp = 'text';\r\n      const unique = options\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => options[e]).map(e => options[e]);\r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n\r\n    selectValue = () => {\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue() )         \r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.buildLives();\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.builtArray())\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n    \t\tcontentArray: [],\r\n    \t\tcurrentTempArray: [],\r\n    \t\tcurrentStringArray: [],\r\n    \t\tcurrentRandomWord: '',\r\n    \t\tcurrentFinalArray: [],\r\n    \t\tcurrentRandomArray: [],\r\n    \t\tcurrentOneArray: [],\r\n    \t\tactiveInput: 0,\r\n    \t\tactiveArray: [],\r\n    \t\tsortedRandomArray: [],\r\n    \t\tcomparativeRandomArray: [],\r\n    \t\tfragmentArrayIndexes: []        \r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n    builtArray = () => {\r\n      let currentOneArray = [];\r\n\t    let activeTargetContent = this.state.content.slice();\r\n      let currentStringArray = activeTargetContent.split(\". \");\r\n      currentStringArray.pop();\r\n      let currentFullArray = [];\r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n      \tcurrentFullArray.push(currentStringArray[i].split(\" \"));\r\n      }\r\n      let currentWordArray = currentStringArray[0].split(\" \");\r\n      let currentRandomArray = [];\r\n      let currentRandomIndexes = [];\r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet j = Math.floor(Math.random()*currentFullArray[i].length);\r\n      \tcurrentRandomArray.push(currentFullArray[i][j]);\r\n      \tcurrentRandomIndexes.push(j);\r\n      }\r\n      let random = currentWordArray[Math.floor(Math.random()*currentWordArray.length)];\r\n      let currentFinalArray = [];\r\n    \r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet curArr = currentFullArray[i];\r\n\t      \tfor (var j = 0; j < curArr.length; j++) {\r\n            \tcurrentOneArray.push(curArr[j]);\r\n\t\t      \tif (j !== currentRandomIndexes[i] ) {\r\n\t\t      \t\tcurrentFinalArray.push(<span className=\"fragment-span\">{curArr[j]}</span>)\r\n\t\t      \t}\r\n\t\t      \telse {\r\n\t\t      \t\tcurrentFinalArray.push(<span onClick={this.resetValue} className=\"fragment-input\"></span>)\r\n\t\t      \t}\r\n\t      \t}\r\n\t      \tcurrentFinalArray.push(<span className=\"fragment-dot\">.</span>);\r\n      }\r\n\r\n      this.setState({\r\n      \tcurrentStringArray,\r\n        currentWordArray,\r\n        currentRandomWord: random,\r\n        currentFinalArray,\r\n        currentRandomIndexes,\r\n        currentRandomArray,\r\n        currentFullArray,\r\n        currentOneArray\r\n      }, () => this.shuffleArray())     \r\n    }\r\n\r\n   setValue = (e) => {\r\n      let activeInput = this.state.activeInput;\r\n      let activeArray = [];\r\n      let currentFullArray = this.state.currentFullArray.slice();\r\n      let currentFinalArray = this.state.currentFinalArray.slice();\r\n      let currentRandomArray = this.state.currentRandomArray.slice();\r\n      let currentRandomIndexes = this.state.currentRandomIndexes.slice();\r\n      let activeTargetTitle = e.target.textContent;\r\n      let fragmentArray = [];\r\n      let fragmentArrayIndexes = [];\r\n      let fragmentDescription = document.getElementsByClassName('fragment-description')[0].children;\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif(fragmentDescription[i].className == \"fragment-input\"){\r\n      \t\tfragmentArrayIndexes.push(i);\r\n      \t\tfragmentArray.push(fragmentDescription[i]);\r\n      \t}\r\n      }\r\n      for (var i = 0; i < fragmentArrayIndexes.length; i++) {\r\n      \tactiveArray.push(i);\r\n      }\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif( (fragmentDescription[i].className == \"fragment-input\") && (i == fragmentArrayIndexes[activeInput])){\r\n      \t\tfragmentDescription[i].textContent = activeTargetTitle;\r\n      \t}\r\n      }\r\n\t\t  fragmentArrayIndexes.splice(activeInput, 1);\r\n      let comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n      let sortedRandomArray = this.state.sortedRandomArray.slice();\r\n      let target = e.target;\r\n      comparativeRandomArray.push(target.textContent);\r\n      var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n      }\r\n\r\n      sortedRandomArray.splice(indexTarget, 1);\r\n      if (sortedRandomArray.length === 0) {\r\n      \tthis.setState({\r\n      \t\tisCheckButtonVisible: true\r\n      \t})\r\n      }\r\n\r\n      activeInput++;\r\n      this.setState({\r\n  \t\t\tactiveInput,\r\n  \t\t\tactiveArray,\r\n  \t\t\tfragmentArrayIndexes,\r\n  \t\t\tcurrentRandomArray,\r\n  \t\t\tcomparativeRandomArray,\r\n  \t\t\tsortedRandomArray\r\n\t\t})\r\n    \r\n  }\r\n\r\n\tshuffleArray = () => {\r\n\t\tlet array = this.state.currentRandomArray.slice();\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t    this.setState({\r\n        \tsortedRandomArray: array\t    \t\r\n\t    })\r\n\t}\r\n\r\n    resetValue = (e) =>{\r\n\t    let sortedRandomArray = this.state.sortedRandomArray.slice(); \r\n      let element = e.target;\r\n      if (e.target.textContent !== \"\") {\r\n      \t  sortedRandomArray.push(e.target.textContent);\r\n      \t  element.innerText = \"\";\r\n  \t      this.setState({\r\n  \t      \tsortedRandomArray: sortedRandomArray\r\n  \t      })\r\n\t        var indexTarget = 0;\r\n\t        while ( (element = element.previousElementSibling) ) {\r\n\t          indexTarget++\r\n\t        }\r\n      }\r\n    }\r\n\r\n    submitText = (e) =>{\r\n    \tlet comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    \tlet currentSortedArray = this.state.currentRandomArray.slice();\r\n    \tlet sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    \tlet count = 0;\r\n    \tfor (var i = 0; i < currentSortedArray.length; i++) {\r\n    \t\tif (currentSortedArray[i] === comparativeRandomArray[i]) {\r\n    \t\t\tcount++;\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\tsortedRandomArray.push(comparativeRandomArray[i])\r\n    \t\t}\r\n    \t\t\r\n    \t}\r\n    \tlet rightAnswers = count;\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: false,\r\n    \t\tisResultVisible: true,\r\n    \t\tisSingleTextVisible: false,\r\n    \t\trightAnswers,\r\n    \t\tsortedRandomArray\r\n    \t})\r\n    }\r\n\r\n    tryAgain = () =>{\r\n    \tlet lives = this.state.livesCount;\r\n    \tlives = lives - 1;\r\n    \tthis.setState({\r\n    \t\tisResultVisible: false,\r\n    \t\tisSingleTextVisible: true,\r\n    \t\tlivesCount: lives\r\n    \t}, () => this.buildLives() )\r\n    }\r\n\r\n    buildLives = () =>{\r\n    \tlet livesCount = this.state.livesCount;\r\n    \tlet lives = [];\r\n    \tfor (var i = 0; i < livesCount; i++) {\r\n    \t\tlives.push(<Icon name='like' size='big' />)\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tlivesArray: lives\r\n    \t})\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible && this.state.texts.length ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n            {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                \t<div className=\"fragments-close\">\r\n                \t\t<span onClick={this.backToTexts}>\r\n                \t\t\t<Icon name='close' size='big' />\r\n                \t\t</span>\r\n                \t</div>\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t{this.state.currentFinalArray}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n             \t<div className=\"fragment-variants\">\r\n            \t\t{this.state.sortedRandomArray.map((item, index) =>\r\n            \t\t\t<span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n            \t\t)}\r\n\t            \t{this.state.isCheckButtonVisible ? \r\n\t            \t\t<Button onClick={this.submitText} >Проверить</Button> :null\r\n\t            \t}             \t\t\r\n            \t</div>\r\n                </Card>:null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t<h2>Вы расставили правильно {this.state.rightAnswers} из {this.state.currentRandomArray.length} слов </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                  \t<Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary ><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default Fragments;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Pronunciation extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\ttexts: [],\r\n\t\tnegativeSentences: [],\r\n\t\tpositiveSentences: [],\r\n\t\tid: 0,\r\n\t\tcurrentText: '',\r\n\t\tcurrentTextContent: '',\r\n\t\tcurrentSentence: '',\r\n\t\tisCardVisible: false,\r\n\t\tisButtonVisible: true,\r\n\t\tisTranslationVisible: false,\r\n\t\tshowNavButtons: true,\r\n\t\tshowContinueButton: false,\r\n\t\tisFinalVisible: false,\r\n\t\tshowSubmitButtons: true,\r\n\t\toptions: {\r\n\t\t  autostart: false\r\n\t\t},\r\n\t\ttranscript: '',\r\n\t\tresetTranscript: null,\r\n\t\tbrowserSupportsSpeechRecognition: null,\r\n\t\trecognition: null,\r\n\t\tstartListening: null,\r\n\t\tstopListening: null ,\r\n\t\tsplittedText: [],\r\n\t\tisDeleteVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      var id = this.state.id;\r\n      axios.all([\r\n          axios.get('/texts.json')\r\n        ])\r\n        .then(axios.spread((textsRes) => {\r\n          const texts = textsRes.data;\r\n          const currentText = texts[id].content;\r\n          let splittedText = currentText.split(\". \").slice(0,3);\r\n          let currentSentence = splittedText[id] + '.'; \r\n          let currentSentenceContent = splittedText[id].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();           \r\n          this.setState({\r\n            texts,\r\n            currentSentence,\r\n            splittedText,\r\n            currentText,\r\n            transcript: this.props.transcript,\r\n            resetTranscript: this.props.resetTranscript,\r\n            browserSupportsSpeechRecognition: this.props.browserSupportsSpeechRecognition,\r\n            recognition: this.props.recognition,\r\n            startListening: this.props.startListening,\r\n            stopListening: this.props.stopListening \r\n          }, () => this.state.stopListening() );          \r\n        }));      \r\n    }\r\n\r\n  setStateOnStart = () => {\r\n\r\n  }\r\n\r\n  initialLoad = () => {\r\n\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      }, () => this.state.startListening())\r\n    }\r\n\r\n    submitResponse = () =>{\r\n      var objectTranscription = document.getElementById('transcription').textContent;\r\n      var positiveSentences = this.state.positiveSentences;\r\n      var negativeSentences = this.state.negativeSentences;\r\n      let currentSentence = this.state.currentSentence;\r\n      let currentSentenceContent = this.state.currentSentenceContent;\r\n   \r\n      if(currentSentenceContent === objectTranscription){\r\n        positiveSentences.push(currentSentence);     \r\n      }\r\n\r\n      else {\r\n        negativeSentences.push(currentSentence);\r\n        console.log(negativeSentences);\r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        positiveSentences,\r\n        negativeSentences\r\n\r\n      }, () => this.continueTraining() )        \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let length = this.state.splittedText.length;\r\n      let splittedText = this.state.splittedText;\r\n      let newId = this.state.id;\r\n      newId = newId + 1;\r\n      const texts = this.state.texts;\r\n      if(newId < length){\r\n      \tlet currentSentence = splittedText[newId] + '.';\r\n      \tlet currentSentenceContent = splittedText[newId].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();\r\n \r\n        this.setState({\r\n          id: newId,\r\n          currentSentence,\r\n          currentSentenceContent,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else {\r\n        this.state.stopListening();\r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false\r\n        })\r\n      }  \r\n    }\r\n\r\n    callSubmit = () =>{\r\n      this.state.resetTranscript();\r\n      this.continueTraining();\r\n    }\r\n\r\n    clearTranscription = () =>{\r\n    \tlet transcript = this.props.transcript;\r\n    \tlet newTranscript =\ttranscript.substring(0,transcript.length - 1);\r\n    \tthis.props.transcript = newTranscript;\r\n    }\r\n\r\n  render() {\r\n\r\n    const {transcript} = this.props;\r\n\r\n    if (!this.state.browserSupportsSpeechRecognition) {\r\n      return null\r\n    }\r\n    this.state.recognition.lang = 'en-US';\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/microphone.jpg' />\r\n              </div>  \r\n              <Card.Content>\r\n                <Card.Header>Произношение</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group> : null\r\n         }\r\n         {this.state.isCardVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\"  >\r\n                  <Card.Content>\r\n                    <Card.Header className=\"pronunciation-header\">\r\n                      Произнесите слово в микрофон\r\n                    </Card.Header>\r\n                    <Card.Header className=\"pronunciation-text\">{this.state.currentSentence}\r\n                    </Card.Header>                \r\n                    <Card.Description id=\"transcription\" className=\"pronunciation-transcription\">\r\n                    <span className=\"transcription-text\">\r\n                      {transcript} </span>\r\n                      {this.props.transcript.length ?\r\n                      <div className=\"pronunciation-clear-wrapper\" onClick = {this.clearTranscription}>\r\n    \t                  <span className=\"triangle\"> </span>\r\n    \t                  <span className=\"pronunciation-clear\">\r\n    \t                  \t<Icon name = 'delete'/>\r\n    \t                  </span>                  \t\r\n                      </div> : null\r\n                  }\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                    {this.state.showNavButtons ?\r\n                    <Fragment>\r\n                      <Button onClick={this.submitResponse} primary>Проверить</Button>\r\n                    </Fragment>:null\r\n                    }  \r\n                    {this.state.showContinueButton ?\r\n                      <Button onClick={this.callSubmit} primary>Продолжить</Button>:null\r\n                    }\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\" >\r\n                  <Card.Content>\r\n                    <Card.Header>Результаты</Card.Header>\r\n                    <Divider/>\r\n                    <Card.Description className=\"audio-list-container\"> \r\n                    {  (this.state.negativeSentences.length !== 0 ) ?\r\n                        <div className=\"answers-wrapper\">\r\n                          <List className=\"audio-list\">\r\n                          <h2>Верные ответы</h2>\r\n                          {this.state.positiveSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                          <List className=\"audio-list\">\r\n                          <h2>Неверные ответы</h2>\r\n                          {this.state.negativeSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                       </div> : \r\n                     <Message>\r\n                        <Message.Header>Поздравляем!</Message.Header>\r\n                        <p>\r\n                          Все задания выполнены правильно\r\n                        </p>\r\n                     </Message> \r\n                    }\r\n\r\n                    </Card.Description>\r\n                    <Card.Description className=\"results-wrapper\">\r\n                      <div className=\"positive-results-wrapper\"> \r\n                        <div className=\"positive-results\">\r\n                          {this.state.positiveSentences.length}\r\n                        </div>\r\n                        <Label>Верно</Label>                    \r\n                      </div>\r\n                      <div className=\"negative-results-wrapper\"> \r\n                        <div className=\"negative-results\">\r\n                          {this.state.negativeSentences.length}\r\n                        </div> \r\n                        <Label>Неверно</Label>                   \r\n                      </div>\r\n                    </Card.Description>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                      <Button primary>Продолжить</Button>\r\n                      <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default SpeechRecognition({autostart: false})(Pronunciation);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\n\r\nclass RecreateText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '3',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      categoryValue: ''\r\n\t\t}\r\n\t}\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.makeTextsVisible());\r\n      })\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();   \r\n  }   \r\n\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      })      \r\n    }\r\n\r\n\r\n    makeTextsVisible = () =>{\r\n      this.setState({\r\n        areTextsVisible: true        \r\n      }, () => this.createMenuItems());\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '5',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0\r\n      })\r\n    }\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        spllittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutes * 60);\r\n          clearInterval(this.state.intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent\r\n          })\r\n\r\n        }\r\n        this.state.secondsRemaining--;\r\n        this.state.totalSecondsSpent++;\r\n\r\n   \r\n    }\r\n    startCountDown = () => {\r\n        this.state.intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.state.secondsRemaining = time * 60;\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.spllittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.spllittedSentences[index];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = this.state.spllittedSentences.filter(item => item !== this.draggedItem);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ spllittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.spllittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n      }\r\n    }\r\n    if(wrongCount==0){\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =()=>{\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(this.state.intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent       \r\n      })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '3',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0        \r\n      }) \r\n  }\r\n\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    menuChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.menuChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null\r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.splitText}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.spllittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <h2>Время вышло</h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\nimport Speech from 'speak-tts'\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport { Howl } from \"howler\";\r\n\r\nclass RecreateAudioText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t      texts: [],\r\n\t      contentArray: [],\r\n\t      areTextsVisible: false,\r\n\t      isMenuVisible: false,\r\n\t      isSingleTextVisible: false,\r\n        options: [],\r\n        categoryValue: '',\r\n\t      isResultVisible: false,\r\n\t      isResultWrong: false,\r\n        title: '',\r\n\t      content: '',\r\n\t      image: null,\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('./audiotexts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        this.setState({ \r\n          texts,\r\n          areTextsVisible: true         \r\n        }, () => this.createMenuItems());\r\n      })        \r\n  }   \r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n    createTrack = (id) => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) => {\r\n          let currentTrack = new Howl({\r\n            src: \"tracks/\" + res.data.slice(id - 1, id),\r\n            html5: true,\r\n            volume: 0.5 / 10\r\n          });\r\n          this.setState({\r\n            currentTrack,\r\n            audio: res.data\r\n          }) \r\n        });    \r\n    }\r\n\r\n    readMore = (id) =>{\r\n\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id - 1].title;\r\n      let content = texts[id - 1].content;\r\n      let image = texts[id - 1].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.createTrack(id))       \r\n    }\r\n\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        categoryValue: '',\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0,\r\n        value: null        \r\n      })\r\n    }\r\n\r\n\r\n\r\n  showFinal = () =>{\r\n    this.setState({\r\n      isResultVisible: true  \r\n    })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,    \r\n      }) \r\n  }\r\n\r\n  playText = () => {\r\n    let playing = !this.state.playing;\r\n    let currentTrack = this.state.currentTrack;\r\n    if (playing) {\r\n      currentTrack.play();\r\n    } else {\r\n      currentTrack.pause();\r\n    }\r\n    this.setState({\r\n      playing,\r\n      currentTrack\r\n    })\r\n  }\r\n\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        splittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n          let intervalHandle = this.state.intervalHandle;\r\n          clearInterval(intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent,\r\n            intervalHandle\r\n          })\r\n\r\n        }\r\n        this.setState({\r\n          secondsRemaining: this.state.secondsRemaining - 1,\r\n          totalSecondsSpent: this.state.totalSecondsSpent + 1\r\n        })\r\n \r\n    }\r\n    startCountDown = () => {\r\n        let intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.setState({\r\n          intervalHandle,\r\n          secondsRemaining: time * 60\r\n        })\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.splittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.splittedSentences[index];\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n    let items = this.state.splittedSentences.filter(item => item !== this.draggedItem);\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ splittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.splittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let rightAnswers = 0;\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n        rightAnswers++;\r\n      }\r\n    }\r\n    if (wrongCount == 0) {\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes,\r\n      rightAnswers\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =() => {\r\n    this.checkSentences();\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let intervalHandle = this.state.intervalHandle;\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent,\r\n        intervalHandle        \r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }         \r\n              {(this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text display-none\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    {this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"pause\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    {!this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"play\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    <div className=\"buttons-wrapper\">\r\n\t                    <Button primary onClick={this.splitText}>Я прослушал</Button>\r\n           \t\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.splittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <div>\r\n                        <h2>Время вышло</h2>\r\n                        <h2>Правильно расставлено {this.state.rightAnswers} из {this.state.splittedSentences.length} предложений</h2> \r\n                      </div>                      \r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateAudioText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Input, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass InsertSpaces extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }   \r\n\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      inputContent: '',\r\n      textContent: '',\r\n      newContent: '',\r\n      image: null,\r\n      options: [],\r\n      textsLoaded: false,\r\n      categoryValue: ''\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n      }) \r\n  }\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let inputContent = texts[id].content;\r\n      inputContent = inputContent.replace(/\\s/g, '');\r\n      let image = texts[id].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image,\r\n        inputContent\r\n      })      \r\n    }\r\n\r\n\r\n  showFinal = () =>{\r\n      this.setState({\r\n        isResultVisible: true,\r\n        isTaskStarted: false\r\n   \r\n      })\r\n  }\r\n\r\nsetCaretPosition = (ctrl, pos) => {\r\n\r\n  if (ctrl.setSelectionRange) {\r\n    ctrl.focus();\r\n    ctrl.setSelectionRange(pos, pos);\r\n\r\n  } else if (ctrl.createTextRange) {\r\n    var range = ctrl.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n}\r\n\r\n  updateValue = (event) =>{\r\n  \tlet newContent = this.state.newContent;\r\n  \tlet target = event.target;\r\n    let str = event.target.value;\r\n    let indexOfSpace = event.target.value.indexOf(\" \") + 1;\r\n    let word = event.target.value.substr(0, indexOfSpace - 1);\r\n    let newstr = event.target.value.substring(indexOfSpace);\r\n    newContent = newContent + (word + ' ');\r\n      this.setState({\r\n      \tnewContent,\r\n        inputContent: newstr\r\n      }, () => this.setCaretPosition(target, 0));\r\n  }\r\n\r\n  startExercise = () => {\r\n    this.setState({\r\n      isTaskStarted: true,\r\n      isSingleTextVisible: false\r\n    })\r\n  }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.startExercise}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }             \r\n             {this.state.isTaskStarted ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <p className=\"single-text-card-description p-wrap fragment-description recreate-text inserted-text\">\r\n                      { this.state.newContent}\r\n                    </p>\r\n                    <Input className=\"insert-spaces-input\" value={this.state.inputContent} onChange={this.updateValue} />\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.showFinal}>Проверить</Button>\r\n                      </Button.Group>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <div className=\"recreate-results\">\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Исходный текст</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.content}</p>\r\n                      </div>\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Результат</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.newContent}</p>\r\n                      </div>                      \r\n                    </div>                                     \r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }    \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default InsertSpaces;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card, Embed, Modal,Image, Rating} from 'semantic-ui-react';\r\n//import LazyLoad from 'react-lazy-load';\r\n\r\nclass TED extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      isModalVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCAuUUnT6oDeKwE6v1NGQxug\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n      handleClick = (event) => {\r\n        this.setState({\r\n          currentPage: Number(event.target.id)\r\n        });\r\n      }\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos.items);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  showModal = () =>{\r\n    this.setState({\r\n      isModalVisible: true\r\n    })\r\n  }\r\n\r\n   render() {\r\n     \r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card>                \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default TED;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass EngVid extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCKRBA9XfgzAtJodE4t8cUeg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>\r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>              \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default EngVid;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass BritishCouncil extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCOtnu-KKoAbN47IuYMeDPOg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default BritishCouncil;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image, Input, Icon} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Khan extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      currentComment: '',\r\n      likes: 0,\r\n      dislikes: 0,\r\n      comments: [\r\n        {\r\n          author: 'new2341',\r\n          comment: 'Just a typicall comment'\r\n        },\r\n        {\r\n          author: 'cauthor',\r\n          comment: 'nice! liked it'\r\n        }\r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UC4a-Gbdw7vOaccHmFo40b9g\";\r\n    var maxResults = 48;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,200)});\r\n    } \r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  addComment = () =>{\r\n    let comments = this.state.comments.slice();\r\n    let currentComment = this.state.currentComment;\r\n    let temp = {};\r\n    temp['author'] = 'blabla';\r\n    temp['comment'] = currentComment;\r\n    comments.unshift(temp);\r\n    console.log(comments);\r\n    this.setState({\r\n      comments: comments,\r\n      currentComment: ''\r\n    })\r\n  }\r\n\r\n  thumbsUp = () => {\r\n    let count = this.state.likes;\r\n    count++;\r\n    this.setState({\r\n      likes: count\r\n    })\r\n  }\r\n\r\n  thumbsDown = () => {\r\n    let count = this.state.dislikes;\r\n    count++;\r\n    this.setState({\r\n      dislikes: count\r\n    })\r\n  }\r\n\r\n  consoleState = ()=>{\r\n    console.log(this.state)\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Открыть</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header className=\"video-header-wrapper\">\r\n                    <div className=\"video-header\">{item.snippet.title}</div> \r\n                    <div className=\"video-likes\">\r\n                      <div className=\"video-likes-item first\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsUp}>\r\n                          <Icon name='thumbs up' size='large' />\r\n                        </span>\r\n                        <span>{this.state.likes}</span>\r\n                      </div>\r\n                      <div className=\"video-likes-item second\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsDown}>\r\n                          <Icon name='thumbs down' size='large' />\r\n                        </span>\r\n                        <span>{this.state.dislikes}</span>\r\n                      </div>\r\n                    </div> \r\n                  </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                    <div className=\"comment-section\">\r\n                      <div className=\"comment-section-input\">\r\n                        <Input placeholder='type...' value={this.state.currentComment} onChange={this.updateSearch} /><Button onClick={this.addComment}>Отправить</Button>\r\n                      </div>\r\n                      <div className=\"comment-section-comments\">\r\n                          {this.state.comments.map((item, index) =>\r\n                            <div className=\"single-comment\" key={index}>\r\n                              <h4>{item.author}</h4>\r\n                              <p>{item.comment}</p>                              \r\n                            </div>\r\n                           )}\r\n                      </div>\r\n                    </div>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <h4>{item.snippet.title}</h4>                 \r\n                  <Image src={item.snippet.thumbnails.high.url} />\r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Khan;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Coursera extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCZ50rYSkYQG31YDEJm9Di_g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Coursera;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyFallon extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UC8-Th83bH_thdKZDJCrn88g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyFallon;","import React, { Component, Fragment } from 'react';\r\nimport { Embed,Modal,Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyKimmel extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCa6vGFO9ty8v5KZJXQxdhaw\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyKimmel;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass ConanOBrien extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCi7GJNg51C3jgmYTUwqoUXA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default ConanOBrien;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Ellen extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCp0hYYBW6IMayGgR-WeoCvQ\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Ellen;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JamesCorden extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCJ0uqCI0Vqr2Rrt1HseGirg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JamesCorden;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass SethMeyers extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCVTyTA7-g9nopHeHbeuvpRA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default SethMeyers;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass StephenColbert extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCMtFAi84ehTSYSE9XoHefig\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default StephenColbert;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass TextsList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      textsLoaded: false,\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content))\r\n          this.setState({ \r\n            texts: texts,\r\n            contentArray: contentArray\r\n          }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n        })\r\n    }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )         \r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {!this.state.isSingleTextVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }\r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card text-item\">\r\n                  <Card.Content>\r\n                    <Image src={this.state.image} />\r\n                    <Card.Header>{this.state.title}</Card.Header>\r\n                    <Card.Description className=\"single-text-card-description p-wrap\">\r\n                      { /*this.state.content.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase() */ this.state.content}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n                  <Button onClick={this.backToTexts} >Вернуться</Button>\r\n                </Card>:null\r\n              }          \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default TextsList;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    constructMenu = () =>{\r\n      let options = [];\r\n      this.state.words.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n      })    \r\n    }  \r\n\r\n    setValue = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.setValue() )  \r\n\r\n    readMore = (id) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let currentColor = colors[Math.floor(Math.random()*colors.length)];\r\n      let activeTargetTitle = this.state.words.find(x => x.id === id).name;\r\n\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(false);          \r\n      \t} \r\n      }\r\n\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords,\r\n        currentColor,\r\n        arrayOfButtons,\r\n        iconsArray,\r\n        disabled      \t\r\n      })\r\n    }\r\n\r\n\r\n    addToList = (id) =>{\r\n      let addedItems = this.state.addedItems.slice();\r\n      let currentWords = this.state.currentWords.slice();\r\n      let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let iconsArray = this.state.iconsArray.slice();\r\n      let selected = currentWords.find(x => x.id === id);      \r\n      arrayOfButtons[id] = \"Добавлено !\";\r\n      iconsArray[id] = false;\r\n      disabled[id] = \"disabled\";\r\n      addedItems.push(selected);\r\n      this.setState({\r\n      \taddedItems,\r\n      \tarrayOfButtons,\r\n      \ticonsArray,\r\n      \tdisabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      let sortedByNameUp = this.state.sortedByNameUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByNameUp: !sortedByNameUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByTranslationUp: !this.state.sortedByTranslationUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n   \tlet addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    arrayOfButtons[id] = \"Добавить\";    \r\n    iconsArray[id] = true;\r\n    disabled[id] = false;\r\n \t  addedItems.splice(addedItems.findIndex(function(item){\r\n        return item.id === id;\r\n    }), 1);\r\n    this.setState({ addedItems, disabled, iconsArray, arrayOfButtons });\r\n   }\r\n\r\n   deleteAll = () => {\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n    let addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    addedItems = [];\r\n    for (var i = 0; i < disabled.length; i++) {\r\n      disabled[i] = false;\r\n      arrayOfButtons[i] = \"Добавить\";\r\n      iconsArray[i] = true;\r\n    }\r\n    this.setState({ addedItems, arrayOfButtons, iconsArray, disabled  })    \r\n   }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"#3281F0\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      contentLoaded: false      \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n          .then(axios.spread((firstResponse, secondResponse) => { \r\n          let words = firstResponse.data;\r\n          let allWords = secondResponse.data;\r\n          let contentArray = [];\r\n          this.setState({\r\n            allWords,\r\n            words,\r\n            contentArray,\r\n            contentLoaded: true\r\n          }, () => this.constructMenu());\r\n       }))\r\n   }\r\n\t\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.contentLoaded ?\r\n            <div className=\"texts-wrapper\">\r\n              <Menu className=\"texts-menu decks-menu\" vertical>\r\n                {this.state.isDropdownVisible ? \r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item> : null\r\n                }\r\n                <Menu.Item className=\"no-top-padding added-title\" style = {{ backgroundColor: this.state.currentColor}} >\r\n                  {this.state.addedItems.length ? \"Добавленные\" : \"Добавленных пока нет\"}\r\n                </Menu.Item>\r\n                <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                  {(this.state.addedItems.length) ? \r\n                  <ul className=\"decks-added-wrapper\">\r\n                    {this.state.addedItems.map((item,index)=> \r\n                      <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                        <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem.bind(this, item.id)} ><Icon name='trash alternate' /></span></li>\r\n                    )}\r\n                  </ul> : null\r\n                } \r\n                </Menu.Item>\r\n                { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n                <Menu.Item className=\"decks-button-wrapper\" >\r\n                   <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Изучить <Icon name='book' className=\"nav-icon-left\" /> </Button>\r\n                   <Button onClick={this.deleteAll} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Удалить <Icon name='trash alternate' className=\"nav-icon-left\" /> </Button>\r\n                </Menu.Item> : null\r\n                }           \r\n              </Menu>           \r\n                {(this.state.words.length && this.state.areTextsVisible) ? \r\n                <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n                  {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                    <Card key={index} className=\"decks-single-card\">\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"decks-description\">\r\n                              <h2>{item.name}</h2>\r\n                              <h3>{item.number} слов</h3>\r\n                              <Button onClick={this.readMore.bind(this, item.id)} primary className=\"decks-button\" >Открыть</Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  )}\r\n                </Card.Group> : null\r\n               }\r\n               {this.state.isSingleTextVisible ?\r\n                <div className=\"decks-outer-wrapper\">\r\n                <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                  <Menu.Item name='byName'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                      по имени \r\n                      {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item name='byTranslation'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                      по переводу \r\n                      {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item style={{float: \"right\"}} name='close'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.setStateOnStart} title=\"Назад\">\r\n                      <Icon name='window close outline' className=\"nav-icon-left\" /> \r\n                    </Button>\r\n                  </Menu.Item>  \r\n                </Menu>\r\n                  <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                    {this.state.currentWords.map((item, index) => \r\n                      <Card key={index}>\r\n                        <Card.Content>\r\n                          <div className=\"texts-image-wrapper decks-image\">\r\n                            <Image src={item.image} />\r\n                            <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                                <h3>{item.name}</h3>\r\n                                <h4>{item.translation}</h4>\r\n                                <Button className=\"decks-button-add\" onClick={this.addToList.bind(this, item.id)} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                  {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                  } \r\n                                  {this.state.arrayOfButtons[index]}\r\n                                </Button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Card>\r\n                     )}\r\n                  </Card.Group> \r\n                </div> : null}       \r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass AudioList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      categoryArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"navy\",\"maroon\",\"magenta\",\"green\",\"teal\",\"tomato\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      currentAudio: null,\r\n      playState: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n              .then(axios.spread((firstResponse, secondResponse) => { \r\n              let words = firstResponse.data;\r\n              let allWords = secondResponse.data;\r\n              let contentArray = [];\r\n              let currentAudio = new Audio('audio/Baskervilles1.mp3');\r\n          this.setState({\r\n            allWords: allWords,\r\n            words: words,\r\n            contentArray: contentArray,\r\n            currentAudio: currentAudio\r\n          }, () => this.consoleParams() );\r\n       }))\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.words.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n        const unique = arr\r\n            .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      console.log(categoryValue);\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )  \r\n\r\n    readMore = (e) =>{\r\n      let arrayOfButtons = [];      \r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let target = e.target.parentElement;\r\n      let color = colors[Math.floor(Math.random()*colors.length)];\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].textContent;\r\n      for (var i = 0; i < allWords.length; i++) {\r\n        if(allWords[i][\"category\"] === activeTargetTitle ){\r\n          currentWords.push(allWords[i])\r\n        } \r\n      }\r\n\r\n      for (var i = 0; i < currentWords.length; i++) {\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(\"\");\r\n      }\r\n      \r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords: currentWords,\r\n        currentColor: color,\r\n        arrayOfButtons: arrayOfButtons,\r\n        iconsArray: iconsArray,\r\n        disabled: disabled        \r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n\r\n    addedFirst = () =>{\r\n      console.log(this.state);\r\n      let state = this.state.sortedByTranslationUp;\r\n      this.setState({\r\n        addedUp: !state\r\n      })\r\n    }\r\n\r\n  //сортировка по имени\r\n    sortByName = () =>{\r\n        let state = this.state.sortedByNameUp;\r\n        console.log(\"current words\", this.state.currentWords);\r\n      const words = this.state.currentWords.slice();\r\n      let newWords = words;\r\n      if(this.state.isOldestFirst){\r\n        newWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n      } else {\r\n        newWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n      }\r\n      console.log(\"new words\", newWords);\r\n      this.setState({\r\n        isOldestFirst: !this.state.isOldestFirst,\r\n        currentWords: newWords,\r\n        sortedByNameUp: !state      \r\n      })    \r\n    }\r\n\r\n    startPlayer = () =>{\r\n      let currentState = this.state.playState;\r\n      this.setState({\r\n        playState: !currentState\r\n      }, () => this.playAudio() )\r\n    }\r\n\r\n    playAudio = () =>{\r\n      let audio = this.state.currentAudio;\r\n      if(this.state.playState){\r\n        audio.play();\r\n      }\r\n      else{\r\n        audio.pause();\r\n      }\r\n      this.setState({\r\n        currentAudio: audio\r\n      })\r\n    }\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          <Menu className=\"texts-menu decks-menu\" vertical>\r\n            {this.state.isDropdownVisible ? \r\n                <Menu.Item name='inbox' >\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item> : null\r\n            }\r\n              <Menu.Item>\r\n                <Button onClick={this.startPlayer}>\r\n                {this.state.playState ?\r\n                 <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  }Listen</Button>\r\n\r\n              </Menu.Item>\r\n              <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                {(this.state.addedItems.length) ? \r\n                <ul className=\"decks-added-wrapper\">\r\n                  {this.state.addedItems.map((item,index)=> \r\n                    <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                      <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem} ><Icon name='trash alternate' size='' /></span></li>\r\n                  )}\r\n                </ul> : null\r\n              } \r\n              </Menu.Item>\r\n              { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n              <Menu.Item className=\"decks-button-wrapper\" >\r\n                 <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} >Изучить</Button>\r\n              </Menu.Item> : null\r\n              }           \r\n            </Menu>           \r\n              {(this.state.words.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n              {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper decks-image\">\r\n                      <Image src={item.image} />\r\n                      <div className=\"decks-description\">\r\n                          <h2>{item.name}</h2>\r\n                          <h3><span>{item.number}</span></h3>\r\n                          <Button onClick={this.readMore} primary className=\"decks-button\" >Открыть</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ?\r\n              <div className=\"decks-outer-wrapper\">\r\n              <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                <Menu.Item name='byName'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                    по имени \r\n                    {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item name='byTranslation'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                    по переводу \r\n                    {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item style={{float: \"right\"}} name='close'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.backToDecks}>\r\n                    <Icon name='window close outline' size='small' className=\"nav-icon-left\" /> \r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n                <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                  {this.state.currentWords.map((item, index) => \r\n                    <Card key={index}>\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                              <h3>{item.name}</h3>\r\n                              <h4>{item.translation}</h4>\r\n                              <Button className=\"decks-button-add\" onClick={this.addToList} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                } \r\n                                {this.state.arrayOfButtons[index]}\r\n                              </Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                   )}\r\n                </Card.Group> \r\n              </div> : null}\r\n       \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default AudioList;","import React, { Component, Fragment } from 'react';\r\nimport {  List, Icon, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      email: \"user1233\",\r\n      password: 69691231,\r\n      colorValue: \"#3281F0\",\r\n      colorOptions: [{ key: 1, value: \"#3281F0\", text: \"#3281F0\"}, { key: 2, value: \"red\", text: \"red\"}]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      \r\n  }   \r\n\r\n  changeColor = (e, { value }) => {\r\n    console.log(e);\r\n    this.setState({ colorValue: value })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"settings-wrapper\">\r\n            <div className=\"settings-container\">\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Цветовая схема</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Громкость звука</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input, Dropdown, TextArea, Form, Checkbox ,Icon, Rating, List } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport parse from 'html-react-parser';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      books: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areBooksVisible: true,\r\n      isMenuVisible: true,\r\n      isPreviewVisible: false,\r\n      isSingleBookVisible: false,\r\n      isBookNavPanelVisible: false,\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n      description: null,\r\n      image: null,\r\n      contentArray: [],\r\n      currentBook: '',\r\n      currentPage: '',\r\n      currentPageIndex: 0,\r\n      currentArrayBooks: [],\r\n      currentIndexArray: [],\r\n      bookHTML: '',\r\n      parsedBook: null,\r\n      bookPages: [],\r\n      bookValue: null,\r\n      bookVal: '',\r\n      currentComment: '',\r\n      currentName: '',\r\n      currentEmail: '',\r\n      likes: 0,\r\n      errors: {},\r\n      checkedItems: new Map(),\r\n      checked: false,\r\n      comments: [{\r\n        \"author\": \"Author 1\",\r\n        \"comment\": \"simple comment\"\r\n      }],\r\n      audiobooks: [],\r\n      currentAudio: null,\r\n      newAudio: null,\r\n      playState: false,\r\n      currentAudioId: 0,\r\n      thumbArray: [],\r\n      scrollForwardState: true,\r\n      scrollBackwardState: false,\r\n      currentVolume: 50,\r\n      currentRange: 0,\r\n      currentDuration: null,\r\n      minutes: 0,\r\n      hours: 0,\r\n      seconds: 0,\r\n      rating: 0,\r\n      maxRating: 5\r\n\r\n    }\r\n  }\r\n\r\n  handleCheckChange = (e) => {\r\n    const item = e.target.name;\r\n    const isChecked = e.target.checked;\r\n    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/books.json')\r\n        .then(res => {\r\n          let books = res.data;\r\n          let contentArray = [];\r\n          let thumbArray = [];\r\n          books.map((item, index) =>{ \r\n            contentArray.push(item.content); \r\n            thumbArray.push(item.image); \r\n          })\r\n          let currentAudio = new Audio(`audio/Baskervilles${this.state.currentAudioId}.mp3`);\r\n          let newAudio = new Audio('audio/Baskervilles1.mp3');\r\n          newAudio.volume = 0.5;\r\n          newAudio.controls = true;\r\n          this.setState({ \r\n            books,\r\n            contentArray,\r\n            currentAudio,\r\n            newAudio,\r\n            thumbArray\r\n          }, () => this.consoleParams() );\r\n        })\r\n    }\r\n\r\n    callFunctions = () =>{\r\n    \tthis.consoleParams();\r\n    \tthis.populateDropdown();\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.books.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.genre, \r\n                        value: item.genre \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    newPage = () =>{\r\n      var bookVal = this.state.bookValue;\r\n      this.setState({\r\n        bookVal\r\n      })\r\n  \r\n    }\r\n\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc())         \r\n\r\n    handlePageChange= (e, { value }) => this.setState({ value }, () => this.newPage())\r\n\r\n  \tgetElementIndex = (node) => {\r\n  \t    var index = 0;\r\n  \t    while ( (node = node.previousElementSibling) ) {\r\n  \t        index++;\r\n  \t    }\r\n  \t}\r\n\r\n    readMore = (e) =>{\r\n      var currentElement = e.target.parentElement.children[0].children[1];\r\n      let books = this.state.books.slice();\r\n      let target = e.target.parentElement;\r\n      setInterval(this.checkInterval, 1000);\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let audiobooks = books[index].audio;\r\n      let image = books[index].image;\r\n      var link = books[index].link;\r\n      axios.all([axios.get('/books/'+ link)])\r\n                   .then(axios.spread((firstResponse) => {           \r\n                    let currentBook = firstResponse.data;\r\n                    var parsedBook = HTMLReactParser(currentBook);\r\n                    this.setState({ \r\n                      currentBook,\r\n                      parsedBook,\r\n                      audiobooks\r\n                    }, () => this.splitBook(this.state.currentBook));\r\n              }))\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[2].children[0].textContent;\r\n      let activeTargetDescription = e.target.parentElement.children[0].children[4].textContent;\r\n      let activeTargetAuthor = e.target.parentElement.children[0].children[1].children[0].textContent;\r\n      let activeTargetContent = this.state.currentBook;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areBooksVisible: false,\r\n        isMenuVisible: false,\r\n        isPreviewVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        author: activeTargetAuthor,\r\n        description: activeTargetDescription,\r\n        image\r\n      }, () => this.populateDropdown())\r\n    }\r\n\r\n    parseHtml = () =>{\r\n      const html = `\r\n        <h1 style=\"font-family: Arial;\">\r\n          html-react-parser\r\n        </h1>\r\n      `;\r\n      return HTMLReactParser(html);      \r\n    }\r\n\r\n    splitBook = (book) =>{\r\n    \tlet currentArrayBooks = [];\r\n    \tlet indexArray = [];\r\n    \tlet length = book.length;\r\n    \tlet pages = Math.ceil(length/4500);\r\n    \tlet currentMin = 0;\r\n    \tlet currentMax = 4500;\r\n    \tfor (var i = 0; i < pages; i++) {\r\n    \t\tcurrentArrayBooks.push(book.substr(currentMin,currentMax));\r\n    \t\tcurrentMin = currentMin + 4500;\r\n    \t}\r\n    \tfor (var i = 0; i < pages; i++) {\r\n    \t\tindexArray.push(i);\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tcurrentArrayBooks,\r\n    \t\tcurrentPage: currentArrayBooks[0],\r\n    \t\tcurrentIndexArray: indexArray\r\n    \t})\r\n    }\r\n\r\n    renderPagination = (book) =>{\r\n    \tlet currentArrayBooks = [];\r\n    \tlet indexArray = [];\r\n    \tlet length = book.length;\r\n    \tlet currentMin = 0;\r\n    \tlet currentMax = 4500;    \t\r\n    \tfor (var i = 0; i < 8; i++) {\r\n    \t\tcurrentArrayBooks.push(book.substr(currentMin,currentMax));\r\n    \t\tcurrentMin = currentMin + 4500;\r\n    \t}\r\n    \tfor (var i = 0; i < 8; i++) {\r\n    \t\tindexArray.push(i);\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tcurrentArrayBooks,\r\n    \t\tcurrentPage: currentArrayBooks[0],\r\n    \t\tcurrentIndexArray: indexArray\r\n    \t})    \t\r\n    }\r\n\r\n    backToBooks = () =>{\r\n      this.setState({\r\n        areBooksVisible: true,\r\n        isMenuVisible: true,\r\n        isSingleBookVisible: false,\r\n        isBookNavPanelVisible: false,\r\n        bookPages: [],\r\n        content: '',\r\n\t\t    currentArrayBooks: [],\r\n\t\t    currentIndexArray: []                \r\n      })\r\n    }\r\n\r\n    handleClick = (e) =>{\r\n    \tlet pages = this.state.currentArrayBooks.slice();\r\n    \tthis.setState({\r\n    \t\tcurrentPageIndex: e.target.id,\r\n    \t\tcurrentPage: pages[e.target.id]\r\n    \t})\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state);\r\n\r\n    }\r\n\r\n\r\n\r\n    renderFirstButton = () =>{\r\n    \treturn(\r\n    \t\t<li className=\"pagination-nav-button\" id=\"0\" onClick={this.handleClick}>First</li>\r\n    \t)\r\n    }\r\n\r\n    renderLastButton = () =>{\r\n    \treturn(\r\n    \t\t<li className=\"pagination-nav-button\" id={this.state.currentArrayBooks.length-1} onClick={this.handleClick}>Last</li>\r\n    \t)\r\n    }\r\n\r\n    prevButton = () =>{\r\n      let currentId = this.state.currentPageIndex;\r\n      let pages = this.state.currentArrayBooks;\r\n      if(currentId>0){\r\n      \tcurrentId--;\r\n      }\r\n      let currentPage = pages[currentId];\r\n      this.setState({\r\n          currentPageIndex: currentId,\r\n          currentPage\r\n      }, this.scrollToTop())\r\n    }\r\n\r\n   goToPage = () =>{\r\n      let currentId = this.state.value;\r\n      let pages = this.state.currentArrayBooks;\r\n      let currentPage = pages[currentId];\r\n      this.setState({\r\n          currentPageIndex: currentId,\r\n          currentPage: currentPage\r\n      }, this.scrollToTop())\r\n    }    \r\n\r\n    nextButton = () =>{\r\n      let currentId = this.state.currentPageIndex;\r\n      let pages = this.state.currentArrayBooks.slice();\r\n      console.log(pages.length);\r\n      if(currentId < pages.length-1){\r\n      \tcurrentId++;\r\n      }\r\n      let currentPage = pages[currentId];\r\n      this.setState({\r\n          currentPageIndex: currentId,\r\n          currentPage\r\n      },this.scrollToTop())\r\n    }   \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    } \r\n\r\n    chapterIndex = () =>{\r\n    \tif(this.state.bookPages.length == 0){\r\n    \t\tthis.populateDropdown();\r\n    \t}\r\n    \tlet currentState = this.state.isBookNavPanelVisible;\r\n    \tthis.setState({\r\n    \t\tisBookNavPanelVisible: !currentState\r\n    \t})\r\n    }\r\n\r\n    populateDropdown = () =>{\r\n    \tlet pages = this.state.currentArrayBooks.slice();\r\n    \tlet bookPages = this.state.bookPages.slice();\r\n    \tfor (var i = 0; i < pages.length; i++) {\r\n    \t\tlet page = '';\r\n    \t\tlet bookObject = {};\r\n    \t\tpage = 'Page ' + (i+1);\r\n    \t\tbookObject[\"key\"] = i;\r\n    \t\tbookObject[\"text\"] = page;\r\n    \t\tbookObject[\"value\"] = i;\r\n    \t\tbookPages.push(bookObject);\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tbookPages\r\n    \t})\r\n    }\r\n\r\n\t  addComment = () =>{\r\n\t    let comments = this.state.comments.slice();\r\n\t    let errors = this.state.errors;\r\n\t    let currentComment = this.state.currentComment;\r\n\t    let currentName = this.state.currentName;\r\n\t    let currentEmail = this.state.currentEmail;\r\n\t    let temp = {};\r\n\t    if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n\t\t    temp['author'] = currentName;\r\n\t\t    temp['comment'] = currentComment;\r\n\t\t    comments.unshift(temp);\r\n\t\t    this.setState({\r\n\t\t      comments,\r\n\t\t      currentName: '',\r\n\t\t      currentComment: '',\r\n\t\t      currentEmail: ''\r\n\t\t    })\r\n\t    }\r\n\t    else if (currentName == ''){\r\n\t    \terrors['name'] = \"Заполните поле имени!\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors: errors\r\n\t    \t})\r\n\t    }\r\n\t    else if(currentComment == ''){\r\n\t    \terrors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors: errors\r\n\t    \t})\t    \t\r\n\t    }\r\n\t    else if(currentEmail == ''){\r\n\t    \terrors['email'] = \"Заполните поле почты\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors: errors\r\n\t    \t})\t    \t\r\n\t    }\r\n\r\n\t  }\r\n\r\n    updateComment = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,500)});\r\n    }\r\n\r\n\r\n    updateName = (event) =>{\r\n      this.setState({currentName: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateEmail = (event) =>{\r\n      this.setState({currentEmail: event.target.value.substr(0,500)});\r\n    }      \r\n\r\n    checkChange = (e) =>{\r\n      let checked = this.state.checked;\r\n      this.setState({\r\n      \tchecked: !checked\r\n      })\r\n    } \r\n\r\n    handleRate = (e, { rating, maxRating }) => this.setState({ rating, maxRating })\r\n\r\n\r\n    startPlayer = () =>{\r\n      let currentState = this.state.playState;\r\n      this.setState({\r\n        playState: !currentState\r\n      }, () => this.playAudio() )\r\n    }\r\n\r\n    playAudio = () =>{\r\n      let audio = this.state.newAudio;\r\n      let audiobooks = this.state.audiobooks;\r\n      let duration = audio.duration;\r\n      let minutes = Math.floor(Math.floor(duration) / 60);\r\n      let hours = Math.floor(Math.floor(minutes) / 60 );\r\n      let seconds = Math.floor(duration - minutes * 60);\r\n      minutes = Math.floor(minutes - hours * 60);\r\n      if(this.state.playState){\r\n        audio.play();\r\n      }\r\n      else{\r\n        audio.pause();\r\n      }\r\n      this.setState({\r\n        currentAudio: audio,\r\n        currentDuration: duration,\r\n        minutes,\r\n        seconds,\r\n        hours\r\n      })\r\n    }\r\n\r\n\r\n    scrollForward = () =>{\r\n      let audio = this.state.currentAudio; \r\n      audio.pause();\r\n      audio.currentTime += 10;\r\n      if(this.state.playState){\r\n        audio.play(); \r\n      }\r\n      this.setState({\r\n        newAudio: audio\r\n      })          \r\n    }\r\n\r\n    scrollBackward = () =>{\r\n      let audio = this.state.currentAudio; \r\n      audio.pause();\r\n      if (audio.currentTime >= 10) {\r\n         audio.currentTime -= 10;\r\n      }\r\n      else{\r\n        audio.currentTime = 0;\r\n      }\r\n      if(this.state.playState){\r\n        audio.play(); \r\n      }\r\n      this.setState({\r\n        newAudio: audio\r\n      })  \r\n    }\r\n\r\n    \r\n\r\n    checkInterval = () =>{\r\n      let player = this.state.newAudio;\r\n      this.setState({\r\n        currentRange: player.currentTime\r\n      })\r\n    }\r\n\r\n    setVolume = (e) =>{\r\n      let volValue = this.state.currentValue;\r\n      var player = this.state.newAudio;\r\n      player.volume = e.target.value / 100;\r\n      this.setState({\r\n        newAudio: player,\r\n        currentVolume: e.target.value\r\n      })\r\n    }\r\n\r\n    setRange = (e) =>{      \r\n      let rangeValue = this.state.currentRange;\r\n      var newAudio = this.state.newAudio;\r\n      newAudio.currentTime = e.target.value;\r\n      this.setState({\r\n        newAudio,\r\n        currentRange: e.target.value\r\n      })\r\n\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu></TopMenu>\r\n        <div className=\"texts-wrapper\">\r\n        {this.state.isMenuVisible ?\r\n          <Menu className=\"texts-menu\" vertical>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите жанр'\r\n                fluid\r\n                value={this.state.value} \r\n                key={this.state.options.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleChange}\r\n                options={this.state.options} \r\n              />\r\n            </Menu.Item>\r\n          </Menu>:null\r\n        }\r\n            {(this.state.books.length && this.state.areBooksVisible) ? \r\n            <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n            {this.state.books.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.genre) &&\r\n              <Card key={index} className=\"single-book\">\r\n                <Card.Content>\r\n                  <div className=\"texts-image-wrapper books-image-wrapper\">\r\n                    <Image src={item.image} />\r\n                  </div>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-author\">{item.author}</span></Card.Header>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-title\">{item.title}</span> <span className=\"books-genre\">{item.genre}</span></Card.Header>\r\n                  <div className=\"books-information\">\r\n                    <div className=\"books-views\">\r\n                      <span><Icon name='eye' size='' /> </span>\r\n                      <span>1234</span>\r\n                    </div>\r\n                    <div className=\"books-favourites\">\r\n                      <span><Icon name='heart' size='' /></span> \r\n                      <span>39</span>\r\n                    </div>\r\n                    <Rating className = \"books-rating\" maxRating={5} onRate={this.handleRate} />\r\n                  </div>\r\n                  <Card.Description>\r\n                    {item.content.substr(0,250) + ' ...'}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={this.readMore} >Читать</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n           }\r\n           {this.state.isPreviewVisible ?\r\n              <div className=\"book-preview-wrapper\">\r\n                <div className=\"book-preview-image\">\r\n                  <Image src={this.state.image} />\r\n                </div>\r\n                <div className=\"book-preview-description\">\r\n                    <h3>{this.state.title}</h3>\r\n                    <h6>By: {this.state.author}</h6>\r\n                    <h6>Pages: {this.state.currentArrayBooks.length} </h6>\r\n                    <h6 className=\"book-preview-text\">{this.state.description} </h6>\r\n                    <div className=\"book-preview-rating\">\r\n                       <Rating icon=\"star\" className = \"books-rating\" maxRating={5} onRate={this.handleRate} />\r\n                       <span >{this.state.rating}/{this.state.maxRating}</span>\r\n                    </div>\r\n                    <Button primary onClick={this.consoleState}>\r\n                      Начать\r\n                    </Button>\r\n                </div>\r\n              </div>\r\n           :null}\r\n           {this.state.isSingleBookVisible ?\r\n           \t<Fragment>\r\n              <Menu className=\"texts-menu audio-menu\" vertical>\r\n                <Menu.Item name='inbox' >\r\n                  <List className=\"audiobooks-list\">\r\n                  {this.state.audiobooks.map((item,index) =>\r\n                    <List.Item key={index}>\r\n                      <div className=\"audiobooks-image-wrapper\">\r\n                        <Image src={this.state.image} />\r\n                      </div>\r\n                      <div className=\"audiobooks-content-wrapper\">\r\n                         <div className=\"audio-name-wrapper\">\r\n                           <h4>Chapter {index+1} </h4>\r\n                           <p>{this.state.title}</p>\r\n                         </div>\r\n                         <div className=\"audio-range-control\">\r\n                            <input id=\"range-control\" type=\"range\" value={this.state.currentRange} min=\"0\" max={this.state.currentDuration} step=\"1\" onInput={this.setRange} onChange={this.setRange}></input>                           \r\n                         </div>\r\n                         <div className=\"audiobooks-controls-wrapper\">\r\n                            <span className=\"audiobooks-icon\" onClick={this.startPlayer}>\r\n                              {this.state.playState ?\r\n                                <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  \r\n                              } \r\n                           </span>\r\n                            <span className=\"audiobooks-icon\" onClick={this.scrollBackward}>\r\n                                <Icon name='backward' size='' /> \r\n                           </span>                            \r\n                            <span className=\"audiobooks-icon\" onClick={this.scrollForward}>\r\n                                <Icon name='forward' size='' />\r\n                           </span>\r\n                           <div className=\"audiobooks-icon audiobooks-input\">\r\n                             <Icon name='volume up' size='' />\r\n                             <input id=\"vol-control\" type=\"range\" value={this.state.currentVolume} min=\"0\" max=\"100\" step=\"1\" onInput={this.setVolume} onChange={this.setVolume}></input>\r\n                             <span className=\"audiobooks-time\">{this.state.hours}.{this.state.minutes}.{this.state.seconds}</span>\r\n                           </div>\r\n                         </div>\r\n                       </div>\r\n                    </List.Item>\r\n                  )}\r\n                  </List>\r\n                </Menu.Item>\r\n              </Menu>            \r\n      \t\t\t\t<Card className=\"single-text-card\">\r\n      \t\t\t\t\t<Card.Content>\r\n      \t\t\t\t\t<div className=\"book-index\">\r\n                  <span className=\"nav-icon-close\" onClick={this.backToBooks} >\r\n                    <Icon name='window close outline' size=\"big\"/>\r\n                  </span>\r\n      \t\t\t\t\t\t<ul className=\"pagination-container\">\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.prevButton}><Icon name='arrow left' size='small'  className=\"nav-icon-right\"/> Previous page</li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.nextButton}>Next page <Icon name='arrow right' size='small' className=\"nav-icon-left\" /> </li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.chapterIndex}>Pages index \r\n                      {this.state.isBookNavPanelVisible ?\r\n                      <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  } \r\n                    </li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.downloadBook}>Download  <Icon name='download' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t\t</ul>           \t\t\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t{this.state.isBookNavPanelVisible ?\r\n      \t\t\t\t\t\t<div className=\"book-index-panel\">\r\n      \t\t\t\t\t\t\t<Dropdown \r\n      \t\t\t\t\t\t\t\tplaceholder='Выберите страницу'\r\n      \t\t\t\t\t\t\t\tfluid\r\n\t\t\t                value={this.state.value} \r\n\t\t\t                key={this.state.options.id}\r\n\t\t\t                clearable\r\n\t\t\t                search\r\n\t\t\t                selection\r\n\t\t\t                onChange = {this.handlePageChange}\r\n\t\t\t                options={this.state.bookPages} \r\n      \t\t\t\t\t\t\t />\r\n      \t\t\t\t\t\t\t<Button onClick={this.goToPage}>Go</Button>\r\n      \t\t\t\t\t\t</div> : null\r\n      \t\t\t\t\t}\r\n      \t\t\t\t\t  <Card.Header className=\"single-book-title\">{this.state.title}</Card.Header>\r\n      \t\t\t\t\t  <Card.Description className=\"single-text-card-description\">\r\n      \t\t\t\t\t    <div className=\"p-wrap\">\r\n      \t\t\t\t\t      {this.state.currentPage}\r\n      \t\t\t\t\t    </div>\r\n      \t\t\t\t\t  </Card.Description>\r\n      \t\t\t\t\t</Card.Content>\r\n      \t\t\t\t\t<ul className=\"pagination-container\">\r\n      \t\t\t\t\t\t{this.renderFirstButton()}\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.scrollToTop}>Top <Icon name='arrow up' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.prevButton}><Icon name='arrow left' size='small'  className=\"nav-icon-right\"/> Previous page </li>\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.nextButton}>Next page <Icon name='arrow right' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t    {this.renderLastButton()}                \t\r\n      \t\t\t\t\t</ul>\r\n      \t\t\t\t\t<div className=\"single-text-card-form\">\r\n      \t\t\t\t\t\t<Form>\r\n      \t\t\t\t\t\t\t<Form.Field>\r\n      \t\t\t\t\t\t\t\t<Input value={this.state.currentName} onChange={this.updateName} focus placeholder='Имя'/>\r\n      \t\t\t\t\t\t\t\t<span>{this.state.errors['name']}</span>\r\n      \t\t\t\t\t\t\t</Form.Field>\r\n      \t\t\t\t\t\t\t<Form.Field>\r\n      \t\t\t\t\t\t\t\t<Input value={this.state.currentEmail} onChange={this.updateEmail} focus placeholder='Email'/>\r\n      \t\t\t\t\t\t\t\t<span>{this.state.errors['email']}</span>\r\n      \t\t\t\t\t\t\t</Form.Field>\r\n      \t\t\t\t\t\t\t<Form.Field>\r\n      \t\t\t\t\t\t\t\t<TextArea value={this.state.currentComment} onChange={this.updateComment} maxLength=\"50\" placeholder='Ваш комментарий' />\r\n      \t\t\t\t\t\t\t\t<span>{this.state.errors['comment']}</span>\r\n      \t\t\t\t\t\t\t</Form.Field>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n      \t\t\t\t\t\t\t<Button onClick={this.addComment} type='submit'>Отправить</Button>\r\n      \t\t\t\t\t\t</Form>\t\t\t\t\t\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t<div className=\"single-text-card-comments\">\r\n                  {this.state.comments.map((item, index) =>\r\n                    <div className=\"single-text-card-comment\" key={index}>\r\n                      <h3>{item.author}</h3>\r\n                      <p>{item.comment}</p>                              \r\n                    </div>\r\n                   )}\t\t\t\t\t\t\t\t\t\t\t\t\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t</Card>\r\n      \t\t\t</Fragment>:null\r\n            }          \r\n        </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default BookList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Materials extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/video.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/videos\">Видео</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card> \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/words.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/decks\">Наборы слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/texts.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/texts\">Обучающие тексты</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>             \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/books.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/books\">Книги</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n                                                                                                                                                             \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Materials;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Checkbox,Icon, Form, Divider, Label } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport ReactDOM from 'react-dom';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\n\r\nclass Example extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      categoryArray: [],\r\n      value: null,\r\n      areTestsVisible: true,\r\n      isSingleTestVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      value: '',\r\n      currentValue: '',\r\n      currentTest: [],\r\n      activeTest: null,\r\n      curIndexTest: 0,\r\n      curIndexCheckbox: 0,\r\n      correctResults: [],\r\n      correctAnswers: [],\r\n      incorrectAnswers: [],\r\n      isMenuVisible: true,\r\n      isTooltipVisible: false,\r\n      currentColor: null\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/tests.json')\r\n        .then(res => {\r\n          let tests = res.data;\r\n          this.setState({ \r\n            tests: tests\r\n          }, () => this.getMenuParams());\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (prevState.currentTest !== this.state.currentTest) {\r\n        \r\n      }\r\n    }\r\n\r\n    getMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.tests.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.title, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n    testChange = (e) =>{\r\n      let parentid = e.target.getAttribute(\"parentid\");   \r\n      let id = e.target.getAttribute(\"id\");\r\n      let currentTest = this.state.currentTest.slice();\r\n      let currentState = currentTest[parentid][id];\r\n      const arr = new Array(3).fill(false);\r\n      arr[id] = true;\r\n      currentTest[parentid] = arr;\r\n      this.setState({\r\n        currentTest\r\n      })\r\n    }\r\n\r\n\r\n    selectTest = (testId) =>{\r\n      let tests = this.state.tests.slice();\r\n      let activeTest = tests.find(x => x.id === testId);\r\n\r\n      let currentTest = [];\r\n      let testItem = [];\r\n      let correctResults = [];\r\n\r\n      activeTest.tasks.map((item, index) => correctResults.push(item.correct_answer));      \r\n      for (var i = 0; i < 3; i++) {\r\n        testItem.push(false);\r\n      }\r\n      for (var i = 0; i < activeTest.tasks.length; i++) {\r\n        currentTest.push(testItem);\r\n      }\r\n      this.setState({\r\n        activeTest,\r\n        currentTest,\r\n        correctResults\r\n      }, () => this.setState({\r\n          areTestsVisible: false,\r\n          isSingleTestVisible: true,\r\n      }));\r\n    }\r\n\r\n    backToTests = () =>{\r\n      this.setState({\r\n        areTestsVisible: true,\r\n        isSingleTestVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n    \t\tcurrentTest: [],\r\n    \t\tcurIndexTest: 0,\r\n    \t\tcurIndexCheckbox: 0,\r\n    \t\tcorrectResults: [],\r\n    \t\tcorrectAnswers: [],\r\n    \t\tincorrectAnswers: [],\r\n      })\r\n    }\r\n\r\n    checkResults = () =>{\r\n    \tlet resultsArray = this.state.currentTest.slice();\r\n    \tlet correctResults = this.state.correctResults.slice();\r\n    \tlet finalResults = [];\r\n    \tlet correctAnswers = [];\r\n    \tlet incorrectAnswers = [];\r\n    \tfor (var i = 0; i < resultsArray.length; i++) {\r\n    \t\tlet item = resultsArray[i];\r\n    \t\tfor (var j = 0; j < item.length; j++) {\r\n    \t\t\tif (item[j]) {\r\n    \t\t\t\tfinalResults.push(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n      if(finalResults.length == this.state.activeTest.tasks.length) {\r\n        for (var i = 0; i < finalResults.length; i++) {\r\n          if(correctResults[i] === finalResults[i]){\r\n            correctAnswers.push(i)\r\n          }\r\n          else{\r\n            incorrectAnswers.push(i)\r\n          }\r\n        }\r\n        this.setState({\r\n          isResultVisible: true,\r\n          isSingleTestVisible: false,\r\n          correctAnswers,\r\n          incorrectAnswers,\r\n          isMenuVisible: false,\r\n          isTooltipVisible: false\r\n        })                \r\n      }\r\n      else{\r\n        this.setState({\r\n          isTooltipVisible: true\r\n        })\r\n      }\r\n \t\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {this.state.areTestsVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n                <Menu.Item name='inbox'>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n          {(this.state.tests.length && this.state.areTestsVisible) ? \r\n            <Card.Group className=\"texts-cards tests-cards\" itemsPerRow={3} >\r\n              {this.state.tests.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&            \r\n              <Card key={index} className=\"test-card test-item\" style = {{boxShadow: `0 1px 3px 0 ${item.color}, 0 0 0 1px ${item.color}` }} >\r\n                <Card.Content>\r\n                  <Card.Header className=\"tests-card-title\" style = {{backgroundColor: item.color}} >\r\n                  \t<h3>{item.difficulty}</h3>\r\n                  \t<span>{item.title}</span>\r\n                  </Card.Header>\r\n                  <Card.Description className=\"tests-card-description\">\r\n                     <p className=\"tests-card-description-line\">Количество заданий - <span className=\"tests-card-description-txt\">{item.number}</span></p>\r\n                     <p className=\"tests-card-description-line\">Максимальное кол-во баллов - <span className=\"tests-card-description-txt\">{item.totalScore}</span></p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={ () => {this.selectTest(item.id)} /*this.selectTest.bind(this, item.id) */} style = {{backgroundColor: item.color }} >Начать тест</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n          }\r\n         {this.state.isSingleTestVisible ? \r\n            <Card className=\"single-text-card tests-wrapper\">\r\n              <h1>\r\n              \t{this.state.activeTest.title}\r\n              \t<span onClick={this.backToTests} ><Icon name='window close outline'/></span>\r\n              </h1>\r\n              <Card.Content>\r\n                {this.state.activeTest.tasks.slice().map((item, index) =>\r\n                    <Card.Description key={item.id} id={index} className=\"single-text-card-description\">\r\n                    <h3 >{item.sentence}</h3>\r\n                    <Form className=\"single-test-form\" >\r\n                      {item.variants.map((param, ind) => \r\n                        <label className=\"test-label\" key={ind}>\r\n                          <input type=\"checkbox\" \r\n                            id={ind}\r\n                            parentid={item.id}\r\n                            label={param}\r\n                            name='checkboxRadioGroup'\r\n                            value={item}\r\n                            checked={this.state.currentTest[item.id][ind]}\r\n                            onChange={this.testChange}/>\r\n                            {param}                          \r\n                        </label>\r\n                      )}                                             \r\n                    </Form>                      \r\n                  </Card.Description>\r\n                )}\r\n              </Card.Content>\r\n              {this.state.isTooltipVisible ?\r\n                <div className=\"tests-tooltip\">\r\n                    <h4>Заполните все поля!</h4>               \r\n                </div> : null\r\n              }\r\n              <div className=\"tests-button-wrapper decks-button-wrapper\">\r\n              \t<Button onClick={this.checkResults} >Принять</Button>                  \t\r\n              </div>\r\n            </Card>:null\r\n          }\r\n          {this.state.isResultVisible ? \r\n            <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper test-final\" >\r\n             <Card className=\"card-training test-result-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n    \t\t\t\t\t\t  <div className=\"grades-results-wrapper\">\r\n    \t\t\t\t\t\t\t  <h3>Количество правильных ответов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n                    <h3>Количество набранных баллов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n    \t\t\t\t\t\t  </div>\t\t                  \r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.correctAnswers.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.incorrectAnswers.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.backToTests}>Назад к тестам</Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group> : null \r\n          }       \r\n          </div>\r\n        </div>  \r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Example;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Rightwrong extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isImageVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false         \r\n      }, () => this.initialLoad())\r\n   } \r\n\r\n   initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n \r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }  \r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          console.log(result);               \r\n          this.setState({ \r\n            words, \r\n            result,\r\n            currentWord });\r\n        })\r\n   }\r\n\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (response) => {\r\n      if (response) {\r\n        let positiveWords = this.state.positiveWords.slice();        \r\n        positiveWords.push(this.state.currentWord); \r\n        this.setState({ positiveWords })       \r\n      } else {\r\n          let negativeWords = this.state.negativeWords.slice();          \r\n          negativeWords.push(this.state.currentWord);\r\n          this.setState({ negativeWords })          \r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true\r\n      })      \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id =this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < this.state.result.length){\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];     \r\n        this.setState({\r\n          id,\r\n          currentWord, \r\n          isImageVisible: false,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n      })\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Верно-неверно</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent}>Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"rightwrong-timer\"> \r\n                </Card.Header>\r\n                <Card.Header className=\"rightwrong-header\">{this.state.currentWord.name} \r\n                </Card.Header>                \r\n                <Card.Header>{this.state.currentWord.translation} \r\n                </Card.Header>\r\n                <div className=\"rightwrong-image-wrapper\">\r\n                {this.state.isImageVisible ?\r\n                  <Image src={this.state.currentWord.image} className=\"rightwrong-image\"></Image> : null               \r\n                }\r\n                </div>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} className=\"red false-button\" primary>Неверно</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} className=\"green true-button\" primary>Верно</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {(this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Rightwrong;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[1].main_points;\r\n          const fullData = res.data[0].rules[1].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[2].main_points;\r\n          const fullData = res.data[0].rules[2].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[3].main_points;\r\n          const fullData = res.data[0].rules[3].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[4].main_points;\r\n          const fullData = res.data[0].rules[4].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[5].main_points;\r\n          const fullData = res.data[0].rules[5].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[6].main_points;\r\n          const fullData = res.data[0].rules[6].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFuturePerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[8].main_points;\r\n          const fullData = res.data[0].rules[8].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPastPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[7].main_points;\r\n          const fullData = res.data[0].rules[7].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[9].main_points;\r\n          const fullData = res.data[0].rules[9].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[10].main_points;\r\n          const fullData = res.data[0].rules[10].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass GrammarFuturePerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[11].main_points;\r\n          const fullData = res.data[0].rules[11].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfectContinuous;","import React,{Component} from 'react';\r\n//import './audioplayer.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\nimport jsmediatags from \"jsmediatags\";\r\nimport { Howl } from \"howler\";\r\nimport axios from 'axios';\r\n\r\n//import {bindActionCreators} from 'redux';\r\n//import actions from './actions/index';\r\n\r\n//import {connect} from 'react-redux';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: [],\r\n      soundVolume: 5,\r\n      playing: false,\r\n      muted: false,\r\n      currentTrack: null,\r\n      currentTrackLength: null,\r\n      currentTrackInfo: null,\r\n      currentTrackPicture: null,\r\n      currentId: 4,\r\n      order: \"consecutive\",\r\n      duration: 0,\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n      currentDuration: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\",\r\n      tracksVisible: true,\r\n      interval: null,\r\n      progress: 0,\r\n      decodingFinished: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      currentId: 1\r\n    }, () => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) =>\r\n          this.setState({ audio: res.data })\r\n        );       \r\n    }) \r\n  }\r\n\r\n/*\r\n  componentDidUpdate(prevProps){\r\n    let currentTrack = this.state.currentTrack;\r\n    if(prevProps.store.playing !== this.state.playing) { \r\n      this.setState({playing: this.state.playing})\r\n      if (this.state.playing === false) {\r\n        currentTrack.pause();\r\n      } else {\r\n        let interval = this.state.interval;\r\n        currentTrack.play();\r\n        interval = setInterval(() => this.startCycle(), 1000);\r\n        this.setState({ interval });\r\n      }\r\n    }    \r\n\r\n    if(prevProps.store.currentId !== this.state.currentId) { \r\n      if (currentTrack) {\r\n        currentTrack.pause();\r\n      }   \r\n      this.setState({\r\n        currentTrack\r\n      }, () => this.callFunctions(this.state.currentId));\r\n    }\r\n  }\r\n*/\r\n  callFunctions = () => {\r\n    let id = this.state.currentId;\r\n    let currentTrack = new Howl({\r\n      src: \"tracks/\" + this.state.audio.slice(id, id + 1),\r\n      html5: true,\r\n      volume: this.state.soundVolume / 10\r\n    });\r\n    var duration, minutes, seconds, currentMinutes, currentSeconds;\r\n    currentTrack.on(\"load\", () => {\r\n      duration = currentTrack.duration();\r\n      minutes = Math.floor(duration / 60);\r\n      seconds = Math.floor(duration - minutes * 60);\r\n      minutes = (\"0\" + minutes).slice(-2);\r\n      seconds = (\"0\" + seconds).slice(-2);\r\n      currentMinutes = \"00\";\r\n      currentSeconds = \"00\";\r\n      this.setState({ minutes, seconds, duration, currentTrack }, () => {\r\n        this.setState({ decodingFinished: true });        \r\n        if (this.state.playing) {\r\n          this.continuePlay();\r\n        } \r\n      });\r\n    });\r\n    this.readTags(id);\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      progress: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\"\r\n    })\r\n  }\r\n\r\n  readTags = (id) => {\r\n    let track = this.state.audio[id];\r\n    jsmediatags.read(\r\n      \"http://localhost:3000/tracks/\" + `${this.state.audio[id]}`,\r\n      {\r\n        onSuccess: (tag) => {\r\n          this.setState({ currentTrackInfo: tag }, () => {\r\n            this.decodeTrackInfo();\r\n          });\r\n        },\r\n        onError: (error) => {\r\n          console.log(\":(\", error.type, error.info);\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  decodeTrackInfo = () => {\r\n    let title = this.state.currentTrackInfo.tags.title;\r\n    let artist = this.state.currentTrackInfo.tags.artist;\r\n    let currentTrackPicture;\r\n    if (this.state.currentTrackInfo.tags.picture) {\r\n      const { data, type } = this.state.currentTrackInfo.tags.picture;\r\n      const byteArray = new Uint8Array(data);\r\n      const blob = new Blob([byteArray], { type });\r\n      currentTrackPicture = URL.createObjectURL(blob);\r\n    }\r\n    this.setState({\r\n      currentTrackPicture,\r\n      currentTrackTitle: title,\r\n      currentTrackArtist: artist\r\n    })\r\n  };\r\n\r\n  playMusic = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let interval = this.state.interval;\r\n    if (this.state.playing) {\r\n      currentTrack.pause();\r\n      //this.props.actions.changePlayingState(false);\r\n      clearInterval(interval);\r\n      this.setState({ interval });\r\n    } else {\r\n      currentTrack.volume(this.state.soundVolume / 10);\r\n      currentTrack.play();\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n      this.setState({ interval });\r\n      //this.props.actions.changePlayingState(true);\r\n    }\r\n    //this.props.actions.changePlayingState(!this.state.playing);\r\n    this.setState({currentTrack});\r\n  };\r\n\r\n  continuePlay = () =>{\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.playing) {\r\n      currentTrack.stop();\r\n    }\r\n    let interval = this.state.interval;\r\n    clearInterval(interval);\r\n    currentTrack.play();\r\n    if (this.state.playing) {\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n    }    \r\n    this.setState({ interval });    \r\n  }\r\n\r\n  changeVolume = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(e.target.value / 10);\r\n    this.setState({ soundVolume: e.target.value, currentTrack });\r\n  };\r\n\r\n  nextTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    console.log(\"currentTrack\", currentTrack);\r\n    currentTrack.stop();\r\n    if (this.state.currentId < this.state.audio.length - 1) {\r\n      //this.props.actions.selectTrack(this.state.currentId + 1);\r\n    } else {\r\n       //this.props.actions.selectTrack(0);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  prevTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    currentTrack.stop();\r\n    if (this.state.currentId > 0) {\r\n      //this.props.actions.selectTrack(this.state.currentId - 1);\r\n    } else {\r\n      //this.props.actions.selectTrack(this.state.audio.length - 1);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  muteSound = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.muted) {\r\n      currentTrack.mute(false);\r\n    } else {\r\n      currentTrack.mute(true);\r\n    }\r\n    this.setState({\r\n      muted: !this.state.muted,\r\n      currentTrack,\r\n    });\r\n  };\r\n\r\n  startCycle = () => {\r\n    this.incTime();\r\n    this.updateProgress();\r\n  };\r\n\r\n  updateProgress = () => {\r\n    let time = Math.round(this.state.currentTrack.seek());\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let progress = ((time / duration) * 100).toFixed(2);\r\n    this.setState({ progress });\r\n    //this.props.actions.changeProgressState(progress);\r\n  };\r\n\r\n  incTime = () => {\r\n    let currentDuration = Math.round(this.state.currentTrack.seek());\r\n    let currentMinutes = Math.floor(currentDuration / 60);\r\n    let currentSeconds = Math.floor(currentDuration - currentMinutes * 60);\r\n    currentMinutes = (\"0\" + currentMinutes).slice(-2);\r\n    currentSeconds = (\"0\" + currentSeconds).slice(-2);\r\n    this.setState({ currentSeconds, currentMinutes, currentDuration });\r\n    if (currentDuration === this.state.currentTrack.duration()) {\r\n      let currentTrack = this.state.currentTrack;\r\n      currentTrack.stop();      \r\n      if (this.state.currentId < this.state.audio.length - 1) {\r\n        //this.props.actions.selectTrack(this.state.currentId + 1);\r\n      } else {\r\n        //this.props.actions.selectTrack(0);\r\n      }\r\n      this.setState({ currentTrack, decodingFinished: false }, () => {\r\n        this.resetState();\r\n        this.callFunctions(this.state.currentId);\r\n      });      \r\n    }\r\n  };\r\n\r\n  setSeek = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let seek = (e.target.value * duration) / 100;\r\n    currentTrack.seek(seek);\r\n    console.log(\"seek\", Math.round(seek));\r\n    this.setState({ currentTrack, progress: e.target.value }, () => {\r\n      this.incTime();\r\n      //this.props.actions.changeProgressState(Math.round(seek));\r\n      console.log(this.state.progress);\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"player__visualizer player-visualizer\">\r\n          <div className=\"player-visualizer__waveform\" id=\"waveform\"></div>\r\n        </div>\r\n        <div className=\"player__top player-top\">\r\n          <span className=\"player-top__time\">{this.state.currentMinutes}.{this.state.currentSeconds}</span>\r\n          <div className=\"player-top__progress player-progress\">\r\n              <input\r\n                className=\"player-progress__input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                type=\"range\"\r\n                value={this.state.progress}\r\n                onChange={this.setSeek}\r\n              />\r\n          </div>\r\n          <span className=\"player-top__time\">{this.state.minutes}.{this.state.seconds}</span>\r\n        </div>\r\n        <div className=\"player-main\">\r\n          <div className=\"player-left\">\r\n            <div className=\"player-info player__info\">\r\n              <div className=\"player-info__icon player-icon\">\r\n                  {this.state.currentTrackPicture ? (\r\n                    <img src={this.state.currentTrackPicture} className=\"player-icon__picture\" alt=\"\" />\r\n                  ) : null}              \r\n              </div>\r\n              <div className=\"player-info__description player-description\">\r\n                <p className=\"player-description__name\">{this.state.currentTrackTitle}</p>\r\n                <p className=\"player-description__artist\">{this.state.currentTrackArtist}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"player__controls player-controls\">\r\n              <div className=\"player-controls__navigation\">\r\n                <div className=\"player-controls__item player-controls__left\" onClick={this.prevTrack}><i className=\"fas fa-backward\"></i></div>\r\n                {!this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-play\"></i></div> : null}\r\n                {this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-pause\"></i></div> : null}\r\n                <div className=\"player-controls__item player-controls__right\" onClick={this.nextTrack}><i className=\"fas fa-forward\"></i></div>         \r\n              </div>\r\n            </div>        \r\n          </div>\r\n          <div className=\"player-controls__volume player-volume\">\r\n            <div className=\"player-controls__item player-volume__item\"><i className=\"fas fa-volume-up\"></i></div>\r\n                      <input\r\n                        className=\"player-controls__audio\"\r\n                        value={this.state.soundVolume}\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        onChange={this.changeVolume}\r\n                        type=\"range\"\r\n                      />        \r\n          </div>      \r\n        </div>\r\n      </div>        \r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n*/\r\nexport default AudioPlayer;","import React, {Component} from 'react';\r\n\r\nclass SidebarMenu extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsort: 'date',\r\n\t\t\trating: 'all',\r\n\t\t\tsize: 'all'\r\n\t\t}\r\n\t}\r\n\r\n\tchangeSort = (e) =>{\r\n\t\tthis.props.callbackSort(e.target.value);\r\n\t\tthis.setState({ sort: e.target.value })\r\n\t\tconsole.log(e.target.value);\r\n\t}\r\n\r\n\tchangeRating = (e) =>{\r\n\t\tthis.props.callbackRating(e.target.value);\r\n\t\tthis.setState({ rating: e.target.value })\r\n\t}\r\n\r\n\tchangeSize = (e) =>{\r\n\t\tthis.props.callbackSize(e.target.value);\r\n\t\tthis.setState({ size: e.target.value })\r\n\t}\r\n\r\n\tsetCheckbox = (e) =>{\r\n\t\tthis.props.callbackCheckbox(e.target.name, e.target.checked)\r\n\t\tconsole.log(e.target.checked);\r\n\t}\r\n\t\r\n\trender(){\r\n\r\n\t  return (\r\n\t\t<div className=\"sidebar-menu\">\r\n          <div className=\"form-group\">\r\n            <h4>Сортировать</h4> \r\n            <select ref=\"userInput\"\t\t            \t\r\n                required\r\n                className=\"form-control\"\r\n                value={this.state.sort} onChange = {this.changeSort} >\r\n                <option value=\"date\">Дата добавления</option> \r\n                <option value=\"author\">Автор</option> \r\n\t\t\t\t<option value=\"year\">Год</option> \r\n\t\t\t\t<option value=\"title\">Название</option>  \r\n\t\t\t\t<option value=\"length\">Размер</option>\r\n\t\t\t\t<option value=\"views\">Популярность</option> \r\n            </select>\r\n          </div>\t\t\t\r\n          <div className=\"form-group\">\r\n            <h4>Размер</h4> \r\n            <select ref=\"userInput\"\r\n            \tvalue = {this.state.size}\r\n                required\r\n                className=\"form-control\"\r\n                onChange = {this.changeSize} >\r\n                <option value=\"all\">все</option> \r\n\t\t\t\t<option value=\"short\">меньше 10000 слов </option> \r\n\t\t\t\t<option value=\"medium\"> от 10000 до 50000 слов </option>  \r\n\t\t\t\t<option value=\"long\"> более 50000 слов </option>                 \r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <h4>Рейтинг</h4> \r\n            <select ref=\"userInput\"\r\n            \tvalue = {this.state.rating}\r\n            \tonChange = {this.changeRating}\r\n                required\r\n                className=\"form-control\"\r\n                >\r\n                <option value=\"all\">Все</option> \r\n\t\t\t\t<option value=\"G\">General audiences</option> \r\n\t\t\t\t<option value=\"T\">Teen</option>\r\n\t\t\t\t<option value=\"E\">Explicit</option>    \r\n\t\t\t\t<option value=\"M\">Mature</option>                 \r\n            </select>\r\n          </div>          \r\n          <div className=\"checkbox-container\">\r\n          \t<h4>Категории</h4>\r\n          \t<label className=\"checkbox-wrapper\">\r\n\t\t\t  <input type=\"checkbox\" name=\"fantasy\" onChange={ this.setCheckbox}/>\r\n\t\t\t  <span className=\"checkmark\"></span>\r\n\t\t\t  Fantasy\r\n\t\t\t</label>\r\n\r\n\t\t\t<label className=\"checkbox-wrapper\">\r\n\t\t\t  <input type=\"checkbox\" name=\"drama\" onChange={ this.setCheckbox}/>\r\n\t\t\t  <span className=\"checkmark\"></span>\r\n\t\t\t  Drama\r\n\t\t\t</label>\r\n\r\n\t\t\t<label className=\"checkbox-wrapper\">\r\n\t\t\t  <input type=\"checkbox\" name=\"comedy\" onChange={ this.setCheckbox}/>\r\n\t\t\t  <span className=\"checkmark\"></span>\r\n\t\t\t  Comedy\r\n\t\t\t</label>\r\n\r\n\t\t\t<label className=\"checkbox-wrapper\">\r\n\t\t\t  <input type=\"checkbox\" name=\"nonfiction\" onChange={ this.setCheckbox}/>\r\n\t\t\t  <span className=\"checkmark\"></span>\r\n\t\t\t  Nonfiction\r\n\t\t\t</label>\r\n\r\n\t\t\t<label className=\"checkbox-wrapper\">\r\n\t\t\t  <input type=\"checkbox\" name=\"detective\" onChange={ this.setCheckbox}/>\r\n\t\t\t  <span className=\"checkmark\"></span>\r\n\t\t\t  Detective\r\n\t\t\t</label> \r\n\r\n\t\t\t<label className=\"checkbox-wrapper\">\r\n\t\t\t  <input type=\"checkbox\" name=\"history\" onChange={ this.setCheckbox}/>\r\n\t\t\t  <span className=\"checkmark\"></span>\r\n\t\t\t  History\r\n\t\t\t</label> \t\t\r\n\r\n          </div>\r\n          <div className=\"sidebar-button-wrapper\">\r\n          \t<button className=\"sidebar-button\">Искать</button>\r\n          </div>\r\n\t\t</div> \r\n\t  );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default SidebarMenu;\r\n","import React, {Component} from 'react';\nimport Rating from 'react-rating';\nimport axios from 'axios';\n\nclass SingleBook extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tbook: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\t\n\t}\n\n\tconsoleLength = (link) =>{\n\t\tconsole.log(link);\n\t\taxios.get('/books/'+ link)\n\t      .then(res => {\n\t        this.setState({ book: res.data }, () => console.log(this.state.book.length) );\n\t      })\t\t\n\t}\n\n\topenBook = (id, link, title, author) =>{\n\t\tthis.props.openBook(id, link, title, author);\n\t}\n\t\n\trender(){\n\n\t  return (\n\t\t<div className=\"single-book\">\n\t\t\t<div className=\"single-book-image\">\n\t\t\t{this.props.image ? <img src={this.props.image}  alt=\"\"/> : \n\t\t\t\t<div className=\"single-book-image__not-found\">\n\t\t\t\t\t<i className=\"fal fa-image\"></i>\n\t\t\t\t\t<span>Image not found</span>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t</div>\n\t\t\t<div className=\"single-book-description\">\n\t\t\t\t<div className=\"single-book-header\">\n\t\t\t\t\t<h5>{this.props.title}</h5>\n\t\t\t\t\t<h6>By: {this.props.author}</h6>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"rating-wrapper\">\n\t\t\t        <Rating className=\"single-book-rating\"\n\t\t\t          stop={5} \n\t\t\t          readonly \n\t\t\t          initialRating={this.props.rating}\n\t\t\t          emptySymbol=\"far fa-star fa-1x\"\n\t\t\t          fullSymbol=\"fas fa-star fa-1x\" />\n\t\t\t        <span className=\"rating-number\">{this.props.rating.toFixed(1)}</span>\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<p>\n\t\t\t\t\t{this.props.summary.substr(0,200)}\n\t\t\t\t</p>\n\t\t\t\t<div className=\"single-book-inner-wrapper\">\n\t\t\t\t\t<button onClick={this.props.openBook.bind(this, this.props.id, this.props.link, this.props.title, this.props.author)}>Читать</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t  );\n\n\t}\n\n}\n\nexport default SingleBook;\n","import React, {Component} from 'react';\n\nclass SettingsFont extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tvalue: 16,\n\t\t\tfontFamily: \"'Times New Roman', sans-serif\",\n\t\t\tlineHeight: 32,\n\t\t\tfontWeight: 400\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.setState({ value: this.props.value.slice(0, -2)})\n\t\tthis.setState({ lineHeight: this.props.lineHeight.slice(0, -2)})\n\t\tthis.setState({ fontWeight: this.props.fontWeight })\n\t\tthis.setState({ fontFamily: this.props.fontFamily})\n\t}\n\n\tcloseModal = () =>{\n\t\tthis.props.callbackModal('settingsFont');\n\t}\n\n\tchangeValue = (e) =>{\n\t\tthis.setState({value: e.target.value})\n\t}\n\n\tapplyChanges = () =>{\n\t\tthis.props.callbackModal('settingsFont');\n\t\tthis.props.changeFont(this.state.value);\n\t\tthis.props.changeFontFamily(this.state.fontFamily);\n\t\tthis.props.changeLineHeight(this.state.lineHeight);\n\t\tthis.props.changeFontWeight(this.state.fontWeight);\n\t\tthis.setState({fontFamily: this.props.fontFamily});\n\t\tthis.setState({ value: this.props.value.slice(0, -2)})\n\t}\n\n\tchangeFontFamily = (e) =>{\n\t\tthis.setState({fontFamily: e.target.value})\n\t}\n\n\tchangeFontWeight = (e) =>{\n\t\tthis.setState({fontWeight: e.target.value})\n\t}\n\n\tchangeLineHeight = (e) =>{\n\t\tthis.setState({lineHeight: e.target.value})\n\t}\t\t\n\t\n\trender(){\n\n\t  return (\n\t\t<div className=\"settings-overlay\">\n\t\t\t<div className=\"select-palette-wrapper select-font-wrapper\">\n\t\t\t\t<span className=\"close-button\" onClick={this.closeModal}>\n\t\t\t\t\t<i className=\"fas fa-times\"></i>\n\t\t\t\t</span>\n\t\t\t\t<div className=\"select-font\">\n\t\t\t\t\t<div className=\"select-font-block\">\n\t\t\t\t\t\t<span>Размер</span>\n\t\t\t\t\t\t<div className=\"select-font-input\">\n\t\t\t\t\t\t\t<input onChange={this.changeValue} type=\"range\" min=\"8\" max=\"24\" value={this.state.value} name=\"\"/>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<span className=\"select-font-value\">{this.state.value}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"select-font-block\">\n\t\t\t\t\t\t<span>Интервал</span>\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"select-font-input\">\n\t\t\t\t\t\t\t<input onChange={this.changeLineHeight} type=\"range\" min=\"16\" max=\"72\" value={this.state.lineHeight} name=\"\"/>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<span className=\"select-font-value\">{this.state.lineHeight}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"select-font-block\">\n\t\t\t\t\t\t<span>Жирность</span>\n\t\t\t\t\t\t<div className=\"select-font-input\">\n\t\t\t\t\t\t\t<input onChange={this.changeFontWeight} type=\"range\" min=\"200\" max=\"900\" step=\"100\" value={this.state.fontWeight} name=\"\"/>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<span className=\"select-font-value\">{this.state.fontWeight}</span>\n\t\t\t\t\t\t</div>\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<select className=\"select-font-family\" onChange={this.changeFontFamily} value={this.state.fontFamily}>\n\t\t\t\t\t<option value =\"'Times New Roman', sans-serif\">Times New Roman</option>\n\t\t\t\t\t<option value =\"'Arial', sans-serif\">Arial</option>\n\t\t\t\t\t<option value =\"'Verdana', sans-serif\">Verdana</option>\n\t\t\t\t\t<option value =\"'Lucida Console', sans-serif\">Lucida Console</option>\n\t\t\t\t\t<option value =\"'Georgia', serif\">Georgia</option>\n\t\t\t\t\t<option value =\"'Courier New', monospace\">Gourier New</option>\n\t\t\t\t</select>\n\t\t\t\t<p className=\"select-font-example\" style={{ fontSize: this.state.value + \"px\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: this.state.fontFamily,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineHeight: this.state.lineHeight + \"px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontWeight: this.state.fontWeight }} >Lorem ipsum dolor sit amet</p>\t\t\t\t\t\t\t\t\t\n\t\t\t\t<button className=\"normal-button\" onClick={this.applyChanges} >Применить</button>\n\t\t\t</div>\n\t\t\n\t\t</div>\n\t  );\n\n\t}\n\n}\n\nexport default SettingsFont;\n","import React, {Component} from 'react';\n\nclass SettingsPalette extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tactiveFontColor: '#222222',\n\t\t\tactiveBgColor: '#f6f6f6',\n\t\t\tfontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\n\t\t\tbgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\n\t\t\tcolorScheme: [\n\t\t\t\t'#000000',\n\t\t\t\t'#111111',\n\t\t\t\t'#222222',\n\t\t\t\t'#333333',\n\t\t\t\t'#444444',\n\t\t\t\t'#555555',\n\t\t\t\t'#666666',\n\t\t\t\t'#777777',\n\t\t\t\t'#888888',\n\t\t\t\t'#999999',\n\t\t\t\t'#a7a7a7',\n\t\t\t\t'#b8b8b8',\n\t\t\t\t'#d0d0d0',\n\t\t\t\t'#dcdcdc',\n\t\t\t\t'#f6f6f6',\n\t\t\t\t'#ffffff'\n\t\t\t]\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.setState({ color: this.props.color, \n\t\t\t\t\t\tbackgroundColor: this.props.backgroundColor,\n\t\t\t\t\t\tfontState: this.props.fontState,\n\t\t\t\t\t\tbgState: this.props.bgState })\n\t}\n\n\tcloseModal = () =>{\n\t\tthis.props.callbackModal('settingsPalette');\n\t}\n\n\tsetFontColor = (e) =>{\n\t\tlet fontState = this.state.fontState.slice();\n\t\tlet index = e.currentTarget.getAttribute(\"data-index\");\n\t\tfor (var i = 0; i < fontState.length; i++) {\n\t\t\tfontState[i] = false;\n\t\t}\n\t\tfontState[index] = true;\n\t\tthis.setState({\n\t\t\tactiveFontColor: e.currentTarget.getAttribute(\"colorvalue\"),\n\t\t\tfontState\n\t\t})\n\t}\n\n\tsetBgColor = (e) =>{\n\t\tlet bgState = this.state.bgState.slice();\n\t\tlet index = e.currentTarget.getAttribute(\"data-index\");\n\t\tfor (var i = 0; i < bgState.length; i++) {\n\t\t\tbgState[i] = false\n\t\t}\n\t\tbgState[index] = true;\n\t\tthis.setState({\n\t\t\tactiveBgColor: e.currentTarget.getAttribute(\"colorvalue\"),\n\t\t\tbgState\n\t\t})\n\t}\n\n\tapplyChanges = () =>{\n\t\tthis.props.changeFontColor(this.state.activeFontColor);\n\t\tthis.props.changeBackgroundColor(this.state.activeBgColor);\n\t\tthis.props.callbackModal('settingsPalette');\n\t\tthis.props.changeBgState(this.state.bgState);\n\t\tthis.props.changeFontState(this.state.fontState);\n\t}\n\n\tconsoleState = () =>{\n\t\tconsole.log(this.state)\n\t}\n\t\n\trender(){\n\n\t  return (\n\t\t<div className=\"settings-overlay\">\n\t\t\t<div className=\"select-palette-wrapper\">\n\t\t\t\t<span className=\"close-button\" onClick={this.closeModal} >\n\t\t\t\t\t<i className=\"fas fa-times\"></i>\n\t\t\t\t</span>\n\t\t\t\t<div className=\"select-palette-container\">\n\t\t\t\t\t<div className=\"palette-container-item\">\n\t\t\t\t\t\t<p>Шрифт</p>\n\t\t\t\t\t\t<div className=\"select-palette\">\n\t\t\t\t\t\t\t{this.state.colorScheme.map((item,index) =>\n\t\t\t\t\t\t\t\t<div key={index} className=\"palette-item\" data-index={index} onClick={this.setFontColor} style={{ backgroundColor: item }} colorvalue={item}>\n\t\t\t\t\t\t\t\t\t{this.state.fontState[index] ? \n\t\t\t\t\t\t\t\t\t\t<span><i className=\"fas fa-check\"></i></span>  : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"palette-container-item\">\n\t\t\t\t\t\t<p>Фон</p>\n\t\t\t\t\t\t<div className=\"select-palette\">\n\t\t\t\t\t\t\t{this.state.colorScheme.map((item,index) =>\n\t\t\t\t\t\t\t\t<div key={index} className=\"palette-item\" data-index={index} onClick={this.setBgColor} style={{ backgroundColor: item }} colorvalue={item}>\n\t\t\t\t\t\t\t\t\t{this.state.bgState[index] ?\n\t\t\t\t\t\t\t\t\t\t<span><i className=\"fas fa-check\"></i></span> \n\t\t\t\t\t\t\t\t\t\t : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"palette-item-selected\" style={{ backgroundColor: this.state.activeBgColor }} >\n\t\t\t\t\t<span style={{ color: this.state.activeFontColor  }} >Lorem ipsum </span>\n\t\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t\t\t<button className=\"normal-button\" onClick={this.applyChanges} >Применить</button>\t\t\t\t\t \n\t\t\t</div> \n\t\n\t\t</div>\n\t  );\n\n\t}\n\n}\n\nexport default SettingsPalette;\n","import React, {Component, Fragment} from 'react';\r\nimport axios from 'axios'\r\nimport SettingsFont from './SettingsFont'\r\nimport SettingsPalette from './SettingsPalette'\r\n\r\nclass ActiveBook extends Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.myRef = React.createRef();\r\n\t\tthis.state = {\r\n\t\t\ttext: '',\r\n\t\t\tpageIndexes: [],\r\n\t\t\tcurrentPageId: 0,\r\n\t\t\tloaded: false,\r\n\t\t\tsettingsFont: false,\r\n\t\t\tSettingsPalette: false,\r\n\t\t\tfontSize: '16px',\r\n\t\t\tfontFamily: \"'Times New Roman', sans-serif\",\r\n\t\t\tlineHeight: '32px',\r\n\t\t\tfontWeight: 400,\r\n\t\t\tbackgroundColor: '#f6f6f6',\r\n\t\t\tcolor: '#222222',\r\n\t\t\tpages: 0,\r\n\t\t\tfontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\r\n\t\t\tbgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\taxios.get('/books/' + this.props.link)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\ttext: res.data.toString().split(\"\\n\")\r\n\t\t\t\t}, () => this.showBook() )\r\n\t\t\t})\r\n\t}\r\n\r\n\tconsoleState = () =>{\r\n\t\tconsole.log(this.state);\r\n\t}\r\n\r\n\topenSettings = (value) =>{\r\n\t\tthis.setState({\r\n\t\t\t[value]: !this.state[value]\r\n\t\t} )\r\n\t}\r\n\r\n\tsplitIntoPages = () =>{\r\n\t\tlet text = this.state.text;\r\n\t\tlet pagesArray = []; let indexArray = [];\r\n\t\tlet value = 1600 / this.state.lineHeight.slice(0, -2);\r\n\t\tlet pages = Math.ceil(text.length / value);\r\n    \tlet currentMin = 0;\r\n    \tlet currentMax = 50;\r\n    \tfor (var i = 0; i < pages; i++) {\r\n    \t\tpagesArray.push(text.slice(currentMin,currentMax));\r\n    \t\tcurrentMin = currentMin + 50;\r\n    \t\tcurrentMax = currentMax + 50;\r\n    \t}\r\n    \tfor (var i = 0; i < pages; i++) {\r\n    \t\tindexArray.push(i);\r\n    \t}\r\n    \tthis.setState({ pages: pagesArray, pageIndexes: indexArray, currentPage: pagesArray[0] });\r\n\t}\r\n\r\n    prevButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages;\r\n      if(currentPageId > 0){\r\n      \tcurrentPageId--;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop() )\r\n    }\r\n\r\n    nextButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages.slice();\r\n      if(currentPageId < pages.length - 1){\r\n      \tcurrentPageId++;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    }   \r\n\r\n    selectPage = (e) => {\r\n    \tlet pages = this.state.pages.slice();\r\n    \tlet currentPageId = e.target.value - 1;\r\n    \tlet currentPage = pages[currentPageId];\r\n    \tthis.setState({\r\n    \t\tcurrentPageId, currentPage \r\n    \t}) \r\n    } \r\n\r\n\tshowBook = () =>{\r\n\t\tthis.splitIntoPages();\r\n\t\tthis.setState({ loaded: true })\r\n\t}\r\n\r\n\tcallbackCloseModal = (value) =>{\r\n\t\tthis.setState({[value]: !this.state[value]})\r\n\t}\r\n\r\n\tcallbackChangeFont = (fontSize) =>{\r\n\t\tthis.setState({ fontSize: fontSize + 'px' })\r\n\t}\r\n\r\n\tcallbackChangeFontFamily = (fontFamily) =>{\r\n\t\tthis.setState({ fontFamily })\r\n\t}\r\n\r\n\tcallbackChangeLineHeight = (lineHeight) =>{\r\n\t\tthis.setState({ lineHeight: lineHeight + 'px' })\r\n\t}\r\n\r\n\tcallbackChangeFontWeight = (fontWeight) =>{\r\n\t\tthis.setState({ fontWeight })\r\n\t}\r\n\r\n\tcallbackChangeFontColor = (color) =>{\r\n\t\tthis.setState({ color })\r\n\t}\r\n\r\n\tcallbackChangeBackgroundColor = (backgroundColor) =>{\r\n\t\tthis.setState({ backgroundColor })\r\n\t}\r\n\r\n\tcallbackChangeFontState = (fontState) =>{\r\n\t\tthis.setState({ fontState })\r\n\t}\r\n\r\n\tcallbackChangeBgState = (bgState) =>{\r\n\t\tthis.setState({ bgState })\r\n\t}\t\r\n\r\n\tchangePage = (e) =>{\r\n      let currentPageId = Number(e.target.value);\r\n      console.log(currentPageId);\r\n      let pages = this.state.pages;\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId, currentPage\r\n      }) \t\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t  return (\r\n\t  \t<Fragment>\r\n\t  \t\t{this.state.settingsFont? <SettingsFont value = {this.state.fontSize}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tfontFamily = {this.state.fontFamily}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tlineHeight = {this.state.lineHeight}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tfontWeight = {this.state.fontWeight}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tcallbackModal = {this.callbackCloseModal} \r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeFont={this.callbackChangeFont}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeFontFamily={this.callbackChangeFontFamily}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeLineHeight={this.callbackChangeLineHeight}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeFontWeight={this.callbackChangeFontWeight} /> : null }\r\n\t  \t\t{this.state.settingsPalette ? <SettingsPalette\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tcolor = {this.state.color}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor= {this.state.backgroundColor} \r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tfontState = {this.state.fontState}\r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tbgState = {this.state.bgState}\t  \t\t \r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tcallbackModal = {this.callbackCloseModal} \r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeFontColor={this.callbackChangeFontColor} \r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeBackgroundColor={this.callbackChangeBackgroundColor} \r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeFontState= {this.callbackChangeFontState} \r\n\t  \t\t\t\t\t\t\t\t\t\t\t\tchangeBgState = {this.callbackChangeBgState}/> : null }\r\n\t  \t\t{this.state.settingsVisible ? null :\r\n\t\t  \t\t<div className=\"main-container\">\r\n\t\t\t  \t\t<div className=\"container\">\r\n\t\t\t  \t\t\t<div className=\"row\">\r\n\t\t\t  \t\t\t\t<div className=\"col-md-12 inner-book\">\r\n\t\t\t  \t\t\t\t\t{this.state.loaded ?\r\n\t\t\t\t\t\t\t\t<div className=\"single-book-content\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"book-settings-panel\" style={{ backgroundColor: this.state.backgroundColor, color: this.state.color }}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"settings-block settings-close\" title=\"Закрыть\" onClick={this.props.closeBook} >\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"book-nav-panel\" >\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"nav-progress-bar\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input  type=\"range\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.currentPageId} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmax={this.state.pages.length - 1} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.changePage} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"nav-pagination\">{this.state.currentPageId + 1} / {this.state.pages.length}</div>\t \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"nav-buttons\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"nav-wrapper\" onClick={this.prevButton}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span ><i className=\"fas fa-arrow-left\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"nav-wrapper\" onClick={this.nextButton}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span ><i className=\"fas fa-arrow-right\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"settings-block\" title=\"Change font\" onClick={this.openSettings.bind(this, 'settingsFont')} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-font\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"settings-block\" title=\"Change palette\" onClick={this.openSettings.bind(this, 'settingsPalette')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-palette\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"single-book-text active-book-text\" style={{ color: this.state.color, backgroundColor: this.state.backgroundColor }} >\r\n\t\t\t\t\t\t\t\t\t\t<h2>{this.props.title}</h2>\r\n\t\t\t\t\t\t\t\t\t\t<h5>By: {this.props.author}</h5>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"single-text-main\" style={{ lineHeight: this.state.lineHeight,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   fontWeight: this.state.fontWeight, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   fontSize: this.state.fontSize, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   fontFamily: this.state.fontFamily }} >{this.state.currentPage.map((item,index) => <p key={index}>{item}</p> )}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"book-nav-panel\" >\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"nav-progress-bar\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input  type=\"range\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.currentPageId - 1} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmax={this.state.pages.length} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.changePage} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"nav-pagination\">{this.state.currentPageId + 1} / {this.state.pages.length}</div>\t \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"nav-buttons\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"nav-wrapper\" onClick={this.prevButton}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span ><i className=\"fas fa-arrow-left\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"nav-wrapper\" onClick={this.nextButton}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span ><i className=\"fas fa-arrow-right\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"settings-block\" title=\"Change font\" onClick={this.openSettings.bind(this, 'settingsFont')} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-font\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"settings-block\" title=\"Change palette\" onClick={this.openSettings.bind(this, 'settingsPalette')}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-palette\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t: <div className=\"single-book-fetching\">Loading...</div>}\r\n\t\t\t  \t\t\t\t</div>\r\n\t\t\t  \t\t\t</div>\r\n\t\t\t  \t\t</div>\t  \t\t\t\r\n\t\t  \t\t</div>\r\n\t\t\t}\r\n\t  \t</Fragment>\r\n\t  );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default ActiveBook;\r\n","import React, {Component, Fragment} from 'react';\r\nimport SidebarMenu from './SidebarMenu';\r\nimport SingleBook from './SingleBook';\r\nimport ActiveBook from './ActiveBook';\r\nimport axios from 'axios'; \r\n\r\nclass Books extends Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tbooks: [],\r\n\t\t\tfilteredBooks: [],\r\n\t\t\tactiveBookVisible: false,\r\n\t\t\tsettingsVisible: false,\r\n\t\t\tactiveId: null,\r\n\t\t\tactiveLink: '',\r\n\t\t\tisTitleAscending: true,\r\n\t\t\tisRatingAscending: true,\r\n\t\t\tisYearAscending: true,\r\n\t\t\tisAuthorAscending: true,\r\n\t\t\tisDateAscending: true,\r\n\t\t\tfilters: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t    axios.get('/books.json')\r\n\t      .then(res => {\r\n\t        this.setState({ books: res.data, \r\n\t        \t\t\t\tallBooks: res.data, \r\n\t        \t\t\t\tfilteredBooks: res.data });\r\n\t      }) \t\t\r\n\t}\r\n\r\n\tconsoleParams = () =>{\r\n\t\tconsole.log(this.state);\r\n\t}\r\n\r\n  sortByYear = () =>{\r\n  \tlet books = this.state.books.slice(); \r\n  \t\tif (this.state.isYearAscending) {\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => (a.year - b.year)) })\r\n  \t\t}\r\n  \t\telse{\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => (b.year - a.year)) })\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tbooks,\r\n  \t\t\tisYearAscending: !this.state.isYearAscending\r\n  \t\t})\r\n  }\r\n\r\n  sortByRating = () =>{\r\n  \tlet books = this.state.books.slice(); \r\n  \t\tif (this.state.isRatingAscending) {\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => (a.rating - b.rating)) })\r\n  \t\t}\r\n  \t\telse{\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => (b.rating - a.rating)) })\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tbooks,\r\n  \t\t\tisRatingAscending: !this.state.isRatingAscending\r\n  \t\t})\r\n  }  \r\n\r\n  sortByPopularity = () =>{\r\n  \tlet books = this.state.books.slice(); \r\n  \t\tif (this.state.isPopularityAscending) {\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => (a.views - b.views)) })\r\n  \t\t}\r\n  \t\telse{\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => (b.views - a.views)) })\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tbooks,\r\n  \t\t\tisPopularityAscending: !this.state.isPopularityAscending\r\n  \t\t})\r\n  } \r\n\r\n  sortByAuthor = () =>{\r\n  \tconsole.log(\"fired\");\r\n  \tlet books = this.state.books.slice(); \r\n  \t\tif (this.state.isAuthorAscending) {\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => a.author.localeCompare(b.author)) })\r\n  \t\t}\r\n  \t\telse{\r\n  \t\t\tthis.setState(prevState => { books.sort((a,b) => b.author.localeCompare(a.author)) })\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tbooks,\r\n  \t\t\tisAuthorAscending: !this.state.isAuthorAscending\r\n  \t\t})\r\n  }  \r\n\r\n\tsortByTitle= () =>{\r\n\t\tlet books = this.state.books.slice();\r\n\t\tif(this.state.isTitleAscending){\r\n\t\t\tthis.setState(prevState => {books.sort((a,b) => a.title.localeCompare(b.title)) });\r\n\t\t} else {\r\n\t\t\tthis.setState(prevState => {books.sort((a,b) => b.title.localeCompare(a.title)) });\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisTitleAscending: !this.state.isTitleAscending,\r\n\t\t\tbooks,\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tsortByDate = () => {\r\n\t    const books = this.state.books.slice();\r\n\t    if(this.state.isDateAscending){\r\n\t    \tthis.setState(prevState => { books.sort((a,b) => new Date(a.date) - new Date(b.date) ) })\r\n\t    }\r\n\t    else{\r\n\t        this.setState(prevState => { books.sort((a,b) => new Date(b.date) - new Date(a.date) ) })      \r\n\t    }\r\n\t    this.setState({\r\n\t      isDateAscending: !this.state.isDateAscending,\r\n\t      books\r\n\t    })\r\n\t} \t\t\r\n\r\n\tfilterSize = (value) =>{\r\n\t\tlet books = this.state.books.slice();\r\n\t\tbooks = books.filter(e => e.length > 50000);\r\n\t\tthis.setState({ books })\r\n\t}\r\n\r\n\tcallbackSortMenu = (value) =>{\r\n\t\tif (value === 'year') {\r\n\t\t\tthis.sortByYear();\r\n\t\t}\r\n\t\telse if(value === 'rating'){\r\n\t\t\tthis.sortByRating();\r\n\t\t}\r\n\t\telse if(value === 'title'){\r\n\t\t\tthis.sortByTitle();\r\n\t\t}\r\n\t\telse if(value === 'date'){\r\n\t\t\tthis.sortByDate()\r\n\t\t}\t\t\r\n\t\telse if(value === 'views'){\r\n\t\t\tthis.sortByPopularity();\r\n\t\t}\r\n\t\telse if(value === 'author'){\r\n\t\t\tthis.sortByAuthor();\r\n\t\t}\r\n\t}\r\n\r\n\tcallbackRatingMenu = (value) =>{\r\n\t\tlet books = this.state.allBooks.slice();\r\n\t\tif (value === 'G') {\r\n\t\t\tbooks = books.filter(e => e.age_restriction === 'General audiences');\r\n\t\t}\r\n\t\telse if(value ==='T'){\r\n\t\t\tbooks = books.filter(e => e.age_restriction === 'Teen');\r\n\t\t}\r\n\t\telse if(value ==='E'){\r\n\t\t\tbooks = books.filter(e => e.age_restriction === 'Explicit');\r\n\t\t}\r\n\t\telse if(value ==='M'){\r\n\t\t\tbooks = books.filter(e => e.age_restriction === 'Mature');\r\n\t\t}\t\t\r\n\t\tthis.setState({books})\t\t\r\n\t}\r\n\r\n\tcallbackSizeMenu = (value) =>{\r\n\t\tlet books = this.state.allBooks.slice();\r\n\t\tif (value === 'short') {\r\n\t\t\tbooks = books.filter(e => e.length < 10000);\r\n\t\t}\r\n\t\telse if (value === 'medium') {\r\n\t\t\tbooks = books.filter(e => e.length >= 10000 && e.length <= 50000);\r\n\t\t}\r\n\t\telse if(value === 'long') {\r\n\t\t\tbooks = books.filter(e => e.length > 50000);\r\n\t\t}\r\n\t\telse{\r\n\r\n\t\t}\r\n\t\tthis.setState( {books })\r\n\t}\r\n\r\n\tcallbackCheckboxMenu = (value, state) =>{\r\n\t\tlet filters = this.state.filters;\r\n\t\tlet books = this.state.allBooks.slice();\r\n\t\tif (state) {\r\n\t\t\tfilters.push(value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfilters = filters.filter(e => e !== value)\r\n\t\t}\r\n\t\tfor (var i = 0; i < filters.length; i++) {\r\n\t\t\tbooks = books.filter(e => e.genre.includes(filters[i]) === true )\r\n\t\t}\r\n\t\tthis.setState({filters, books})\r\n\t}\t\r\n\r\n\tcallbackOpenBook = (id, link, title, author) =>{\r\n\t\tthis.setState({\r\n\t\t\tactiveBookVisible: !this.state.activeBookVisible,\r\n\t\t\tactiveId: id,\r\n\t\t\tactiveLink: link,\r\n\t\t\tactiveTitle: title,\r\n\t\t\tactiveAuthor: author\r\n\t\t})\r\n\t}\r\n\r\n\tcallbackCloseBook = () =>{\r\n\t\tthis.setState({ activeBookVisible: !this.state.activeBookVisible })\r\n\t}\t\r\n\r\n\trender(){\r\n\t  return (\r\n\t  \t<Fragment>\r\n\t\t  \t{this.state.activeBookVisible ? \r\n\t\t  \t\t<ActiveBook id = {this.state.activeId} \r\n\t\t  \t\t\t\t\tlink = {this.state.activeLink}\r\n\t\t  \t\t\t\t\ttitle = {this.state.activeTitle}\r\n\t\t  \t\t\t\t\tauthor = {this.state.activeAuthor}\r\n\t\t  \t\t\t\t\tcloseBook = {this.callbackCloseBook} />\r\n\t\t  \t : null}\r\n\t\t  \t {this.state.activeBookVisible ? null : \r\n\t\t\t\t<div className=\"container container-wrap\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-lg-3 col-sm-12 col-xl-3 col-xs-12\">\r\n\t\t\t\t\t\t\t<SidebarMenu  callbackSort = {this.callbackSortMenu}\r\n\t\t\t\t\t\t\tcallbackRating = {this.callbackRatingMenu}\r\n\t\t\t\t\t\t\tcallbackSize = {this.callbackSizeMenu}\r\n\t\t\t\t\t\t\tcallbackCheckbox = {this.callbackCheckboxMenu} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-lg-9 col-sm-12 col-xl-9 col-xs-12\">\r\n\t\t\t\t\t\t{this.state.books.length ? \r\n\t\t\t\t\t\t\t<div className=\"container books-container\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t{this.state.books.map((book,index) => \r\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"single-book-wrapper col-md-6 col-lg-6 col-xl-4 col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t<SingleBook pages={book.page_number} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={book.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlink={book.link} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tauthor={book.author} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={book.title} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={book.image}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsummary={book.content}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgenre={book.genre}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tviews={book.views}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trating={book.rating}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\topenBook= {this.callbackOpenBook}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <div className=\"books-preloader\">Wait a second</div> }\r\n\r\n\t\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t  \t}\r\n\t\t</Fragment>\r\n\t  );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default Books;\r\n","let initialState = {\r\n\t\"totalScore\": 0,\r\n\t\"todayScore\": 0,\r\n\t\"exercisesComplete\": 0,\r\n\t\"testsComplete\": 0,\r\n\t\"wordsTotal\": 0,\r\n\t\"wordsStudied\": 0,\r\n\t\"wordsRemaining\": 0,\r\n\t\"vocabModalOpen\": false,\r\n\t\"selectedVocabWord\": null\t\t\r\n};\r\n\r\nlet reducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_TOTAL_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalScore: action.payload\r\n\t\t\t}\r\n\t\tcase 'UPDATE_TODAY_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodayScore: action.payload }\r\n\t\tcase 'UPDATE_EXERCISES_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texercisesComplete: action.payload }\r\n\t\tcase 'UPDATE_TESTS_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttestsComplete: action.payload }\r\n\t\tcase 'UPDATE_WORDS_TOTAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsTotal: action.payload }\r\n\t\tcase 'UPDATE_WORDS_REMAINING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsRemaining: action.payload }\r\n\t\tcase 'UPDATE_WORDS_STUDIED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsStudied: action.payload }\r\n\t\tcase 'CHANGE_COLOR_SCHEME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorScheme: action.payload }\r\n\t\tcase 'CHANGE_SOUND_VOLUME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsoundVolume: action.payload }\r\n\t\tcase 'TOGGLE_VOCAB_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabModalOpen: action.payload }\r\n\t\tcase 'SELECT_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedVocabWord: action.payload }\t\t\t\t\t\r\n\t\tcase 'VOICE_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabWord: action.payload }\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default reducer;","import {combineReducers} from 'redux';\r\nimport reducer from './index';\r\n\r\nlet createRootReducer = () => combineReducers({\r\n\treducer\r\n})\r\n\r\nexport default createRootReducer;","import {createStore} from 'redux';\r\nimport createRootReducer from '../reducers/rootReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default function configureStore(){\r\n\tlet store = createStore(createRootReducer(), initialState);\r\n\treturn store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Vocabulary from './Vocabulary';\r\nimport GrammarList from './GrammarList'\r\nimport Statistics from './Statistics'\r\nimport CoursesList from './CoursesList'\r\nimport Training from './Training'\r\nimport Main from './Main'\r\nimport CoursesSimple from './CoursesSimple'\r\nimport ConstructWord from './ConstructWord'\r\nimport Proverbs from './Proverbs'\r\nimport Cards from './Cards'\r\nimport Audio from './Audio'\r\nimport EnglishToRussian from './EnglishToRussian'\r\nimport RussianToEnglish from './RussianToEnglish'\r\nimport Videos from './Videos'\r\nimport Fragments from './Fragments'\r\nimport Pronunciation from './Pronunciation'\r\nimport RecreateText from './RecreateText'\r\nimport RecreateAudioText from './RecreateAudioText'\r\nimport InsertSpaces from './InsertSpaces'\r\nimport TED from './videos/TED'\r\nimport EngVid from './videos/EngVid'\r\nimport BritishCouncil from './videos/BritishCouncil'\r\nimport Khan from './videos/Khan'\r\nimport Coursera from './videos/Coursera'\r\nimport JimmyFallon from './videos/JimmyFallon'\r\nimport JimmyKimmel from './videos/JimmyKimmel'\r\nimport ConanOBrien from './videos/ConanOBrien'\r\nimport Ellen from './videos/Ellen'\r\nimport JamesCorden from './videos/JamesCorden'\r\nimport SethMeyers from './videos/SethMeyers'\r\nimport StephenColbert from './videos/StephenColbert'\r\nimport TextsList from './TextsList'\r\nimport Decks from './Decks'\r\nimport AudioList from './AudioList'\r\nimport Settings from './Settings'\r\nimport BookList from './BookList'\r\nimport Materials from './Materials'\r\nimport Example from './Example'\r\nimport Rightwrong from './Rightwrong'\r\nimport GrammarItem from './grammar/GrammarItem'\r\nimport GrammarPresentSimple from './grammar/GrammarPresentSimple'\r\nimport GrammarPastSimple from './grammar/GrammarPastSimple'\r\nimport GrammarFutureSimple from './grammar/GrammarFutureSimple'\r\nimport GrammarPresentContinuous from './grammar/GrammarPresentContinuous'\r\nimport GrammarPastContinuous from './grammar/GrammarPastContinuous'\r\nimport GrammarFutureContinuous from './grammar/GrammarFutureContinuous'\r\nimport GrammarPresentPerfect from './grammar/GrammarPresentPerfect'\r\nimport GrammarFuturePerfect from './grammar/GrammarFuturePerfect'\r\nimport GrammarPastPerfect from './grammar/GrammarPastPerfect'\r\nimport GrammarPresentPerfectContinuous from './grammar/GrammarPresentPerfectContinuous'\r\nimport GrammarPastPerfectContinuous from './grammar/GrammarPastPerfectContinuous'\r\nimport GrammarFuturePerfectContinuous from './grammar/GrammarFuturePerfectContinuous'\r\nimport AudioPlayer from './AudioPlayer'\r\nimport Books from './books/Books'\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport configureStore from \"./store/index\";\r\n\r\nlet initialState = [];\r\nlet store = configureStore(initialState);\r\n\r\n\r\nReactDOM.render(  \r\n\t<Provider store={store}>\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<div className=\"router-wrapper\">\r\n\t\t\t\t<Route exact path=\"/\" component={Main}/>\r\n\t\t\t\t<Route path=\"/newbooks\" component={Books} />\r\n\t\t\t\t<Route path=\"/vocabulary\" component={Vocabulary} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t\t<Route path=\"/grammar\" component={GrammarList} />\r\n\t\t\t\t<Route path=\"/materials\" component={Materials} />\r\n\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\r\n\t\t\t\t<Route path=\"/courses\" component={CoursesList} />\r\n\t\t\t\t<Route path=\"/coursessimple\" component={CoursesSimple} />\r\n\t\t\t\t<Route path=\"/training\" component={Training} />\t\t  \r\n\t\t\t\t<Route path=\"/cards\" component={Cards} />\r\n\t\t\t\t<Route path=\"/rightwrong\" component={Rightwrong} />\t\t\r\n\t\t\t\t<Route path=\"/constructword\" component={ConstructWord} />\r\n\t\t\t\t<Route path=\"/proverbs\" component={Proverbs}/>\r\n\t\t\t\t<Route path=\"/audio\" component={Audio} />\r\n\t\t\t\t<Route path=\"/pronunciation\" component={Pronunciation} />\r\n\t\t\t\t<Route path=\"/recreatetext\" component={RecreateText} />\r\n\t\t\t\t<Route path=\"/recreateaudiotext\" component={RecreateAudioText} />\r\n\t\t\t\t<Route path=\"/insertspaces\" component={InsertSpaces} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/englishtorussian\" component={EnglishToRussian} />\r\n\t\t\t\t<Route path=\"/russiantoenglish\" component={RussianToEnglish} />\r\n\t\t\t\t<Route path=\"/videos\" component={Videos} />\r\n\t\t\t\t<Route path=\"/fragments\" component={Fragments} />\r\n\t\t\t\t<Route path=\"/decks\" component={Decks} />\t\t\r\n\t\t\t\t<Route path=\"/ted\" component={TED} />\r\n\t\t\t\t<Route path=\"/engvideo\" component={EngVid} />\r\n\t\t\t\t<Route path=\"/britishcouncil\" component={BritishCouncil} />\r\n\t\t\t\t<Route path=\"/khan\" component={Khan} />\r\n\t\t\t\t<Route path=\"/conanobrien\" component={ConanOBrien} />\r\n\t\t\t\t<Route path=\"/jimmyfallon\" component={JimmyFallon} />\r\n\t\t\t\t<Route path=\"/jimmykimmel\" component={JimmyKimmel} />\r\n\t\t\t\t<Route path=\"/coursera\" component={Coursera} />\r\n\t\t\t\t<Route path=\"/ellen\" component={Ellen} />\r\n\t\t\t\t<Route path=\"/stephencolbert\" component={StephenColbert} />\r\n\t\t\t\t<Route path=\"/jamescorden\" component={JamesCorden} />\r\n\t\t\t\t<Route path=\"/sethmeyers\" component={SethMeyers} />\r\n\t\t\t\t<Route path=\"/texts\" component={TextsList} />\r\n\t\t\t\t<Route path=\"/books\" component={BookList} />\t\t\r\n\t\t\t\t<Route path=\"/tests\" component={Example} />\r\n\t\t\t\t<Route path=\"/audiolist\" component={AudioList} />\r\n\t\t\t\t<Route path=\"/grammarpresentsimple\" component={GrammarPresentSimple} />\r\n\t\t\t\t<Route path=\"/grammarpastsimple\" component={GrammarPastSimple} />\r\n\t\t\t\t<Route path=\"/grammarfuturesimple\" component={GrammarFutureSimple} />\r\n\t\t\t\t<Route path=\"/grammarpresentcontinuous\" component={GrammarPresentContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastcontinuous\" component={GrammarPastContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfuturecontinuous\" component={GrammarFutureContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfect\" component={GrammarPresentPerfect} />\r\n\t\t\t\t<Route path=\"/grammarpastperfect\" component={GrammarPastPerfect} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfect\" component={GrammarFuturePerfect} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfectcontinuous\" component={GrammarPresentPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastperfectcontinuous\" component={GrammarPastPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfectcontinuous\" component={GrammarFuturePerfectContinuous} />\r\n\t\t\t\t<Route path=\"/audioplayer\" component={AudioPlayer} />\r\n\t\t\t</div>\r\n\t\t</Router>\t\r\n\t</Provider>, document.getElementById('root'));\r\n\r\n/*\r\n\tconst routes = [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\tcomponent: App\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/grammar',\r\n\t\t\tcomponent: GrammarList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/courses',\r\n\t\t\tcomponent: CoursesList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursessimple',\r\n\t\t\tcomponent: CoursesSimple\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/training',\r\n\t\t\tcomponent: Training\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/constructword',\r\n\t\t\tcomponent: ConstructWord\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/cards',\r\n\t\t\tcomponent: Cards\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/audio',\r\n\t\t\tcomponent: Audio\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/pronunciation',\r\n\t\t\tcomponent: Pronunciation\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/englishtorussian',\r\n\t\t\tcomponent: EnglishToRussian\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/russiantoenglish',\r\n\t\t\tcomponent: RussianToEnglish\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/videos', \r\n\t\t\tcomponent: Videos\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ted', \r\n\t\t\tcomponent: TED\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/engvid', \r\n\t\t\tcomponent: EngVid\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/britishcouncil', \r\n\t\t\tcomponent: BritishCouncil\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/khan', \r\n\t\t\tcomponent: Khan\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/conanobrien', \r\n\t\t\tcomponent: ConanOBrien\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmyfallon', \r\n\t\t\tcomponent: JimmyFallon\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmykimmel', \r\n\t\t\tcomponent: JimmyKimmel\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursera',\r\n\t\t\tcomponent: Coursera\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ellen',\r\n\t\t\tcomponent: Ellen\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/stephencolbert',\r\n\t\t\tcomponent: StephenColbert\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jamescorden',\r\n\t\t\tcomponent: JamesCorden\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/sethmeyers',\r\n\t\t\tcomponent: SethMeyers\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/texts',\r\n\t\t\tcomponent: TextsList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/tests',\r\n\t\t\tcomponent: Example\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t]\r\n\t*/\r\n/*\r\nReactDOM.render(  \r\n  <Router>\r\n\t  <div className=\"router-wrapper\">\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n\t  </div>\r\n  </Router>, document.getElementById('root'));\r\n*/"],"sourceRoot":""}