{"version":3,"sources":["ModalWord.js","actions/index.js","VocabWord.js","VocabSideMenu.js","TopMenu.js","VocabTopMenu.js","Vocabulary.js","SplittedWords.js","GrammarList.js","Statistics.js","CoursesSimpleItem.js","CoursesSimple.js","CoursesMedium.js","CoursesList.js","Training.js","Main.js","ConstructWord.js","Proverbs.js","Cards.js","Audio.js","EnglishToRussian.js","RussianToEnglish.js","Videos.js","Fragments.js","Pronunciation.js","RecreateText.js","RecreateAudioText.js","InsertSpaces.js","videos/TED.js","videos/EngVid.js","videos/BritishCouncil.js","videos/Khan.js","videos/Coursera.js","videos/JimmyFallon.js","videos/JimmyKimmel.js","videos/ConanOBrien.js","videos/Ellen.js","videos/JamesCorden.js","videos/SethMeyers.js","videos/StephenColbert.js","TextsList.js","Decks.js","AudioList.js","Settings.js","BookList.js","Materials.js","Example.js","Rightwrong.js","grammar/GrammarPresentSimple.js","grammar/GrammarItem.js","grammar/GrammarPastSimple.js","grammar/GrammarFutureSimple.js","grammar/GrammarPresentContinuous.js","grammar/GrammarPastContinuous.js","grammar/GrammarFutureContinuous.js","grammar/GrammarPresentPerfect.js","grammar/GrammarFuturePerfect.js","grammar/GrammarPastPerfect.js","grammar/GrammarPresentPerfectContinuous.js","grammar/GrammarPastPerfectContinuous.js","grammar/GrammarFuturePerfectContinuous.js","AudioPlayer.js","SelectedBook.js","reducers/index.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["Component","actions","updateTotalScore","score","type","payload","updateTodayScore","updateExerciseScore","number","updateTestsScore","updateWordsTotal","updateWordsRemaining","updateWordsStudied","changeColorScheme","val","changeSoundVolume","toggleVocabModal","selectVocabWord","word","voiceVocabWord","selectBook","book","selectFontSize","fontSize","selectFontFamily","fontFamily","selectFontSpacing","fontSpacing","selectFontWeight","fontWeight","selectFontColor","fontColor","selectBgColor","bgColor","VocabWord","voiceWord","speech","say","openWord","console","log","_this","props","id","this","delete","react_default","a","createElement","List","Item","react","Image","avatar","src","image","Content","className","onClick","bind","Header","as","name","transcription","translation","Button","Group","title","Icon","connect","state","store","reducer","dispatch","bindActionCreators","VocabSideMenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","consoleParams","newItems","items","map","item","i","push","key","text","category","value","setState","options","getUnique","arr","unique","e","final","indexOf","filter","newFunc","slice","newObj","callbackFromParent","handleChange","_ref","consoleProps","_this2","axios","get","then","res","data","Menu","vertical","active","Dropdown","placeholder","fluid","clearable","search","selection","onChange","TopMenu","showModal","isModalVisible","changeLogin","event","inputLogin","target","changePassword","inputPassword","changeMail","inputMail","changeDoublePassword","doublePassword","Link","to","VocabTopMenu","updateSearch","substr","searchFunction","changeNameValue","inputName","changeTranslationValue","inputTranslation","changeMeaningValue","inputMeaning","changeCategoryValue","inputCategory","changeImageValue","inputImage","submitForm","newWords","words","inputStringDate","Date","toUTCString","inputDate","obj","meaning","date","unshift","callbackFromApp","searchFromApp","categories","categoryValue","voiceWordFromModal","sortByName","sortByTranslation","sortByDate","newFunction","Modal","trigger","primary","closeIcon","Form","Field","accept","Input","icon","Vocabulary","loadMore","prev","visible","filteredWords","isOldestFirst","sort","b","localeCompare","splice","findIndex","deleteWord","toggleModal","myCallback","dataFromChild","topMenuCallback","searchCallback","consoleState","vocabModalOpen","query","searchString","handler","assertThisInitialized","_this3","toLowerCase","size","selectedVocabWord","src_TopMenu","src_VocabSideMenu","src_VocabTopMenu","relaxed","index","src_VocabWord","length","SplittedWords","searchForWord","newItem","replace","found","find","x","toggleFoundModal","selected","toggleInputModal","isModalFoundOpen","isModalInputOpen","changeFile","filePath","changeTranslation","changeDefinition","definition","addToWords","transription","fileInputRef","React","createRef","wordsEl","loaded","sentence","splitted","split","defineProperty","content","labelPosition","current","click","ref","hidden","concat","GrammarList","grammar","Table","celled","fixed","Row","columns","HeaderCell","rules","Body","Cell","description","link","Statistics","splitIntoArrays","nameArrays","create","forEach","nameArray","names","keys","values","finalData","tmp","lng","fin","Math","floor","barChartData","getYesterdaysDate","days","dateArray","setDate","getDate","getDay","j","lineChartData","contentArray","areTextsVisible","isMenuVisible","isSingleTextVisible","isResultVisible","isResultWrong","negativeWords","positiveWords","spllittedSentences","reservedSentences","seconds","minutes","secondsRemaining","intervalHandle","wrongIndexes","totalSecondsSpent","secondsSpent","minutesSpent","Card","itemsPerRow","Description","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","stroke","activeDot","r","CoursesSimple","con","headerVisible","updateSentence","targ","textContent","newSentence","visibleSentence","continueTraining","propsToState","exercises","submitAnswer","positiveAnswers","negativeAnswers","correct_answer","correctAnswer","incorrectAnswer","renderArray","currentArray","doubleWords","currentExerciseId","currentId","isFinalVisible","isWordGroupVisible","nextSentence","courses","exerciseId","full_sentence","variants","result","sentenceVisible","course","Meta","time","tasks","mapCourses","arrays","CoursesSimpleItem","exerciseName","exerciseTranslation","CoursesList","extra","BrowserRouter","Route","path","component","CoursesMedium","Training","Main","ConstructWord","setStateOnStart","currentWord","currentFullWord","currentTranslation","currentMeaning","isStarterVisible","isCardVisible","inputValue","wordNameArray","nameArrayId","currentValue","currentImage","areButtonsVisible","isImageVisible","wordId","mistakeCount","animationState","fade","initialLoad","randomNameArray","random","document","body","addEventListener","myHandler","tempParam","checkValue","keyCode","startTraining","wordsLength","_ref2","newWord","currentName","compareWord","currentLetter","btn","Container","Label","onAnimationEnd","readOnly","maxLength","Divider","Message","Proverbs","shuffleArray","negativeProverbs","positiveProverbs","proverbs","currentProverbName","proverb","constructedProverb","isCheckButtonVisible","isDKButtonVisible","isContinueButtonVisible","nameClass","setValue","indexTarget","parentElement","children","previousElementSibling","removeValue","dontKnow","checkProverb","join","el","_ref3","Cards","isButtonVisible","isTranslationVisible","showNavButtons","showContinueButton","renderComponent","checkResponse","Audio","tempSearch","positiveResponse","isInputVisible","isLinkVisible","correctNameVisible","showImage","correctName","correctNameClass","metaClass","EnglishToRussian","flagState","disabled","selectedWord","currentButtonColor","RussianToEnglish","Videos","cons","videos","channelId","video","Fragments","texts","currentTempArray","currentStringArray","currentRandomWord","currentFinalArray","currentRandomArray","currentOneArray","activeInput","activeArray","sortedRandomArray","comparativeRandomArray","fragmentArrayIndexes","rightAnswers","livesArray","setMenuParams","difficulty","selectValue","readMore","buildLives","builtArray","backToTexts","pop","currentFullArray","currentWordArray","currentRandomIndexes","curArr","resetValue","activeTargetTitle","fragmentArray","fragmentDescription","getElementsByClassName","array","element","innerText","submitText","currentSortedArray","count","tryAgain","lives","livesCount","Pronunciation","startListening","submitResponse","objectTranscription","getElementById","positiveSentences","negativeSentences","currentSentence","currentSentenceContent","splittedText","newId","stopListening","callSubmit","resetTranscript","clearTranscription","transcript","newTranscript","substring","currentText","currentTextContent","showSubmitButtons","autostart","browserSupportsSpeechRecognition","recognition","isDeleteVisible","all","spread","textsRes","lang","SpeechRecognition","RecreateText","makeTextsVisible","createMenuItems","splitText","splittedSentenceVisible","startCountDown","tick","clearInterval","timeIsOut","setInterval","onDragStart","draggedItem","dataTransfer","effectAllowed","setData","setDragImage","onDragOver","draggedOverItem","onDragEnd","draggedIdx","checkSentences","splittedSentences","wrongCount","showFinal","selectCategory","menuChange","idx","draggable","RecreateAudioText","createTrack","currentTrack","Howl","html5","volume","audio","playing","playText","play","pause","InsertSpaces","inputContent","newContent","textsLoaded","isTaskStarted","setCaretPosition","ctrl","pos","setSelectionRange","focus","createTextRange","range","collapse","moveEnd","moveStart","select","updateValue","indexOfSpace","newstr","startExercise","TED","handleClick","currentPage","Number","Embed","autoplay","videoId","snippet","thumbnails","high","url","source","EngVid","BritishCouncil","Khan","currentComment","addComment","comments","temp","thumbsUp","likes","thumbsDown","dislikes","author","comment","Coursera","JimmyFallon","JimmyKimmel","ConanOBrien","Ellen","JamesCorden","SethMeyers","StephenColbert","TextsList","activeTargetContent","activeTargetImage","Decks","constructMenu","level","arrayOfButtons","iconsArray","colors","arrayOfColors","allWords","currentWords","currentColor","isDropdownVisible","addToList","addedItems","addedFirst","sortedByTranslationUp","addedUp","sortedByNameUp","deleteItem","deleteAll","contentLoaded","firstResponse","secondResponse","style","backgroundColor","sendWords","float","color","AudioList","categoryArray","startPlayer","currentState","playState","playAudio","currentAudio","backToDecks","Settings","changeColor","colorValue","email","password","colorOptions","BookList","handleCheckChange","isChecked","checked","prevState","checkedItems","set","callFunctions","createMenu","books","genre","bookVal","bookValue","scrollToTop","window","scrollTo","myRef","offsetTop","errors","currentEmail","updateComment","updateName","updateEmail","checkChange","handleRate","rating","maxRating","areBooksVisible","isPreviewVisible","isSingleBookVisible","isBookNavPanelVisible","currentBook","currentPageIndex","currentArrayBooks","currentIndexArray","bookHTML","parsedBook","bookPages","Map","audiobooks","newAudio","currentAudioId","thumbArray","scrollForwardState","scrollBackwardState","currentVolume","currentRange","currentDuration","hours","ind","Rating","onRate","pathname","min","max","step","onInput","setRange","scrollBackward","scrollForward","setVolume","backToBooks","prevButton","nextButton","chapterIndex","downloadBook","renderFirstButton","renderLastButton","Materials","Example","_this$state","getMenuParams","tests","testChange","parentid","getAttribute","currentTest","Array","selectTest","testId","activeTest","testItem","correctResults","areTestsVisible","isSingleTestVisible","backToTests","curIndexTest","curIndexCheckbox","correctAnswers","incorrectAnswers","checkResults","resultsArray","finalResults","isTooltipVisible","boxShadow","totalScore","param","label","Rightwrong","response","GrammarPresentSimple","goBack","fullData","stepId","currentTitle","currentDescription","currentExamples","examples","isBackButtonVisible","newfullData","consoleFunction","main_points","steps","exampleName","exampleTranslation","GrammarPastSimple","GrammarFutureSimple","GrammarPresentContinuos","GrammarPastContinuos","GrammarFutureContinuos","GrammarPresentPerfect","GrammarFuturePerfect","GrammarPastPerfect","GrammarPresentPerfectContinuous","GrammarPastPerfectContinuous","GrammarFuturePerfectContinuous","AudioPlayer","duration","soundVolume","on","decodingFinished","continuePlay","readTags","resetState","progress","currentMinutes","currentSeconds","jsmediatags","read","onSuccess","tag","currentTrackInfo","decodeTrackInfo","onError","error","info","currentTrackPicture","tags","artist","picture","_this$state$currentTr","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","currentTrackTitle","currentTrackArtist","playMusic","interval","startCycle","stop","changeVolume","nextTrack","prevTrack","muteSound","muted","mute","incTime","updateProgress","round","seek","toFixed","setSeek","currentTrackLength","order","tracksVisible","alt","SelectedBook","splitIntoPages","pages","pageIndexes","lineHeight","pagesCount","ceil","currentMin","currentMax","currentPageId","changeFont","isFontModalOpen","isColorModalOpen","changePage","closeModal","changeValue","fontSizeTemp","changeFontFamily","fontFamilyTemp","changeFontWeight","fontWeightTemp","changeLineHeight","lineHeightTemp","applyFontSettings","setFontColor","fontState","currentTarget","activeFontColor","setBgColor","bgState","activeBgColor","applyColorSettings","toggleComments","commentsVisible","settingsFont","SettingsPalette","myHeaders","Headers","append","that","selectedBook","match","params","fetch","arrayBuffer","buffer","TextDecoder","decode","colorScheme","data-index","colorvalue","Fragment","TextArea","initialState","todayScore","exercisesComplete","testsComplete","wordsTotal","wordsStudied","wordsRemaining","arguments","undefined","action","objectSpread","vocabWord","createRootReducer","combineReducers","createStore","ReactDOM","render","es","basename","process","exact","GrammarPresentContinuous","GrammarPastContinuous","GrammarFutureContinuous"],"mappings":"wUAKwBA,oCCiHTC,EAtHD,CACbC,iBAAkB,SAASC,GAC1B,MAAO,CACNC,KAAM,qBACNC,QAASF,IAGXG,iBAAkB,SAASH,GAC1B,MAAO,CACNC,KAAM,qBACNC,QAASF,IAGXI,oBAAqB,SAASC,GAC7B,MAAO,CACNJ,KAAM,4BACNC,QAASG,IAGXC,iBAAkB,SAASD,GAC1B,MAAO,CACNJ,KAAM,wBACNC,QAASG,IAGXE,iBAAkB,SAASF,GAC1B,MAAO,CACNJ,KAAM,qBACNC,QAASG,IAGXG,qBAAsB,SAASH,GAC9B,MAAO,CACNJ,KAAM,yBACNC,QAASG,IAGXI,mBAAoB,SAASJ,GAC5B,MAAO,CACNJ,KAAM,uBACNC,QAASG,IAGXK,kBAAmB,SAASC,GAC3B,MAAO,CACNV,KAAM,sBACNC,QAASS,IAGXC,kBAAmB,SAASD,GAC3B,MAAO,CACNV,KAAM,sBACNC,QAASS,IAGXE,iBAAkB,SAASF,GAC1B,MAAO,CACNV,KAAM,qBACNC,QAASS,IAGXG,gBAAiB,SAASC,GACzB,MAAO,CACNd,KAAM,oBACNC,QAASa,IAGXC,eAAgB,SAASD,GACxB,MAAO,CACNd,KAAM,mBACNC,QAASa,IAGXE,WAAY,SAASC,GACpB,MAAO,CACNjB,KAAM,cACNC,QAASgB,IAGXC,eAAgB,SAASC,GACxB,MAAO,CACNnB,KAAM,mBACNC,QAASkB,IAGXC,iBAAkB,SAASC,GAC1B,MAAO,CACNrB,KAAM,qBACNC,QAASoB,IAGXC,kBAAmB,SAASC,GAC3B,MAAO,CACNvB,KAAM,sBACNC,QAASsB,IAGXC,iBAAkB,SAASC,GAC1B,MAAO,CACNzB,KAAM,qBACNC,QAASwB,IAGXC,gBAAiB,SAASC,GACzB,MAAO,CACN3B,KAAM,oBACNC,QAAS0B,IAGXC,cAAe,SAASC,GACvB,MAAO,CACN7B,KAAM,kBACNC,QAAS4B,aCpGNC,6MAQHC,UAAY,SAACjB,GACVkB,IAAOC,IAAInB,MAGdoB,SAAW,SAACpB,GACXqB,QAAQC,IAAItB,GACZuB,EAAKC,MAAMzC,QAAQgB,gBAAgBC,GACnCuB,EAAKC,MAAMzC,QAAQe,kBAAiB,0EAZ/B2B,GACLC,KAAKF,MAAMG,OAAOF,oCAgBlB,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,KACEJ,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,QAAM,EAACC,IAAKV,KAAKF,MAAMa,QAC9BT,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,CAAcC,UAAU,eAAeC,QAASd,KAAKN,SAASqB,KAAKf,KAAMA,KAAKF,MAAMxB,OAClF4B,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KAAKjB,KAAKF,MAAMoB,KAAhC,MAAyClB,KAAKF,MAAMqB,cAApD,MAAsEnB,KAAKF,MAAMsB,aAI1D,OAI7BlB,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACMV,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,KACEpB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKT,UAAUwB,KAAKf,KAAMA,KAAKF,MAAMoB,MAAOL,UAAU,oBAAoBU,MAAM,oDAC5FrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,sBAEhBhB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKC,OAAOc,KAAKf,KAAMA,KAAKF,MAAMC,IAAKc,UAAU,oBAAoBU,MAAM,8CACtFrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,6CAvCL9D,aAyDTqE,kBATf,SAAyBC,GACvB,MAAO,CAACC,MAAOD,EAAME,UAGvB,SAA4BC,GACxB,MAAO,CAAExE,QAASyE,YAAmBzE,EAASwE,KAInCJ,CAA6CnC,qBCmB7CyC,cAhFb,SAAAA,EAAYjC,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA+B,IAChBlC,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAApC,KAAMF,KAkBPuC,cAAgB,WACf,IAAIC,EAAW,GACfzC,EAAK6B,MAAMa,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACLJ,EAASK,KAAK,CACVC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAKK,SACXC,MAAON,EAAKK,aAEhCjD,EAAKmD,SAAS,CACbC,QAASX,GACP,kBAAMzC,EAAKqD,eA7BErD,EAgCjBqD,UAAY,WACX,IAAIC,EAAMtD,EAAK6B,MAAMuB,QAEdG,EAASD,EACVX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACZb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACbC,QAASG,KAxCKvD,EA6ChB4D,QAAU,WACR,IAAIR,EAAUpD,EAAK6B,MAAMuB,QAAQS,QAC7BX,EAAQlD,EAAK6B,MAAMqB,MACnBY,EAAS,GACbA,EAAM,MAAYZ,EAClBY,EAAM,QAAcV,EACpBpD,EAAKC,MAAM8D,mBAAmBD,IAnDhB9D,EAsDhBgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAK4D,aAtDrD5D,EAwDhBkE,aAAe,WACbpE,QAAQC,IAAIC,EAAKC,OACjBH,QAAQC,IAAIC,EAAK6B,QAxDnB7B,EAAK6B,MAAQ,CACVa,MAAO,GACPU,QAAS,GACTF,MAAO,MALMlD,2FAUW,IAAAmE,EAAAhE,KAE1BiE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GACJ,IAAM7B,EAAQ6B,EAAIC,KAClBL,EAAKhB,SAAS,CAAET,SAAS,kBAAMyB,EAAK3B,qDA+CzC,OACEnC,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,UAAQ,EAAC1D,UAAU,aACvBX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,QAAQsD,QAAM,GAC5BtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAUC,YAAY,0GACZC,OAAK,EACLC,WAAS,EACT7B,MAAO/C,KAAK0B,MAAMqB,MAClB8B,QAAM,EACNjC,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB+E,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,mBA3EZ7F,sBCgJb4H,cAhJb,SAAAA,EAAYlF,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAgF,IAChBnF,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAgD,GAAA5C,KAAApC,KAAMF,KAURmF,UAAY,WACR,IAAIvD,EAAQ7B,EAAK6B,MAAMwD,eACvBrF,EAAKmD,SAAS,CACZkC,gBAAiBxD,GACjB,kBAAM/B,QAAQC,IAAIC,EAAK6B,MAAMwD,mBAfjBrF,EAkBhBsF,YAAc,SAACC,GACbvF,EAAKmD,SAAS,CACZqC,WAAYD,EAAME,OAAOvC,SApBblD,EAwBhB0F,eAAiB,SAACH,GAChBvF,EAAKmD,SAAS,CACZwC,cAAeJ,EAAME,OAAOvC,SA1BhBlD,EA8BhB4F,WAAa,SAACL,GACZvF,EAAKmD,SAAS,CACZ0C,UAAWN,EAAME,OAAOvC,SAhCZlD,EAoChB8F,qBAAuB,SAACP,GACtBvF,EAAKmD,SAAS,CACZ4C,eAAgBR,EAAME,OAAOvC,SApCjClD,EAAK6B,MAAQ,CACXwD,gBAAgB,EAChBG,WAAY,GACZG,cAAe,GACfI,eAAgB,GAChBF,UAAW,IAPG7F,wEA2ChB,OACIK,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,YACdX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,KAAT,+CAEF5F,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,eAAT,+CAEF5F,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,iEAEF5F,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,aAAT,iEAEF5F,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,UAAT,mCAEF5F,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,cAAT,2DAEF5F,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,UAAT,2CAlEU1I,+BCqKP2I,cAlKb,SAAAA,EAAYjG,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA+F,IAChBlG,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA+D,GAAA3D,KAAApC,KAAMF,KAuBRiE,aAAe,WACbpE,QAAQC,IAAIC,EAAKC,QAzBDD,EA4BhBmG,aAAe,SAACZ,GACdvF,EAAKmD,SAAS,CAAC6B,OAAQO,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,KAAM,kBAAKpG,EAAKqG,oBA7BrDrG,EAiChBsG,gBAAkB,SAACf,GACjBvF,EAAKmD,SAAS,CACZoD,UAAWhB,EAAME,OAAOvC,SAnCZlD,EAuChBwG,uBAAyB,SAACjB,GACxBvF,EAAKmD,SAAS,CACZsD,iBAAkBlB,EAAME,OAAOvC,SAzCnBlD,EA6ChB0G,mBAAqB,SAACnB,GACpBvF,EAAKmD,SAAS,CACZwD,aAAcpB,EAAME,OAAOvC,SA/CflD,EAmDhB4G,oBAAsB,SAACrB,GACrBvF,EAAKmD,SAAS,CACZ0D,cAAetB,EAAME,OAAOvC,SArDhBlD,EAyDhB8G,iBAAmB,SAACvB,GAClBvF,EAAKmD,SAAS,CACZ4D,WAAYxB,EAAME,OAAOvC,SA3DblD,EA+DhBgH,WAAa,SAACxD,GACd,IAAIyD,EAAWjH,EAAKC,MAAMiH,MAAMrD,QAC1B0C,EAAYvG,EAAK6B,MAAM0E,UACvBE,EAAmBzG,EAAK6B,MAAM4E,iBAC9BE,EAAe3G,EAAK6B,MAAM8E,aAC1BE,EAAgB7G,EAAK6B,MAAMgF,cAC3BM,GAAkB,IAAIC,MAAOC,cACnCvH,QAAQC,IAAIoH,GACZ,IAAMG,EAAY,IAAIF,KAAKD,GAGrBI,EAAK,CAACrH,GADI,GAEVmB,KAAQkF,EACRhF,YAAekF,EACfe,QAAWb,EACX7F,MANad,EAAK6B,MAAMkF,WAOxBU,KAAQH,EACRrE,SAAY4D,GAGlBI,EAASS,QAAQH,GAEfvH,EAAKmD,SAAS,CAAE+D,MAAOD,GAAW,kBAAMnH,QAAQC,IAAIC,EAAK6B,MAAMqF,SAC/DlH,EAAKmD,SAAS,CACdoD,UAAW,GACXE,iBAAkB,GAClBE,aAAc,GACdW,UAAW,GACXT,cAAe,GACfE,WAAY,IACT,kBAAM/G,EAAK4D,aA7FA5D,EAgGhB4D,QAAU,WACR,IAAIsD,EAAQlH,EAAK6B,MAAMqF,MACvBlH,EAAKC,MAAM0H,gBAAgBT,IAlGblH,EAqGhBqG,eAAiB,WACf,IAAIrB,EAAShF,EAAK6B,MAAMmD,OACxBhF,EAAKC,MAAM2H,cAAc5C,IArG3BhF,EAAK6B,MAAQ,CACXqF,MAAO,GACPlC,OAAQ,GACRuB,UAAW,GACXE,iBAAkB,GAClBE,aAAc,GACdW,UAAW,GACXT,cAAe,GACfE,WAAY,GACZc,WAAY,GACZC,cAAe,OAEjB9H,EAAKI,OAASJ,EAAKI,OACnBJ,EAAKN,UAAYM,EAAKN,UACtBM,EAAK+H,mBAAqB/H,EAAK+H,mBAC/B/H,EAAKgI,WAAahI,EAAKgI,WACvBhI,EAAKiI,kBAAoBjI,EAAKiI,kBAC9BjI,EAAKkI,WAAalI,EAAKkI,WACvBlI,EAAKmI,YAAcnI,EAAKmI,YApBRnI,wEA4GjB,OACGK,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzB,MAAI,EAAChC,UAAU,uDACnBX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOpH,UAAU,aAAaqH,QAAShI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,mFAAyCC,WAAS,GACvFlI,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAMxH,UAAU,cACdX,EAAAC,EAAAC,cAACiI,EAAA,EAAKC,MAAN,KACEpI,EAAAC,EAAAC,cAAA,0FACAF,EAAAC,EAAAC,cAAA,SAAO2C,MAAO/C,KAAK0B,MAAM0E,UAAWrB,SAAU/E,KAAKmG,gBAAiB3I,KAAK,UAE3E0C,EAAAC,EAAAC,cAACiI,EAAA,EAAKC,MAAN,KACEpI,EAAAC,EAAAC,cAAA,sGACAF,EAAAC,EAAAC,cAAA,SAAO2C,MAAO/C,KAAK0B,MAAM4E,iBAAkBvB,SAAU/E,KAAKqG,uBAAwB7I,KAAK,UAEzF0C,EAAAC,EAAAC,cAACiI,EAAA,EAAKC,MAAN,KACEpI,EAAAC,EAAAC,cAAA,kHACAF,EAAAC,EAAAC,cAAA,SAAO2C,MAAO/C,KAAK0B,MAAMgF,cAAe3B,SAAU/E,KAAKyG,oBAAqBjJ,KAAK,UAEnF0C,EAAAC,EAAAC,cAACiI,EAAA,EAAKC,MAAN,KACEpI,EAAAC,EAAAC,cAAA,oIACAF,EAAAC,EAAAC,cAAA,SAAO2C,MAAO/C,KAAK0B,MAAMkF,WAAY7B,SAAU/E,KAAK2G,iBAAkBnJ,KAAK,OAAO+K,OAAO,2BAE3FrI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK6G,YAA9B,uDAIN3G,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,eACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,+CAIFjI,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,UACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAAWd,KAAKF,MAAM+H,YAAtC,gDAIF3H,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,iBACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAAWd,KAAKF,MAAMgI,mBAAtC,kEAIF5H,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,aACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAAWd,KAAKF,MAAMiI,YAAtC,0CAIF7H,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACCJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,KAAK,SAAS/D,YAAY,YAAYK,SAAU/E,KAAKgG,wBA5J1C5I,aCUrBsL,cACL,SAAAA,EAAY5I,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA0I,IACjB7I,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA0G,GAAAtG,KAAApC,KAAMF,KA2BP6I,SAAW,WACP9I,EAAKmD,SAAS,SAAC4F,GACb,MAAO,CAACC,QAASD,EAAKC,QAAU,OA9BpBhJ,EAmClBkI,WAAa,WACV,IAAMhB,EAAQlH,EAAK6B,MAAMoH,cAAcpF,QACnCoD,EAAW,GAEbA,EADCjH,EAAK6B,MAAMqH,cACDhC,EAAMiC,KAAK,SAAS7I,EAAE8I,GAC/B,OAAO,IAAIhC,KAAKgC,EAAE3B,MAAQ,IAAIL,KAAK9G,EAAEmH,QAI5BP,EAAMiC,KAAK,SAAS7I,EAAE8I,GAC/B,OAAO,IAAIhC,KAAK9G,EAAEmH,MAAQ,IAAIL,KAAKgC,EAAE3B,QAGzCzH,EAAKmD,SAAS,CACZ+F,eAAgBlJ,EAAK6B,MAAMqH,cAC3BD,cAAehC,KAlDFjH,EAuDlBgI,WAAa,WACZ,IAAMd,EAAQlH,EAAK6B,MAAMoH,cAAcpF,QACnCoD,EAAWC,EAEdD,EADEjH,EAAK6B,MAAMqH,cACFhC,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAAS9I,EAAEe,KAAKgI,cAAcD,EAAE/H,QAE3C6F,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAASA,EAAE/H,KAAKgI,cAAc/I,EAAEe,QAEvDrB,EAAKmD,SAAS,CACb+F,eAAgBlJ,EAAK6B,MAAMqH,cAC3BD,cAAehC,KAjECjH,EAsElBiI,kBAAoB,WACnB,IAAMf,EAAQlH,EAAK6B,MAAMoH,cAAcpF,QACnCoD,EAAWC,EAEdD,EADEjH,EAAK6B,MAAMqH,cACFhC,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAAS9I,EAAEiB,YAAY8H,cAAcD,EAAE7H,eAElD2F,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAASA,EAAE7H,YAAY8H,cAAc/I,EAAEiB,eAE9DvB,EAAKmD,SAAS,CACb+F,eAAgBlJ,EAAK6B,MAAMqH,cAC3BD,cAAehC,KAhFCjH,EA4FhBI,OAAS,SAACF,GACT,IAAIgH,EAAQlH,EAAK6B,MAAMqF,MAAMrD,QAC7BqD,EAAMoC,OAAOpC,EAAMqC,UAAU,SAAS1G,GACrC,OAAOA,EAAE3C,KAAOA,IACf,GACFF,EAAKmD,SAAS,CAAE+D,WAjGDlH,EAoGhBwJ,WAAa,SAACtJ,GACb,IAAIgH,EAAQlH,EAAK6B,MAAMqF,MAAMrD,QAC7BqD,EAAMoC,OAAOpC,EAAMqC,UAAU,SAAS1G,GACrC,OAAOA,EAAE3C,KAAOA,IACf,GACFF,EAAKmD,SAAS,CAAE+D,SAAS,kBAAMlH,EAAKyJ,iBAzGrBzJ,EA4GhB0J,WAAa,SAACC,GACZ,IACIV,EADA/B,EAAQlH,EAAK6B,MAAMqF,MAAMrD,QAG5BoF,EAD2B,KAAxBU,EAAczG,MACDgE,EAAMvD,OAAO,SAAAf,GAAI,OAAIA,EAAKK,UAAY0G,EAAczG,QAEpDgE,EAEjBlH,EAAKmD,SAAS,CACb8F,gBACAnB,cAAe6B,EAAczG,MAC7BE,QAASuG,EAAcvG,WAvHVpD,EA2HhB4J,gBAAkB,SAACD,GACjB3J,EAAKmD,SAAS,CACb+D,MAAOyC,KA7HM3J,EAiIhB6J,eAAiB,SAACF,GAChB3J,EAAKmD,SAAS,CACb6B,OAAQ2E,KAnIK3J,EAuIhB8J,aAAe,WACdhK,QAAQC,IAAIC,EAAK6B,MAAMiG,gBAxIR9H,EA2IhByJ,YAAc,WACb,IAAIvG,EAAQlD,EAAKC,MAAM6B,MAAMiI,eAC7B/J,EAAKC,MAAMzC,QAAQe,kBAAkB2E,IA3IvClD,EAAK6B,MAAQ,CACZqF,MAAO,GACP+B,cAAe,GACfC,eAAe,EACfF,QAAS,GACTgB,MAAO,GACPC,aAAc,GACdjF,OAAQ,GACR6C,WAAY,GACZC,cAAe,OAEhB9H,EAAKI,OAASJ,EAAKI,OACnBJ,EAAKkK,QAAUlK,EAAKkK,QAAQhJ,KAAbiB,OAAAgI,EAAA,EAAAhI,QAAAgI,EAAA,EAAAhI,CAAAnC,KACfA,EAAKgI,WAAahI,EAAKgI,WACvBhI,EAAKiI,kBAAoBjI,EAAKiI,kBAC9BjI,EAAKkI,WAAalI,EAAKkI,WAjBNlI,yEAsBfG,KAAKgD,SAAS,CACb+D,MAAO,yDA6DgB,IAAA/C,EAAAhE,KACvBiE,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAM2C,EAAQ3C,EAAIC,KAClBL,EAAKhB,SAAS,CAAE+D,QAAO+B,cAAe/B,uCA0DpC,IAAAkD,EAAAjK,KACJ8I,EAAgB9I,KAAK0B,MAAMoH,cAAcpF,QAAQF,OACpD,SAAClF,GACA,OAA6E,IAAtEA,EAAK4C,KAAKgJ,cAAc3G,QAAQ0G,EAAKvI,MAAMmD,OAAOqF,iBAG1D,OACChK,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEP,KAAKF,MAAM6B,MAAMiI,eACjB1J,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACdX,EAAAC,EAAAC,cAAA,QAAMmB,MAAM,6CAAUT,QAASd,KAAKsJ,YAAazI,UAAU,4CAA2CX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,QAAQiJ,KAAK,WAChIjK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKM,IAAOV,KAAKF,MAAM6B,MAAMyI,kBAAkBzJ,SAEhDT,EAAAC,EAAAC,cAAA,KAAGS,UAAU,qBAAqBb,KAAKF,MAAM6B,MAAMyI,kBAAkBlJ,KAArE,MAA6EhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,2BAA2Bb,KAAKF,MAAM6B,MAAMyI,kBAAkBhJ,cAC3JlB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKqJ,WAAWtI,KAAKf,KAAMA,KAAKF,MAAM6B,MAAMyI,kBAAkBrK,IAAKwB,MAAM,6CAAUV,UAAU,6CAA4CX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAM2I,KAAK,QAAQjJ,KAAO,+BAGnL,KACFhB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAACkK,EAAD,CAAe1G,mBAAoB5D,KAAKuJ,WAAYhH,MAAOvC,KAAK0B,MAAMqF,QACtE7G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAACmK,EAAD,CACCR,QAAW/J,KAAK+J,QAChBlC,WAAY7H,KAAK6H,WACjBC,kBAAmB9H,KAAK8H,kBACxBC,WAAa/H,KAAK+H,WACjBP,gBAAiBxH,KAAKyJ,gBACvBhC,cAAezH,KAAK0J,iBAGvBxJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,aAAa2J,QAAQ,QACpC1B,EAAcpF,MAAM,EAAG1D,KAAK0B,MAAMmH,SAASrG,IAAI,SAAClE,EAAKmM,GAAN,OACjB,QAA7BR,EAAKvI,MAAMiG,eAAuD,KAA7BsC,EAAKvI,MAAMiG,eAAwBsC,EAAKvI,MAAMiG,gBAAkBrJ,EAAKwE,WAC3G5C,EAAAC,EAAAC,cAACsK,EAAD,CACCpM,KAAQA,EACR2B,OAAQgK,EAAKhK,OACbF,GAAIzB,EAAKyB,GACT6C,IAAKtE,EAAKyB,GACVmB,KAAM5C,EAAK4C,KACXC,cAAiB7C,EAAK6C,cACtBC,YAAa9C,EAAK8C,YAClBiG,QAAS/I,EAAK+I,QACd1G,MAAOrC,EAAKqC,MACZ8J,MAAOA,OAIRvK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACfb,KAAK0B,MAAMmH,QAAU7I,KAAK0B,MAAMqF,MAAM4D,QAC7BzK,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK2I,SAAUR,SAAO,GAAvC,iFAMXjI,EAAAC,EAAAC,cAAA,uBA9MmBhD,aA6NVqE,kBATf,SAAyBC,GACvB,MAAO,CAACC,MAAOD,EAAME,UAGvB,SAA4BC,GACxB,MAAO,CAAExE,QAASyE,YAAmBzE,EAASwE,KAInCJ,CAA6CiH,WClF7CkC,cAjJb,SAAAA,EAAY9K,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA4K,IAChB/K,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA4I,GAAAxI,KAAApC,KAAMF,KAwBR+K,cAAgB,SAACpI,GACf,IAAIsE,EAAQlH,EAAK6B,MAAMqF,MAAMrD,QACzBoH,EAAUrI,EAAKyH,cAAca,QAAQ,+BAA+B,IACpEC,EAAQjE,EAAMkE,KAAK,SAAAC,GAAC,OAAIA,EAAEhK,OAAS4J,IACnCE,EACFnL,EAAKmD,SAAS,CACZgI,SACC,kBAAMnL,EAAKsL,qBAEdtL,EAAKmD,SAAS,CACZoI,SAAUN,GACT,kBAAMjL,EAAKwL,sBApCAxL,EAwClBsL,iBAAmB,WACjBtL,EAAKmD,SAAS,CACZsI,kBAAmBzL,EAAK6B,MAAM4J,oBA1ChBzL,EA8ClBwL,iBAAmB,WACjBxL,EAAKmD,SAAS,CACZuI,kBAAmB1L,EAAK6B,MAAM6J,oBAhDhB1L,EAoDlB2L,WAAa,SAACnI,GACZ1D,QAAQC,IAAIyD,GACZxD,EAAKmD,SAAS,CACZyI,SAAUpI,EAAEiC,OAAOvC,SAvDLlD,EA2DlB6L,kBAAoB,SAACrI,GACnBxD,EAAKmD,SAAS,CACZ5B,YAAaiC,EAAEiC,OAAOvC,SA7DRlD,EAiElB8L,iBAAmB,SAACtI,GAClBxD,EAAKmD,SAAS,CACZ4I,WAAYvI,EAAEiC,OAAOvC,SAnEPlD,EAuElBgM,WAAa,WACX,IAAIvN,EAAO,GACXA,EAAK4C,KAAOrB,EAAK6B,MAAM0J,SACvB9M,EAAKwN,aAAejM,EAAK6B,MAAMP,cAC/B7C,EAAK8C,YAAcvB,EAAK6B,MAAMN,YAC9B9C,EAAKwE,SAAW,SAChBxE,EAAKyB,GAAK,EACVzB,EAAKgJ,KAAO,IAAIL,KAChB3I,EAAKsN,WAAa/L,EAAK6B,MAAMkK,WAC7BtN,EAAKqC,MAAQd,EAAK6B,MAAM+J,SAExB9L,QAAQC,IAAItB,IAhFZuB,EAAKkM,aAAeC,IAAMC,YAC1BpM,EAAK6B,MAAQ,CACXwK,QAAS,GACTnF,MAAO,GACPqE,SAAU,GACVe,QAAQ,EACRb,kBAAkB,EAClBC,kBAAkB,EAClBa,SAAU,4OAVIvM,mFAcC,IAAAmE,EAAAhE,KACjBiE,IAAMC,IAAI,oBACPC,KAAK,SAAAC,GACJ,IAAM2C,EAAQ3C,EAAIC,KACdgI,EAAWrI,EAAKtC,MAAM0K,SAASE,MAAM,KACzCtI,EAAKhB,SAAS,CACZ+D,QAAOsF,WAAUF,QAAQ,uCAiExB,IAAAlC,EAAAjK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACCrK,KAAK0B,MAAM4J,iBACVpL,EAAAC,EAAAC,cAAA,OAAKS,UAAY,uBACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,MAAA4B,OAAAuK,EAAA,EAAAvK,CAAA,CAAKtB,IAAI,uBAAT,MAAsCV,KAAK0B,MAAMsJ,MAAMrK,SAEzDT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACbX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,qBAAqBb,KAAK0B,MAAMsJ,MAAM9J,KAAnD,MAA4DlB,KAAK0B,MAAMsJ,MAAM5J,aAC7ElB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAAuBb,KAAK0B,MAAMsJ,MAAMY,YACrD1L,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKmL,kBAA9B,iDAIN,KACDnL,KAAK0B,MAAM6J,iBACVrL,EAAAC,EAAAC,cAAA,OAAKS,UAAY,uBACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACbX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,qBAAqBb,KAAK0B,MAAM0J,UAC7ClL,EAAAC,EAAAC,cAAA,YAAU2C,MAAS/C,KAAK0B,MAAMN,YAAa2D,SAAY/E,KAAK0L,kBAAmBlO,KAAO,OAAOqD,UAAU,uBAAuB6D,YAAY,gGAC1IxE,EAAAC,EAAAC,cAAA,YAAU2C,MAAS/C,KAAK0B,MAAMkK,WAAY7G,SAAY/E,KAAK2L,iBAAkBnO,KAAO,OAAOqD,UAAU,uBAAuB6D,YAAY,sGACxIxE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACI8G,SAAO,EACPqE,QAAQ,8FACRC,cAAc,OACdhE,KAAK,OACL3H,QAAS,kBAAMmJ,EAAK8B,aAAaW,QAAQC,SACzC9L,UAAU,qBAEdX,EAAAC,EAAAC,cAAA,SAAOwM,IAAK5M,KAAK+L,aACVvO,KAAK,OACLqP,QAAM,EACN9H,SAAU/E,KAAKwL,aACtBtL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK6L,YAA9B,oDACA3L,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqL,kBAA9B,kDAKR,KACDrL,KAAK0B,MAAMyK,OACVjM,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM2K,SAAS7J,IAAI,SAACC,EAAMgI,GAAP,OACvBvK,EAAAC,EAAAC,cAAA,QAAMU,QAASmJ,EAAKY,cAAc9J,KAAKkJ,EAAMxH,IAA7C,GAAAqK,OAAwDrK,EAAxD,SAGJ,MAEJvC,EAAAC,EAAAC,cAAA,uBA7IoBhD,sBC0Db2P,cAzDb,SAAAA,EAAYjN,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA+M,IAChBlN,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA+K,GAAA3K,KAAApC,KAAMF,KACD4B,MAAQ,CACXsL,QAAS,IAHKnN,mFAOC,IAAAmE,EAAAhE,KACfiE,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAM4I,EAAU5I,EAAIC,KACpBL,EAAKhB,SAAS,CAAEgK,+CAQtB,OACE9M,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACbb,KAAK0B,MAAMsL,QAAQrC,OACrBzK,EAAAC,EAAAC,cAAC6M,EAAA,EAAD,CAAOC,QAAM,EAACC,OAAK,EAACtM,UAAU,gBAC5BX,EAAAC,EAAAC,cAAC6M,EAAA,EAAMjM,OAAP,KACEd,EAAAC,EAAAC,cAAC6M,EAAA,EAAMG,IAAP,CAAWC,QAAS,GAClBnN,EAAAC,EAAAC,cAAC6M,EAAA,EAAMK,WAAP,0IAGHtN,KAAK0B,MAAMsL,QAAQ,GAAGO,MAAM/K,IAAI,SAACC,EAAKgI,GAAN,OAC/BvK,EAAAC,EAAAC,cAAC6M,EAAA,EAAMO,KAAP,KACEtN,EAAAC,EAAAC,cAAC6M,EAAA,EAAMG,IAAP,CAAWC,QAAS,GAClBnN,EAAAC,EAAAC,cAAC6M,EAAA,EAAMQ,KAAP,CAAY5M,UAAU,iBACnB4B,EAAKvB,MAERhB,EAAAC,EAAAC,cAAC6M,EAAA,EAAMQ,KAAP,CAAY5M,UAAU,uBACnB4B,EAAKiL,aAERxN,EAAAC,EAAAC,cAAC6M,EAAA,EAAMQ,KAAP,CAAY5M,UAAU,kBACpBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAIrD,EAAKkL,MAAf,+CAMF,OAGZzN,EAAAC,EAAAC,cAAA,uBArDkBhD,+CCwPXwQ,cApPd,SAAAA,EAAY9N,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA4N,IACjB/N,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA4L,GAAAxL,KAAApC,KAAMF,KA+CN+N,gBAAkB,WAChB,IAAIC,EAAa9L,OAAO+L,OAAO,MACnBlO,EAAK6B,MAAMqF,MAAMrD,QACvBsK,QAAQ,SAAS1P,GACrB,IAAI2P,EAAYH,EAAWxP,EAAKwE,UAC3BmL,IACHA,EAAYH,EAAWxP,EAAKwE,UAAY,IAE1CmL,EAAUtL,KAAKrE,KAKlB,IAHA,IAAI4P,EAAQlM,OAAOmM,KAAKL,GACpBM,EAASpM,OAAOoM,OAAON,GACvBO,EAAY,GACP3L,EAAI,EAAGA,EAAIwL,EAAMvD,OAAQjI,IAAK,CACtC,IAAI4L,EAAM,GACNC,EAAMH,EAAO1L,GAAGiI,OAChB6D,EAAMC,KAAKC,MAAMH,EAAI,GACtBD,EAAI,2DAAgBC,EACpBD,EAAI,mFAAoBE,EACxBF,EAAG,KAAWJ,EAAMxL,GACpB2L,EAAU1L,KAAK2L,GAEnBzO,EAAKmD,SAAS,CACb8K,WAAYA,EACZa,aAAcN,GACZ,kBAAMxO,EAAK+O,uBAzEE/O,EA6ElB+O,kBAAoB,WAMjB,IALA,IAAIvK,EAAOxE,EAAK6B,MAAMiN,aAAajL,MAAM,EAAE,GACzCmL,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACxEC,EAAY,GACZxH,EAAO,IAAIL,KACXvE,EAAI,EACAA,EAAI,GACZ4E,EAAKyH,QAAQzH,EAAK0H,UAAY,GAE7BF,EAAUnM,KAAKkM,EAAKvH,EAAK2H,WACzBvM,IAED,IAAK,IAAIwM,EAAI,EAAGA,EAAI7K,EAAKsG,OAAQuE,IAC/B7K,EAAK6K,GAAL,KAAkBJ,EAAUI,GAE9BrP,EAAKmD,SAAS,CACZmM,cAAe9K,GACd,kBAAM1E,QAAQC,IAAIC,EAAK6B,UA9FX7B,EAmGjB8J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,QAlGnB7B,EAAK6B,MAAQ,CACTqF,MAAO,GACPqI,aAAc,GACdC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfnD,QAAS,GACT7L,MAAO,KACPiP,mBAAoB,GACpBC,kBAAmB,GACnBC,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACdvC,WAAY,KACZa,aAAc,GACdQ,cAAe,GACf3K,OAAQ,WA3BK3E,mFAkCG,IAAAmE,EAAAhE,KAClBiE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GACJ,IAAI2C,EAAQ3C,EAAIC,KAEhBL,EAAKhB,SAAS,CACZ+D,SACC,kBAAM/C,EAAK6J,uDAgElB,OACE3N,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACVb,KAAK0B,MAAM4N,cACVpP,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACnCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK4O,mBAAtB,WAEM,KAEX5O,KAAK0B,MAAM2N,gBACZnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,iCAAiC0P,YAAa,GAClErQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,6BAAvB,8CACAX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4BAC5BX,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRtM,KAAMrE,KAAK0B,MAAMiN,aACjBiC,OAAQ,CACNC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGxC9Q,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAeQ,gBAAgB,QAC/B/Q,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAOS,QAAQ,SACfhR,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,MACAvQ,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,MACAvQ,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,MACAvQ,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAKS,QAAQ,0DAAaC,KAAK,YAC/BjR,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAKS,QAAQ,kFAAiBC,KAAK,cAGrCjR,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4BAC1BX,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRtM,KAAMrE,KAAK0B,MAAMyN,cACjByB,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAGvC9Q,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAeQ,gBAAgB,QAC/B/Q,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAOS,QAAQ,SACfhR,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,MACAvQ,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,MACAvQ,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,MACAvQ,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAMjT,KAAK,WAAW0T,QAAQ,0DAAaE,OAAO,UAAUC,UAAW,CAAEC,EAAG,KAC5EpR,EAAAC,EAAAC,cAACqQ,EAAA,EAAD,CAAMjT,KAAK,WAAW0T,QAAQ,kFAAiBE,OAAO,gBAM9DlR,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,6BAAvB,gEACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,UAAb,8CACAX,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,wDACCF,EAAAC,EAAAC,cAAA,4EAEFF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4BAC3BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACZX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,yBAEdhB,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,6FAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,eACnBhB,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,iIAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,iBACnBhB,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,kFAGJF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACZX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,+GAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,6FAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,0BACnBhB,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,uGAMTF,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,6BAAvB,kCACAX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4BAC3BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACZX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qEAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,0BACnBhB,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,iFAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,6BACnBhB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,yGAMI,OAIrBF,EAAAC,EAAAC,cAAA,uBAhPiBhD,aCmQVmU,cApQd,SAAAA,EAAYzR,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAuR,IACjB1R,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAuP,GAAAnP,KAAApC,KAAMF,KA2BN0R,IAAM,WACJ3R,EAAKmD,SAAS,CACZyO,eAAe,IAEjB9R,QAAQC,IAAIC,EAAK6B,QAhCF7B,EAmCjB6R,eAAgB,SAACrO,GACf,IAAIsO,EAAOtO,EAAEiC,OAAOsM,YAAc,IAC/BC,EAAchS,EAAK6B,MAAM0K,SAASU,OAAO,CAACzJ,EAAEiC,OAAOsM,cAClDE,EAAkBjS,EAAK6B,MAAMoQ,gBAAgBhF,OAAO,CAAC6E,IAC1D9R,EAAKmD,SAAS,CACboJ,SAAUyF,EACRC,gBAAiBA,GAEjB,kBAAMjS,EAAKkS,qBACdpS,QAAQC,IAAIkS,IA5CIjS,EA6EfmS,aAAe,WACbnS,EAAKmD,SAAS,CACZiP,UAAWpS,EAAKC,MAAMmS,aA/EXpS,EAmFfqS,aAAe,WACd,IAAI9F,EAAWvM,EAAK6B,MAAM0K,SACrB+F,EAAkBtS,EAAK6B,MAAMyQ,gBAC7BC,EAAkBvS,EAAK6B,MAAM0Q,gBAG/BhG,IAFkBvM,EAAK6B,MAAM2Q,eAAetH,QAAQ,MAAO,KAG3DoH,EAAgBxP,KAAKyJ,GACvBvM,EAAKmD,SAAS,CACVsP,eAAe,EACfH,gBAAiBA,MAMnBC,EAAgBzP,KAAKyJ,GACvBvM,EAAKmD,SAAS,CACVuP,iBAAiB,EACjBH,gBAAiBA,MAtGRvS,EA6Gf2S,YAAc,WACZ,IAEIC,EAFQ5S,EAAK6B,MAAMgR,YAAYhP,QACzB7D,EAAK6B,MAAMiR,mBAErB9S,EAAKmD,SAAS,CACZyP,aAAcA,KAlHH5S,EAuHfkS,iBAAmB,WACjB,IAAIhS,EAAMF,EAAK6B,MAAMkR,UACjB7L,EAAQlH,EAAK6B,MAAMgR,YAAYhP,QAE/B+O,EAAe1L,EADnBhH,GAAQ,GAELA,EAAGgH,EAAM4D,OACV9K,EAAKmD,SAAS,CACZ4P,UAAW7S,EACX0S,aAAcA,IAIhB5S,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBC,oBAAoB,EACpBF,UAAW,GACV,kBAAI/S,EAAKqS,kBAvIDrS,EA4IfkT,aAAe,WACb,IAAIC,EAAUnT,EAAK6B,MAAMsR,QAAQtP,QAC7BkP,EAAY/S,EAAK6B,MAAMkR,UACvBK,EAAapT,EAAK6B,MAAMiR,kBAE5B,IADAM,GAA2B,GACbD,EAAQ,GAAGf,UAAUtH,OAAO,CAExC,IAAM0H,EAAiBW,EAAQ,GAAGf,UAAUgB,GAAYC,cAClDnM,EAAQiM,EAAQ,GAAGf,UAAUgB,GAAYlM,MAC/CpH,QAAQC,IAAIyS,GACZ1S,QAAQC,IAAImH,GAER,IADA,IAAID,EAAW,GACNpE,EAAI,EAAGA,EAAIqE,EAAM4D,OAAQjI,IAEhC,IADA,IAAIvC,EAAI4G,EAAMrE,GAAGyQ,SACRjE,EAAI,EAAGA,EAAI/O,EAAEwK,OAAQuE,IAC5BpI,EAASnE,KAAKxC,EAAE+O,IAGpB,IAAIkE,EAAS,GACb,IAAQ1Q,EAAE,EAAEA,EAAIoE,EAAS6D,OAAOjI,GAAM,EACpC0Q,EAAOzQ,KAAKmE,EAASpD,MAAMhB,EAAEA,EAAE,IAErC/C,QAAQC,IAAIwT,GACZzT,QAAQC,IAAIkH,GACZ,IAAI2L,EAAeW,EAAOR,GAC1BjT,QAAQC,IAAI6S,GAEZ5S,EAAKmD,SAAS,CACZ2P,kBAAmBM,EACnBH,oBAAoB,EACpBD,gBAAgB,EAChBR,eAAgBA,EAChBtL,MAAOA,EACP2L,YAAaU,EACbX,aAAcA,EACdX,gBAAiB,GACjB1F,SAAU,GACVmG,iBAAiB,EACjBD,eAAe,SAKjBzS,EAAKmD,SAAS,CACZwM,iBAAiB,EACjB+C,iBAAiB,EACjBD,eAAe,EACfQ,oBAAoB,EACpBD,gBAAgB,EAChBQ,iBAAiB,EACjB5B,eAAe,KA9LN5R,EAoMf8J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,QAnMrB7B,EAAK6B,MAAQ,CACT2C,KAAM,GACT+H,SAAU,GACP0F,gBAAiB,GACpBkB,QAAS,GACTX,eAAgB,GAChBtL,MAAO,GACJ+L,oBAAoB,EACpBD,gBAAgB,EAChBH,YAAa,GACbD,aAAc,GACdG,UAAW,EACXN,eAAe,EACfC,iBAAiB,EACjBI,kBAAmB,EACnBV,UAAW,GACXR,eAAe,EACf4B,iBAAiB,EACjBlB,gBAAiB,GACjBC,gBAAiB,GACjB5C,iBAAiB,GAtBJ3P,mFA+CK,IAAAmE,EAAAhE,KACdiT,EAAajT,KAAK0B,MAAMiR,kBAC5B1O,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GAKJ,IAJA,IAAM4O,EAAU5O,EAAIC,KACdgO,EAAiBjO,EAAIC,KAAK,GAAG4N,UAAUgB,GAAYC,cACnDnM,EAAQ3C,EAAIC,KAAK,GAAG4N,UAAUgB,GAAYlM,MAC5CD,EAAW,GACNpE,EAAI,EAAGA,EAAIqE,EAAM4D,OAAQjI,IAEhC,IADA,IAAIvC,EAAI4G,EAAMrE,GAAGyQ,SACRjE,EAAI,EAAGA,EAAI/O,EAAEwK,OAAQuE,IAC5BpI,EAASnE,KAAKxC,EAAE+O,IAGpB,IAAIkE,EAAS,GACb,IAAQ1Q,EAAE,EAAEA,EAAIoE,EAAS6D,OAAOjI,GAAM,EACpC0Q,EAAOzQ,KAAKmE,EAASpD,MAAMhB,EAAEA,EAAE,IAEjC/C,QAAQC,IAAIoE,EAAKlE,OACjBkE,EAAKhB,SAAS,CACZgQ,QAASA,EACTX,eAAgBA,EAChBtL,MAAOA,EACP2L,YAAaU,EACbnB,UAAWjO,EAAKlE,MAAMmS,UACtBR,eAAe,GACd,kBAAMzN,EAAKwO,mDA+Hb,IAAAvI,EAAAjK,KACHD,EAAKC,KAAK0B,MAAMiR,kBACpB,OACMzS,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,iBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAKF,MAAMwT,QACzBpT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,KACErT,EAAAC,EAAAC,cAAA,QAAMS,UAAU,QAAhB,YAAiCb,KAAKF,MAAM0T,KAA5C,0BAEFtT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,gCAA2CxQ,KAAKF,MAAM2T,MAAtD,cACAvT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOpH,UAAU,QAAQqH,QAAShI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,SAAgCC,WAAS,GACvElI,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,mBACZX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACCZ,KAAK0B,MAAM8N,gBAAkBtP,EAAAC,EAAAC,cAAA,6BAA0B,KACvDJ,KAAK0B,MAAM+P,cACVvR,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,4CAA4Cb,KAAK0B,MAAMuQ,UAAUlS,GAAIqB,aAA4B,KAEzHpB,KAAK0B,MAAM2R,gBACRnT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,8CAA8Cb,KAAK0B,MAAMoQ,iBAAgC,KAIlH5R,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,eAC1BX,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,gCAUpBb,KAAK0B,MAAMoR,mBACX9S,KAAK0B,MAAM+Q,aAAajQ,IAAI,SAACC,EAAKgI,GAAN,OAC1BvK,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,UAAU,iBAAiB+B,IAAK6H,EAAOtC,SAAO,EAACrH,QAASmJ,EAAKyH,gBAAiBjP,KACrF,MAGJzC,KAAK0B,MAAMmR,gBAAkB7S,KAAK0B,MAAM4Q,cAAiBpS,EAAAC,EAAAC,cAAA,MAAIS,UAAU,4BAAd,UAAsD,KAC/Gb,KAAK0B,MAAMmR,gBAAkB7S,KAAK0B,MAAM6Q,gBAAmBrS,EAAAC,EAAAC,cAAA,MAAIS,UAAU,4BAAd,UAAsD,KACpHX,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,gBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,UAAU,iBAAiBsH,SAAO,EAACrH,QAASd,KAAKwR,KAAzD,YAEFtR,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,gBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,UAAU,iBAAiBsH,SAAO,EAACrH,QAASd,KAAK+S,cAAzD,2BAzPF3V,aC6EbmU,cA1Eb,SAAAA,EAAYzR,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAuR,IAChB1R,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAuP,GAAAnP,KAAApC,KAAMF,KAgBN4T,WAAa,WAGX,IAFA,IAAIV,EAAUnT,EAAK6B,MAAMsR,QAAQtP,QAC7BiQ,EAAS,GACJjR,EAAI,EAAGA,EAAIsQ,EAAQrI,OAAQjI,IAE9B,IADA,IAAIvC,EAAI6S,EAAQtQ,GAAGuP,UACV/C,EAAI,EAAGA,EAAI/O,EAAEwK,OAAQuE,IAC5ByE,EAAOhR,KAAKxC,EAAE+O,IAGtBvP,QAAQC,IAAI+T,GACZ9T,EAAKmD,SAAS,CACZiP,UAAW0B,KA5BC9T,EAuChB2R,IAAM,WACJ,IAAIwB,EAAUnT,EAAK6B,MAAMsR,QAAQtP,QAEjC/D,QAAQC,IAAIoT,EAAQ,GAAGf,UAAU,GAAGlL,MAAM,GAAGoM,UAC7CxT,QAAQC,IAAIoT,EAAQ,GAAGf,UAAU,GAAGlL,OACpCpH,QAAQC,IAAIoT,EAAQ,GAAGf,UAAU,GAAGlL,OACpCpH,QAAQC,IAAIoT,EAAQ,GAAGf,UAAU,GAAGlL,QA3CtClH,EAAK6B,MAAO,CACVsR,QAAS,GACTjM,MAAO,GACPkL,UAAW,IALGpS,mFASE,IAAAmE,EAAAhE,KAChBiE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GACJ,IAAM4O,EAAU5O,EAAIC,KACpBL,EAAKhB,SAAS,CAAEgQ,QAASA,GAAW,kBAAMhP,EAAK0P,kDAmC9C,IAAAzJ,EAAAjK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,GACtBvQ,KAAK0B,MAAMsR,QAAQxQ,IAAI,SAAC8Q,EAAQ7I,GAAT,OACtBvK,EAAAC,EAAAC,cAACwT,EAAD,CAEEC,aAAcP,EAAOrB,UAAU,GAAGiB,cAClCjB,UAAahI,EAAKvI,MAAMuQ,UACxB6B,oBAAqBR,EAAOrB,UAAU,GAAG7Q,YACzCwB,IAAK6H,EACLvJ,KAAQoS,EAAOA,OACfE,KAAMF,EAAOE,KACbC,MAAOH,EAAOG,WAKpBvT,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKwR,KAAtB,WACAtR,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK0T,YAAtB,mBAtEoBtW,aC8Db2W,mLA9DX,OACE7T,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,GACvBrQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,uBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gBACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,KACErT,EAAAC,EAAAC,cAAA,QAAMS,UAAU,QAAhB,mBAEFX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,oDAEFtQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACjB9T,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,aAGJjI,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,uBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gBACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,KACErT,EAAAC,EAAAC,cAAA,QAAMS,UAAU,QAAhB,mBAEFX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,oDAEFtQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACjB9T,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,aAGJjI,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,uBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gBACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,KACErT,EAAAC,EAAAC,cAAA,QAAMS,UAAU,QAAhB,mBAEFX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,oDAEFtQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACjB9T,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,aAGJjI,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,uBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gBACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,KACErT,EAAAC,EAAAC,cAAA,QAAMS,UAAU,QAAhB,mBAEFX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,oDAEFtQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACjB9T,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,sBAvDY/K,+BCmDX2W,mLA9CX,OACE7T,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,GACvBrQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,uBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gBACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,mDACAtQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACXX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAI,kBAAV,qBAIR5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,uBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gBACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,mDACAtQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAI,wBAAV,2BAIN5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,uBACXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gBACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,mDACAtQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAI,oBAAV,wBAKR5F,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,KACE/T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAW7C,IACzCrR,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAWC,cAxC3BjX,aCoHXkX,mLAhHX,OACEpU,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,mCACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,qCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,qBAAT,yIAIjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,qCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,qBAAT,wIAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,2BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,UAAT,8GAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,0BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,UAAT,iGAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,8BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,kBAAT,kGAajB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,gCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,cAAT,4FAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,iCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,iBAAT,8GAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,sCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,sBAAT,wJAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,iCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,iBAAT,8GAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,8BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,eAAT,gFAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,6BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,aAAT,6HAKrB5F,EAAAC,EAAAC,cAAA,uBA/GehD,aCsKRmX,eArKb,SAAAA,EAAYzU,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAuU,IAChB1U,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAuS,GAAAnS,KAAApC,KAAMF,KACD4B,MAAQ,GAFG7B,wEAShB,OACEK,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,2JACAF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAYjF,UAAU,gBAA/B,sFAIJX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,wBAEbR,EAAAC,EAAAC,cAAA,+GAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,wBAEbR,EAAAC,EAAAC,cAAA,mGAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,oBAEbR,EAAAC,EAAAC,cAAA,0JAGHF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,uBAEbR,EAAAC,EAAAC,cAAA,yOAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,qBAEbR,EAAAC,EAAAC,cAAA,gHAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,mBAEbR,EAAAC,EAAAC,cAAA,6HAIJF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCAIhBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,6FACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,oIACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,2MACAF,EAAAC,EAAAC,cAAA,8NAEDF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,cAAcjF,UAAU,gBAAjC,iDAIHX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,sFACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,4GACAF,EAAAC,EAAAC,cAAA,2QACAF,EAAAC,EAAAC,cAAA,wSAEDF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAYjF,UAAU,gBAA/B,gDAGFX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iCAKjBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCAIhBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,yGACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,6NACAF,EAAAC,EAAAC,cAAA,+GACAF,EAAAC,EAAAC,cAAA,0IAEDF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,WAAWjF,UAAU,gBAA9B,iDAIHX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,8IACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,uSACAF,EAAAC,EAAAC,cAAA,0LAEDF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,SAASjF,UAAU,gBAA5B,gDAGFX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCA2BrBX,EAAAC,EAAAC,cAAA,uBAhKWhD,qDC2XJoX,eArXd,SAAAA,EAAY1U,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAwU,IACjB3U,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAwS,GAAApS,KAAApC,KAAMF,KAYJ2U,gBAAkB,WAChB5U,EAAKmD,SAAS,CACZ+D,MAAO,GACP2I,cAAe,GACfC,cAAe,GACf5P,GAAI,EACJ2U,YAAa,GACbC,gBAAiB,KACjBC,mBAAoB,GACpBC,eAAgB,GAChBC,kBAAkB,EAClBC,eAAe,EACflC,gBAAgB,EAChBmC,WAAY,KACZ/G,UAAW,GACXgH,cAAe,GACfC,YAAa,EACbC,aAAc,GACdtQ,OAAQ,GACRuQ,aAAc,KACdC,mBAAmB,EACnBC,gBAAgB,EAChBC,OAAQ,EACRC,aAAc,EACdC,gBAAgB,EAChBC,MAAM,GACL,kBAAM7V,EAAK8V,iBAvCD9V,EA0Cf8V,YAAc,WACZ,IAAI5V,EAAKF,EAAK6B,MAAM3B,GACpBkE,IAAMC,IAAI,qBACTC,KAAK,SAAAC,GASJ,IARA,IAAM2C,EAAQ3C,EAAIC,KACZsQ,EAAkB5N,EAAMhH,GACxB2U,EAAc3N,EAAMhH,GAAImB,KACxB0T,EAAqB7N,EAAMhH,GAAIqB,YAC/BgU,EAAerO,EAAMhH,GAAIY,MACzBkU,EAAiB9N,EAAMhH,GAAIsH,QAC3B4G,EAAYyG,EAAYpI,MAAM,IAC9BsJ,EAAkBlB,EAAYpI,MAAM,IACjC5J,EAAIkT,EAAgBjL,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CAC/C,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADKoB,EAEJ,CAAC8R,EAAgB1G,GAAI0G,EAAgBlT,IAA/EkT,EAAgBlT,GAF8BoB,EAAA,GAE1B8R,EAAgB1G,GAFUpL,EAAA,GAKrD,IADA,IAAMmR,EAAgB,GACbvS,EAAI,EAAGA,EAAIuL,EAAUtD,OAAQjI,IACpCuS,EAActS,KAAK,KAErB9C,EAAKmD,SAAS,CACZ+D,QACA2N,cACAE,qBACAQ,eACAP,iBACAe,kBACA3H,YACAgH,gBACAN,sBAGJmB,SAASC,KAAKC,iBAAiB,UAAWnW,EAAKoW,YA1ElCpW,EA6EjBoW,UAAY,SAAC5S,GACExD,EAAK6B,MAAMgU,KAAxB,IAUIQ,EATAV,EAAe3V,EAAK6B,MAAM8T,aAI1BL,GAHkBtV,EAAK6B,MAAMiT,gBACb9U,EAAK6B,MAAMgO,cAAchM,QACzB7D,EAAK6B,MAAMiO,cAAcjM,QAC1B7D,EAAK6B,MAAMyT,cAC1BT,EAAc7U,EAAK6B,MAAMgT,YACzB3U,EAAKF,EAAK6B,MAAMwT,YAChBjH,EAAYpO,EAAK6B,MAAMuM,UACvB2H,EAAkB/V,EAAK6B,MAAMkU,gBAEjC,GAAKvS,EAAET,MAAOqL,EAAUlO,IAASoV,EAAaxK,OAAS+J,EAAY/J,QAAY9K,EAAK6B,MAAMqT,cAAiB,CACvGI,GAA8B9R,EAAET,IAChC/C,EAAK6B,MAAMuT,cAAclV,GAAMsD,EAAET,IACjC,IAAK,IAAIF,EAAI,EAAGA,EAAIkT,EAAgBjL,OAAQjI,IAC1C,GAAIkT,EAAgBlT,KAAOW,EAAET,IAAK,CAChCsT,EAAYxT,EACZ,MAGJkT,EAAgBzM,OAAO+M,EAAU,KAC/BnW,EACFF,EAAKmD,SAAS,CACZmS,eACAD,YAAanV,EACbiV,WAAY3R,EAAET,IACdgT,mBACC,kBAAM/V,EAAKsW,oBAEP9S,EAAET,MAAQqL,EAAUlO,IAASoV,EAAaxK,OAAS+J,EAAY/J,QAAY9K,EAAK6B,MAAMqT,eAC7FS,IACA3V,EAAKmD,SAAS,CACZwS,eACAE,MAAM,KAGY,MAAbrS,EAAE+S,SAAqBvW,EAAK6B,MAAMqT,cACzClV,EAAKkS,mBAILlS,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KAzHNlV,EA6HfwW,cAAgB,WACdxW,EAAKmD,SAAS,CACV8R,kBAAkB,EAClBC,eAAe,KAhINlV,EAsIfkS,iBAAmB,WACpB,IAAIyD,EAAe3V,EAAK6B,MAAM8T,aAC1Bb,EAAkB9U,EAAK6B,MAAMiT,gBAC7BjF,EAAgB7P,EAAK6B,MAAMgO,cAAchM,QACzCiM,EAAgB9P,EAAK6B,MAAMiO,cAAcjM,QACzCyR,EAAetV,EAAK6B,MAAMyT,aAC1BT,EAAc7U,EAAK6B,MAAMgT,YAC1Bc,EAAe,EAClB9F,EAAc/M,KAAKgS,GAGZD,IAAgBS,GACrBzF,EAAc/M,KAAKgS,GACnB9U,EAAKmD,SAAS,CACb0M,mBAIHC,EAAchN,KAAKgS,GAEhB,IAAI5U,EAAKF,EAAK6B,MAAM3B,GAChBuW,EAAczW,EAAK6B,MAAMqF,MAAM4D,OAC/B5D,EAAQlH,EAAK6B,MAAMqF,MAGtB,IADDhH,GAAU,GACDuW,EAAa,CAQ1B,IAPM,IAAM3B,EAAkB5N,EAAMhH,GACxB2U,EAAc3N,EAAMhH,GAAImB,KAC9B0T,EAAqB7N,EAAMhH,GAAIqB,YAC/BgU,EAAerO,EAAMhH,GAAIY,MACzBkU,EAAiB9N,EAAMhH,GAAIsH,QAC3B4G,EAAYyG,EAAYpI,MAAM,IAC9BsJ,EAAkBlB,EAAYpI,MAAM,IACjC5J,EAAIkT,EAAgBjL,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CACjD,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADO6T,EAEN,CAACX,EAAgB1G,GAAI0G,EAAgBlT,IAA/EkT,EAAgBlT,GAFgC6T,EAAA,GAE5BX,EAAgB1G,GAFYqH,EAAA,GAKrD,IADA,IAAMtB,EAAgB,GACbvS,EAAI,EAAGA,EAAIuL,EAAUtD,OAAQjI,IACrCuS,EAActS,KAAK,KAEd9C,EAAKmD,SAAS,CACVjD,KACAgH,QACA2N,cACAC,kBACAC,qBACAQ,eACAP,iBACAe,kBACA3H,YACAgH,gBACAK,gBAAgB,EAChBD,mBAAmB,EACnBF,aAAc,GACdD,YAAa,EACbM,aAAc,EACd7F,gBACAD,uBAIF7P,EAAKmD,SAAS,CACb6P,gBAAgB,EAChBkC,eAAe,EACfD,kBAAkB,EACpBnF,gBACAD,mBAzMU7P,EA8MhBN,UAAY,WACT,IAAIiX,EAAU3W,EAAK6B,MAAM+U,YACzBjX,IAAOC,IAAI+W,IAhNE3W,EAmNhBsW,WAAa,WACZ,IAAIzB,EAAc7U,EAAK6B,MAAMgT,YACzBS,EAAetV,EAAK6B,MAAMyT,aAC3BT,EAAY/J,SAAWwK,EAAaxK,QACtC9K,EAAKmD,SAAS,CACbqS,mBAAmB,EACnBC,gBAAgB,KAzNHzV,EA8NhB6W,YAAc,SAACrT,GACd,IAAItD,EAAKF,EAAK6B,MAAMwT,YAChBR,EAAc7U,EAAK6B,MAAMgT,YACzBzG,EAAYpO,EAAK6B,MAAMuM,UAEvBkH,GADkBtV,EAAK6B,MAAMkU,gBACd/V,EAAK6B,MAAMyT,cAC1BwB,EAAgBtT,EAAEiC,OAAOsM,YAAYlO,MAAM,EAAE,GAC7C8R,EAAe3V,EAAK6B,MAAM8T,aACvBmB,IAAkB1I,EAAUlO,IAASoV,EAAaxK,OAAS+J,EAAY/J,QAC1EtH,EAAEiC,OAAOzE,UAAY,SACrBsU,GAA8BwB,EAC9B9W,EAAK6B,MAAMuT,cAAclV,GAAM4W,IAC7B5W,EACFF,EAAKmD,SAAS,CACZmS,eACAD,YAAanV,EACbiV,WAAY2B,GACX,kBAAM9W,EAAKsW,gBAEPQ,IAAkB1I,EAAUlO,IAASoV,EAAaxK,OAAS+J,EAAY/J,QAC/E6K,IACA3V,EAAKmD,SAAS,CACbwS,eACEE,MAAM,KAIT7V,EAAKmD,SAAS,CACb6P,gBAAgB,EAChBkC,eAAe,KAzPlBlV,EAAK+W,IAAM5K,IAAMC,YAClBpM,EAAK6B,MAAQ,GAHE7B,mFAUfG,KAAKyU,mDAwPE,IAAAzQ,EAAAhE,KACD0V,EAAO1V,KAAK0B,MAAMgU,KACxB,OACExV,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMoT,iBACX5U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACApQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,4BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,kFACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqW,eAA9B,yGAKR,KAEArW,KAAK0B,MAAMqT,cACX7U,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAWhW,UAAU,kBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,kBACfX,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,KACK9W,KAAK0B,MAAMkT,oBAEd1U,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CACIE,eAAgB,kBAAM/S,EAAKhB,SAAS,CAAE0S,MAAM,KAC5C7U,UAAW6U,EAAO,gCAAkC,4BACtDxV,EAAAC,EAAAC,cAAA,UACCJ,KAAK0B,MAAMuT,cAAczS,IAAI,SAACtB,EAAKuJ,GAAN,OAC5BvK,EAAAC,EAAAC,cAAA,SAAOwC,IAAK6H,EAAQuM,UAAQ,EAACjU,MAAO7B,EAAM+V,UAAU,SAGrDjX,KAAK0B,MAAM2T,kBACXnV,EAAAC,EAAAC,cAAA,UACCJ,KAAK0B,MAAMkU,gBAAgBpT,IAAI,SAACtB,EAAKuJ,GAAN,OAC9BvK,EAAAC,EAAAC,cAAA,MAAIwC,IAAK6H,EACJ3J,QAASkD,EAAK0S,aAEbxV,MAGD,KAETlB,KAAK0B,MAAM4T,eACXpV,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACCL,EAAAC,EAAAC,cAAA,SAAIJ,KAAK0B,MAAMmT,gBACV3U,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACdX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAK0B,MAAM0T,iBAG3B,MAGJlV,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,kEAGD,KAEF/R,KAAK0B,MAAMmR,eACX3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACY,IAApCb,KAAK0B,MAAMgO,cAAc/E,OAC3BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cACfb,KAAK0B,MAAMgO,cAAclN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,gBAG9DlB,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACGjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMiO,cAAchF,QAE5BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMqF,MAAM4D,OAAS3K,KAAK0B,MAAMiO,cAAchF,QAEtDzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBAClBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,gEACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,kFAK3B,MAGL5F,EAAAC,EAAAC,cAAA,uBAhXoBhD,aC6Ubga,eA5Ud,SAAAA,EAAYtX,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAoX,IACjBvX,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAoV,GAAAhV,KAAApC,KAAMF,KAYJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACV8R,kBAAkB,EAClBC,eAAe,KAhBNlV,EAoBfwX,aAAe,WAEb,IADA,IAAI5E,EAAe5S,EAAK6B,MAAM+Q,aAAa/O,QAClChB,EAAI+P,EAAa9H,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CAC9C,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADIoB,EAET,CAAC2O,EAAavD,GAAIuD,EAAa/P,IAAnE+P,EAAa/P,GAFgCoB,EAAA,GAE5B2O,EAAavD,GAFepL,EAAA,KAtBrCjE,EA8BfkS,iBAAmB,WACClS,EAAK6B,MAAM8T,aAA9B,IACI8B,EAAmBzX,EAAK6B,MAAM4V,iBAAiB5T,QAC/C6T,EAAmB1X,EAAK6B,MAAM6V,iBAAiB7T,QAC9C3D,EAAKF,EAAK6B,MAAM3B,GAChByX,EAAW3X,EAAK6B,MAAM8V,SAE1B,IADAzX,GAAU,GACD,EAAG,CACayX,EAASzX,GAIhC,IAJA,IACM0X,EAAqBD,EAASzX,GAAI2X,QAClC9C,EAAqB4C,EAASzX,GAAIqB,YACpCqR,EAAegF,EAAmBnL,MAAM,KACnC5J,EAAI+P,EAAa9H,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CAC9C,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADI6T,EAET,CAAC9D,EAAavD,GAAIuD,EAAa/P,IAAnE+P,EAAa/P,GAFgC6T,EAAA,GAE5B9D,EAAavD,GAFeqH,EAAA,GAIlD1W,EAAKmD,SAAS,CACVjD,KACAyX,WACAC,qBACA7C,qBACAnC,eACAkF,mBAAoB,GACpBJ,mBACAD,mBACAM,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzBrI,eAAe,EACfsI,UAAW,UAIflY,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,EACfD,kBAAkB,EAClByC,mBACAD,sBApESzX,EAyEhBmY,SAAW,SAAC3U,GAIP,IAHJ,IAAIiC,EAASjC,EAAEiC,OAEX2S,GADS5U,EAAEiC,OAAO4S,cAAcC,SAClB,GACL7S,EAASA,EAAO8S,wBACvBH,IAEN,IAAIN,EAAqB9X,EAAK6B,MAAMiW,mBAChClF,EAAe5S,EAAK6B,MAAM+Q,aAC9BA,EAAatJ,OAAO8O,EAAY,GAChCN,EAAmBhV,KAAKU,EAAEiC,OAAOsM,aAEjC/R,EAAKmD,SAAS,CACZ2U,mBAAoBA,IAEI,GAAvBlF,EAAa9H,QACd9K,EAAKmD,SAAS,CACZ4U,sBAAsB,EACtBC,mBAAmB,KA3FRhY,EAgGfwY,YAAc,SAAChV,GAIT,IAHJ,IAAIiC,EAASjC,EAAEiC,OAEX2S,GADS5U,EAAEiC,OAAO4S,cAAcC,SAClB,GACL7S,EAASA,EAAO8S,wBACvBH,IAEN,IAAIN,EAAqB9X,EAAK6B,MAAMiW,mBAChClF,EAAe5S,EAAK6B,MAAM+Q,aAC9BkF,EAAmBxO,OAAO8O,EAAY,GACtCxF,EAAa9P,KAAKU,EAAEiC,OAAOsM,aAC3B/R,EAAKmD,SAAS,CACZyP,iBAECA,EAAa9H,OAAS,GACvB9K,EAAKmD,SAAS,CACZ4U,sBAAsB,KAhHb/X,EAqHjByY,SAAW,SAACjV,GAKV,IAJA,IAAIiU,EAAmBzX,EAAK6B,MAAM4V,iBAC9BG,EAAqB5X,EAAK6B,MAAM+V,mBAChChF,EAAegF,EAAmBnL,MAAM,KACxCqL,EAAqB,GAChBjV,EAAI,EAAGA,EAAI+P,EAAa9H,OAAQjI,IACvCiV,EAAmBhV,KAAK8P,EAAa/P,IAEvC4U,EAAiB3U,KAAK8U,GACtB5X,EAAKmD,SAAS,CACZyP,aAAc,GACdoF,mBAAmB,EACnBC,yBAAyB,EACzBF,sBAAsB,EACtBD,wBAnIa9X,EAuIjB0Y,aAAe,SAAClV,GACd,IAAIkU,EAAmB1X,EAAK6B,MAAM6V,iBAAiB7T,QAC/C4T,EAAmBzX,EAAK6B,MAAM4V,iBAAiB5T,QACpC7D,EAAK6B,MAAMiW,mBAAmBjU,QAAQ8U,KAAK,OAC1C3Y,EAAK6B,MAAM+V,oBACzBF,EAAiB5U,KAAK9C,EAAK6B,MAAM+V,oBACjC5X,EAAKmD,SAAS,CACZ+U,UAAW,mBACXD,yBAAyB,EACzBF,sBAAsB,EACtBC,mBAAmB,EACnBN,uBAIFD,EAAiB3U,KAAK9C,EAAK6B,MAAM+V,oBACjC5X,EAAKmD,SAAS,CACZ8U,yBAAyB,EACzBF,sBAAsB,EACtBC,mBAAmB,EACnBE,UAAW,iBACXtI,eAAe,EACf6H,uBA7JWzX,EAkKjB4U,gBAAkB,WAChB5U,EAAKmD,SAAS,CACZwU,SAAU,GACVzX,GAAI,EACJ0X,mBAAoB,GACpB7C,mBAAoB,GACpBY,aAAc,EACd+B,iBAAkB,GAClBD,iBAAkB,GAClB7E,aAAc,GACdqC,kBAAkB,EAClBC,eAAe,EACflC,gBAAgB,EAChBwC,mBAAmB,EACnByC,yBAAyB,EACzBF,sBAAsB,EACtBC,mBAAmB,EACnBF,mBAAoB,GACpBI,UAAW,GACXtI,eAAe,GACd,kBAAM5P,EAAK8V,iBAtLC9V,EAyLjB8V,YAAc,WACZ,IAAI5V,EAAKF,EAAK6B,MAAM3B,GACpBkE,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAMoT,EAAWpT,EAAIC,KACjBwR,EAAS,GACPA,EAAOlL,OAAS,GAAG,CACvB,IAAI8N,EAAKjB,EAAS/I,KAAKC,MAAMD,KAAKoH,SAAW2B,EAAS7M,UAC1B,IAAxBkL,EAAOtS,QAAQkV,IACjB5C,EAAOlT,KAAK8V,GAIO5C,EAAO9V,GAI9B,IAJA,IACM0X,EAAqB5B,EAAO9V,GAAI2X,QAChC9C,EAAqBiB,EAAO9V,GAAIqB,YAClCqR,EAAegF,EAAmBnL,MAAM,KACnC5J,EAAI+P,EAAa9H,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CAC9C,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADIgW,EAET,CAACjG,EAAavD,GAAIuD,EAAa/P,IAAnE+P,EAAa/P,GAFgCgW,EAAA,GAE5BjG,EAAavD,GAFewJ,EAAA,GAIlD7Y,EAAKmD,SAAS,CACVwU,SAAU3B,EACV4B,qBACA7C,qBACAnC,oBAhNR5S,EAAK6B,MAAQ,GAFE7B,mFASfG,KAAKyU,mDA8ME,IAAAzQ,EAAAhE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMoT,iBACX5U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACApQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,2BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,kFACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqW,eAA9B,yGAKR,KAEArW,KAAK0B,MAAMqT,cACX7U,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAWhW,UAAU,kBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,+BACfX,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,KACK9W,KAAK0B,MAAMkT,oBAEZ1U,EAAAC,EAAAC,cAAA,OAAKS,UAAS,kBAAAiM,OAAoB9M,KAAK0B,MAAMqW,YACxC/X,KAAK0B,MAAMiW,mBAAmBnV,IAAI,SAACC,EAAKgI,GAAN,OAC/BvK,EAAAC,EAAAC,cAAA,QAAMwC,IAAK6H,EAAO5J,UAAU,eAAeC,QAASkD,EAAKqU,aAAc5V,MAG9EzC,KAAK0B,MAAM+N,cACVvP,EAAAC,EAAAC,cAAA,OAAKS,UAAS,mCACXb,KAAK0B,MAAM+V,oBACL,KAEXvX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACZb,KAAK0B,MAAM+Q,aAAajQ,IAAI,SAACC,EAAMgI,GAAP,OAC3BvK,EAAAC,EAAAC,cAAA,QAAMU,QAASkD,EAAKgU,SAAUpV,IAAK6H,EAAO5J,UAAU,iBAAiB4B,MAGzEvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACdb,KAAK0B,MAAMkW,qBACV1X,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKuY,cAA9B,0DAAkE,KAEnEvY,KAAK0B,MAAMmW,kBACV3X,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKsY,UAA9B,yCAA0D,KAE3DtY,KAAK0B,MAAMoW,wBACV5X,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,gEAAuE,QAK5E,KAEF/R,KAAK0B,MAAMmR,eACX3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACe,IAAvCb,KAAK0B,MAAM4V,iBAAiB3M,OAC5BzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAK0B,MAAM6V,iBAAiB5M,OAAS3K,KAAK0B,MAAM6V,iBAAiB/U,IAAI,SAACC,EAAMgI,GAAP,OAClEvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,MAC7B,MAENvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAK0B,MAAM4V,iBAAiB9U,IAAI,SAACC,EAAMgI,GAAP,OAC7BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,QAIxCvC,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACGjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAMJF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM6V,iBAAiB5M,QAE/BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZ,EAAIb,KAAK0B,MAAM6V,iBAAiB5M,QAEnCzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,gEACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,kFAKvB,MAGL5F,EAAAC,EAAAC,cAAA,uBAxUehD,aCsORub,eArOd,SAAAA,EAAY7Y,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA2Y,IACjB9Y,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA2W,GAAAvW,KAAApC,KAAMF,KAWL2U,gBAAkB,WACjB5U,EAAKmD,SAAS,CACZ+D,MAAO,GACP2I,cAAe,GACfC,cAAe,GACf5P,GAAI,EACJgV,eAAe,EACf6D,iBAAiB,EACjBC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBlG,gBAAgB,GACf,kBAAMhT,EAAK8V,iBAxBC9V,EA2BhB8V,YAAc,WACX1R,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACd+O,EAAS,GACJ1Q,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKkI,OAAS,GAAG,CACrB,IAAI8N,EAAK1R,EAAM0H,KAAKC,MAAMD,KAAKoH,SAAW9O,EAAM4D,UACtB,IAAtBlI,EAAKc,QAAQkV,IACfhW,EAAKE,KAAK8V,GAGdrF,EAAOzQ,KAAKF,GAGd,IAAMiS,EAActB,EAAO,GAAG3E,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SACnE9K,EAAKmD,SAAS,CACZ+D,QACA2N,cACAtB,cA/COvT,EAmDfmZ,gBAAkB,WAChBnZ,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KAtDJlV,EA0DfoZ,cAAgB,SAAC/a,GACf,GAAIA,EAAK,CACP,IAAIyR,EAAgB9P,EAAK6B,MAAMiO,cAAcjM,QAC7CiM,EAAchN,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CACZ2M,gBACAkJ,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,QAEjB,CACL,IAAIrJ,EAAgB7P,EAAK6B,MAAMgO,cAAchM,QAC7CgM,EAAc/M,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CACZ0M,gBACAmJ,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,MA3EXlZ,EAgFfkS,iBAAmB,WACjB,IAAIhS,EAAKF,EAAK6B,MAAM3B,GAChBqT,EAASvT,EAAK6B,MAAM0R,OAExB,IADArT,GAAU,GACDqT,EAAOzI,OAAO,CACrB,IAAM+J,EAAetB,EAAOrT,GAAI0O,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SACrE9K,EAAKmD,SAAS,CACZjD,KACA2U,cACAmE,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,SAInBlZ,EAAKmD,SAAS,CACf6P,gBAAgB,EAChBgG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBhE,eAAe,EACf6D,iBAAiB,KArGR/Y,EA0GhBN,UAAY,WACT,IAAIiX,EAAU3W,EAAK6B,MAAM+U,YACzBjX,IAAOC,IAAI+W,IA1Gf3W,EAAK6B,MAAQ,GAFI7B,mFASfG,KAAKyU,mDAuGL,OACEvU,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMkX,gBACX1Y,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,yBAEbR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,gHACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKgZ,iBAA9B,yGAKR,KAEAhZ,KAAK0B,MAAMqT,cACZ7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,uBAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBAChBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAK0B,MAAMgT,YAAY/T,SAElCT,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMgT,YAAYxT,KACrChB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKT,UAAWsB,UAAU,sBAAsBU,MAAM,gEACnErB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,kBAGdlB,KAAK0B,MAAMmX,qBACV3Y,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,KAAYvT,KAAK0B,MAAMgT,YAAYtT,aACnClB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,OACU,MAGhBtQ,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACjB9T,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACvBb,KAAK0B,MAAMoX,eACZ5Y,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKiZ,cAAclY,KAAKf,MAAM,GAAOmI,SAAO,GAA7D,4BACAjI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKiZ,cAAclY,KAAKf,MAAM,GAAQmI,SAAO,GAA9D,0CACU,KAEXnI,KAAK0B,MAAMqX,mBACV7Y,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK+R,iBAAkB5J,SAAO,GAA/C,gEAAoE,SAM3E,KAEFnI,KAAK0B,MAAMmR,eACX3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACW,IAApCb,KAAK0B,MAAMgO,cAAc/E,OAC1BzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAK0B,MAAMiO,cAAcnN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAK0B,MAAMgO,cAAclN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,iBAIhElB,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACGjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMiO,cAAchF,QAE5BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM0R,OAAOzI,OAAS3K,KAAK0B,MAAMiO,cAAchF,QAEvDzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,gEACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,kFAKvB,MAGL5F,EAAAC,EAAAC,cAAA,uBAjOYhD,aCuTL8b,eArTd,SAAAA,EAAYpZ,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAkZ,IACjBrZ,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAkX,GAAA9W,KAAApC,KAAMF,KAWJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KAfJlV,EAmBfmG,aAAe,SAACZ,GACdvF,EAAKmD,SAAS,CACZ6B,OAAQO,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,IACpCkT,WAAY/T,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,OAtB7BpG,EA0BfuZ,iBAAmB,WACjB,IAAIzJ,EAAgB9P,EAAK6B,MAAMiO,cAAcjM,QACzCgM,EAAgB7P,EAAK6B,MAAMgO,cAAchM,QACzCgR,EAAc7U,EAAK6B,MAAMgT,YACzB7P,EAAShF,EAAK6B,MAAMmD,OAErB6P,EAAYxT,OAAS2D,GACtB8K,EAAchN,KAAK+R,GACnB7U,EAAKmD,SAAS,CACZ2M,gBACAkJ,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBzD,gBAAgB,EAChB+D,gBAAgB,EAChBC,eAAe,EACfzU,OAAQ,GACRkT,UAAW,sBAGI,KAAXlT,GACN6K,EAAc/M,KAAK+R,GACnB7U,EAAKmD,SAAS,CACZuW,oBAAoB,EACpB7J,gBACAmJ,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBzD,gBAAgB,EAChB+D,gBAAgB,EAChBC,eAAe,EACfzU,OAAQ,GACRkT,UAAW,iBACXoB,WAAY,8DAKdzJ,EAAc/M,KAAK+R,GACnB7U,EAAKmD,SAAS,CACZuW,oBAAoB,EACpB7J,gBACAmJ,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBzD,gBAAgB,EAChB+D,gBAAgB,EAChBC,eAAe,EACfzU,OAAQ,GACRkT,UAAW,qBA3EFlY,EAgFfkS,iBAAmB,WACjB,IAAIhS,EAAKF,EAAK6B,MAAM3B,GACpBA,GAAU,EACV,IAAMqT,EAASvT,EAAK6B,MAAM0R,OAC1B,GAAGrT,EAAKqT,EAAOzI,OAAQ,CACvB,IAAM+J,EAActB,EAAOrT,GAAI0O,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SAClE9K,EAAKmD,SAAS,CACZjD,KACA2U,cACAmE,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBzD,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,GACR0U,oBAAoB,SAInB1Z,EAAKmD,SAAS,CACf6P,gBAAgB,EAChBgG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBhE,eAAe,EACf6D,iBAAiB,EACjBtD,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBE,oBAAoB,EACpB1U,OAAQ,MA/GChF,EAmHhBN,UAAY,WACT,IAAIjB,EAAOuB,EAAK6B,MAAMgT,YAAYxT,KAClC1B,IAAOC,IAAInB,IArHEuB,EAwHhB2Z,UAAY,WACX3Z,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBgE,eAAe,KA3HFzZ,EA+HhB4U,gBAAkB,WACf5U,EAAKmD,SAAS,CACZ+D,MAAO,GACP2I,cAAe,GACfC,cAAe,GACf5P,GAAI,EACJgV,eAAe,EACf6D,iBAAiB,EACjBC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBlG,gBAAgB,EAChB0G,oBAAoB,EACpBE,YAAa,KACbC,iBAAkB,mBAClBpE,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,GACRsU,WAAY,GACZQ,UAAW,OACX5B,UAAW,IACV,kBAAMlY,EAAK8V,iBArJD9V,EAwJhB8V,YAAc,WACJ9V,EAAK6B,MAAM3B,GAClBkE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACd+O,EAAS,GACJ1Q,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKkI,OAAS,GAAG,CACrB,IAAI8N,EAAK1R,EAAM0H,KAAKC,MAAMD,KAAKoH,SAAW9O,EAAM4D,UACtB,IAAtBlI,EAAKc,QAAQkV,IACfhW,EAAKE,KAAK8V,GAGdrF,EAAOzQ,KAAKF,GAGd,IAAMiS,EAActB,EAAO,GAAG3E,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SAEnE9K,EAAKmD,SAAS,CACZ+D,QACA2N,cACAtB,UAAU,kBAAMzT,QAAQC,IAAIC,EAAK6B,MAAM0R,aA5KjDvT,EAAK6B,MAAQ,GAFI7B,mFASfG,KAAKyU,mDA0KL,OACEvU,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMkX,gBACX1Y,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACApQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,2BAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,2EACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqW,eAA9B,yGAKR,KAEArW,KAAK0B,MAAMqT,cACZ7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,wBAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,kBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,gBACrBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKT,UAAW4I,SAAO,GAACjI,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAM2I,KAAK,MAAMjJ,KAAK,gBAC9DlB,KAAK0B,MAAM2X,eACVnZ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAO9D,YAAY,qJAA6B3E,GAAG,aAAagF,SAAU/E,KAAKgG,eAAgB,MAIlGhG,KAAK0B,MAAMmX,qBACV3Y,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACCP,KAAK0B,MAAM6X,mBAAqBrZ,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,CAAW1S,UAAWb,KAAK0B,MAAMgY,kBAAmB1Z,KAAK0B,MAAMgT,YAAYxT,MAAmB,KAC7HhB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,CAAW1S,UAAWb,KAAK0B,MAAMqW,WAAY/X,KAAK0B,MAAMyX,YACxDjZ,EAAAC,EAAAC,cAACkQ,EAAA,EAAKiD,KAAN,CAAW1S,UAAWb,KAAK0B,MAAMiY,WAAY3Z,KAAK0B,MAAMgT,YAAYtT,aACpElB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,uBAClB,MAGhBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACnB9T,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACZb,KAAK0B,MAAM4T,eACXpV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAK0B,MAAMgT,YAAY/T,SAC7B,KAETX,KAAK0B,MAAM4X,cACVpZ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACXX,EAAAC,EAAAC,cAAA,KAAGU,QAASd,KAAKwZ,WAAjB,cACI,MAGTtZ,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,yBACvBb,KAAK0B,MAAMoX,eACZ5Y,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKoZ,iBAAkBjR,SAAO,GAA/C,2DACU,KAEXnI,KAAK0B,MAAMqX,mBACV7Y,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK+R,iBAAkB5J,SAAO,GAA/C,gEAAoE,SAO3E,KAEFnI,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACY,IAApCb,KAAK0B,MAAMgO,cAAc/E,OACzBzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAK0B,MAAMiO,cAAcnN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAK0B,MAAMgO,cAAclN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,iBAIlElB,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACGjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMiO,cAAchF,QAE5BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM0R,OAAOzI,OAAS3K,KAAK0B,MAAMiO,cAAchF,QAEvDzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,gEACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,kFAKrB,MAGL5F,EAAAC,EAAAC,cAAA,uBAjTUhD,aCIdwc,eAEL,SAAAA,EAAY9Z,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA4Z,IACjB/Z,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA4X,GAAAxX,KAAApC,KAAMF,KAWL2U,gBAAkB,WACjB5U,EAAKmD,SAAS,CACZ+D,MAAO,GACP2I,cAAe,GACfC,cAAe,GACf5P,GAAI,EACJgV,eAAe,EACf6D,iBAAiB,EACjBC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBlG,gBAAgB,EAChByC,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,GACR6P,YAAa,GACbmF,WAAW,EACXzG,OAAQ,GACR0G,UAAU,GACT,WACDja,EAAK8V,iBAjCQ9V,EAqCf8V,YAAc,WACH9V,EAAK6B,MAAM3B,GACpBkE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACd+O,EAAS,GACJ1Q,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,IADA,IAAID,EAAO,GACLA,EAAKkI,OAAS,GAAG,CACrB,IAAI8N,EAAK1R,EAAM0H,KAAKC,MAAMD,KAAKoH,SAAW9O,EAAM4D,UACtB,IAAtBlI,EAAKc,QAAQkV,IACfhW,EAAKE,KAAK8V,GAGdrF,EAAOzQ,KAAKF,GAGd,IAAMiS,EAActB,EAAO,GAAG3E,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SACnE9K,EAAKmD,SAAS,CACZ+D,QACA2N,cACAtB,cA1DOvT,EA8DfwW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KAjEJlV,EAqEfkS,iBAAmB,WACjB,IAAIhS,EAAKF,EAAK6B,MAAM3B,GACpBA,GAAU,EACV,IAAMqT,EAASvT,EAAK6B,MAAM0R,OAC1B,GAAIrT,EAAKqT,EAAOzI,OAAQ,CACtB,IAAM+J,EAAetB,EAAOrT,GAAI0O,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SACnE9K,EAAKmD,SAAS,CACZjD,KACA8Y,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBzD,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,GACR6P,cACAoF,UAAU,SAIXja,EAAKmD,SAAS,CACf6P,gBAAgB,EAChBgG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBhE,eAAe,EACf6D,iBAAiB,EACjBtD,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,MAnGChF,EAuGhBN,UAAY,WACT,IAAI2B,EAAOrB,EAAK6B,MAAM+U,YACtBjX,IAAOC,IAAIyB,IAzGErB,EA4GhB2Z,UAAY,WACX3Z,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBgE,eAAe,KA/GFzZ,EAoHhB6W,YAAc,SAAC3W,GACd,IAAIga,EAAela,EAAK6B,MAAM0R,OAAOvT,EAAK6B,MAAM3B,IAAIkL,KAAK,SAAAC,GAAC,OAAIA,EAAEnL,KAAOA,IACnE4P,EAAgB9P,EAAK6B,MAAMiO,cAAcjM,QACzCgM,EAAgB7P,EAAK6B,MAAMgO,cAAchM,QAC1C7D,EAAK6B,MAAMgT,YAAY3U,KAAOga,EAAaha,IAC5C4P,EAAchN,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBuE,WAAW,EACXlK,gBACAD,gBACAoK,UAAU,MAKZpK,EAAc/M,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBuE,WAAW,EACXlK,gBACAD,gBACAoK,UAAU,MA1ICja,EA+IhByY,SAAW,WACVzY,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBuE,WAAW,KAhJbha,EAAK+W,IAAM5K,IAAMC,YACnBpM,EAAK6B,MAAQ,GAHI7B,mFASfG,KAAKyU,mDA6IM,IAAAzQ,EAAAhE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMkX,gBACX1Y,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACApQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,mCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,mDACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqW,eAA9B,yGAKR,KAEArW,KAAK0B,MAAMqT,cACX7U,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAWhW,UAAU,kBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACfX,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,KACK9W,KAAK0B,MAAMgT,YAAYxT,KACtBhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,sBAAsBC,QAASd,KAAKT,UAAWgC,MAAM,gEACnErB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMX,UAAU,eAAgBK,KAAO,kBAG/ChB,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAWhW,UAAU,sBACpBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,iBACfb,KAAK0B,MAAM0R,OAAOpT,KAAK0B,MAAM3B,IAAIyC,IAAI,SAAClE,EAAMmM,GAAP,OAClCvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,EAAO5J,UAAU,sBAC/BX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KACXf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQyY,SAAU9V,EAAKtC,MAAMoY,SAAWlN,IAAK,SAAAgK,GAAS5S,EAAK4S,IAAMA,GAAS/V,UAAWmD,EAAKtC,MAAMsY,mBAAoBlZ,QAASkD,EAAK0S,YAAY3V,KAAKiD,EAAM1F,EAAKyB,KAAOzB,EAAK8C,kBAKlLlB,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWO,UAAU,sBACnBX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KACdf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKsY,SAAUzX,UAAU,QAA1C,6CAKPb,KAAK0B,MAAM4T,eACVpV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAK0B,MAAMgT,YAAY/T,MAAOE,UAAU,oBAGvDb,KAAK0B,MAAMmY,WAAa7Z,KAAK0B,MAAM4T,eAClCpV,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK+R,iBAAkB5J,SAAO,GAA/C,6HAA+E,MAEzE,QAKb,KAEFnI,KAAK0B,MAAMmR,eACX3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACU,IAApCb,KAAK0B,MAAMgO,cAAc/E,OAC3BzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAK0B,MAAMiO,cAAcnN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAK0B,MAAMgO,cAAclN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,iBAI9DlB,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACGjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAMJF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMiO,cAAchF,QAE5BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM0R,OAAOzI,OAAS3K,KAAK0B,MAAMiO,cAAchF,QAEvDzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,wCACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,kFAKvB,MAGL5F,EAAAC,EAAAC,cAAA,uBA/QmBhD,aA6RhBqE,mBARf,SAAyBC,GACvB,MAAO,CAACC,MAAOD,EAAME,UAGvB,SAA4BC,GAC1B,MAAO,CAACxE,QAASyE,YAAmBzE,EAASwE,KAGhCJ,CAA6CmY,ICf7CK,qBA/Qd,SAAAA,EAAYna,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAia,IACjBpa,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAiY,GAAA7X,KAAApC,KAAMF,KAYR2U,gBAAkB,WAChB5U,EAAKmD,SAAS,CACZ+D,MAAO,GACP2I,cAAe,GACfC,cAAe,GACf5P,GAAI,EACJgV,eAAe,EACf6D,iBAAiB,EACjBC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBlG,gBAAgB,EAChByC,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,GACR6P,YAAa,GACbmF,WAAW,EACXzG,OAAQ,GACR0G,UAAU,GACT,kBAAMja,EAAK8V,iBAjCG9V,EAoCjB8V,YAAc,WACH9V,EAAK6B,MAAM3B,GACpBkE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACd+O,EAAS,GACJ1Q,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKkI,OAAS,GAAG,CACrB,IAAI8N,EAAK1R,EAAM0H,KAAKC,MAAMD,KAAKoH,SAAW9O,EAAM4D,UACtB,IAAtBlI,EAAKc,QAAQkV,IACfhW,EAAKE,KAAK8V,GAGdrF,EAAOzQ,KAAKF,GAEd,IAAMiS,EAActB,EAAO,GAAG3E,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SACnE9K,EAAKmD,SAAS,CACZ+D,QACA2N,cACAtB,cAxDSvT,EA6DnBwW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KAhEAlV,EAoEnBkS,iBAAmB,WACjB,IAAIhS,EAAKF,EAAK6B,MAAM3B,GACpBA,GAAU,EACV,IAAMqT,EAASvT,EAAK6B,MAAM0R,OAC1B,GAAGrT,EAAKqT,EAAOzI,OAAQ,CACrB,IAAM+J,EAAetB,EAAOrT,GAAI0O,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAOrT,GAAI4K,SACtE9K,EAAKmD,SAAS,CACZjD,KACA2U,cACAmE,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBzD,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,GACRiV,UAAU,SAGTja,EAAKmD,SAAS,CACjB6P,gBAAgB,EAChBgG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBhE,eAAe,EACf6D,iBAAiB,EACjBtD,gBAAgB,EAChBgE,eAAe,EACfD,gBAAgB,EAChBxU,OAAQ,MAjGOhF,EAsGnBN,UAAY,WACV,IAAIuH,EAAWjH,EAAK6B,MAAM+U,YAC1BjX,IAAOC,IAAIqH,IAxGMjH,EA2GnB2Z,UAAY,WACV3Z,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBgE,eAAe,KA9GAzZ,EAkHhB6W,YAAc,SAAC3W,GACd,IAAIga,EAAela,EAAK6B,MAAM0R,OAAOvT,EAAK6B,MAAM3B,IAAIkL,KAAK,SAAAC,GAAC,OAAIA,EAAEnL,KAAOA,IACnE4P,EAAgB9P,EAAK6B,MAAMiO,cAAcjM,QACzCgM,EAAgB7P,EAAK6B,MAAMgO,cAAchM,QAC1C7D,EAAK6B,MAAMgT,YAAY3U,KAAOga,EAAaha,IAC5C4P,EAAchN,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBuE,WAAW,EACXlK,gBACAD,gBACAoK,UAAU,MAKZpK,EAAc/M,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBuE,WAAW,EACXlK,gBACAD,gBACAoK,UAAU,MAxICja,EA8InByY,SAAW,WACTzY,EAAKmD,SAAS,CACZsS,gBAAgB,EAChBuE,WAAW,KAjJIha,EAqJnBN,UAAY,WACV,IAAIuH,EAAWjH,EAAK6B,MAAMgT,YAAYxT,KACtC1B,IAAOC,IAAIqH,IArJTjH,EAAK+W,IAAM5K,IAAMC,YACjBpM,EAAK6B,MAAQ,GAHE7B,mFAUjBG,KAAKyU,mDAgJE,IAAAzQ,EAAAhE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACGrK,KAAK0B,MAAMkX,gBACV1Y,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACApQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,mCAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACAV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,mDACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACAtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqW,eAA9B,yGAKA,KAEDrW,KAAK0B,MAAMqT,cACV7U,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAWhW,UAAU,kBACrBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBAChBX,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,KACC9W,KAAK0B,MAAMgT,YAAYtT,YACxBlB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKT,UAAWsB,UAAU,uBACzCX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMX,UAAU,eAAgBK,KAAO,kBAGvChB,EAAAC,EAAAC,cAACyW,GAAA,EAAD,CAAWhW,UAAU,sBACrBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,iBACfb,KAAK0B,MAAM0R,OAAOpT,KAAK0B,MAAM3B,IAAIyC,IAAI,SAAClE,EAAMmM,GAAP,OACrCvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,EAAO5J,UAAU,sBACjCX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACAV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KAChBf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQyY,SAAU9V,EAAKtC,MAAMoY,SAAWlN,IAAK,SAAAgK,GAAS5S,EAAK4S,IAAMA,GAAS/V,UAAWmD,EAAKtC,MAAMsY,mBAAoBlZ,QAASkD,EAAK0S,YAAY3V,KAAKiD,EAAM1F,EAAKyB,KAAOzB,EAAK4C,WAK3KhB,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWO,UAAU,uBACrBX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACAV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KAChBf,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,UAAU,YAAYC,QAASd,KAAKsY,UAA5C,6CAKCtY,KAAK0B,MAAM4T,eACVpV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAK0B,MAAMgT,YAAY/T,MAAOE,UAAU,oBAGnDb,KAAK0B,MAAMmY,UACV3Z,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK+R,iBAAkB5J,SAAO,GAA/C,6HAA+E,MAGzE,QAKV,KAEDnI,KAAK0B,MAAMmR,eACX3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CACtCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBAChBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACAV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACY,IAApCb,KAAK0B,MAAMgO,cAAc/E,OAC5BzK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cACfb,KAAK0B,MAAMgO,cAAclN,IAAI,SAACC,EAAMgI,GAAP,OAC5BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,QAAsDuB,EAAKrB,gBAG7DlB,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACAjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAMRF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC5BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACdb,KAAK0B,MAAMiO,cAAchF,QAE1BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEA5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACdb,KAAK0B,MAAM0R,OAAOzI,OAAS3K,KAAK0B,MAAMiO,cAAchF,QAErDzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGA5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACxBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,gEACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAYjF,UAAU,iBAA/B,+DAKd,MAGJX,EAAAC,EAAAC,cAAA,uBA3Q6BhD,cC+EhB8c,eA9Eb,SAAAA,EAAYpa,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAka,IAChBra,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAkY,GAAA9X,KAAApC,KAAMF,KAiCNqa,KAAO,WACLxa,QAAQC,IAAIC,EAAK6B,QAnCH7B,EAsChB8I,SAAW,WACT9I,EAAKmD,SAAS,SAAC4F,GACb,MAAO,CAACC,QAASD,EAAKC,QAAU,MAtCpChJ,EAAK6B,MAAQ,CACX0Y,OAAQ,GACRra,GAAI,EACJmB,KAAM,GACNwM,YAAa,GACb2M,UAAW,KACX1Z,MAAO,GACPgN,KAAM,GACN9E,QAAS,GAVKhJ,mFAcE,IAAAmE,EAAAhE,KACdD,EAAKC,KAAK0B,MAAM3B,GAClBkE,IAAMC,IAAI,gBACPC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACbnD,EAAOkZ,EAAOra,GAAImB,KAClBwM,EAAc0M,EAAOra,GAAI2N,YACzB2M,EAAYD,EAAOra,GAAIsa,UACvB1Z,EAAQyZ,EAAOra,GAAIY,MACnBgN,EAAOyM,EAAOra,GAAI4N,KACvB3J,EAAKhB,SAAS,CACboX,SACAlZ,OACAwM,cACA2M,YACA1Z,QACAgN,4CAeR,OACEzN,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKma,MAAtB,WACAja,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,oBACnCb,KAAK0B,MAAM0Y,OAAO1W,MAAM,EAAE1D,KAAK0B,MAAMmH,SAASrG,IAAI,SAAC8X,EAAM7P,GAAP,OACjDvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK4Z,EAAM3Z,QAClBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,iBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAcsZ,EAAMpZ,MACpBhB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KAAmB8J,EAAM5M,cAE3BxN,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,EAACnT,UAAU,eAC3BX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAIwU,EAAM3M,MAAO2M,EAAMpZ,WAKnChB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbb,KAAK0B,MAAMmH,QAAU7I,KAAK0B,MAAM0Y,OAAOzP,QAChCzK,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK2I,SAAUR,SAAO,GAAvC,4DAIVjI,EAAAC,EAAAC,cAAA,uBAzEWhD,aCqYNmd,eAnYb,SAAAA,EAAYza,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAua,IAChB1a,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAuY,GAAAnY,KAAApC,KAAMF,KAUN2U,gBAAkB,WAChB5U,EAAKmD,SAAS,CACZwX,MAAO,GACPvX,QAAS,GACT0E,cAAe,GACf5E,MAAO,KACPsM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACfsI,sBAAsB,EACtBpI,iBAAiB,EACjBjO,MAAO,GACPiL,QAAS,GACT7L,MAAO,KACPyO,aAAc,GACdqL,iBAAkB,GAClBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,EACbC,YAAa,GACbC,kBAAmB,GACnBC,uBAAwB,GACxBC,qBAAsB,GACtBC,aAAc,EAEdC,WAAY,IACX,kBAAMxb,EAAK8V,iBAxCA9V,EA2ChB8V,YAAc,WACZ1R,IAAMC,IAAI,eACPC,KAAK,SAAAC,GACJ,IAAIoW,EAAQpW,EAAIC,KACZ+K,EAAe,GACnBoL,EAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAAiB2E,EAAazM,KAAKF,EAAK+J,WAClD3M,EAAKmD,SAAS,CACZwX,QACApL,gBACC,kBAAMvP,EAAKyb,qBApDJzb,EAwDhByb,cAAgB,WACd,IAAIrY,EAAU,GACdpD,EAAK6B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMC,GAAP,OACPO,EAAQN,KAAK,CACTC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAK8Y,WACXxY,MAAON,EAAK8Y,eAE9B1b,EAAKmD,SAAS,CACZC,WACC,kBAAMpD,EAAKqD,eAlEArD,EAqEhBqD,UAAY,WACV,IAAID,EAAUpD,EAAK6B,MAAMuB,QAAQS,QAElBT,EACVT,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIJ,EAAQI,KAAIb,IAAI,SAAAa,GAAC,OAAIJ,EAAQI,KAC9CxD,EAAKmD,SAAS,CACZC,aA7EYpD,EAiFhB2b,YAAc,WACZ,IAAI7T,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,mBApFY9H,EAwFhBgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAK2b,iBAxFrD3b,EA0FhB4b,SAAW,SAAC1b,GACV,IAAIya,EAAQ3a,EAAK6B,MAAM8Y,MAAM9W,QACzBnC,EAAQiZ,EAAMza,GAAIwB,MAClBiL,EAAUgO,EAAMza,GAAIyM,QACpB7L,EAAQ6Z,EAAMza,GAAIY,MACtBd,EAAK6b,aACL7b,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACf/N,QACAiL,UACA7L,SACC,kBAAMd,EAAK8b,gBAvGA9b,EA0GhB+b,YAAc,WACZ/b,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACjBF,aAAc,GACdqL,iBAAkB,GAClBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,EACbC,YAAa,GACbC,kBAAmB,GACnBC,uBAAwB,GACxBC,qBAAsB,MA1HRtb,EAiIhB8b,WAAa,WACX,IAAIb,EAAkB,GAElBJ,EADqB7a,EAAK6B,MAAM8K,QAAQ9I,QACC4I,MAAM,MACnDoO,EAAmBmB,MAEnB,IADA,IAAIC,EAAmB,GACdpZ,EAAI,EAAGA,EAAIgY,EAAmB/P,OAAQjI,IAC9CoZ,EAAiBnZ,KAAK+X,EAAmBhY,GAAG4J,MAAM,MAEnD,IAAIyP,EAAmBrB,EAAmB,GAAGpO,MAAM,KAC/CuO,EAAqB,GACrBmB,EAAuB,GAC3B,IAAStZ,EAAI,EAAGA,EAAIoZ,EAAiBnR,OAAQjI,IAAK,CACjD,IAAIwM,EAAIT,KAAKC,MAAMD,KAAKoH,SAASiG,EAAiBpZ,GAAGiI,QACrDkQ,EAAmBlY,KAAKmZ,EAAiBpZ,GAAGwM,IAC5C8M,EAAqBrZ,KAAKuM,GAE3B,IAAI2G,EAASkG,EAAiBtN,KAAKC,MAAMD,KAAKoH,SAASkG,EAAiBpR,SACpEiQ,EAAoB,GAExB,IAASlY,EAAI,EAAGA,EAAIoZ,EAAiBnR,OAAQjI,IAAK,CAEhD,IADD,IAAIuZ,EAASH,EAAiBpZ,GACpBwM,EAAI,EAAGA,EAAI+M,EAAOtR,OAAQuE,IAC9B4L,EAAgBnY,KAAKsZ,EAAO/M,IAC5BA,IAAM8M,EAAqBtZ,GAC9BkY,EAAkBjY,KAAKzC,EAAAC,EAAAC,cAAA,QAAMS,UAAU,iBAAiBob,EAAO/M,KAG/D0L,EAAkBjY,KAAKzC,EAAAC,EAAAC,cAAA,QAAMU,QAASjB,EAAKqc,WAAYrb,UAAU,oBAGnE+Z,EAAkBjY,KAAKzC,EAAAC,EAAAC,cAAA,QAAMS,UAAU,gBAAhB,MAGzBhB,EAAKmD,SAAS,CACb0X,qBACCqB,mBACApB,kBAAmB9E,EACnB+E,oBACAoB,uBACAnB,qBACAiB,mBACAhB,mBACC,kBAAMjb,EAAKwX,kBA5KAxX,EA+KjBmY,SAAW,SAAC3U,GAWT,IAVA,IAAI0X,EAAclb,EAAK6B,MAAMqZ,YACzBC,EAAc,GAGdH,GAFmBhb,EAAK6B,MAAMoa,iBAAiBpY,QAC3B7D,EAAK6B,MAAMkZ,kBAAkBlX,QAC5B7D,EAAK6B,MAAMmZ,mBAAmBnX,SAEnDyY,GADuBtc,EAAK6B,MAAMsa,qBAAqBtY,QACnCL,EAAEiC,OAAOsM,aAC7BwK,EAAgB,GAChBjB,EAAuB,GACvBkB,EAAsBvG,SAASwG,uBAAuB,wBAAwB,GAAGnE,SAC5EzV,EAAI,EAAGA,EAAI2Z,EAAoB1R,OAAQjI,IACR,kBAApC2Z,EAAoB3Z,GAAG7B,YACzBsa,EAAqBxY,KAAKD,GAC1B0Z,EAAczZ,KAAK0Z,EAAoB3Z,KAGzC,IAASA,EAAI,EAAGA,EAAIyY,EAAqBxQ,OAAQjI,IAChDsY,EAAYrY,KAAKD,GAElB,IAASA,EAAI,EAAGA,EAAI2Z,EAAoB1R,OAAQjI,IACN,kBAApC2Z,EAAoB3Z,GAAG7B,WAAmC6B,GAAKyY,EAAqBJ,KACxFsB,EAAoB3Z,GAAGkP,YAAcuK,GAGzChB,EAAqBhS,OAAO4R,EAAa,GACvC,IAAIG,EAAyBrb,EAAK6B,MAAMwZ,uBAAuBxX,QAC3DuX,EAAoBpb,EAAK6B,MAAMuZ,kBAAkBvX,QACjD4B,EAASjC,EAAEiC,OACf4V,EAAuBvY,KAAK2C,EAAOsM,aAEjC,IADF,IAAIqG,EAAc,EACP3S,EAASA,EAAO8S,wBACvBH,IAGJgD,EAAkB9R,OAAO8O,EAAa,GACL,IAA7BgD,EAAkBtQ,QACrB9K,EAAKmD,SAAS,CACb4U,sBAAsB,IAIxBmD,IACAlb,EAAKmD,SAAS,CACf+X,cACAC,cACAG,uBACAN,qBACAK,yBACAD,uBAhOepb,EAqOnBwX,aAAe,WAEX,IADH,IAAIkF,EAAQ1c,EAAK6B,MAAMmZ,mBAAmBnX,QAC9BhB,EAAI6Z,EAAM5R,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CACvC,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADH6T,EAEhB,CAACgG,EAAMrN,GAAIqN,EAAM7Z,IAAvC6Z,EAAM7Z,GAFgC6T,EAAA,GAE5BgG,EAAMrN,GAFsBqH,EAAA,GAI3C1W,EAAKmD,SAAS,CACViY,kBAAmBsB,KA5OR1c,EAgPhBqc,WAAa,SAAC7Y,GACb,IAAI4X,EAAoBpb,EAAK6B,MAAMuZ,kBAAkBvX,QAChD8Y,EAAUnZ,EAAEiC,OAChB,GAA6B,KAAzBjC,EAAEiC,OAAOsM,YAAoB,CAC9BqJ,EAAkBtY,KAAKU,EAAEiC,OAAOsM,aAChC4K,EAAQC,UAAY,GACpB5c,EAAKmD,SAAS,CACbiY,kBAAmBA,IAGpB,KAASuB,EAAUA,EAAQpE,wBACzBH,IA3PSpY,EAgQhB6c,WAAa,SAACrZ,GAKb,IAJA,IAAI6X,EAAyBrb,EAAK6B,MAAMwZ,uBAAuBxX,QAC3DiZ,EAAqB9c,EAAK6B,MAAMmZ,mBAAmBnX,QACnDuX,EAAoBpb,EAAK6B,MAAMuZ,kBAAkBvX,QACjDkZ,EAAQ,EACHla,EAAI,EAAGA,EAAIia,EAAmBhS,OAAQjI,IAC1Cia,EAAmBja,KAAOwY,EAAuBxY,GACpDka,IAGA3B,EAAkBtY,KAAKuY,EAAuBxY,IAIhD,IAAI0Y,EAAewB,EACnB/c,EAAKmD,SAAS,CACb4U,sBAAsB,EACtBpI,iBAAiB,EACjBD,qBAAqB,EACrB6L,eACAH,uBApRcpb,EAwRhBgd,SAAW,WACV,IAAIC,EAAQjd,EAAK6B,MAAMqb,WACvBD,GAAgB,EAChBjd,EAAKmD,SAAS,CACbwM,iBAAiB,EACjBD,qBAAqB,EACrBwN,WAAYD,GACV,kBAAMjd,EAAK6b,gBA/RC7b,EAkShB6b,WAAa,WAGZ,IAFA,IAAIqB,EAAald,EAAK6B,MAAMqb,WACxBD,EAAQ,GACHpa,EAAI,EAAGA,EAAIqa,EAAYra,IAC/Boa,EAAMna,KAAKzC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,OAAOiJ,KAAK,SAEnCtK,EAAKmD,SAAS,CACbqY,WAAYyB,KAvSdjd,EAAK6B,MAAQ,CACT8Y,MAAO,IAHK3a,mFAQdG,KAAKyU,mDAsSA,IAAAzQ,EAAAhE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACdb,KAAK0B,MAAM4N,eAAiBtP,KAAK0B,MAAM8Y,MAAM7P,OAC5CzK,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACnCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,YAGhB,KAERjD,KAAK0B,MAAM8Y,MAAM7P,QAAU3K,KAAK0B,MAAM2N,gBACtCnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,cAAc0P,YAAa,GAChDvQ,KAAK0B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BzG,EAAKtC,MAAMiG,eAAuD,KAA7B3D,EAAKtC,MAAMiG,eAAwB3D,EAAKtC,MAAMiG,gBAAkBlF,EAAK8Y,aAChJrb,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,SAEnBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAcyB,EAAKlB,OACnBrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACG/N,EAAK+J,QAAQvG,OAAO,EAAE,KAAO,SAGlC/F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASkD,EAAKyX,SAAS1a,KAAKiD,EAAMvB,EAAK1C,KAA/C,2EAGY,KAEhBC,KAAK0B,MAAM6N,oBACTrP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aACnB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAGzBjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4DAC1Bb,KAAK0B,MAAMkZ,oBAGnB1a,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdb,KAAK0B,MAAMuZ,kBAAkBzY,IAAI,SAACC,EAAMgI,GAAP,OACjCvK,EAAAC,EAAAC,cAAA,QAAMU,QAASkD,EAAKgU,SAAUpV,IAAK6H,EAAO5J,UAAU,iBAAiB4B,KAErEzC,KAAK0B,MAAMkW,qBACX1X,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK0c,YAAtB,0DAAuD,OAG9C,KAET1c,KAAK0B,MAAM8N,gBACVtP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4DAC3BX,EAAAC,EAAAC,cAAA,8IAA6BJ,KAAK0B,MAAM0Z,aAAxC,iBAA0Dpb,KAAK0B,MAAMmZ,mBAAmBlQ,OAAxF,gCAGHzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,wCACCvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAEjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,gFAEX,OAIlB5F,EAAAC,EAAAC,cAAA,uBA9XgBhD,aCElB4f,eAEL,SAAAA,EAAYld,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAgd,IACjBnd,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAgb,GAAA5a,KAAApC,KAAMF,KAwDN2U,gBAAkB,aAzDD5U,EA6DjB8V,YAAc,aA7DG9V,EAiEfwW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,GACd,kBAAMlV,EAAK6B,MAAMub,oBArEPpd,EAwEfqd,eAAiB,WACf,IAAIC,EAAsBrH,SAASsH,eAAe,iBAAiBxL,YAC/DyL,EAAoBxd,EAAK6B,MAAM2b,kBAC/BC,EAAoBzd,EAAK6B,MAAM4b,kBAC/BC,EAAkB1d,EAAK6B,MAAM6b,gBACJ1d,EAAK6B,MAAM8b,yBAEVL,EAC5BE,EAAkB1a,KAAK4a,IAIvBD,EAAkB3a,KAAK4a,GACvB5d,QAAQC,IAAI0d,IAEdzd,EAAKmD,SAAS,CACZ6V,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBsE,oBACAC,qBAEC,kBAAMzd,EAAKkS,sBA9FDlS,EAiGfkS,iBAAmB,WACjB,IAAIpH,EAAS9K,EAAK6B,MAAM+b,aAAa9S,OACjC8S,EAAe5d,EAAK6B,MAAM+b,aAC1BC,EAAQ7d,EAAK6B,MAAM3B,GACvB2d,GAAgB,EACF7d,EAAK6B,MAAM8Y,MACzB,GAAGkD,EAAQ/S,EAAO,CACjB,IAAI4S,EAAkBE,EAAaC,GAAS,IACxCF,EAAyBC,EAAaC,GAAO3S,QAAQ,6BAA8B,IAAIb,cAE1FrK,EAAKmD,SAAS,CACZjD,GAAI2d,EACJH,kBACAC,yBACA3E,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,SAKtBlZ,EAAK6B,MAAMic,gBACX9d,EAAKmD,SAAS,CACV6P,gBAAgB,EAChBgG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBhE,eAAe,EACf6D,iBAAiB,KA7HV/Y,EAkIf+d,WAAa,WACX/d,EAAK6B,MAAMmc,kBACXhe,EAAKkS,oBApIQlS,EAuIfie,mBAAqB,WACpB,IAAIC,EAAale,EAAKC,MAAMie,WACxBC,EAAgBD,EAAWE,UAAU,EAAEF,EAAWpT,OAAS,GAC/D9K,EAAKC,MAAMie,WAAaC,GAxI3Bne,EAAK6B,MAAQ,CACb8Y,MAAO,GACP8C,kBAAmB,GACnBD,kBAAmB,GACnBtd,GAAI,EACJme,YAAa,GACbC,mBAAoB,GACpBZ,gBAAiB,GACjBxI,eAAe,EACf6D,iBAAiB,EACjBC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBlG,gBAAgB,EAChBuL,mBAAmB,EACnBnb,QAAS,CACPob,WAAW,GAEbN,WAAY,GACZF,gBAAiB,KACjBS,iCAAkC,KAClCC,YAAa,KACbtB,eAAgB,KAChBU,cAAe,KACfF,aAAc,GACde,iBAAiB,GA3BA3e,mFA+BG,IAAAmE,EAAAhE,KACZD,EAAKC,KAAK0B,MAAM3B,GACpBkE,IAAMwa,IAAI,CACNxa,IAAMC,IAAI,iBAEXC,KAAKF,IAAMya,OAAO,SAACC,GAClB,IAAMnE,EAAQmE,EAASta,KACjB6Z,EAAc1D,EAAMza,GAAIyM,QAC1BiR,EAAeS,EAAY5R,MAAM,MAAM5I,MAAM,EAAE,GAC/C6Z,EAAkBE,EAAa1d,GAAM,IACZ0d,EAAa1d,GAAIgL,QAAQ,6BAA8B,IAAIb,cACxFlG,EAAKhB,SAAS,CACZwX,QACA+C,kBACAE,eACAS,cACAH,WAAY/Z,EAAKlE,MAAMie,WACvBF,gBAAiB7Z,EAAKlE,MAAM+d,gBAC5BS,iCAAkCta,EAAKlE,MAAMwe,iCAC7CC,YAAava,EAAKlE,MAAMye,YACxBtB,eAAgBjZ,EAAKlE,MAAMmd,eAC3BU,cAAe3Z,EAAKlE,MAAM6d,eACzB,kBAAM3Z,EAAKtC,MAAMic,sDAwFnB,IAEAI,EAAc/d,KAAKF,MAAnBie,WAEP,OAAK/d,KAAK0B,MAAM4c,kCAGhBte,KAAK0B,MAAM6c,YAAYK,KAAO,QAE5B1e,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMkX,gBACX1Y,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,6BAEbR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,iFACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqW,eAA9B,4CAIQ,KAEhBrW,KAAK0B,MAAMqT,cACV7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,uBAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,oCACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,wBAAvB,6JAGAX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,sBAAsBb,KAAK0B,MAAM6b,iBAExDrd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkBzQ,GAAG,gBAAgBc,UAAU,+BAC/CX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,sBACbkd,EADH,KAEG/d,KAAKF,MAAMie,WAAWpT,OACvBzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAA8BC,QAAWd,KAAK8d,oBAC5D5d,EAAAC,EAAAC,cAAA,QAAMS,UAAU,YAAhB,KACAX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,uBACfX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAO,aAEN,OAIbhB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACjB9T,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACvBb,KAAK0B,MAAMoX,eACZ5Y,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKkd,eAAgB/U,SAAO,GAA7C,2DACU,KAEXnI,KAAK0B,MAAMqX,mBACV7Y,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK4d,WAAYzV,SAAO,GAAzC,gEAA8D,SAKzD,KAEhBnI,KAAK0B,MAAMmR,eACX3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,oCACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACgB,IAAxCb,KAAK0B,MAAM4b,kBAAkB3S,OAC7BzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAK0B,MAAM2b,kBAAkB7a,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAK0B,MAAM4b,kBAAkB9a,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,iBAIlElB,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACGjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM2b,kBAAkB1S,QAEhCzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM4b,kBAAkB3S,QAEhCzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,gEACAjI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,kFAIX,MAGnB5F,EAAAC,EAAAC,cAAA,iBAjHK,YApJehD,aA2QbyhB,OAAkB,CAACR,WAAW,GAA9BQ,CAAsC7B,ICsLtC8B,eAhcd,SAAAA,EAAYhf,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA8e,IACjBjf,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA8c,GAAA1c,KAAApC,KAAMF,KA2BN6V,YAAc,WACZ1R,IAAMC,IAAI,eACPC,KAAK,SAAAC,GACJ,IAAIoW,EAAQpW,EAAIC,KACZ+K,EAAe,GACnBoL,EAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAAiB2E,EAAazM,KAAKF,EAAK+J,WAClD3M,EAAKmD,SAAS,CACZwX,QACApL,gBACC,kBAAMvP,EAAKkf,wBArCHlf,EAyCjB4U,gBAAkB,WAChB5U,EAAKmD,SAAS,CACZwX,MAAO,GACPpL,aAAc,GACdC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfnD,QAAS,GACT7L,MAAO,KACPiP,mBAAoB,GACpBC,kBAAmB,GACnBC,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,GACb,kBAAMxQ,EAAK8V,iBAhEC9V,EA0Ef4b,SAAW,SAAC1b,GACV,IAAIya,EAAQ3a,EAAK6B,MAAM8Y,MAAM9W,QAEzBnC,EAAQiZ,EAAMza,GAAIwB,MAClBiL,EAAUgO,EAAMza,GAAIyM,QACpB7L,EAAQ6Z,EAAMza,GAAIY,MACtBd,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACf/N,QACAiL,UACA7L,WAtFWd,EA2Ffkf,iBAAmB,WACjBlf,EAAKmD,SAAS,CACZqM,iBAAiB,GAChB,kBAAMxP,EAAKmf,qBA9FDnf,EAiGf+b,YAAc,WACZ/b,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACfF,aAAc,GACdqL,iBAAkB,GAClBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,EACbC,YAAa,GACbC,kBAAmB,GACnBC,uBAAwB,GACxBC,qBAAsB,GACtB3L,iBAAiB,EACjBC,eAAe,EACfK,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,KA3HHxQ,EA+Hfof,UAAY,WACV,IAAI/O,EAAe,GACf1D,EAAU3M,EAAK6B,MAAM8K,QACrBkO,EAAqBlO,EAAQF,MAAM,MACvCoO,EAAmBmB,MACnB,IAAIhM,EAAoBrD,EAAQF,MAAM,MACtCuD,EAAkBgM,MAClB,IAAK,IAAInZ,EAAI,EAAGA,EAAIgY,EAAmB/P,OAAQjI,IAC1CwN,EAAavN,KAAK,uBAEvB,IAAK,IAAID,EAAIgY,EAAmB/P,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CACpD,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADUoB,EAEH,CAAC4W,EAAmBxL,GAAIwL,EAAmBhY,IAA3FgY,EAAmBhY,GAFgCoB,EAAA,GAE5B4W,EAAmBxL,GAFSpL,EAAA,GAIxDjE,EAAKmD,SAAS,CACZuM,qBAAqB,EACrB2P,yBAAyB,EACzBtP,mBAAoB8K,EACpB7K,oBACAK,gBAEC,kBAAMrQ,EAAKsf,oBApJDtf,EAuJfgE,aAAe,SAACuB,GACfvF,EAAKmD,SAAS,CACZ+M,QAAS3K,EAAME,OAAOvC,SAzJVlD,EA6Jfuf,KAAO,WACH,IAAIrP,EAAUtB,KAAKC,MAAM7O,EAAK6B,MAAMsO,iBAAmB,IACnDF,EAAUjQ,EAAK6B,MAAMsO,iBAA8B,GAAVD,EAe7C,GAdAlQ,EAAKmD,SAAS,CACZ+M,UACAD,YAEEA,EAAU,IACZjQ,EAAKmD,SAAS,CACZ8M,QAAS,IAAMjQ,EAAK6B,MAAMoO,UAG1BC,EAAU,IACZlQ,EAAKmD,SAAS,CACZD,MAAO,IAAMgN,IAGD,IAAZA,EAA4B,IAAZD,EAAe,CACjC,IAAI0D,EAAO3T,EAAK6B,MAAMyO,kBAClBE,EAAe5B,KAAKC,MAAM8E,EAAO,IACjCpD,EAAevQ,EAAK6B,MAAMyO,kBAA+B,GAAVJ,EACnDsP,cAAcxf,EAAK6B,MAAMuO,gBACzBpQ,EAAKyf,YACLzf,EAAKmD,SAAS,CACZqN,eACAD,iBAIJvQ,EAAK6B,MAAMsO,mBACXnQ,EAAK6B,MAAMyO,qBA3LAtQ,EA+Lfsf,eAAiB,WACbtf,EAAK6B,MAAMuO,eAAiBsP,YAAY1f,EAAKuf,KAAM,KACnD,IAAI5L,EAAO3T,EAAK6B,MAAMqO,QACtBlQ,EAAK6B,MAAMsO,iBAA0B,GAAPwD,GAlMnB3T,EAqMjB2f,YAAc,SAACnc,EAAGoH,GAChB5K,EAAK4f,YAAc5f,EAAK6B,MAAMkO,mBAAmBnF,GACjDpH,EAAEqc,aAAaC,cAAgB,OAC/Btc,EAAEqc,aAAaE,QAAQ,YAAavc,EAAEiC,QACtCjC,EAAEqc,aAAaG,aAAaxc,EAAEiC,OAAQ,GAAI,KAzM3BzF,EA4MjBigB,WAAa,SAAArV,GACX,IAAMsV,EAAkBlgB,EAAK6B,MAAMkO,mBAAmBnF,GAGtD,GAAI5K,EAAK4f,cAAgBM,EAAzB,CAKA,IAAIxd,EAAQ1C,EAAK6B,MAAMkO,mBAAmBpM,OAAO,SAAAf,GAAI,OAAIA,IAAS5C,EAAK4f,cAGvEld,EAAM4G,OAAOsB,EAAO,EAAG5K,EAAK4f,aAE5B5f,EAAKmD,SAAS,CAAE4M,mBAAoBrN,MA1NrB1C,EA6NjBmgB,UAAY,WACVngB,EAAKogB,WAAa,MA9NHpgB,EAiOjBqgB,eAAiB,WAMf,IALA,IAAIrQ,EAAoBhQ,EAAK6B,MAAMmO,kBAC/BsQ,EAAoBtgB,EAAK6B,MAAMkO,mBAE/BM,EAAerQ,EAAK6B,MAAMwO,aAAaxM,QACvC0c,EAAa,EACR1d,EAAI,EAAGA,EAAIyd,EAAkBxV,OAAQjI,IACxCyd,EAAkBzd,KAAOmN,EAAkBnN,IAC7CwN,EAAaxN,GAAK,sBAClB0d,KAGAlQ,EAAaxN,GAAK,sBAGP,GAAZ0d,GACDvgB,EAAKwgB,YAGPxgB,EAAKmD,SAAS,CACZkN,kBArParQ,EA2PjByf,UAAW,WACTzf,EAAKmD,SAAS,CACZyM,eAAe,EACfyP,yBAAyB,KA9PZrf,EAkQjBwgB,UAAY,WACR,IAAI7M,EAAO3T,EAAK6B,MAAMyO,kBAClBE,EAAe5B,KAAKC,MAAM8E,EAAO,IACjCpD,EAAevQ,EAAK6B,MAAMyO,kBAAoC,GAAfE,EAEnDgP,cAAcxf,EAAK6B,MAAMuO,gBACzBpQ,EAAKmD,SAAS,CACZwM,iBAAiB,EACjB0P,yBAAyB,EACzB7O,eACAD,kBA5QWvQ,EAgRjBgd,SAAW,WACPhd,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACfE,iBAAiB,EACjBC,eAAe,EACfK,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,KA9RHxQ,EAmSfmf,gBAAkB,WAChB,IAAI1c,EAAW,GACfzC,EAAK6B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAK8Y,WACXxY,MAAON,EAAK8Y,eAE9B1b,EAAKmD,SAAS,CACZC,QAASX,GACR,kBAAMzC,EAAKqD,eA7SDrD,EAgTfqD,UAAY,WACV,IAAIC,EAAMtD,EAAK6B,MAAMuB,QAEfG,EAASD,EACZX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,EACTkM,eAAe,KAzTJzP,EA6TfygB,eAAiB,WACDzgB,EAAK6B,MAAMuB,QAAQS,QAAjC,IACIiE,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,mBAjUW9H,EAqUf0gB,WAAa,SAACld,EAADkT,GAAA,IAAMxT,EAANwT,EAAMxT,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAKygB,oBAnUrEzgB,EAAK6B,MAAQ,CACT8Y,MAAO,GACPpL,aAAc,GACdC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfnD,QAAS,GACT7L,MAAO,KACPiP,mBAAoB,GACpBC,kBAAmB,GACnBC,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACd1I,cAAe,IAxBF9H,mFAqEfG,KAAKyU,mDAkQE,IAAAzQ,EAAAhE,KAEP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACVb,KAAK0B,MAAM4N,cACVpP,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACnCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAKugB,WACjBtd,QAASjD,KAAK0B,MAAMuB,YAGhB,KAEVjD,KAAK0B,MAAM8Y,MAAM7P,QAAU3K,KAAK0B,MAAM2N,gBACxCnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,cAAc0P,YAAa,GAChDvQ,KAAK0B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BzG,EAAKtC,MAAMiG,eAAuD,KAA7B3D,EAAKtC,MAAMiG,eAAwB3D,EAAKtC,MAAMiG,gBAAkBlF,EAAK8Y,aAChJrb,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,SAEnBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAcyB,EAAKlB,OACnBrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACG/N,EAAK+J,QAAQvG,OAAO,EAAE,KAAO,SAGlC/F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASkD,EAAKyX,SAAS1a,KAAKiD,EAAMvB,EAAK1C,KAA/C,2EAGY,KAEhBC,KAAK0B,MAAM6N,oBACTrP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,0EACxBb,KAAK0B,MAAM8K,SAEftM,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKif,WAA9B,6DAEI,KAETjf,KAAK0B,MAAMwd,wBACVhf,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,SAASb,KAAK0B,MAAMqO,QAAlC,IAA4C/P,KAAK0B,MAAMoO,SACvD5P,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,0EACzBb,KAAK0B,MAAMkO,mBAAmBpN,IAAI,SAACC,EAAM+d,GAAP,OAC/BtgB,EAAAC,EAAAC,cAAA,KAAGS,UAAW,+BAAiCmD,EAAKtC,MAAMwO,aAAasQ,GACnEC,WAAS,EACT7d,IAAO4d,EACPV,WAAY,kBAAM9b,EAAK8b,WAAWU,IAClChB,YAAa,SAAAnc,GAAC,OAAIW,EAAKwb,YAAYnc,EAAGmd,IACtCR,UAAWhc,EAAKgc,WAAavd,EAAO,QAI9CvC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKkgB,gBAA9B,4DAEM,KAEXlgB,KAAK0B,MAAM8N,gBACVtP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,gFAC1BX,EAAAC,EAAAC,cAAA,oLACAF,EAAAC,EAAAC,cAAA,oEAAeJ,KAAK0B,MAAM2O,aAA1B,mCAA+CrQ,KAAK0B,MAAM0O,aAA1D,4CAGJlQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK6c,UAA9B,wCACA3c,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK4b,aAA9B,sFAEM,KAEX5b,KAAK0B,MAAM+N,cACVvP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4DAC1BX,EAAAC,EAAAC,cAAA,6EAGJF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK6c,UAA9B,wCACA3c,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK4b,aAA9B,sFAEM,OAIlB1b,EAAAC,EAAAC,cAAA,uBA5bmBhD,gCCgdZsjB,eA5cd,SAAAA,EAAY5gB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA0gB,IACjB7gB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA0e,GAAAte,KAAApC,KAAMF,KAyCJkf,gBAAkB,WAChB,IAAI1c,EAAW,GACfzC,EAAK6B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAK8Y,WACXxY,MAAON,EAAK8Y,eAE9B1b,EAAKmD,SAAS,CACZC,QAASX,GACR,kBAAMzC,EAAKqD,eApDDrD,EAuDfqD,UAAY,WACV,IAAIC,EAAMtD,EAAK6B,MAAMuB,QAEfG,EAASD,EACZX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,EACTkM,eAAe,KAhEJzP,EAoEfygB,eAAiB,WACDzgB,EAAK6B,MAAMuB,QAAQS,QAAjC,IACIiE,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,mBAxEW9H,EA4EfgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAKygB,oBA5EtDzgB,EA8Ef8gB,YAAc,SAAC5gB,GACbkE,IACGC,IAAI,eACJC,KAAK,SAACC,GACL,IAAIwc,EAAe,IAAIC,QAAK,CAC1BngB,IAAK,UAAY0D,EAAIC,KAAKX,MAAM3D,EAAK,EAAGA,GACxC+gB,OAAO,EACPC,OAAQ,MAEVlhB,EAAKmD,SAAS,CACZ4d,eACAI,MAAO5c,EAAIC,UAzFJxE,EA8Ff4b,SAAW,SAAC1b,GAEV,IAAIya,EAAQ3a,EAAK6B,MAAM8Y,MAAM9W,QACzBnC,EAAQiZ,EAAMza,EAAK,GAAGwB,MACtBiL,EAAUgO,EAAMza,EAAK,GAAGyM,QACxB7L,EAAQ6Z,EAAMza,EAAK,GAAGW,IAC1Bb,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACf/N,QACAiL,UACA7L,SACC,kBAAMd,EAAK8gB,YAAY5gB,MA3GbF,EA+Gf+b,YAAc,WACZ/b,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACfE,iBAAiB,EACjBC,eAAe,EACf9H,cAAe,GACfiZ,aAAc,KACdK,SAAS,EACTnR,QAAS,KACTC,QAAS,MACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACd+K,aAAc,EACdrY,MAAO,QAlIIlD,EAwIjBwgB,UAAY,WACVxgB,EAAKmD,SAAS,CACZwM,iBAAiB,KA1IJ3P,EA8IjBgd,SAAW,WACPhd,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACfE,iBAAiB,EACjBC,eAAe,KApJJ5P,EAwJjBqhB,SAAW,WACT,IAAID,GAAWphB,EAAK6B,MAAMuf,QACtBL,EAAe/gB,EAAK6B,MAAMkf,aAC1BK,EACFL,EAAaO,OAEbP,EAAaQ,QAEfvhB,EAAKmD,SAAS,CACZie,UACAL,kBAlKa/gB,EAuKfof,UAAY,WACV,IAAI/O,EAAe,GACf1D,EAAU3M,EAAK6B,MAAM8K,QACrBkO,EAAqBlO,EAAQF,MAAM,MACvCoO,EAAmBmB,MACnB,IAAIhM,EAAoBrD,EAAQF,MAAM,MACtCuD,EAAkBgM,MAClB,IAAK,IAAInZ,EAAI,EAAGA,EAAIgY,EAAmB/P,OAAQjI,IAC1CwN,EAAavN,KAAK,uBAEvB,IAAK,IAAID,EAAIgY,EAAmB/P,OAAS,EAAGjI,EAAI,EAAGA,IAAK,CACpD,IAAMwM,EAAIT,KAAKC,MAAMD,KAAKoH,UAAYnT,EAAI,IADU6T,EAEH,CAACmE,EAAmBxL,GAAIwL,EAAmBhY,IAA3FgY,EAAmBhY,GAFgC6T,EAAA,GAE5BmE,EAAmBxL,GAFSqH,EAAA,GAIxD5W,QAAQC,IAAI8a,GACZ7a,EAAKmD,SAAS,CACZuM,qBAAqB,EACrB2P,yBAAyB,EACzBiB,kBAAmBzF,EACnB7K,oBACAK,gBAEC,kBAAMrQ,EAAKsf,oBA7LDtf,EAgMfgE,aAAe,SAACuB,GACfvF,EAAKmD,SAAS,CACZ+M,QAAS3K,EAAME,OAAOvC,SAlMVlD,EAsMfuf,KAAO,WACH,IAAIrP,EAAUtB,KAAKC,MAAM7O,EAAK6B,MAAMsO,iBAAmB,IACnDF,EAAUjQ,EAAK6B,MAAMsO,iBAA8B,GAAVD,EAe7C,GAdAlQ,EAAKmD,SAAS,CACZ+M,UACAD,YAEEA,EAAU,IACZjQ,EAAKmD,SAAS,CACZ8M,QAAS,IAAMjQ,EAAK6B,MAAMoO,UAG1BC,EAAU,IACZlQ,EAAKmD,SAAS,CACZD,MAAO,IAAMgN,IAGD,IAAZA,EAA4B,IAAZD,EAAe,CACjC,IAAI0D,EAAO3T,EAAK6B,MAAMyO,kBAClBE,EAAe5B,KAAKC,MAAM8E,EAAO,IACjCpD,EAAevQ,EAAK6B,MAAMyO,kBAAoC,GAAfE,EAC/CJ,EAAiBpQ,EAAK6B,MAAMuO,eAChCoP,cAAcpP,GACdpQ,EAAKyf,YACLzf,EAAKmD,SAAS,CACZqN,eACAD,eACAH,mBAIJpQ,EAAKmD,SAAS,CACZgN,iBAAkBnQ,EAAK6B,MAAMsO,iBAAmB,EAChDG,kBAAmBtQ,EAAK6B,MAAMyO,kBAAoB,KAvOzCtQ,EA2Ofsf,eAAiB,WACb,IAAIlP,EAAiBsP,YAAY1f,EAAKuf,KAAM,KACxC5L,EAAO3T,EAAK6B,MAAMqO,QACtBlQ,EAAKmD,SAAS,CACZiN,iBACAD,iBAAyB,GAAPwD,KAhPT3T,EAoPjB2f,YAAc,SAACnc,EAAGoH,GAChB5K,EAAK4f,YAAc5f,EAAK6B,MAAMye,kBAAkB1V,GAChDpH,EAAEqc,aAAaC,cAAgB,OAC/Btc,EAAEqc,aAAaE,QAAQ,YAAavc,EAAEiC,QACtCjC,EAAEqc,aAAaG,aAAaxc,EAAEiC,OAAQ,GAAI,KAxP3BzF,EA2PjBigB,WAAa,SAAArV,GACX,IAAMsV,EAAkBlgB,EAAK6B,MAAMye,kBAAkB1V,GACrD,GAAI5K,EAAK4f,cAAgBM,EAAzB,CAGA,IAAIxd,EAAQ1C,EAAK6B,MAAMye,kBAAkB3c,OAAO,SAAAf,GAAI,OAAIA,IAAS5C,EAAK4f,cACtEld,EAAM4G,OAAOsB,EAAO,EAAG5K,EAAK4f,aAE5B5f,EAAKmD,SAAS,CAAEmd,kBAAmB5d,MAnQpB1C,EAsQjBmgB,UAAY,WACVngB,EAAKogB,WAAa,MAvQHpgB,EA0QjBqgB,eAAiB,WAOf,IANA,IAAIrQ,EAAoBhQ,EAAK6B,MAAMmO,kBAC/BsQ,EAAoBtgB,EAAK6B,MAAMye,kBAE/BjQ,EAAerQ,EAAK6B,MAAMwO,aAAaxM,QACvC0X,EAAe,EACfgF,EAAa,EACR1d,EAAI,EAAGA,EAAIyd,EAAkBxV,OAAQjI,IACxCyd,EAAkBzd,KAAOmN,EAAkBnN,IAC7CwN,EAAaxN,GAAK,sBAClB0d,MAGAlQ,EAAaxN,GAAK,sBAClB0Y,KAGc,GAAdgF,GACFvgB,EAAKwgB,YAGPxgB,EAAKmD,SAAS,CACZkN,eACAkL,kBAjSavb,EAuSjByf,UAAW,WACTzf,EAAKqgB,iBACLrgB,EAAKmD,SAAS,CACZyM,eAAe,EACfyP,yBAAyB,KA3SZrf,EA+SjBwgB,UAAY,WACR,IAAIpQ,EAAiBpQ,EAAK6B,MAAMuO,eAC5BuD,EAAO3T,EAAK6B,MAAMyO,kBAClBE,EAAe5B,KAAKC,MAAM8E,EAAO,IACjCpD,EAAevQ,EAAK6B,MAAMyO,kBAAoC,GAAfE,EAEnDgP,cAAcpP,GACdpQ,EAAKmD,SAAS,CACZwM,iBAAiB,EACjB0P,yBAAyB,EACzB7O,eACAD,eACAH,oBAzTNpQ,EAAK6B,MAAQ,CACR8Y,MAAO,GACPpL,aAAc,GACdC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,EACpBtM,QAAS,GACT0E,cAAe,GAChB6H,iBAAiB,EACjBC,eAAe,EACdlO,MAAO,GACRiL,QAAS,GACT7L,MAAO,KACNigB,aAAc,KACdK,SAAS,EACTnR,QAAS,KACTC,QAAS,MACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACd+K,aAAc,GAzBHvb,mFA+BG,IAAAmE,EAAAhE,KAClBiE,IAAMC,IAAI,qBACPC,KAAK,SAAAC,GACJ,IAAIoW,EAAQpW,EAAIC,KAChBL,EAAKhB,SAAS,CACZwX,QACAnL,iBAAiB,GAChB,kBAAMrL,EAAKgb,uDA0RX,IAAA/U,EAAAjK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACdb,KAAK0B,MAAM4N,cACVpP,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACnCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,YAGhB,KAENjD,KAAK0B,MAAM2N,gBACbnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,cAAc0P,YAAa,GAChDvQ,KAAK0B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BR,EAAKvI,MAAMiG,eAAuD,KAA7BsC,EAAKvI,MAAMiG,eAAwBsC,EAAKvI,MAAMiG,gBAAkBlF,EAAK8Y,aAChJrb,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,SAEnBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAcyB,EAAKlB,OACnBrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACG/N,EAAK+J,QAAQvG,OAAO,EAAE,KAAO,SAGlC/F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASmJ,EAAKwR,SAAS1a,KAAKkJ,EAAMxH,EAAK1C,KAA/C,2EAGY,KAEhBC,KAAK0B,MAAM6N,oBACTrP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,uFACxBb,KAAK0B,MAAM8K,SAEdxM,KAAK0B,MAAMuf,QACV/gB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBAAqBC,QAASd,KAAKkhB,UAChDhhB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAM2I,KAAK,QAAQjJ,KAAK,WAClB,KAERlB,KAAK0B,MAAMuf,QAGH,KAFR/gB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBAAqBC,QAASd,KAAKkhB,UAChDhhB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAM2I,KAAK,QAAQjJ,KAAK,UAG5BhB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKif,WAA9B,oEAIG,KAETjf,KAAK0B,MAAMwd,wBACVhf,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,SAASb,KAAK0B,MAAMqO,QAAlC,IAA4C/P,KAAK0B,MAAMoO,SACvD5P,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,0EACzBb,KAAK0B,MAAMye,kBAAkB3d,IAAI,SAACC,EAAM+d,GAAP,OAC9BtgB,EAAAC,EAAAC,cAAA,KAAGS,UAAW,+BAAiCoJ,EAAKvI,MAAMwO,aAAasQ,GACnEC,WAAS,EACT7d,IAAO4d,EACPV,WAAY,kBAAM7V,EAAK6V,WAAWU,IAClChB,YAAa,SAAAnc,GAAC,OAAI4G,EAAKuV,YAAYnc,EAAGmd,IACtCR,UAAW/V,EAAK+V,WAAavd,EAAO,QAK9CvC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKkgB,gBAA9B,4DAEM,KAEXlgB,KAAK0B,MAAM8N,gBACVtP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,gFAC1BX,EAAAC,EAAAC,cAAA,oLACAF,EAAAC,EAAAC,cAAA,oEAAeJ,KAAK0B,MAAM2O,aAA1B,mCAA+CrQ,KAAK0B,MAAM0O,aAA1D,4CAGJlQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK4b,aAA9B,sFAEM,KAEX5b,KAAK0B,MAAM+N,cACVvP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,4DAC1BX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,uIAA2BJ,KAAK0B,MAAM0Z,aAAtC,iBAAwDpb,KAAK0B,MAAMye,kBAAkBxV,OAArF,0EAINzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK4b,aAA9B,sFAEM,OAIlB1b,EAAAC,EAAAC,cAAA,uBAxcwBhD,aCkQjBikB,eAjQd,SAAAA,EAAYvhB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAqhB,IACjBxhB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAqf,GAAAjf,KAAApC,KAAMF,KAWN2U,gBAAkB,WAChB5U,EAAKmD,SAAS,CACZwX,MAAO,GACPpL,aAAc,GACdC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfnD,QAAS,GACT8U,aAAc,GACd1P,YAAa,GACb2P,WAAY,GACZ5gB,MAAO,KACPsC,QAAS,GACTue,aAAa,EACb7Z,cAAe,IACd,kBAAM9H,EAAK8V,iBA/BC9V,EAkCjB8V,YAAc,WACZ1R,IAAMC,IAAI,eACPC,KAAK,SAAAC,GACJ,IAAIoW,EAAQpW,EAAIC,KACZ+K,EAAe,GACnBoL,EAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAAiB2E,EAAazM,KAAKF,EAAK+J,WAClD3M,EAAKmD,SAAS,CACZwX,QACApL,gBACC,WACCvP,EAAKmD,SAAS,CACZwe,aAAa,IAEf3hB,EAAKmf,uBA/CEnf,EAqDf4b,SAAW,SAAC1b,GACV,IAAIya,EAAQ3a,EAAK6B,MAAM8Y,MAAM9W,QACzBnC,EAAQiZ,EAAMza,GAAIwB,MAClBiL,EAAUgO,EAAMza,GAAIyM,QACpB8U,EAAe9G,EAAMza,GAAIyM,QAC7B8U,EAAeA,EAAavW,QAAQ,MAAO,IAC3C,IAAIpK,EAAQ6Z,EAAMza,GAAIW,IACtBb,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBD,eAAe,EACf/N,QACAiL,UACA7L,QACA2gB,kBAnEWzhB,EAwEjBwgB,UAAY,WACRxgB,EAAKmD,SAAS,CACZwM,iBAAiB,EACjBiS,eAAe,KA3EJ5hB,EAgFnB6hB,iBAAmB,SAACC,EAAMC,GAExB,GAAID,EAAKE,kBACPF,EAAKG,QACLH,EAAKE,kBAAkBD,EAAKA,QAEvB,GAAID,EAAKI,gBAAiB,CAC/B,IAAIC,EAAQL,EAAKI,kBACjBC,EAAMC,UAAS,GACfD,EAAME,QAAQ,YAAaN,GAC3BI,EAAMG,UAAU,YAAaP,GAC7BI,EAAMI,WA3FSviB,EA+FjBwiB,YAAc,SAACjd,GACd,IAAImc,EAAa1hB,EAAK6B,MAAM6f,WACxBjc,EAASF,EAAME,OAEdgd,GADMld,EAAME,OAAOvC,MACJqC,EAAME,OAAOvC,MAAMQ,QAAQ,KAAO,GACjDjF,EAAO8G,EAAME,OAAOvC,MAAMkD,OAAO,EAAGqc,EAAe,GACnDC,EAASnd,EAAME,OAAOvC,MAAMkb,UAAUqE,GAC1Cf,GAA2BjjB,EAAO,IAChCuB,EAAKmD,SAAS,CACbue,aACCD,aAAciB,GACb,kBAAM1iB,EAAK6hB,iBAAiBpc,EAAQ,MA1G1BzF,EA6GjB2iB,cAAgB,WACd3iB,EAAKmD,SAAS,CACZye,eAAe,EACflS,qBAAqB,KAhHR1P,EAoHfmf,gBAAkB,WAChB,IAAI1c,EAAW,GACfzC,EAAK6B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAK8Y,WACXxY,MAAON,EAAK8Y,eAE9B1b,EAAKmD,SAAS,CACZC,QAASX,GACR,kBAAMzC,EAAKqD,eA9HDrD,EAiIfqD,UAAY,WACV,IAAIC,EAAMtD,EAAK6B,MAAMuB,QAEfG,EAASD,EACZX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,KAzIEvD,EA6IfygB,eAAiB,WACf,IAAI3Y,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,mBAhJW9H,EAoJfgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAKygB,oBAlJvEzgB,EAAK6B,MAAQ,GAFI7B,mFAQfG,KAAKyU,mDA8IE,IAAAzQ,EAAAhE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACVb,KAAK0B,MAAM4N,cACVpP,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACnCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,YAGhB,KAEVjD,KAAK0B,MAAM8f,aAAexhB,KAAK0B,MAAM2N,gBACvCnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,cAAc0P,YAAa,GAChDvQ,KAAK0B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BzG,EAAKtC,MAAMiG,eAAuD,KAA7B3D,EAAKtC,MAAMiG,eAAwB3D,EAAKtC,MAAMiG,gBAAkBlF,EAAK8Y,aAChJrb,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,SAEnBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAcyB,EAAKlB,OACnBrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACG/N,EAAK+J,QAAQvG,OAAO,EAAE,KAAO,SAGlC/F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASkD,EAAKyX,SAAS1a,KAAKiD,EAAMvB,EAAK1C,KAA/C,2EAGY,KAEhBC,KAAK0B,MAAM6N,oBACTrP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,0EACxBb,KAAK0B,MAAM8K,SAEftM,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKwiB,eAA9B,6DAEI,KAEVxiB,KAAK0B,MAAM+f,cACTvhB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,wFACTb,KAAK0B,MAAM6f,YAEfrhB,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAO3H,UAAU,sBAAsBkC,MAAO/C,KAAK0B,MAAM4f,aAAcvc,SAAU/E,KAAKqiB,cACtFniB,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACpBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKqgB,WAA9B,6DAGA,KAETrgB,KAAK0B,MAAM8N,gBACVtP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4b,aAClB1b,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,UAG5BjK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACbX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAd,mFACAX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAAuBb,KAAK0B,MAAM8K,UAEjDtM,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACbX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAd,0DACAX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAAuBb,KAAK0B,MAAM6f,eAIrDrhB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,wCACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,gBAAgBiF,GAAG,aAAnC,gFAEV,OAIlB5F,EAAAC,EAAAC,cAAA,uBA7PmBhD,uBC0EZqlB,eAvEd,SAAAA,EAAY3iB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAyiB,IACjB5iB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAygB,GAAArgB,KAAApC,KAAMF,KA8BF4iB,YAAc,SAACtd,GACbvF,EAAKmD,SAAS,CACZ2f,YAAaC,OAAOxd,EAAME,OAAOvF,OAjCxBF,EAqCjB8J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,OAAO7X,OAC9B1C,EAAKmD,SAAS,CACZmJ,QAAQ,KAxCKtM,EA4CjBoF,UAAY,WACVpF,EAAKmD,SAAS,CACZkC,gBAAgB,KA5CpBrF,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,GACP2C,gBAAgB,GANHrF,mFAUE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CA0BtB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aAjEKhmB,aC4DHimB,eA1Dd,SAAAA,EAAYvjB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAqjB,IACjBxjB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAqhB,GAAAjhB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDQhmB,aC2DNkmB,eAzDd,SAAAA,EAAYxjB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAsjB,IACjBzjB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAshB,GAAAlhB,KAAApC,KAAMF,KA8BN6J,aAAe,WACb9J,EAAKmD,SAAS,CACZmJ,QAAQ,KA/BZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,SACA7X,MAAO6X,EAAO7X,2CAatB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aAnDgBhmB,aCoJdmmB,eArJd,SAAAA,EAAYzjB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAujB,IACjB1jB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAuhB,GAAAnhB,KAAApC,KAAMF,KA0CJkG,aAAe,SAACZ,GACdvF,EAAKmD,SAAS,CAACwgB,eAAgBpe,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,QA5C9CpG,EA+CjB8J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAlDKtM,EAsDjB4jB,WAAa,WACX,IAAIC,EAAW7jB,EAAK6B,MAAMgiB,SAAShgB,QAC/B8f,EAAiB3jB,EAAK6B,MAAM8hB,eAC5BG,EAAO,CACXA,OAAiB,UACjBA,EAAI,QAAcH,EAClBE,EAASnc,QAAQoc,GACjBhkB,QAAQC,IAAI8jB,GACZ7jB,EAAKmD,SAAS,CACZ0gB,SAAUA,EACVF,eAAgB,MAhEH3jB,EAoEjB+jB,SAAW,WACT,IAAIhH,EAAQ/c,EAAK6B,MAAMmiB,MACvBjH,IACA/c,EAAKmD,SAAS,CACZ6gB,MAAOjH,KAxEM/c,EA4EjBikB,WAAa,WACX,IAAIlH,EAAQ/c,EAAK6B,MAAMqiB,SACvBnH,IACA/c,EAAKmD,SAAS,CACZ+gB,SAAUnH,KAhFG/c,EAoFjB8J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,QAnFnB7B,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,GACPihB,eAAgB,GAChBK,MAAO,EACPE,SAAU,EACVL,SAAU,CACR,CACEM,OAAQ,UACRC,QAAS,2BAEX,CACED,OAAQ,UACRC,QAAS,oBAhBApkB,mFAsBE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CAkDd,IAAA0H,EAAAjK,KACR,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOpH,UAAU,cAAcuH,WAAS,EAACF,QAAShI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,oDAChDnB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,YACnGljB,EAAAC,EAAAC,cAAC6H,EAAA,EAAMjH,OAAP,CAAcH,UAAU,wBACtBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAgB4B,EAAKugB,QAAQzhB,OAC5CrB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,mBAAmBC,QAASmJ,EAAK2Z,UAC/C1jB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,YAAYiJ,KAAK,WAE9BjK,EAAAC,EAAAC,cAAA,YAAO6J,EAAKvI,MAAMmiB,QAEpB3jB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,mBAAmBC,QAASmJ,EAAK6Z,YAC/C5jB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,cAAciJ,KAAK,WAEhCjK,EAAAC,EAAAC,cAAA,YAAO6J,EAAKvI,MAAMqiB,aAIxB7jB,EAAAC,EAAAC,cAAC6H,EAAA,EAAMrH,QAAP,KACEV,EAAAC,EAAAC,cAAC6H,EAAA,EAAMuI,YAAP,KACEtQ,EAAAC,EAAAC,cAAA,SAAIqC,EAAKugB,QAAQtV,cAEnBxN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACbX,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAO9D,YAAY,UAAU3B,MAAOkH,EAAKvI,MAAM8hB,eAAgBze,SAAUkF,EAAKjE,eAAgB9F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASmJ,EAAKwZ,YAAtB,2DAEhGvjB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACVoJ,EAAKvI,MAAMgiB,SAASlhB,IAAI,SAACC,EAAMgI,GAAP,OACvBvK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBAAiB+B,IAAK6H,GACnCvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAKuhB,QACV9jB,EAAAC,EAAAC,cAAA,SAAIqC,EAAKwhB,gBAOvB/jB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACbX,EAAAC,EAAAC,cAAA,UAAKqC,EAAKugB,QAAQzhB,OAClBrB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAKugB,QAAQC,WAAWC,KAAKC,WAK9C,aA/IM/lB,aC+DJ8mB,eA1Dd,SAAAA,EAAYpkB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAkkB,IACjBrkB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAkiB,GAAA9hB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDUhmB,aC4DR+mB,eA1Dd,SAAAA,EAAYrkB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAmkB,IACjBtkB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAmiB,GAAA/hB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDahmB,aC4DXgnB,eA1Dd,SAAAA,EAAYtkB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAokB,IACjBvkB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAoiB,GAAAhiB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDahmB,aC4DXinB,eA1Dd,SAAAA,EAAYvkB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAqkB,IACjBxkB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAqiB,GAAAjiB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWfiE,IAAMC,IANN,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDahmB,aC4DXknB,eA1Dd,SAAAA,EAAYxkB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAskB,IACjBzkB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAsiB,GAAAliB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDOhmB,aC4DLmnB,eA1Dd,SAAAA,EAAYzkB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAukB,IACjB1kB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAuiB,GAAAniB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDahmB,aC4DXonB,eA1Dd,SAAAA,EAAY1kB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAwkB,IACjB3kB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAwiB,GAAApiB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDYhmB,aC4DVqnB,eA1Dd,SAAAA,EAAY3kB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAykB,IACjB5kB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAyiB,GAAAriB,KAAApC,KAAMF,KA8BN6J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,MAAM0Y,QACvBva,EAAKmD,SAAS,CACZmJ,QAAQ,KAhCZtM,EAAK6B,MAAQ,CACZ0Y,OAAQ,GACLjO,QAAQ,EACR5J,MAAO,IALM1C,mFASE,IAAAmE,EAAAhE,KAWjBiE,IAAMC,IANJ,wKAOGC,KAAK,SAAAC,GACJ,IAAMgW,EAAShW,EAAIC,KACnBL,EAAKhB,SAAS,CACZoX,OAAQA,EACR7X,MAAO6X,EAAO7X,2CActB,OACErC,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMa,MAAMoI,OACjBzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAe,EAAG1P,UAAU,wBACrCb,KAAK0B,MAAMa,MAAMC,IAAI,SAACC,EAAMgI,GAAP,OACpBvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACPvK,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAQC,UAAU,EAAM/iB,GAAI0C,EAAK1C,GAAGgjB,QAASre,YAAajC,EAAKugB,QAAQC,WAAWC,KAAKC,IAAKC,OAAO,gBAIxG,aApDgBhmB,aCiKdsnB,eAlKb,SAAAA,EAAY5kB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA0kB,IAChB7kB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA0iB,GAAAtiB,KAAApC,KAAMF,KAkCNkf,gBAAkB,WAChB,IAAI1c,EAAW,GACfzC,EAAK6B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAK8Y,WACXxY,MAAON,EAAK8Y,eAE9B1b,EAAKmD,SAAS,CACZC,QAASX,GACR,kBAAMzC,EAAKqD,eA7CArD,EAgDhBqD,UAAY,WACV,IAAIC,EAAMtD,EAAK6B,MAAMuB,QAEfG,EAASD,EACZX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,KAxDGvD,EA4DhBygB,eAAiB,WACDzgB,EAAK6B,MAAMuB,QAAQS,QAAjC,IACIiE,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,cAAeA,KAhEH9H,EAoEhBgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAKygB,oBApErDzgB,EAsEhB4b,SAAW,SAACpY,GAIR,IAHF,IAAImX,EAAQ3a,EAAK6B,MAAM8Y,MAAM9W,QACzB4B,EAASjC,EAAEiC,OAAO4S,cAClBzN,EAAQ,EACDnF,EAASA,EAAO8S,wBACvB3N,IAEJ,IAAI0R,EAAoB9Y,EAAEiC,OAAO4S,cAAcC,SAAS,GAAGA,SAAS,GAAGvG,YACnE+S,EAAsBnK,EAAM/P,GAAO+B,QACnCoY,EAAoBvhB,EAAEiC,OAAO4S,cAAcC,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGzX,IACnFb,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBhO,MAAO4a,EACP3P,QAASmY,EACThkB,MAAOikB,KArFK/kB,EAyFhB+b,YAAc,WACZ/b,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,KA5FT1P,EAgGhB8J,aAAe,WACbhK,QAAQC,IAAIC,EAAK6B,QA/FnB7B,EAAK6B,MAAQ,CACX8Y,MAAO,GACPgH,aAAa,EACbve,QAAS,GACT0E,cAAe,GACf5E,MAAO,KACPsM,iBAAiB,EACjBE,qBAAqB,EACrBhO,MAAO,GACPiL,QAAS,GACT7L,MAAO,KACPyO,aAAc,IAbAvP,mFAiBE,IAAAmE,EAAAhE,KAChBiE,IAAMC,IAAI,eACPC,KAAK,SAAAC,GACJ,IAAIoW,EAAQpW,EAAIC,KACZ+K,EAAe,GACnBoL,EAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAAiB2E,EAAazM,KAAKF,EAAK+J,WAClDxI,EAAKhB,SAAS,CACZwX,MAAOA,EACPpL,aAAcA,GACb,WACDpL,EAAKhB,SAAS,CACZwe,aAAa,IAEfxd,EAAKgb,uDAsEN,IAAA/U,EAAAjK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACbb,KAAK0B,MAAM6N,oBAeD,KAdVrP,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACnCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,YAKtBjD,KAAK0B,MAAM8f,aAAexhB,KAAK0B,MAAM2N,gBACvCnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,cAAc0P,YAAa,GAChDvQ,KAAK0B,MAAM8Y,MAAMhY,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BR,EAAKvI,MAAMiG,eAAuD,KAA7BsC,EAAKvI,MAAMiG,eAAwBsC,EAAKvI,MAAMiG,gBAAkBlF,EAAK8Y,aAChJrb,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,SAEnBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAcyB,EAAKlB,OACnBrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACG/N,EAAK+J,QAAQvG,OAAO,EAAE,KAAO,SAGlC/F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASmJ,EAAKwR,UAAtB,2EAGY,KAEhBzb,KAAK0B,MAAM6N,oBACTrP,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,8BACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAK0B,MAAMf,QACvBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMH,OACzBrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,uCACwDb,KAAK0B,MAAM8K,UAGjGtM,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK4b,aAAtB,2DACM,OAIhB1b,EAAAC,EAAAC,cAAA,uBA7JgBhD,aC0UTynB,eAzUb,SAAAA,EAAY/kB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA6kB,IAChBhlB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA6iB,GAAAziB,KAAApC,KAAMF,KAUNglB,cAAgB,WACd,IAAI7hB,EAAU,GACdpD,EAAK6B,MAAMqF,MAAMvE,IAAI,SAACC,EAAMC,GAAP,OACPO,EAAQN,KAAK,CACTC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAKsiB,MACXhiB,MAAON,EAAKsiB,UAE9BllB,EAAKmD,SAAS,CACZC,WACC,kBAAMpD,EAAKqD,eArBArD,EAwBhBqD,UAAY,WACV,IAAIC,EAAMtD,EAAK6B,MAAMuB,QAEfA,EAAUE,EACbX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,aAhCYpD,EAoChBmY,SAAW,WACT,IAAIrQ,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,mBAvCY9H,EA2ChBgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAKmY,cA3CrDnY,EA6ChB4b,SAAW,SAAC1b,GAWV,IAVA,IAAIilB,EAAiB,GACjBC,EAAa,GACbnL,EAAW,GACXoL,EAASrlB,EAAK6B,MAAMyjB,cAAczhB,QAElC0hB,GADQvlB,EAAK6B,MAAMqF,MAAMrD,QACd7D,EAAK6B,MAAM0jB,SAAS1hB,SAC/B2hB,EAAe,GACfC,EAAeJ,EAAOzW,KAAKC,MAAMD,KAAKoH,SAASqP,EAAOva,SACtDwR,EAAoBtc,EAAK6B,MAAMqF,MAAMkE,KAAK,SAAAC,GAAC,OAAIA,EAAEnL,KAAOA,IAAImB,KAEvDwB,EAAI,EAAGA,EAAI0iB,EAASza,OAAQjI,IACjC0iB,EAAS1iB,GAAT,WAA4ByZ,IAC9BkJ,EAAa1iB,KAAKyiB,EAAS1iB,IACzBsiB,EAAeriB,KAAK,oDACpBsiB,EAAWtiB,MAAK,GAChBmX,EAASnX,MAAK,IAIlB9C,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBgW,mBAAmB,EACnBF,eACAC,eACAN,iBACAC,aACAnL,cAzEYja,EA8EhB2lB,UAAY,SAACzlB,GACX,IAAI0lB,EAAa5lB,EAAK6B,MAAM+jB,WAAW/hB,QACnC2hB,EAAexlB,EAAK6B,MAAM2jB,aAAa3hB,QACvCshB,EAAiBnlB,EAAK6B,MAAMsjB,eAAethB,QAC3CoW,EAAWja,EAAK6B,MAAMoY,SAASpW,QAC/BuhB,EAAaplB,EAAK6B,MAAMujB,WAAWvhB,QACnC0H,EAAWia,EAAapa,KAAK,SAAAC,GAAC,OAAIA,EAAEnL,KAAOA,IAC/CilB,EAAejlB,GAAM,2DACrBklB,EAAWllB,IAAM,EACjB+Z,EAAS/Z,GAAM,WACf0lB,EAAW9iB,KAAKyI,GAChBvL,EAAKmD,SAAS,CACbyiB,aACAT,iBACAC,aACAnL,cA7Faja,EAkGhB6lB,WAAa,WACZ,IAAIhkB,EAAQ7B,EAAK6B,MAAMikB,sBACvB9lB,EAAKmD,SAAS,CACb4iB,SAAUlkB,KArGI7B,EA0GjBgI,WAAa,WACV,IAEEwd,EAFEQ,EAAiBhmB,EAAK6B,MAAMmkB,eAC5B9e,EAAQlH,EAAK6B,MAAM2jB,aAAa3hB,QAGrC2hB,EADExlB,EAAK6B,MAAMqH,cACEhC,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAAS9I,EAAEe,KAAKgI,cAAcD,EAAE/H,QAE3C6F,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAASA,EAAE/H,KAAKgI,cAAc/I,EAAEe,QAE3DrB,EAAKmD,SAAS,CACb+F,eAAgBlJ,EAAK6B,MAAMqH,cAC3Bsc,eACAQ,gBAAiBA,KAtHFhmB,EA2HjBiI,kBAAoB,WACnB,IACIud,EADEte,EAAQlH,EAAK6B,MAAM2jB,aAAa3hB,QAGrC2hB,EADExlB,EAAK6B,MAAMqH,cACEhC,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAAS9I,EAAEiB,YAAY8H,cAAcD,EAAE7H,eAElD2F,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAASA,EAAE7H,YAAY8H,cAAc/I,EAAEiB,eAGlEvB,EAAKmD,SAAS,CACb+F,eAAgBlJ,EAAK6B,MAAMqH,cAC3Bsc,eACAM,uBAAwB9lB,EAAK6B,MAAMikB,yBAvIpB9lB,EA2IjBimB,WAAa,SAAC/lB,GACb,IAAIilB,EAAiBnlB,EAAK6B,MAAMsjB,eAAethB,QAC3CuhB,EAAaplB,EAAK6B,MAAMujB,WAAWvhB,QACnC+hB,EAAa5lB,EAAK6B,MAAM+jB,WAAW/hB,QACnCoW,EAAWja,EAAK6B,MAAMoY,SAASpW,QACnCshB,EAAejlB,GAAM,mDACrBklB,EAAWllB,IAAM,EACjB+Z,EAAS/Z,IAAM,EACf0lB,EAAWtc,OAAOsc,EAAWrc,UAAU,SAAS3G,GAC5C,OAAOA,EAAK1C,KAAOA,IACnB,GACJF,EAAKmD,SAAS,CAAEyiB,aAAY3L,WAAUmL,aAAYD,oBAtJlCnlB,EAyJjBkmB,UAAY,WACX,IAAIf,EAAiBnlB,EAAK6B,MAAMsjB,eAAethB,QAC3CuhB,EAAaplB,EAAK6B,MAAMujB,WAAWvhB,QACnC+hB,EAAa5lB,EAAK6B,MAAM+jB,WAAW/hB,QACnCoW,EAAWja,EAAK6B,MAAMoY,SAASpW,QACnC+hB,EAAa,GACb,IAAK,IAAI/iB,EAAI,EAAGA,EAAIoX,EAASnP,OAAQjI,IACnCoX,EAASpX,IAAK,EACdsiB,EAAetiB,GAAK,mDACpBuiB,EAAWviB,IAAK,EAElB7C,EAAKmD,SAAS,CAAEyiB,aAAYT,iBAAgBC,aAAYnL,cApKxCja,EAuKjB4U,gBAAkB,WACjB5U,EAAKmD,SAAS,CACZ+D,MAAO,GACP9D,QAAS,GACT0E,cAAe,GACf5E,MAAO,KACPsM,iBAAiB,EACjBE,qBAAqB,EACrBxG,eAAe,EACfwc,mBAAmB,EACnBhkB,MAAO,GACPiL,QAAS,GACT7L,MAAO,KACPyO,aAAc,GACdgW,SAAU,GACVC,aAAc,GACdF,cAAe,CAAC,WAChBG,aAAc,QACdO,gBAAgB,EAChBF,uBAAuB,EACvBC,SAAS,EACTH,WAAY,GACZT,eAAgB,GAChBC,WAAY,GACZnL,SAAU,GACVkM,eAAe,GACd,kBAAMnmB,EAAK8V,iBAjME9V,EAoMjB8V,YAAc,WACb1R,IAAMwa,IAAI,CAACxa,IAAMC,IAAI,eACVD,IAAMC,IAAI,kBACdC,KAAKF,IAAMya,OAAO,SAACuH,EAAeC,GACnC,IAAInf,EAAQkf,EAAc5hB,KACtB+gB,EAAWc,EAAe7hB,KAE9BxE,EAAKmD,SAAS,CACZoiB,WACAre,QACAqI,aAJiB,GAKjB4W,eAAe,GACd,kBAAMnmB,EAAKilB,sBA9MpBjlB,EAAK6B,MAAQ,GAFG7B,mFAQhBG,KAAKyU,mDA6ME,IAAAzQ,EAAAhE,KACKA,KAAK0B,MAAM4jB,aACHtlB,KAAK0B,MAAM2jB,aAC/B,OACEnlB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACCrK,KAAK0B,MAAMskB,cACV9lB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACbX,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,wBAAwB0D,UAAQ,GAC7CvE,KAAK0B,MAAM6jB,kBACVrlB,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,WAET,KAEjB/C,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWO,UAAU,6BAA6BslB,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,eACtFtlB,KAAK0B,MAAM+jB,WAAW9a,OAAS,qEAAgB,kHAElDzK,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWO,UAAU,wCACjBb,KAAK0B,MAAM+jB,WAAW9a,OACxBzK,EAAAC,EAAAC,cAAA,MAAIS,UAAU,uBACXb,KAAK0B,MAAM+jB,WAAWjjB,IAAI,SAACC,EAAKgI,GAAN,OACzBvK,EAAAC,EAAAC,cAAA,MAAIwC,IAAK6H,EAAQ5J,UAAU,oBAAoBslB,MAAS,CAAEC,gBAAiBpiB,EAAKtC,MAAM4jB,eACpFplB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,0BAA0B4B,EAAKvB,KAA/C,MAAwDuB,EAAKrB,aAAmBlB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,yBAAyBC,QAASkD,EAAK8hB,WAAW/kB,KAAKiD,EAAMvB,EAAK1C,KAAMG,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,yBAEjL,MAGPlB,KAAK0B,MAAM+jB,WAAW9a,QAAU3K,KAAK0B,MAAM6N,oBAC9CrP,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWO,UAAU,wBAClBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKqmB,UAAWF,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAezkB,UAAU,uBAAjG,8CAAgIX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,OAAOL,UAAU,kBAA5J,KACAX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK+lB,UAAWI,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAezkB,UAAU,uBAAjG,8CAAgIX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,kBAAkBL,UAAU,kBAAvK,MACY,MAGbb,KAAK0B,MAAMqF,MAAM4D,QAAU3K,KAAK0B,MAAM2N,gBACxCnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,0BAA0B0P,YAAa,GAC1DvQ,KAAK0B,MAAMqF,MAAMvE,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BzG,EAAKtC,MAAMiG,eAAuD,KAA7B3D,EAAKtC,MAAMiG,eAAwB3D,EAAKtC,MAAMiG,gBAAkBlF,EAAKsiB,QAChJ7kB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,EAAO5J,UAAU,qBAC1BX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,QACjBT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACXX,EAAAC,EAAAC,cAAA,UAAKqC,EAAKvB,MACVhB,EAAAC,EAAAC,cAAA,UAAKqC,EAAK7E,OAAV,6BACAsC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASkD,EAAKyX,SAAS1a,KAAKiD,EAAMvB,EAAK1C,IAAKoI,SAAO,EAACtH,UAAU,gBAAtE,qDAME,KAEhBb,KAAK0B,MAAM6N,oBACXrP,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACfX,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzB,MAAI,EAAChC,UAAU,yCACnBX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,UACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAexkB,QAAWd,KAAK6H,YAA9E,8CAEG7H,KAAK0B,MAAMmkB,eAAiB3lB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,QAAQtJ,UAAU,kBAAqBX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,QAAQtJ,UAAU,oBAGlJX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,iBACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAexkB,QAAWd,KAAK8H,mBAA9E,gEAEG9H,KAAK0B,MAAMikB,sBAAwBzlB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,QAAQtJ,UAAU,kBAAqBX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,QAAQtJ,UAAU,oBAGzJX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAW6lB,MAAO,CAACG,MAAO,SAAUplB,KAAK,SACvChB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAexkB,QAAWd,KAAKyU,gBAAiBlT,MAAM,kCACnGrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,uBAAuBL,UAAU,qBAIhDX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,sCAAsC0P,YAAa,GACtEvQ,KAAK0B,MAAM2jB,aAAa7iB,IAAI,SAACC,EAAMgI,GAAP,OAC3BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,QACjBT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBAAoBslB,MAAS,CAAEC,gBAAiBpiB,EAAKtC,MAAM4jB,eACtEplB,EAAAC,EAAAC,cAAA,UAAKqC,EAAKvB,MACVhB,EAAAC,EAAAC,cAAA,UAAKqC,EAAKrB,aACVlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,UAAU,mBAAmBC,QAASkD,EAAKwhB,UAAUzkB,KAAKiD,EAAMvB,EAAK1C,IAAK+Z,SAAW9V,EAAKtC,MAAMoY,SAASrP,GAAQ0b,MAAS,CAAEI,MAAOviB,EAAKtC,MAAM4jB,aAAc3U,OAAQ,SACzK3M,EAAKtC,MAAMujB,WAAWxa,GAAS,KAAOvK,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,uBAAuBiJ,KAAK,QAG7EnG,EAAKtC,MAAMsjB,eAAeva,YAQpC,MAEb,MAEJvK,EAAAC,EAAAC,cAAA,uBApUYhD,aC6SLopB,eA1Sb,SAAAA,EAAY1mB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAwmB,IAChB3mB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAwkB,GAAApkB,KAAApC,KAAMF,KAgDNuC,cAAgB,WACd,IAAIC,EAAW,GACfzC,EAAK6B,MAAMqF,MAAMvE,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAKsiB,MACXhiB,MAAON,EAAKsiB,UAE9BllB,EAAKmD,SAAS,CACZC,QAASX,GACR,kBAAMzC,EAAKqD,eA3DArD,EA8DhBqD,UAAY,WACV,IACIC,EAAMtD,EAAK6B,MAAMuB,QAEbG,EAASD,EACVX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACZb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACtCxD,EAAKmD,SAAS,CACZC,QAASG,EACTqjB,cATc,MA/DF5mB,EA4EhB4D,QAAU,WACM5D,EAAK6B,MAAMuB,QAAQS,QAAjC,IACIiE,EAAgB9H,EAAK6B,MAAMqB,MAC/BpD,QAAQC,IAAI+H,GACZ9H,EAAKmD,SAAS,CACZ2E,cAAeA,KAjFH9H,EAqFhBgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAK4D,aArFrD5D,EAuFhB4b,SAAW,SAACpY,GAWR,IAVF,IAAI2hB,EAAiB,GACjBC,EAAa,GACbnL,EAAW,GACXoL,EAASrlB,EAAK6B,MAAMyjB,cAAczhB,QAElC0hB,GADQvlB,EAAK6B,MAAMqF,MAAMrD,QACd7D,EAAK6B,MAAM0jB,SAAS1hB,SAC/B2hB,EAAe,GACf/f,EAASjC,EAAEiC,OAAO4S,cAClBqO,EAAQrB,EAAOzW,KAAKC,MAAMD,KAAKoH,SAASqP,EAAOva,SAExCrF,EAASA,EAAO8S,wBACvB3N,EAGJ,IADA,IAAI0R,EAAoB9Y,EAAEiC,OAAO4S,cAAcC,SAAS,GAAGvG,YAClDlP,EAAI,EAAGA,EAAI0iB,EAASza,OAAQjI,IAChC0iB,EAAS1iB,GAAT,WAA4ByZ,GAC7BkJ,EAAa1iB,KAAKyiB,EAAS1iB,IAI/B,IAASA,EAAI,EAAGA,EAAI2iB,EAAa1a,OAAQjI,IACrCsiB,EAAeriB,KAAK,oDACpBsiB,EAAWtiB,MAAK,GAChBmX,EAASnX,KAAK,IAGlB9C,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,EACrBgW,mBAAmB,EACnBF,aAAcA,EACdC,aAAciB,EACdvB,eAAgBA,EAChBC,WAAYA,EACZnL,SAAUA,KA1HEja,EA8HhB+b,YAAc,WACZ/b,EAAKmD,SAAS,CACZqM,iBAAiB,EACjBE,qBAAqB,KAjIT1P,EAsIhB6lB,WAAa,WACX/lB,QAAQC,IAAIC,EAAK6B,OACjB,IAAIA,EAAQ7B,EAAK6B,MAAMikB,sBACvB9lB,EAAKmD,SAAS,CACZ4iB,SAAUlkB,KA1IE7B,EA+IhBgI,WAAa,WACT,IAAInG,EAAQ7B,EAAK6B,MAAMmkB,eACvBlmB,QAAQC,IAAI,gBAAiBC,EAAK6B,MAAM2jB,cAC1C,IAAMte,EAAQlH,EAAK6B,MAAM2jB,aAAa3hB,QAClCoD,EAAWC,EAEbD,EADCjH,EAAK6B,MAAMqH,cACDhC,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAAS9I,EAAEe,KAAKgI,cAAcD,EAAE/H,QAE3C6F,EAAMiC,KAAK,SAAC7I,EAAE8I,GAAH,OAASA,EAAE/H,KAAKgI,cAAc/I,EAAEe,QAExDvB,QAAQC,IAAI,YAAakH,GACzBjH,EAAKmD,SAAS,CACZ+F,eAAgBlJ,EAAK6B,MAAMqH,cAC3Bsc,aAAcve,EACd+e,gBAAiBnkB,KA7JL7B,EAiKhB6mB,YAAc,WACZ,IAAIC,EAAe9mB,EAAK6B,MAAMklB,UAC9B/mB,EAAKmD,SAAS,CACZ4jB,WAAYD,GACX,kBAAM9mB,EAAKgnB,eArKAhnB,EAwKhBgnB,UAAY,WACV,IAAI7F,EAAQnhB,EAAK6B,MAAMolB,aACpBjnB,EAAK6B,MAAMklB,UACZ5F,EAAMG,OAGNH,EAAMI,QAERvhB,EAAKmD,SAAS,CACZ8jB,aAAc9F,KA/KlBnhB,EAAK6B,MAAQ,CACXqF,MAAO,GACP9D,QAAS,GACT0E,cAAe,GACf5E,MAAO,KACPsM,iBAAiB,EACjBE,qBAAqB,EACrBxG,eAAe,EACfwc,mBAAmB,EACnBhkB,MAAO,GACPiL,QAAS,GACT7L,MAAO,KACPyO,aAAc,GACdqX,cAAe,GACfrB,SAAU,GACVC,aAAc,GACdF,cAAe,CAAC,OAAO,SAAS,UAAU,QAAQ,OAAO,UACzDG,aAAc,QACdO,gBAAgB,EAChBF,uBAAuB,EACvBC,SAAS,EACTH,WAAY,GACZT,eAAgB,GAChBC,WAAY,GACZnL,SAAU,GACVgN,aAAc,KACdF,WAAW,GA5BG/mB,mFAgCE,IAAAmE,EAAAhE,KAClBiE,IAAMwa,IAAI,CAACxa,IAAMC,IAAI,eACVD,IAAMC,IAAI,kBACVC,KAAKF,IAAMya,OAAO,SAACuH,EAAeC,GACnC,IAAInf,EAAQkf,EAAc5hB,KACtB+gB,EAAWc,EAAe7hB,KAE1ByiB,EAAe,IAAI5N,MAAM,2BACjClV,EAAKhB,SAAS,CACZoiB,SAAUA,EACVre,MAAOA,EACPqI,aALqB,GAMrB0X,aAAcA,GACb,kBAAM9iB,EAAK3B,sDAwIb,IAAA4H,EAAAjK,KACKA,KAAK0B,MAAM4jB,aACHtlB,KAAK0B,MAAM2jB,aAC/B,OACEnlB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACfX,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,wBAAwB0D,UAAQ,GAC7CvE,KAAK0B,MAAM6jB,kBACRrlB,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,WAET,KAEjB/C,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,KACEJ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK0mB,aACrB1mB,KAAK0B,MAAMklB,UACX1mB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,uBAAuBiJ,KAAK,KAAQjK,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,sBAAsBiJ,KAAK,KAFtF,WAKFjK,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWO,UAAU,wCACjBb,KAAK0B,MAAM+jB,WAAW9a,OACxBzK,EAAAC,EAAAC,cAAA,MAAIS,UAAU,uBACXb,KAAK0B,MAAM+jB,WAAWjjB,IAAI,SAACC,EAAKgI,GAAN,OACzBvK,EAAAC,EAAAC,cAAA,MAAIwC,IAAK6H,EAAQ5J,UAAU,oBAAoBslB,MAAS,CAAEC,gBAAiBnc,EAAKvI,MAAM4jB,eACpFplB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,0BAA0B4B,EAAKvB,KAA/C,MAAwDuB,EAAKrB,aAAmBlB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,yBAAyBC,QAASmJ,EAAK6b,YAAa5lB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,kBAAkBiJ,KAAK,UAEpL,MAGPnK,KAAK0B,MAAM+jB,WAAW9a,QAAU3K,KAAK0B,MAAM6N,oBAC9CrP,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWO,UAAU,wBAClBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKqmB,UAAWF,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,eAAxE,+CACY,MAGbtlB,KAAK0B,MAAMqF,MAAM4D,QAAU3K,KAAK0B,MAAM2N,gBACxCnP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,0BAA0B0P,YAAa,GAC5DvQ,KAAK0B,MAAMqF,MAAMvE,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BR,EAAKvI,MAAMiG,eAAuD,KAA7BsC,EAAKvI,MAAMiG,eAAwBsC,EAAKvI,MAAMiG,gBAAkBlF,EAAKsiB,QAChJ7kB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,QACjBT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACXX,EAAAC,EAAAC,cAAA,UAAKqC,EAAKvB,MACVhB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,YAAOqC,EAAK7E,SAChBsC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASmJ,EAAKwR,SAAUtT,SAAO,EAACtH,UAAU,gBAAlD,qDAMI,KAEhBb,KAAK0B,MAAM6N,oBACXrP,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACfX,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzB,MAAI,EAAChC,UAAU,yCACnBX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,UACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAexkB,QAAWd,KAAK6H,YAA9E,8CAEG7H,KAAK0B,MAAMmkB,eAAiB3lB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,QAAQtJ,UAAU,kBAAqBX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,QAAQtJ,UAAU,oBAGlJX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,iBACdhB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAexkB,QAAWd,KAAK8H,mBAA9E,gEAEG9H,KAAK0B,MAAMikB,sBAAwBzlB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,QAAQtJ,UAAU,kBAAqBX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,QAAQtJ,UAAU,oBAGzJX,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAW6lB,MAAO,CAACG,MAAO,SAAUplB,KAAK,SACvChB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEC,gBAAiBpmB,KAAK0B,MAAM4jB,cAAexkB,QAAWd,KAAK+mB,aAC5E7mB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,uBAAuBiJ,KAAK,QAAQtJ,UAAU,qBAI7DX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,sCAAsC0P,YAAa,GACtEvQ,KAAK0B,MAAM2jB,aAAa7iB,IAAI,SAACC,EAAMgI,GAAP,OAC3BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,GACTvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,QACjBT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBAAoBslB,MAAS,CAAEC,gBAAiBnc,EAAKvI,MAAM4jB,eACtEplB,EAAAC,EAAAC,cAAA,UAAKqC,EAAKvB,MACVhB,EAAAC,EAAAC,cAAA,UAAKqC,EAAKrB,aACVlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQR,UAAU,mBAAmBC,QAASmJ,EAAKub,UAAW1L,SAAW7P,EAAKvI,MAAMoY,SAASrP,GAAQ0b,MAAS,CAAEI,MAAOtc,EAAKvI,MAAM4jB,aAAc3U,OAAQ,SACrJ1G,EAAKvI,MAAMujB,WAAWxa,GAAS,KAAOvK,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,uBAAuBiJ,KAAK,QAG7EF,EAAKvI,MAAMsjB,eAAeva,YAQpC,OAIfvK,EAAAC,EAAAC,cAAA,uBArSgBhD,aCkET4pB,eAhEd,SAAAA,EAAYlnB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAgnB,IACjBnnB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAglB,GAAA5kB,KAAApC,KAAMF,KAaNmnB,YAAc,SAAC5jB,EAADS,GAAkB,IAAZf,EAAYe,EAAZf,MAClBpD,QAAQC,IAAIyD,GACZxD,EAAKmD,SAAS,CAAEkkB,WAAYnkB,KAd9BlD,EAAK6B,MAAQ,CACTylB,MAAO,WACPC,SAAU,SACVF,WAAY,UACZG,aAAc,CAAC,CAAEzkB,IAAK,EAAGG,MAAO,UAAWF,KAAM,WAAY,CAAED,IAAK,EAAGG,MAAO,MAAOF,KAAM,SAN9EhD,qHAqBf,OACEK,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,wBAAhB,mFACEX,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMwlB,WAClBtkB,KAAG,EACHgC,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAKinB,YACjBhkB,QAASjD,KAAK0B,MAAM2lB,gBAG1BnnB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,wBAAhB,yFACEX,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMwlB,WAClBtkB,KAAG,EACHgC,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAKinB,YACjBhkB,QAASjD,KAAK0B,MAAM2lB,mBAMhCnnB,EAAAC,EAAAC,cAAA,uBA5DehD,uBCGjBkqB,eAEJ,SAAAA,EAAYxnB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAsnB,IAChBznB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAslB,GAAAllB,KAAApC,KAAMF,KAuDRynB,kBAAoB,SAAClkB,GACnB,IAAMZ,EAAOY,EAAEiC,OAAOpE,KAChBsmB,EAAYnkB,EAAEiC,OAAOmiB,QAC3B5nB,EAAKmD,SAAS,SAAA0kB,GAAS,MAAK,CAAEC,aAAcD,EAAUC,aAAaC,IAAInlB,EAAM+kB,OA3D7D3nB,EA+EhBgoB,cAAgB,WACfhoB,EAAKioB,cAhFUjoB,EAmFhBioB,WAAa,WACX,IAAI7kB,EAAU,GACdpD,EAAK6B,MAAMqmB,MAAMvlB,IAAI,SAACC,EAAMC,GAAP,OACPO,EAAQN,KAAK,CACTC,IAAKH,EAAK1C,GACV8C,KAAMJ,EAAKulB,MACXjlB,MAAON,EAAKulB,UAE9BnoB,EAAKmD,SAAS,CACZC,WACC,kBAAMpD,EAAKqD,eA7FArD,EAgGhBqD,UAAY,WACV,IAAIC,EAAMtD,EAAK6B,MAAMuB,QAEfA,EAAUE,EACXX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACtCxD,EAAKmD,SAAS,CACZC,aAxGYpD,EA4GhB4D,QAAU,WACR,IAAIkE,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,mBA/GY9H,EAmHhB2b,YAAc,WACZ,IAAIyM,EAAUpoB,EAAK6B,MAAMwmB,UACzBroB,EAAKmD,SAAS,CACZilB,aAtHYpoB,EA2HhBgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAK2b,iBA3HrD3b,EA8HhBsoB,YAAc,WACZC,OAAOC,SAAS,EAAGxoB,EAAKyoB,MAAMC,YA/HhB1oB,EAmIjB4jB,WAAa,WACX,IAAIC,EAAW7jB,EAAK6B,MAAMgiB,SAAShgB,QAC/B8kB,EAAS3oB,EAAK6B,MAAM8mB,OACpBhF,EAAiB3jB,EAAK6B,MAAM8hB,eAC5B/M,EAAc5W,EAAK6B,MAAM+U,YACzBgS,EAAe5oB,EAAK6B,MAAM+mB,aAC1B9E,EAAO,GACU,KAAhBlN,GAA2C,KAAnB+M,GAA4C,KAAjBiF,GACvD9E,EAAI,OAAalN,EACjBkN,EAAI,QAAcH,EAClBE,EAASnc,QAAQoc,GACjB9jB,EAAKmD,SAAS,CACZ0gB,WACAjN,YAAa,GACb+M,eAAgB,GAChBiF,aAAc,MAGO,IAAfhS,GACR+R,EAAM,KAAW,kHACjB3oB,EAAKmD,SAAS,CACbwlB,YAGwB,IAAlBhF,GACPgF,EAAM,QAAc,yOACpB3oB,EAAKmD,SAAS,CACbwlB,YAGsB,IAAhBC,IACPD,EAAM,MAAY,iHAClB3oB,EAAKmD,SAAS,CACbwlB,aApKa3oB,EA0KhB6oB,cAAgB,SAACtjB,GACfvF,EAAKmD,SAAS,CAACwgB,eAAgBpe,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,QA3K7CpG,EA+KhB8oB,WAAa,SAACvjB,GACZvF,EAAKmD,SAAS,CAACyT,YAAarR,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,QAhL1CpG,EAmLhB+oB,YAAc,SAACxjB,GACbvF,EAAKmD,SAAS,CAACylB,aAAcrjB,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,QApL3CpG,EAuLhBgpB,YAAc,SAACxlB,GACbxD,EAAKmD,SAAS,CACbykB,SAAU5nB,EAAK6B,MAAM+lB,WAzLR5nB,EA6LhBipB,WAAa,SAACzlB,EAADkT,GAAA,IAAMwS,EAANxS,EAAMwS,OAAQC,EAAdzS,EAAcyS,UAAd,OAA8BnpB,EAAKmD,SAAS,CAAE+lB,SAAQC,eA3LnEnpB,EAAKyoB,MAAQtc,IAAMC,YACnBpM,EAAK6B,MAAQ,CACXqmB,MAAO,GACP9kB,QAAS,GACT0E,cAAe,GACf5E,MAAO,KACPkmB,iBAAiB,EACjB3Z,eAAe,EACf4Z,kBAAkB,EAClBC,qBAAqB,EACrBC,uBAAuB,EACvB7nB,MAAO,GACPyiB,OAAQ,GACRxX,QAAS,GACTkB,YAAa,KACb/M,MAAO,KACPyO,aAAc,GACdia,YAAa,GACb1G,YAAa,GACb2G,iBAAkB,EAClBC,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,KACZC,UAAW,GACXzB,UAAW,KACXD,QAAS,GACTzE,eAAgB,GAChB/M,YAAa,GACbgS,aAAc,GACd5E,MAAO,EACP2E,OAAQ,GACRb,aAAc,IAAIiC,IAClBnC,SAAS,EACToC,WAAY,GACZ/C,aAAc,KACdgD,SAAU,KACVlD,WAAW,EACXmD,eAAgB,EAChBC,WAAY,GACZC,oBAAoB,EACpBC,qBAAqB,EACrBC,cAAe,GACfC,aAAc,EACdC,gBAAiB,KACjBta,QAAS,EACTua,MAAO,EACPxa,QAAS,EACTiZ,OAAQ,EACRC,UAAW,GAnDGnpB,mFA8DE,IAAAmE,EAAAhE,KAChBiE,IAAMC,IAAI,eACPC,KAAK,SAAAC,GACJ,IAAI2jB,EAAQ3jB,EAAIC,KACZ+K,EAAe,GACf4a,EAAa,GACjBjC,EAAMvlB,IAAI,SAACC,EAAMgI,GACf2E,EAAazM,KAAKF,EAAK+J,SACvBwd,EAAWrnB,KAAKF,EAAK9B,SAEvBqD,EAAKhB,SAAS,CACZ+kB,QACA3Y,gBACC,kBAAMpL,EAAK8jB,kDAoHb,IAAA7d,EAAAjK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACdb,KAAK0B,MAAM4N,cACVpP,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACnCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,4EACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,YAGlB,KAEJjD,KAAK0B,MAAMqmB,MAAMpd,QAAU3K,KAAK0B,MAAMunB,gBACxC/oB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,cAAc0P,YAAa,GAChDvQ,KAAK0B,MAAMqmB,MAAMvlB,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BR,EAAKvI,MAAMiG,eAAuD,KAA7BsC,EAAKvI,MAAMiG,eAAwBsC,EAAKvI,MAAMiG,gBAAkBlF,EAAKulB,QAChJ9nB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,EAAO5J,UAAU,eAC1BX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAK+B,EAAK9B,SAEnBT,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,gBAAeX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,gBAAgB4B,EAAKuhB,SAC3E9jB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,gBAAeX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,eAAe4B,EAAKlB,OAA1E,IAAwFrB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,eAAe4B,EAAKulB,MAAMxlB,IAAI,SAACwlB,EAAOuC,GAAR,OAAgBrqB,EAAAC,EAAAC,cAAA,gBAAA0M,OAAWkb,QACjK9nB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,MAAMiJ,KAAK,KAA5B,KACAjK,EAAAC,EAAAC,cAAA,qBAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,QAAQiJ,KAAK,MAC9BjK,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAACoqB,GAAA,EAAD,CAAQ3pB,UAAY,eAAemoB,UAAW,EAAGyB,OAAQxgB,EAAK6e,cAEhE5oB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACG/N,EAAK+J,QAAQvG,OAAO,EAAE,KAAO,SAGlC/F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMhF,UAAU,2BAA4BiF,GAAI,CAAE4kB,SAAQ,UAAA5d,OAAYrK,EAAK1C,IAAO8J,MAAO,CAAEpH,UAA3F,6CAGJ,KAEhBzC,KAAK0B,MAAMynB,oBACXjpB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,wBAAwB0D,UAAQ,GAC9CrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,mBACfb,KAAK0B,MAAMmoB,WAAWrnB,IAAI,SAACC,EAAKgI,GAAN,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GACdvK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKuJ,EAAKvI,MAAMf,SAEzBT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACZX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACbX,EAAAC,EAAAC,cAAA,qBAAaqK,EAAQ,EAArB,KACAvK,EAAAC,EAAAC,cAAA,SAAI6J,EAAKvI,MAAMH,QAEjBrB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACZX,EAAAC,EAAAC,cAAA,SAAOL,GAAG,gBAAgBvC,KAAK,QAAQuF,MAAOkH,EAAKvI,MAAM0oB,aAAcO,IAAI,IAAIC,IAAK3gB,EAAKvI,MAAM2oB,gBAAiBQ,KAAK,IAAIC,QAAS7gB,EAAK8gB,SAAUhmB,SAAUkF,EAAK8gB,YAEnK7qB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACZX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,kBAAkBC,QAASmJ,EAAKyc,aAC7Czc,EAAKvI,MAAMklB,UACV1mB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,uBAAuBiJ,KAAK,KAAQjK,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,sBAAsBiJ,KAAK,MAGzFjK,EAAAC,EAAAC,cAAA,QAAMS,UAAU,kBAAkBC,QAASmJ,EAAK+gB,gBAC5C9qB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,MAE/BjK,EAAAC,EAAAC,cAAA,QAAMS,UAAU,kBAAkBC,QAASmJ,EAAKghB,eAC5C/qB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,UAAUiJ,KAAK,MAE/BjK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACbX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,YAAYiJ,KAAK,KAC5BjK,EAAAC,EAAAC,cAAA,SAAOL,GAAG,cAAcvC,KAAK,QAAQuF,MAAOkH,EAAKvI,MAAMyoB,cAAeQ,IAAI,IAAIC,IAAI,MAAMC,KAAK,IAAIC,QAAS7gB,EAAKihB,UAAWnmB,SAAUkF,EAAKihB,YACzIhrB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,mBAAmBoJ,EAAKvI,MAAM4oB,MAA9C,IAAsDrgB,EAAKvI,MAAMqO,QAAjE,IAA2E9F,EAAKvI,MAAMoO,kBASzG5P,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,oBACfX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACAV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACRX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,iBAAiBC,QAASd,KAAKmrB,aAC7CjrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,uBAAuBiJ,KAAK,SAE/CjK,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBACZX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAwBC,QAASd,KAAKorB,YAAYlrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,QAAStJ,UAAU,mBAAhH,kBACAX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAwBC,QAASd,KAAKqrB,YAApD,aAA0EnrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,cAAciJ,KAAK,QAAQtJ,UAAU,kBAA1H,KACAX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAwBC,QAASd,KAAKsrB,cAApD,cACStrB,KAAK0B,MAAM0nB,sBACZlpB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,QAAQtJ,UAAU,kBAAqBX,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,QAAQtJ,UAAU,mBAEzHX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAwBC,QAASd,KAAKurB,cAApD,aAA4ErrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,QAAQtJ,UAAU,qBAG1HX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,qBAAqBb,KAAK0B,MAAMH,OACvDrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,gCAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACZb,KAAK0B,MAAMihB,eAIlBziB,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBACZb,KAAKwrB,oBACLtrB,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAwBC,QAASd,KAAKmoB,aAApD,OAAqEjoB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,WAAWiJ,KAAK,QAAQtJ,UAAU,mBAClHX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAwBC,QAASd,KAAKorB,YAAYlrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,QAAStJ,UAAU,mBAAhH,mBACAX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAwBC,QAASd,KAAKqrB,YAApD,aAA0EnrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,cAAciJ,KAAK,QAAQtJ,UAAU,mBACvHb,KAAKyrB,sBAGE,OAIfvrB,EAAAC,EAAAC,cAAA,uBAnUehD,aAmVRqE,mBATf,SAAyBC,GACvB,MAAO,CAACC,MAAOD,EAAME,UAGvB,SAA4BC,GACxB,MAAO,CAAExE,QAASyE,YAAmBzE,EAASwE,KAInCJ,CAA6C6lB,ICnS7CoE,oLA9CX,OACExrB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,oBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,WAAT,qCAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,UAAT,oEAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,UAAT,kGAGjB5F,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAad,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,UAAT,uCAMrB5F,EAAAC,EAAAC,cAAA,uBA7CgBhD,aC8STuuB,uBA1Sb,SAAAA,EAAY7rB,GAAM,IAAA8rB,EAAA/rB,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA2rB,IAChB9rB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA2pB,GAAAvpB,KAAApC,KAAMF,KA4CN+rB,cAAgB,WACd,IAAIvpB,EAAW,GACfzC,EAAK6B,MAAMoqB,MAAMtpB,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAKlB,MACVsB,KAAMJ,EAAK8Y,WACXxY,MAAON,EAAK8Y,eAE9B1b,EAAKmD,SAAS,CACZC,QAASX,GACR,kBAAMzC,EAAKqD,eAvDArD,EA0DhBqD,UAAY,WACV,IACIC,EAAMtD,EAAK6B,MAAMuB,QAEfG,EAASD,EACZX,IAAI,SAAAa,GAAC,OAAIA,EAAC,OACVb,IAAI,SAACa,EAAGX,EAAGY,GAAP,OAAiBA,EAAMC,QAAQF,KAAOX,GAAKA,IAC/Cc,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIb,IAAI,SAAAa,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,EACTqjB,cATc,MA3DF5mB,EAwEhBygB,eAAiB,WACDzgB,EAAK6B,MAAMuB,QAAQS,QAAjC,IACIiE,EAAgB9H,EAAK6B,MAAMqB,MAC/BlD,EAAKmD,SAAS,CACZ2E,cAAeA,KA5EH9H,EAgFhBgE,aAAe,SAACR,EAADS,GAAA,IAAMf,EAANe,EAAMf,MAAN,OAAkBlD,EAAKmD,SAAS,CAAED,SAAS,kBAAMlD,EAAKygB,oBAhFrDzgB,EAkFhBksB,WAAa,SAAC1oB,GACZ,IAAI2oB,EAAW3oB,EAAEiC,OAAO2mB,aAAa,YACjClsB,EAAKsD,EAAEiC,OAAO2mB,aAAa,MAC3BC,EAAcrsB,EAAK6B,MAAMwqB,YAAYxoB,QAEnCP,GADa+oB,EAAYF,GAAUjsB,GAC7B,IAAIosB,MAAM,GAAGhb,MAAK,IAC9BhO,EAAIpD,IAAM,EACVmsB,EAAYF,GAAY7oB,EACxBtD,EAAKmD,SAAS,CACZkpB,iBA3FYrsB,EAgGhBusB,WAAa,SAACC,GACZ,IACIC,EADQzsB,EAAK6B,MAAMoqB,MAAMpoB,QACNuH,KAAK,SAAAC,GAAC,OAAIA,EAAEnL,KAAOssB,IAEtCH,EAAc,GACdK,EAAW,GACXC,EAAiB,GAErBF,EAAW7Y,MAAMjR,IAAI,SAACC,EAAMgI,GAAP,OAAiB+hB,EAAe7pB,KAAKF,EAAK4P,kBAC/D,IAAK,IAAI3P,EAAI,EAAGA,EAAI,EAAGA,IACrB6pB,EAAS5pB,MAAK,GAEhB,IAASD,EAAI,EAAGA,EAAI4pB,EAAW7Y,MAAM9I,OAAQjI,IAC3CwpB,EAAYvpB,KAAK4pB,GAEnB1sB,EAAKmD,SAAS,CACZspB,aACAJ,cACAM,kBACC,kBAAM3sB,EAAKmD,SAAS,CACnBypB,iBAAiB,EACjBC,qBAAqB,OArHX7sB,EAyHhB8sB,YAAc,WACZ9sB,EAAKmD,SAAS,CACZypB,iBAAiB,EACjBC,qBAAqB,EACrBpd,eAAe,EACfE,iBAAiB,EACnB0c,YAAa,GACbU,aAAc,EACdC,iBAAkB,EAClBL,eAAgB,GAChBM,eAAgB,GAChBC,iBAAkB,MApIJltB,EAwIhBmtB,aAAe,WAMd,IALA,IAAIC,EAAeptB,EAAK6B,MAAMwqB,YAAYxoB,QACtC8oB,EAAiB3sB,EAAK6B,MAAM8qB,eAAe9oB,QAC3CwpB,EAAe,GACfJ,EAAiB,GACjBC,EAAmB,GACdrqB,EAAI,EAAGA,EAAIuqB,EAAatiB,OAAQjI,IAExC,IADA,IAAID,EAAOwqB,EAAavqB,GACfwM,EAAI,EAAGA,EAAIzM,EAAKkI,OAAQuE,IAC5BzM,EAAKyM,IACRge,EAAavqB,KAAKuM,GAKpB,GAAGge,EAAaviB,QAAU9K,EAAK6B,MAAM4qB,WAAW7Y,MAAM9I,OAAQ,CAC5D,IAASjI,EAAI,EAAGA,EAAIwqB,EAAaviB,OAAQjI,IACpC8pB,EAAe9pB,KAAOwqB,EAAaxqB,GACpCoqB,EAAenqB,KAAKD,GAGpBqqB,EAAiBpqB,KAAKD,GAG1B7C,EAAKmD,SAAS,CACZwM,iBAAiB,EACjBkd,qBAAqB,EACrBI,iBACAC,mBACAzd,eAAe,EACf6d,kBAAkB,SAIpBttB,EAAKmD,SAAS,CACZmqB,kBAAkB,KAzKxBttB,EAAK6B,OAALkqB,EAAA,CACEE,MAAO,GACP7oB,QAAS,GACT0E,cAAe,GACf8e,cAAe,GACf1jB,MAAO,KACP0pB,iBAAiB,EACjBC,qBAAqB,EACrBnrB,MAAO,GACPiL,QAAS,GACT7L,MAAO,MAVTqB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,QAWS,IAXT5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,eAYgB,IAZhB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,cAae,IAbf5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,aAcc,MAdd5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,eAegB,GAfhB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,mBAgBoB,GAhBpB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,iBAiBkB,IAjBlB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,iBAkBkB,IAlBlB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,mBAmBoB,IAnBpB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,iBAoBiB,GApBjB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,oBAqBoB,GArBpB5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,eAsBgB,MAtBhBA,GAFgB/rB,mFA6BE,IAAAmE,EAAAhE,KAChBiE,IAAMC,IAAI,eACPC,KAAK,SAAAC,GACJ,IAAI0nB,EAAQ1nB,EAAIC,KAChBL,EAAKhB,SAAS,CACZ8oB,MAAOA,GACN,kBAAM9nB,EAAK6nB,+DAIDnE,GACbA,EAAUwE,YAAgBlsB,KAAK0B,MAAMwqB,6CA0IpC,IAAAjiB,EAAAjK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACXX,EAAAC,EAAAC,cAACiK,EAAD,MACAnK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACdb,KAAK0B,MAAM+qB,gBACVvsB,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMzD,UAAU,aAAa0D,UAAQ,GACjCrE,EAAAC,EAAAC,cAACkE,EAAA,EAAKhE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL5B,MAAO/C,KAAK0B,MAAMqB,MAClBH,IAAK5C,KAAK0B,MAAMuB,QAAQlD,GACxB6E,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAY/E,KAAK6D,aACjBZ,QAASjD,KAAK0B,MAAMuB,YAGlB,KAEVjD,KAAK0B,MAAMoqB,MAAMnhB,QAAU3K,KAAK0B,MAAM+qB,gBACtCvsB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,0BAA0B0P,YAAa,GAC1DvQ,KAAK0B,MAAMoqB,MAAMtpB,IAAI,SAACC,EAAMgI,GAAP,OAA+C,QAA7BR,EAAKvI,MAAMiG,eAAuD,KAA7BsC,EAAKvI,MAAMiG,eAAwBsC,EAAKvI,MAAMiG,gBAAkBlF,EAAK8Y,aAClJrb,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAM1N,IAAK6H,EAAO5J,UAAU,sBAAsBslB,MAAS,CAACiH,UAAS,eAAAtgB,OAAiBrK,EAAK8jB,MAAtB,gBAAAzZ,OAA0CrK,EAAK8jB,SAClHrmB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,mBAAmBslB,MAAS,CAACC,gBAAiB3jB,EAAK8jB,QACzErmB,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8Y,YACVrb,EAAAC,EAAAC,cAAA,YAAOqC,EAAKlB,QAEbrB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,0BACzBX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,+BAAb,6GAAgEX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,8BAA8B4B,EAAK7E,SACnHsC,EAAAC,EAAAC,cAAA,KAAGS,UAAU,+BAAb,mJAAwEX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,8BAA8B4B,EAAK4qB,eAGhIntB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAAU,WAAOmJ,EAAKmiB,WAAW3pB,EAAK1C,KAA+ComB,MAAS,CAACC,gBAAiB3jB,EAAK8jB,QAA7H,qEAGY,KAElBvmB,KAAK0B,MAAMgrB,oBACTxsB,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,kCACdX,EAAAC,EAAAC,cAAA,UACEJ,KAAK0B,MAAM4qB,WAAW/qB,MACvBrB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK2sB,aAAczsB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,2BAE9ChB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACGZ,KAAK0B,MAAM4qB,WAAW7Y,MAAM/P,QAAQlB,IAAI,SAACC,EAAMgI,GAAP,OACrCvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB5N,IAAKH,EAAK1C,GAAIA,GAAI0K,EAAO5J,UAAU,gCACrDX,EAAAC,EAAAC,cAAA,UAAMqC,EAAK2J,UACXlM,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CAAMxH,UAAU,oBACb4B,EAAK0Q,SAAS3Q,IAAI,SAAC8qB,EAAO/C,GAAR,OACjBrqB,EAAAC,EAAAC,cAAA,SAAOS,UAAU,aAAa+B,IAAK2nB,GACjCrqB,EAAAC,EAAAC,cAAA,SAAO5C,KAAK,WACVuC,GAAIwqB,EACJyB,SAAUvpB,EAAK1C,GACfwtB,MAAOD,EACPpsB,KAAK,qBACL6B,MAAON,EACPglB,QAASxd,EAAKvI,MAAMwqB,YAAYzpB,EAAK1C,IAAIwqB,GACzCxlB,SAAUkF,EAAK8hB,aACduB,UAOdttB,KAAK0B,MAAMyrB,iBACVjtB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACXX,EAAAC,EAAAC,cAAA,kHACK,KAEXF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6CACdX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKgtB,cAAtB,gDAEK,KAEThtB,KAAK0B,MAAM8N,gBACVtP,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,qDACrCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,kCACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACNhX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACdX,EAAAC,EAAAC,cAAA,oLAAoCF,EAAAC,EAAAC,cAAA,YAAOJ,KAAK0B,MAAMorB,eAAeniB,QAArE,KACOzK,EAAAC,EAAAC,cAAA,wKAAkCF,EAAAC,EAAAC,cAAA,YAAOJ,KAAK0B,MAAMorB,eAAeniB,QAAnE,MAEFzK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMorB,eAAeniB,QAE7BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMqrB,iBAAiBpiB,QAE/BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2sB,aAA9B,kFAIQ,OAIpBzsB,EAAAC,EAAAC,cAAA,uBArSchD,cCoOPowB,eAnOd,SAAAA,EAAY1tB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAwtB,IACjB3tB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAwrB,GAAAprB,KAAApC,KAAMF,KAWL2U,gBAAkB,WACf5U,EAAKmD,SAAS,CACZ+D,MAAO,GACP2I,cAAe,GACfC,cAAe,GACf5P,GAAI,EACJgV,eAAe,EACfO,gBAAgB,EAChBsD,iBAAiB,EACjBC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBlG,gBAAgB,GACf,kBAAMhT,EAAK8V,iBAzBD9V,EA4BhB8V,YAAc,WACF9V,EAAK6B,MAAM3B,GACpBkE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GAIJ,IAHA,IAAM2C,EAAQ3C,EAAIC,KACd+O,EAAS,GAEJ1Q,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKkI,OAAS,GAAG,CACrB,IAAI8N,EAAK1R,EAAM0H,KAAKC,MAAMD,KAAKoH,SAAW9O,EAAM4D,UACtB,IAAtBlI,EAAKc,QAAQkV,IACfhW,EAAKE,KAAK8V,GAGdrF,EAAOzQ,KAAKF,GAGd,IAAMiS,EAActB,EAAO,GAAG3E,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SACnEhL,QAAQC,IAAIwT,GACZvT,EAAKmD,SAAS,CACZ+D,QACAqM,SACAsB,mBAnDO7U,EAwDfmZ,gBAAkB,WAChBnZ,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA3DJlV,EA+DfoZ,cAAgB,SAACwU,GACf,GAAIA,EAAU,CACZ,IAAI9d,EAAgB9P,EAAK6B,MAAMiO,cAAcjM,QAC7CiM,EAAchN,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CAAE2M,sBACX,CACH,IAAID,EAAgB7P,EAAK6B,MAAMgO,cAAchM,QAC7CgM,EAAc/M,KAAK9C,EAAK6B,MAAMgT,aAC9B7U,EAAKmD,SAAS,CAAE0M,kBAEpB7P,EAAKmD,SAAS,CACZ6V,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBzD,gBAAgB,KA7ELzV,EAiFfkS,iBAAmB,WACjB,IAAIhS,EAAIF,EAAK6B,MAAM3B,GACnBA,GAAU,EACV,IAAMqT,EAASvT,EAAK6B,MAAM0R,OAC1B,GAAGrT,EAAKF,EAAK6B,MAAM0R,OAAOzI,OAAO,CAC/B,IAAM+J,EAAetB,EAAOrT,GAAI0O,KAAKC,MAAMD,KAAKoH,SAAWzC,EAAO,GAAGzI,SACrE9K,EAAKmD,SAAS,CACZjD,KACA2U,cACAY,gBAAgB,EAChBuD,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,SAInBlZ,EAAKmD,SAAS,CACf6P,gBAAgB,EAChBgG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,EACpBhE,eAAe,EACf6D,iBAAiB,KAvGR/Y,EA2GhBN,UAAY,WACT,IAAIiX,EAAU3W,EAAK6B,MAAM+U,YACzBjX,IAAOC,IAAI+W,IA3Gf3W,EAAK6B,MAAQ,GAFI7B,mFASfG,KAAKyU,mDAwGL,OACEvU,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMkX,gBACX1Y,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYT,UAAU,uBACpBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,KACEpQ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,yBAEbR,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,kFACAd,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,KACEtQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKgZ,iBAA9B,4CAKR,KAEAhZ,KAAK0B,MAAMqT,cACZ7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,uBAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,qBAEvBX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,CAAaH,UAAU,qBAAqBb,KAAK0B,MAAMgT,YAAYxT,MAEnEhB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMgT,YAAYtT,aAErClB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACdb,KAAK0B,MAAM4T,eACVpV,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAK0B,MAAMgT,YAAY/T,MAAOE,UAAU,qBAA8B,OAItFX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcoT,OAAK,GACjB9T,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACvBb,KAAK0B,MAAMoX,eACZ5Y,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKiZ,cAAclY,KAAKf,MAAM,GAAQa,UAAU,mBAAmBsH,SAAO,GAA3F,8CACAjI,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKiZ,cAAclY,KAAKf,MAAM,GAAOa,UAAU,oBAAoBsH,SAAO,GAA3F,mCACU,KAEXnI,KAAK0B,MAAMqX,mBACV7Y,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAK+R,iBAAkB5J,SAAO,GAA/C,gEAAoE,SAM3E,KAEFnI,KAAK0B,MAAMmR,eACX3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,0CAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,qEACAd,EAAAC,EAAAC,cAAC8W,GAAA,EAAD,MACAhX,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,wBACU,IAApCb,KAAK0B,MAAMgO,cAAc/E,OACzBzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAK0B,MAAMiO,cAAcnN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAK0B,MAAMgO,cAAclN,IAAI,SAACC,EAAMgI,GAAP,OAC1BvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQvK,EAAAC,EAAAC,cAAA,YAAOqC,EAAKvB,MAApC,MAAoDuB,EAAKrB,iBAIhElB,EAAAC,EAAAC,cAAC+W,GAAA,EAAD,KACGjX,EAAAC,EAAAC,cAAC+W,GAAA,EAAQnW,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAMiO,cAAchF,QAE5BzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,wCAEF5W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAK0B,MAAM0R,OAAOzI,OAAS3K,KAAK0B,MAAMiO,cAAchF,QAEvDzK,EAAAC,EAAAC,cAAC0W,GAAA,EAAD,qDAGJ5W,EAAAC,EAAAC,cAACiB,EAAA,EAAOC,MAAR,CAAcT,UAAU,wBACtBX,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAKyU,iBAA9B,gEACAvU,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,GAACjI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAYjF,UAAU,iBAA/B,+DAKvB,MAGLX,EAAAC,EAAAC,cAAA,uBA/NiBhD,aCkLVswB,ICjLoBtwB,wBDElC,SAAAswB,EAAY5tB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA0tB,IACjB7tB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA0rB,GAAAtrB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAa,IAAVtQ,EAAY,CAChB,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAjFZruB,EAuFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA5GNlV,EAkHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IApHEtuB,EAwHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAvHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDAyFR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,aA1KoB1I,cEkLpBqxB,eAjLd,SAAAA,EAAY3uB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAyuB,IACjB5uB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAysB,GAAArsB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAGvB,GAFAnQ,GAAiB,EACjB/d,QAAQC,IAAI8d,GACPA,EAAQ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAlFZruB,EAwFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA7GNlV,EAmHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IArHEtuB,EAyHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAxHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDA0FR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA7KsBhxB,aCoLjBsxB,eAlLd,SAAAA,EAAY5uB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA0uB,IACjB7uB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA0sB,GAAAtsB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAjFZruB,EAuFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA5GNlV,EAkHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IApHEtuB,EAwHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAvHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDA2FR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA9KwBhxB,aCkLnBuxB,eAhLd,SAAAA,EAAY7uB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA2uB,IACjB9uB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA2sB,GAAAvsB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAjFZruB,EAuFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA5GNlV,EAkHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IApHEtuB,EAwHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAvHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDAyFR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA5K4BhxB,aCoLvBwxB,eAlLd,SAAAA,EAAY9uB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA4uB,IACjB/uB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA4sB,GAAAxsB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAjFZruB,EAuFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA5GNlV,EAkHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IApHEtuB,EAwHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAvHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDA2FR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA9KyBhxB,aCsLpByxB,eApLd,SAAAA,EAAY/uB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA6uB,IACjBhvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA6sB,GAAAzsB,KAAApC,KAAMF,KAyCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA7CJlV,EAiDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAGvB,GAFAnQ,GAAiB,EACjB/d,QAAQC,IAAI8d,GACPA,EAAQ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAnFZruB,EAyFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA9GNlV,EAoHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IAtHEtuB,EA0HhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAzHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJzE,QAAQC,IAAIwE,EAAIC,MAChB,IAAIgqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDA4FR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBAhL2BhxB,aCmLtB0xB,eAhLd,SAAAA,EAAYhvB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA8uB,IACjBjvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA8sB,GAAA1sB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAa,IAAVtQ,EAAY,CAChB,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAjFZruB,EAuFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA5GNlV,EAkHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IApHEtuB,EAwHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAvHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDAyFR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA5K0BhxB,aCoLrB2xB,eAnLd,SAAAA,EAAYjvB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA+uB,IACjBlvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA+sB,GAAA3sB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAGvB,GAFAnQ,GAAiB,EACjB/d,QAAQC,IAAI8d,GACPA,EAAQ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAlFZruB,EAwFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA7GNlV,EAmHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IArHEtuB,EAyHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAxHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDA4FR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA/KyBhxB,aCoLpB4xB,eAjLd,SAAAA,EAAYlvB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAgvB,IACjBnvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAgtB,GAAA5sB,KAAApC,KAAMF,KAyCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA7CJlV,EAiDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAa,IAAVtQ,EAAY,CAChB,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAlFZruB,EAwFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA7GNlV,EAmHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IArHEtuB,EAyHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAxHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KAEd6tB,GADK7tB,KAAK0B,MAAM3B,GACPC,KAAK0B,MAAMmsB,QACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDAyFR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA7KuBhxB,aCkLlB6xB,eAjLd,SAAAA,EAAYnvB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAivB,IACjBpvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAitB,GAAA7sB,KAAApC,KAAMF,KAyCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA7CJlV,EAiDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAlFZruB,EAwFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA7GNlV,EAmHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IArHEtuB,EAyHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAxHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJzE,QAAQC,IAAIwE,EAAIC,MAChB,IAAIgqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG8gB,YACjCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,GAAG+gB,MAClCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDAyFR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA7KoChxB,aCkL/B8xB,eAhLd,SAAAA,EAAYpvB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAkvB,IACjBrvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAktB,GAAA9sB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAjFZruB,EAuFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA5GNlV,EAkHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IApHEtuB,EAwHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAvHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,IAAI8gB,YAClCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,IAAI+gB,MACnCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,SAAUA,EACVE,eACAC,qBACAC,kBACAK,mDAyFR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA5KiChxB,aCoL5B+xB,eAhLd,SAAAA,EAAYrvB,GAAM,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAmvB,IACjBtvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAmtB,GAAA/sB,KAAApC,KAAMF,KAwCJuW,cAAgB,WACdxW,EAAKmD,SAAS,CACZ4V,iBAAiB,EACjB7D,eAAe,KA5CJlV,EAgDhB8tB,OAAS,WACN,IAAIC,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACJ/S,GAAY+S,EAAQ,EAAI,CACjC,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZ6qB,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAID,GAAY,GAATtQ,EAAW,CACf,IAAIoQ,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKEtQ,EAAQ,GACd7d,EAAKmD,SAAS,CACZkrB,qBAAqB,KAjFZruB,EAuFfkS,iBAAmB,WACjB,IAAI6b,EAAW/tB,EAAK6B,MAAMksB,SAASlqB,QAC/BiH,EAASijB,EAASjjB,OAClB+S,EAAQ7d,EAAK6B,MAAMmsB,OAEvB,IADAnQ,GAAiB,GACN/S,EAAO,CACd,IAAImjB,EAAeF,EAASlQ,GAAOnc,MAC/BwsB,EAAqBH,EAASlQ,GAAOhQ,YACrCsgB,EAAkBJ,EAASlQ,GAAOuQ,SACtCpuB,EAAKmD,SAAS,CACZkrB,qBAAqB,EACrBL,OAAQnQ,EACRoQ,eACAC,qBACAC,yBAKJnuB,EAAKmD,SAAS,CACZ6P,gBAAgB,EAChBkC,eAAe,KA5GNlV,EAkHhBN,UAAY,WACT,IAAI4uB,EAActuB,EAAK6B,MAAM+U,YAC7BjX,IAAOC,IAAI0uB,IApHEtuB,EAwHhBuuB,gBAAkB,WACjBzuB,QAAQC,IAAIC,EAAK6B,QAvHnB7B,EAAK6B,MAAQ,CACZksB,SAAU,GACPK,SAAU,GACVI,YAAa,GACbtuB,GAAI,EACJ8tB,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBjZ,eAAe,EACfgE,oBAAoB,EACpBlG,gBAAgB,EAChB+F,iBAAiB,EACjBsV,qBAAqB,EACrB3R,MAAO,IAhBM1c,mFAsBG,IAAAmE,EAAAhE,KACd6tB,EAAS7tB,KAAK0B,MAAMmsB,OACtB5pB,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAIiqB,EAAcjqB,EAAIC,KAAK,GAAGkJ,MAAM,IAAI8gB,YAClCT,EAAWxpB,EAAIC,KAAK,GAAGkJ,MAAM,IAAI+gB,MACnCR,EAAeF,EAASC,GAAQtsB,MAChCwsB,EAAqBH,EAASC,GAAQngB,YACtCsgB,EAAkBJ,EAASC,GAAQI,SACvCjqB,EAAKhB,SAAS,CACZ4qB,WACAE,eACAC,qBACAC,kBACAK,mDAyFR,OACEnuB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACiK,EAAD,MACErK,KAAK0B,MAAMqT,cACT7U,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gBACpCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,qBACdX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,KAAchB,KAAK0B,MAAMosB,cACzB5tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,iCAAiCb,KAAK0B,MAAMqsB,qBAE1E7tB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACKZ,KAAK0B,MAAMssB,gBAAgBxrB,IAAI,SAACC,EAAMgI,GAAP,OAC9BvK,EAAAC,EAAAC,cAACkQ,EAAA,EAAKE,YAAN,CAAkB3P,UAAU,2BAA2B+B,IAAM6H,GAC3DvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAK8rB,aACVruB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK+rB,mBAAT,SAIPtuB,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,CAAcC,UAAU,4BACvBb,KAAK0B,MAAMwsB,oBACZhuB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK2tB,QAA9B,kCAAsD,KACpDztB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQ8G,SAAO,EAACrH,QAASd,KAAK+R,kBAA9B,2CAIN,KAEF/R,KAAK0B,MAAMmR,eACb3S,EAAAC,EAAAC,cAACkQ,EAAA,EAAKhP,MAAN,CAAYiP,YAAa,EAAG1P,UAAU,gEAClCX,EAAAC,EAAAC,cAACkQ,EAAA,EAAD,CAAMzP,UAAU,iBACbX,EAAAC,EAAAC,cAACkQ,EAAA,EAAK1P,QAAN,KACEV,EAAAC,EAAAC,cAACkQ,EAAA,EAAKtP,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAK0B,MAAM2sB,YAAY7rB,IAAI,SAACC,EAAMgI,GAAP,OACzBvK,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWsC,IAAK6H,GAAQhI,MAG7BvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,GAAG,YAAT,0GAKL,KAEL5F,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKouB,iBAAtB,mBA5KmChxB,kDCkV9BgyB,eA5Ub,SAAAA,EAAYtvB,GAAO,IAAAD,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAovB,IACjBvvB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAotB,GAAAhtB,KAAApC,KAAMF,KA8DR+nB,cAAgB,WACd,IAMIwH,EAAUtf,EAASD,EANnB/P,EAAKF,EAAK6B,MAAMkR,UAChBgO,EAAe,IAAIC,QAAK,CAC1BngB,IAAK,UAAYb,EAAK6B,MAAMsf,MAAMtd,MAAM3D,EAAIA,EAAK,GACjD+gB,OAAO,EACPC,OAAQlhB,EAAK6B,MAAM4tB,YAAc,KAGnC1O,EAAa2O,GAAG,OAAQ,WACtBF,EAAWzO,EAAayO,WACxBtf,EAAUtB,KAAKC,MAAM2gB,EAAW,IAChCvf,EAAUrB,KAAKC,MAAM2gB,EAAqB,GAAVtf,GAChCA,GAAW,IAAMA,GAASrM,OAAO,GACjCoM,GAAW,IAAMA,GAASpM,OAAO,GAChB,KACA,KACjB7D,EAAKmD,SAAS,CAAE+M,UAASD,UAASuf,WAAUzO,gBAAgB,WAC1D/gB,EAAKmD,SAAS,CAAEwsB,kBAAkB,IAC9B3vB,EAAK6B,MAAMuf,SACbphB,EAAK4vB,mBAIX5vB,EAAK6vB,SAAS3vB,IAtFGF,EAyFnB8vB,WAAa,WACX9vB,EAAKmD,SAAS,CACZ4sB,SAAU,EACVC,eAAgB,KAChBC,eAAgB,QA7FDjwB,EAiGnB6vB,SAAW,SAAC3vB,GACEF,EAAK6B,MAAMsf,MAAMjhB,GAC7BgwB,KAAYC,KACV,mCAAAljB,OAAqCjN,EAAK6B,MAAMsf,MAAMjhB,IACtD,CACEkwB,UAAW,SAACC,GACVrwB,EAAKmD,SAAS,CAAEmtB,iBAAkBD,GAAO,WACvCrwB,EAAKuwB,qBAGTC,QAAS,SAACC,GACR3wB,QAAQC,IAAI,KAAM0wB,EAAM9yB,KAAM8yB,EAAMC,UA5GzB1wB,EAkHnBuwB,gBAAkB,WAChB,IAEII,EAFAjvB,EAAQ1B,EAAK6B,MAAMyuB,iBAAiBM,KAAKlvB,MACzCmvB,EAAS7wB,EAAK6B,MAAMyuB,iBAAiBM,KAAKC,OAE9C,GAAI7wB,EAAK6B,MAAMyuB,iBAAiBM,KAAKE,QAAS,KAAAC,EACrB/wB,EAAK6B,MAAMyuB,iBAAiBM,KAAKE,QAAhDtsB,EADoCusB,EACpCvsB,KAAM7G,EAD8BozB,EAC9BpzB,KACRqzB,EAAY,IAAIC,WAAWzsB,GAC3B0sB,EAAO,IAAIC,KAAK,CAACH,GAAY,CAAErzB,SACrCgzB,EAAsBS,IAAIC,gBAAgBH,GAE5ClxB,EAAKmD,SAAS,CACZwtB,sBACAW,kBAAmB5vB,EACnB6vB,mBAAoBV,KA/HL7wB,EAmInBwxB,UAAY,WACV,IAAIzQ,EAAe/gB,EAAK6B,MAAMkf,aAC1B0Q,EAAWzxB,EAAK6B,MAAM4vB,SACtBzxB,EAAK6B,MAAMuf,SACbL,EAAaQ,QAEb/B,cAAciS,GACdzxB,EAAKmD,SAAS,CAAEsuB,eAEhB1Q,EAAaG,OAAOlhB,EAAK6B,MAAM4tB,YAAc,IAC7C1O,EAAaO,OACbmQ,EAAW/R,YAAY,kBAAM1f,EAAK0xB,cAAc,KAChD1xB,EAAKmD,SAAS,CAAEsuB,cAIlBzxB,EAAKmD,SAAS,CAAC4d,kBAnJE/gB,EAsJnB4vB,aAAe,WACb,IAAI7O,EAAe/gB,EAAK6B,MAAMkf,aAC1B/gB,EAAK6B,MAAMuf,SACbL,EAAa4Q,OAEf,IAAIF,EAAWzxB,EAAK6B,MAAM4vB,SAC1BjS,cAAciS,GACd1Q,EAAaO,OACTthB,EAAK6B,MAAMuf,UACbqQ,EAAW/R,YAAY,kBAAM1f,EAAK0xB,cAAc,MAElD1xB,EAAKmD,SAAS,CAAEsuB,cAjKCzxB,EAoKnB4xB,aAAe,SAACpuB,GACd,IAAIud,EAAe/gB,EAAK6B,MAAMkf,aAC9BA,EAAaG,OAAO1d,EAAEiC,OAAOvC,MAAQ,IACrClD,EAAKmD,SAAS,CAAEssB,YAAajsB,EAAEiC,OAAOvC,MAAO6d,kBAvK5B/gB,EA0KnB6xB,UAAY,WACV,IAAI9Q,EAAe/gB,EAAK6B,MAAMkf,aAC9BA,EAAaG,OAAOlhB,EAAK6B,MAAMqf,OAAS,IACxCphB,QAAQC,IAAI,eAAgBghB,GAC5BA,EAAa4Q,OACT3xB,EAAK6B,MAAMkR,UAAY/S,EAAK6B,MAAMsf,MAAMrW,OAK5C9K,EAAKmD,SAAS,CAAE4d,eAAc4O,kBAAkB,GAAS,WACvD3vB,EAAK8vB,gBArLU9vB,EAyLnB8xB,UAAY,WACV,IAAI/Q,EAAe/gB,EAAK6B,MAAMkf,aAC9BA,EAAaG,OAAOlhB,EAAK6B,MAAMqf,OAAS,IACxCH,EAAa4Q,OACT3xB,EAAK6B,MAAMkR,UAKf/S,EAAKmD,SAAS,CAAE4d,eAAc4O,kBAAkB,GAAS,WACvD3vB,EAAK8vB,gBAnMU9vB,EAuMnB+xB,UAAY,WACV,IAAIhR,EAAe/gB,EAAK6B,MAAMkf,aAC1B/gB,EAAK6B,MAAMmwB,MACbjR,EAAakR,MAAK,GAElBlR,EAAakR,MAAK,GAEpBjyB,EAAKmD,SAAS,CACZ6uB,OAAQhyB,EAAK6B,MAAMmwB,MACnBjR,kBAhNe/gB,EAoNnB0xB,WAAa,WACX1xB,EAAKkyB,UACLlyB,EAAKmyB,kBAtNYnyB,EAyNnBmyB,eAAiB,WACf,IAEIpC,GAFOnhB,KAAKwjB,MAAMpyB,EAAK6B,MAAMkf,aAAasR,QAC/BzjB,KAAKwjB,MAAMpyB,EAAK6B,MAAMkf,aAAayO,YACd,KAAK8C,QAAQ,GACjDtyB,EAAKmD,SAAS,CAAE4sB,cA7NC/vB,EAiOnBkyB,QAAU,WACR,IAAI1H,EAAkB5b,KAAKwjB,MAAMpyB,EAAK6B,MAAMkf,aAAasR,QACrDrC,EAAiBphB,KAAKC,MAAM2b,EAAkB,IAC9CyF,EAAiBrhB,KAAKC,MAAM2b,EAAmC,GAAjBwF,GAIlD,GAHAA,GAAkB,IAAMA,GAAgBnsB,OAAO,GAC/CosB,GAAkB,IAAMA,GAAgBpsB,OAAO,GAC/C7D,EAAKmD,SAAS,CAAE8sB,iBAAgBD,iBAAgBxF,oBAC5CA,IAAoBxqB,EAAK6B,MAAMkf,aAAayO,WAAY,CAC1D,IAAIzO,EAAe/gB,EAAK6B,MAAMkf,aAC9BA,EAAa4Q,OACT3xB,EAAK6B,MAAMkR,UAAY/S,EAAK6B,MAAMsf,MAAMrW,OAK5C9K,EAAKmD,SAAS,CAAE4d,eAAc4O,kBAAkB,GAAS,WACvD3vB,EAAK8vB,aACL9vB,EAAKgoB,cAAchoB,EAAK6B,MAAMkR,eAlPjB/S,EAuPnBuyB,QAAU,SAAC/uB,GACT,IAAIud,EAAe/gB,EAAK6B,MAAMkf,aAC1ByO,EAAW5gB,KAAKwjB,MAAMpyB,EAAK6B,MAAMkf,aAAayO,YAC9C6C,EAAQ7uB,EAAEiC,OAAOvC,MAAQssB,EAAY,IACzCzO,EAAasR,KAAKA,GAClBvyB,QAAQC,IAAI,OAAQ6O,KAAKwjB,MAAMC,IAC/BryB,EAAKmD,SAAS,CAAE4d,eAAcgP,SAAUvsB,EAAEiC,OAAOvC,OAAS,WACxDlD,EAAKkyB,UAELpyB,QAAQC,IAAIC,EAAK6B,MAAMkuB,aA9PzB/vB,EAAK6B,MAAQ,CACXsf,MAAO,GACPsO,YAAa,EACbrO,SAAS,EACT4Q,OAAO,EACPjR,aAAc,KACdyR,mBAAoB,KACpBlC,iBAAkB,KAClBK,oBAAqB,KACrB5d,UAAW,EACX0f,MAAO,cACPjD,SAAU,EACVtf,QAAS,KACTD,QAAS,KACTua,gBAAiB,EACjBwF,eAAgB,KAChBC,eAAgB,KAChByC,eAAe,EACfjB,SAAU,KACV1B,SAAU,EACVJ,kBAAkB,GAtBH3vB,mFA0BA,IAAAmE,EAAAhE,KACjBA,KAAKgD,SAAS,CACZ4P,UAAW,GACV,WACD3O,IACGC,IAAI,eACJC,KAAK,SAACC,GAAD,OACJJ,EAAKhB,SAAS,CAAEge,MAAO5c,EAAIC,4CAoOjC,OACEnE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAA8Bd,GAAG,cAElDG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,oBAAoBb,KAAK0B,MAAMmuB,eAA/C,IAAgE7vB,KAAK0B,MAAMouB,gBAC3E5vB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACXX,EAAAC,EAAAC,cAAA,SACES,UAAU,yBACV8pB,IAAI,IACJC,IAAI,MACJptB,KAAK,QACLuF,MAAO/C,KAAK0B,MAAMkuB,SAClB7qB,SAAU/E,KAAKoyB,WAGrBlyB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,oBAAoBb,KAAK0B,MAAMqO,QAA/C,IAAyD/P,KAAK0B,MAAMoO,UAEtE5P,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iCACVb,KAAK0B,MAAM8uB,oBACVtwB,EAAAC,EAAAC,cAAA,OAAKM,IAAKV,KAAK0B,MAAM8uB,oBAAqB3vB,UAAU,uBAAuB2xB,IAAI,KAC7E,MAERtyB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+CACbX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,4BAA4Bb,KAAK0B,MAAMyvB,mBACpDjxB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,8BAA8Bb,KAAK0B,MAAM0vB,sBAG1DlxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CAA8CC,QAASd,KAAK2xB,WAAWzxB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,qBACjGb,KAAK0B,MAAMuf,QAAwI,KAA9H/gB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CAA8CC,QAASd,KAAKqxB,WAAWnxB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,iBACzHb,KAAK0B,MAAMuf,QAAU/gB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CAA8CC,QAASd,KAAKqxB,WAAWnxB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAA4B,KACrJX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+CAA+CC,QAASd,KAAK0xB,WAAWxxB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAI1GX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6CAA4CX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,sBAC9DX,EAAAC,EAAAC,cAAA,SACES,UAAU,yBACVkC,MAAO/C,KAAK0B,MAAM4tB,YAClB3E,IAAI,IACJC,IAAI,KACJ7lB,SAAU/E,KAAKyxB,aACfj0B,KAAK,oBAxTHJ,uBCCpBq1B,uBAEJ,SAAAA,EAAY3yB,GAAM,IAAA8rB,EAAA/rB,EAAA,OAAAmC,OAAAC,EAAA,EAAAD,CAAAhC,KAAAyyB,IAChB5yB,EAAAmC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAywB,GAAArwB,KAAApC,KAAMF,KA2FR4yB,eAAiB,WAOb,IANF,IAAI7vB,EAAOhD,EAAK6B,MAAMmB,KAClB8vB,EAAQ,GAAQC,EAAc,GAC9B7vB,EAAQ,KAAOlD,EAAK6B,MAAMmxB,WAC1BC,EAAarkB,KAAKskB,KAAKlwB,EAAK8H,OAAS5H,GACrCiwB,EAAa,EACbC,EAAa,GACNvwB,EAAI,EAAGA,EAAIowB,EAAYpwB,IAC9BiwB,EAAMhwB,KAAKE,EAAKa,MAAMsvB,EAAWC,IACjCD,GAA0B,GAC1BC,GAA0B,GAE5B,IAASvwB,EAAI,EAAGA,EAAIowB,EAAYpwB,IAC9BkwB,EAAYjwB,KAAKD,GAEnB7C,EAAKmD,SAAS,CAAE2vB,QACAC,cACAjQ,YAAagQ,EAAM,GACnBxmB,QAAQ,KA9GVtM,EAiHhBurB,WAAa,WACX,IAAI8H,EAAgBrzB,EAAK6B,MAAMwxB,cAE5BA,EAAgB,GACjBA,IAEF,IAAIvQ,EAJQ9iB,EAAK6B,MAAMixB,MAICO,GACxBrzB,EAAKmD,SAAS,CACVkwB,gBACAvQ,eACD,kBAAM9iB,EAAKsoB,iBA3HAtoB,EA8HhBwrB,WAAa,WACX,IAAI6H,EAAgBrzB,EAAK6B,MAAMwxB,cAC3BP,EAAQ9yB,EAAK6B,MAAMixB,MAAMjvB,QAC1BwvB,EAAgBP,EAAMhoB,OAAS,GAChCuoB,IAEF,IAAIvQ,EAAcgQ,EAAMO,GACxBrzB,EAAKmD,SAAS,CACVkwB,gBACAvQ,eACD,kBAAM9iB,EAAKsoB,iBAxIAtoB,EA2IhBsoB,YAAc,WACZC,OAAOC,SAAS,EAAGxoB,EAAKyoB,MAAMC,YA5IhB1oB,EA+IhBszB,WAAa,WACXtzB,EAAKmD,SAAS,CACZowB,iBAAiB,KAjJLvzB,EAqJhBonB,YAAc,WACZpnB,EAAKmD,SAAS,CACZqwB,kBAAkB,KAvJNxzB,EA4JlByzB,WAAa,SAACjwB,GACV,IAAI6vB,EAAgBtQ,OAAOvf,EAAEiC,OAAOvC,OAEhC4f,EADQ9iB,EAAK6B,MAAMixB,MACCO,GACxBrzB,EAAKmD,SAAS,CACVkwB,gBAAevQ,iBAjKL9iB,EAqKlB0zB,WAAa,WACX1zB,EAAKmD,SAAS,CACZowB,iBAAiB,EACjBC,kBAAkB,KAxKJxzB,EA4KlB2zB,YAAc,SAACnwB,GACbxD,EAAKmD,SAAS,CAACywB,aAAcpwB,EAAEiC,OAAOvC,SA7KtBlD,EAgLlB6zB,iBAAmB,SAACrwB,GAClBxD,EAAKmD,SAAS,CAAC2wB,eAAgBtwB,EAAEiC,OAAOvC,SAjLxBlD,EAoLlB+zB,iBAAmB,SAACvwB,GAClBxD,EAAKmD,SAAS,CAAC6wB,eAAgBxwB,EAAEiC,OAAOvC,SArLxBlD,EAwLlBi0B,iBAAmB,SAACzwB,GAClBxD,EAAKmD,SAAS,CAAC+wB,eAAgB1wB,EAAEiC,OAAOvC,SAzLxBlD,EA4LlBm0B,kBAAoB,WAClBn0B,EAAKmD,SAAS,CACZrE,SAAUkB,EAAK6B,MAAM+xB,aACrBZ,WAAYhzB,EAAK6B,MAAMqyB,eACvBl1B,WAAYgB,EAAK6B,MAAMiyB,eACvB10B,WAAYY,EAAK6B,MAAMmyB,eACvBT,iBAAiB,KAlMHvzB,EAuMlBo0B,aAAe,SAAC5wB,GAGd,IAFA,IAAI6wB,EAAYr0B,EAAK6B,MAAMwyB,UAAUxwB,QACjC+G,EAAQpH,EAAE8wB,cAAclI,aAAa,cAChCvpB,EAAI,EAAGA,EAAIwxB,EAAUvpB,OAAQjI,IACpCwxB,EAAUxxB,IAAK,EAEjBwxB,EAAUzpB,IAAS,EACnB5K,EAAKmD,SAAS,CACZoxB,gBAAiB/wB,EAAE8wB,cAAclI,aAAa,cAC9CiI,eAhNcr0B,EAoNlBw0B,WAAa,SAAChxB,GAGZ,IAFA,IAAIixB,EAAUz0B,EAAK6B,MAAM4yB,QAAQ5wB,QAC7B+G,EAAQpH,EAAE8wB,cAAclI,aAAa,cAChCvpB,EAAI,EAAGA,EAAI4xB,EAAQ3pB,OAAQjI,IAClC4xB,EAAQ5xB,IAAK,EAEf4xB,EAAQ7pB,IAAS,EACjB5K,EAAKmD,SAAS,CACZuxB,cAAelxB,EAAE8wB,cAAclI,aAAa,cAC5CqI,aA7Ncz0B,EAiOlB20B,mBAAqB,WACnB30B,EAAKmD,SAAS,CACZujB,MAAO1mB,EAAK6B,MAAM0yB,gBAClBhO,gBAAiBvmB,EAAK6B,MAAM6yB,cAC5BlB,kBAAkB,KArOJxzB,EA2OhB4jB,WAAa,WACX,IAAIC,EAAW7jB,EAAK6B,MAAMgiB,SAAShgB,QAC/B8kB,EAAS3oB,EAAK6B,MAAM8mB,OACpBhF,EAAiB3jB,EAAK6B,MAAM8hB,eAC5B/M,EAAc5W,EAAK6B,MAAM+U,YACzBgS,EAAe5oB,EAAK6B,MAAM+mB,aAC1B9E,EAAO,GACU,KAAhBlN,GAA2C,KAAnB+M,GAA4C,KAAjBiF,GACtD9E,EAAI,OAAalN,EACjBkN,EAAI,QAAcH,EAClBE,EAASnc,QAAQoc,GACjB9jB,EAAKmD,SAAS,CACZ0gB,WACAjN,YAAa,GACb+M,eAAgB,GAChBiF,aAAc,MAGM,IAAfhS,GACP+R,EAAM,KAAW,kHACjB3oB,EAAKmD,SAAS,CACZwlB,YAGsB,IAAlBhF,GACNgF,EAAM,QAAc,yOACpB3oB,EAAKmD,SAAS,CACZwlB,YAGoB,IAAhBC,IACND,EAAM,MAAY,iHAClB3oB,EAAKmD,SAAS,CACZwlB,aA5QU3oB,EAkRhB6oB,cAAgB,SAACtjB,GACfvF,EAAKmD,SAAS,CAACwgB,eAAgBpe,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,QAnR7CpG,EAuRhB8oB,WAAa,SAACvjB,GACZvF,EAAKmD,SAAS,CAACyT,YAAarR,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,QAxR1CpG,EA2RhB+oB,YAAc,SAACxjB,GACbvF,EAAKmD,SAAS,CAACylB,aAAcrjB,EAAME,OAAOvC,MAAMkD,OAAO,EAAE,QA5R3CpG,EA+RhB40B,eAAiB,WACf50B,EAAKmD,SAAS,CAAE0xB,iBAAkB70B,EAAK6B,MAAMgzB,mBA9R/C70B,EAAKyoB,MAAQtc,IAAMC,YACnBpM,EAAK6B,OAALkqB,EAAA,CACE/oB,KAAM,KACN+vB,YAAa,GACbM,cAAe,EACf/mB,QAAQ,EACRwoB,cAAc,EACdC,iBAAiB,EACjBj2B,SAAU,GACVE,WAAY,gCACZg0B,WAAY,GACZ5zB,WAAY,IACZ0zB,MAAO,EACPS,iBAAiB,EACjBc,UAAW,EAAC,GAAM,GAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GACrGI,QAAS,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAK,GAEnGb,aAAc,GACdM,eAAgB,GAChBJ,eAAgB,gCAChBE,eAAgB,IAEhBtN,MAAO,UACPH,gBAAiB,UAEjBiN,kBAAkB,EAClBe,gBAAiB,UACjBG,cAAe,WA1BjBvyB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,YA2Ba,EAAC,GAAM,GAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IA3BvG5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,UA4BW,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAK,IA5BrG5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,cA6Be,CACL,UAAU,UAAU,UAAU,UAC9B,UAAU,UAAU,UAAU,UAC9B,UAAU,UAAU,UAAU,UAC9B,UAAU,UAAU,UAAU,YAjCxC5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,SAkCU,IAlCV5pB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,WAmCY,CAAC,CACT5H,OAAU,WACVC,QAAW,oBArCfjiB,OAAAuK,EAAA,EAAAvK,CAAA4pB,EAAA,mBAuCmB,GAvCnBA,GAHgB/rB,mFAwEC,IAAAmE,EAAAhE,KACb60B,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAe,6BAChC,IAAMC,EAAOh1B,KACbiE,IAAMC,IAAI,eACPC,KAAK,SAAAC,GACJ,IACI6wB,EADQ7wB,EAAIC,KACS4G,KAAK,SAAAC,GAAC,OAAIA,EAAEnL,IAAMiE,EAAKlE,MAAMo1B,MAAMC,OAAOp1B,KACnEq1B,MAAMH,EAAatnB,KAAMknB,GACtB1wB,KAAK,SAAAspB,GAAQ,OAAIA,EAAS4H,gBAC1BlxB,KAAK,SAAUmxB,GAGZ,OAFgB,IAAIC,YAAY,cACbC,OAAOF,GAAQhpB,MAAM,QAG3CnI,KAAK,SAACtB,GAAD,OAAUmyB,EAAKhyB,SAAS,CAAEH,QAAO,kBAAMmyB,EAAKtC,wDA4MjD,IAAAzoB,EAAAjK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACiK,EAAD,MACCrK,KAAK0B,MAAM0xB,gBACVlzB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,eAAeC,QAASd,KAAKuzB,YAC3CrzB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAEfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,SAAO2E,SAAU/E,KAAKwzB,YAAah2B,KAAK,QAAQmtB,IAAI,IAAIC,IAAI,KAAK7nB,MAAO/C,KAAK0B,MAAM+xB,aAAcvyB,KAAK,KACtGhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,qBAAqBb,KAAK0B,MAAM+xB,gBAGpDvzB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,SAAO2E,SAAU/E,KAAK8zB,iBAAkBt2B,KAAK,QAAQmtB,IAAI,KAAKC,IAAI,KAAK7nB,MAAO/C,KAAK0B,MAAMqyB,eAAgB7yB,KAAK,KAC9GhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,qBAAqBb,KAAK0B,MAAMqyB,kBAGpD7zB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,SAAO2E,SAAU/E,KAAK4zB,iBAAkBp2B,KAAK,QAAQmtB,IAAI,MAAMC,IAAI,MAAMC,KAAK,MAAM9nB,MAAO/C,KAAK0B,MAAMmyB,eAAgB3yB,KAAK,KAC3HhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,qBAAqBb,KAAK0B,MAAMmyB,mBAItD3zB,EAAAC,EAAAC,cAAA,UAAQS,UAAU,qBAAqBkE,SAAU/E,KAAK0zB,iBAAkB3wB,MAAO/C,KAAK0B,MAAM7C,YACxFqB,EAAAC,EAAAC,cAAA,UAAQ2C,MAAO,iCAAf,mBACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAO,uBAAf,SACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAO,yBAAf,WACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAO,gCAAf,kBACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAO,oBAAf,WACA7C,EAAAC,EAAAC,cAAA,UAAQ2C,MAAO,4BAAf,gBAEF7C,EAAAC,EAAAC,cAAA,KAAGS,UAAU,sBAAsBslB,MAAO,CACpBxnB,SAAUqB,KAAK0B,MAAM+xB,aAAe,KACpC50B,WAAYmB,KAAK0B,MAAMiyB,eACvBd,WAAY7yB,KAAK0B,MAAMqyB,eAAiB,KACxC90B,WAAYe,KAAK0B,MAAMmyB,iBAJ7C,yDAKA3zB,EAAAC,EAAAC,cAAA,UAAQS,UAAU,gBAAgBC,QAASd,KAAKg0B,mBAAhD,4DAGJ,KACDh0B,KAAK0B,MAAM2xB,iBACVnzB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,eAAeC,QAASd,KAAKuzB,YAC3CrzB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAEfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACZb,KAAK0B,MAAM+zB,YAAYjzB,IAAI,SAACC,EAAKgI,GAAN,OAC1BvK,EAAAC,EAAAC,cAAA,OAAKwC,IAAK6H,EAAO5J,UAAU,eAAe60B,aAAYjrB,EAAO3J,QAASmJ,EAAKgqB,aAAc9N,MAAO,CAAEC,gBAAiB3jB,GAAQkzB,WAAYlzB,GACpIwH,EAAKvI,MAAMwyB,UAAUzpB,GACpBvK,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAA8B,UAM3DX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACZb,KAAK0B,MAAM+zB,YAAYjzB,IAAI,SAACC,EAAKgI,GAAN,OAC1BvK,EAAAC,EAAAC,cAAA,OAAKwC,IAAK6H,EAAO5J,UAAU,eAAe60B,aAAYjrB,EAAO3J,QAASmJ,EAAKoqB,WAAYlO,MAAO,CAAEC,gBAAiB3jB,GAAQkzB,WAAYlzB,GAClIwH,EAAKvI,MAAM4yB,QAAQ7pB,GAClBvK,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAChB,WAOfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBAAwBslB,MAAO,CAAEC,gBAAiBpmB,KAAK0B,MAAM6yB,gBAC1Er0B,EAAAC,EAAAC,cAAA,QAAM+lB,MAAO,CAAEI,MAAOvmB,KAAK0B,MAAM0yB,kBAAjC,iBAEFl0B,EAAAC,EAAAC,cAAA,UAAQS,UAAU,gBAAgBC,QAASd,KAAKw0B,oBAAhD,4DAGJ,KACFt0B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAAA,SACE5C,KAAK,QACLuF,MAAO/C,KAAK0B,MAAMwxB,cAClBtI,IAAK5qB,KAAK0B,MAAMixB,MAAMhoB,OAAS,EAC/BggB,IAAI,IACJ5lB,SAAU/E,KAAKszB,cAEnBpzB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBb,KAAK0B,MAAMwxB,cAAgB,EAA5D,MAAkElzB,KAAK0B,MAAMixB,MAAMhoB,QACnFzK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKorB,WAAYvqB,UAAU,yBAAyBU,MAAM,kCAAQrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,aAAaiJ,KAAK,UAA9G,KACAjK,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKqrB,WAAYxqB,UAAU,yBAAyBU,MAAM,wCAASrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,cAAciJ,KAAK,UAAhH,KACAjK,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKmzB,WAAYtyB,UAAU,yBAAyBU,MAAM,+FAAmBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,OAAOiJ,KAAK,UAAnH,KACAjK,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKinB,YAAapmB,UAAU,yBAAyBU,MAAM,yFAAkBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMN,KAAK,OAAOiJ,KAAK,UAAnH,OAGJjK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAgBslB,MAAO,CAAEC,gBAAiBpmB,KAAK0B,MAAM0kB,gBAAiBG,MAAOvmB,KAAK0B,MAAM6kB,QACpGvmB,KAAK0B,MAAMyK,OACVjM,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sCAAsCslB,MACxB,CAAE0M,WAAY7yB,KAAK0B,MAAMmxB,WAAa,KACpC5zB,WAAYe,KAAK0B,MAAMzC,WACvBN,SAAYqB,KAAK0B,MAAM/C,SAAW,KAClCE,WAAYmB,KAAK0B,MAAM7C,aACjDmB,KAAK0B,MAAMihB,YAAYngB,IAAI,SAACC,EAAKgI,GAAN,OAAgBvK,EAAAC,EAAAC,cAAA,KAAGwC,IAAK6H,GAAQhI,MAEhE,MAEJvC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,4BAA4Bb,KAAK0B,MAAMgiB,SAAS/Y,OAAhE,6EACAzK,EAAAC,EAAAC,cAAA,QAAMS,UAAU,0BAA0BC,QAASd,KAAKy0B,gBAAiBz0B,KAAK0B,MAAMgzB,gBAAkB,0GAAsB,wHAE7H10B,KAAK0B,MAAMgzB,gBACVx0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAy1B,SAAA,KACE11B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACbX,EAAAC,EAAAC,cAACiI,EAAA,EAAD,KACEnI,EAAAC,EAAAC,cAACiI,EAAA,EAAKC,MAAN,KACEpI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOzF,MAAO/C,KAAK0B,MAAM+U,YAAa1R,SAAU/E,KAAK2oB,WAAY7G,OAAK,EAACpd,YAAY,uBACnFxE,EAAAC,EAAAC,cAAA,YAAOJ,KAAK0B,MAAM8mB,OAAX,OAETtoB,EAAAC,EAAAC,cAACiI,EAAA,EAAKC,MAAN,KACEpI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOzF,MAAO/C,KAAK0B,MAAM+mB,aAAc1jB,SAAU/E,KAAK4oB,YAAa9G,OAAK,EAACpd,YAAY,UACrFxE,EAAAC,EAAAC,cAAA,YAAOJ,KAAK0B,MAAM8mB,OAAX,QAETtoB,EAAAC,EAAAC,cAACiI,EAAA,EAAKC,MAAN,KACEpI,EAAAC,EAAAC,cAACy1B,GAAA,EAAD,CAAU9yB,MAAO/C,KAAK0B,MAAM8hB,eAAgBze,SAAU/E,KAAK0oB,cAAezR,UAAU,KAAKvS,YAAY,0FACrGxE,EAAAC,EAAAC,cAAA,YAAOJ,KAAK0B,MAAM8mB,OAAX,UAETtoB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQP,QAASd,KAAKyjB,WAAYjmB,KAAK,UAAvC,4DAGJ0C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACZb,KAAK0B,MAAMgiB,SAASlhB,IAAI,SAACC,EAAMgI,GAAP,OACvBvK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BAA2B+B,IAAK6H,GAC7CvK,EAAAC,EAAAC,cAAA,UAAKqC,EAAKuhB,QACV9jB,EAAAC,EAAAC,cAAA,SAAIqC,EAAKwhB,cAKjB,OAGN/jB,EAAAC,EAAAC,cAAA,uBAhcmBhD,cAgdZqE,mBATf,SAAyBC,GACvB,MAAO,CAACC,MAAOD,EAAME,UAGvB,SAA4BC,GACxB,MAAO,CAAExE,QAASyE,YAAmBzE,EAASwE,KAInCJ,CAA6CgxB,aC3dxDqD,GAAe,CAClBzI,WAAc,EACd0I,WAAc,EACdC,kBAAqB,EACrBC,cAAiB,EACjBC,WAAc,EACdC,aAAgB,EAChBC,eAAkB,EAClBxsB,gBAAkB,EAClBQ,kBAAqB,KACrB6qB,aAbkB,IAuHJrzB,GArGD,WAAkC,IAAjCF,EAAiC20B,UAAA1rB,OAAA,QAAA2rB,IAAAD,UAAA,GAAAA,UAAA,GAAzBP,GAAcS,EAAWF,UAAA1rB,OAAA,EAAA0rB,UAAA,QAAAC,EAC/C,OAAOC,EAAO/4B,MACb,IAAK,qBACJ,OAAOwE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC2rB,WAAYkJ,EAAO94B,UAErB,IAAK,qBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECq0B,WAAYQ,EAAO94B,UAErB,IAAK,4BACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECs0B,kBAAmBO,EAAO94B,UAE5B,IAAK,wBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECu0B,cAAeM,EAAO94B,UAExB,IAAK,qBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECw0B,WAAYK,EAAO94B,UAErB,IAAK,yBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC00B,eAAgBG,EAAO94B,UAEzB,IAAK,uBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECy0B,aAAcI,EAAO94B,UAEvB,IAAK,sBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC+zB,YAAac,EAAO94B,UAEtB,IAAK,sBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC4tB,YAAaiH,EAAO94B,UAEtB,IAAK,qBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECkI,eAAgB2sB,EAAO94B,UAEzB,IAAK,oBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC0I,kBAAmBmsB,EAAO94B,UAE5B,IAAK,mBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC+0B,UAAWF,EAAO94B,UAEpB,IAAK,cACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECuzB,aAAcsB,EAAO94B,UAEvB,IAAK,qBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC7C,WAAY03B,EAAO94B,UAErB,IAAK,sBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC3C,YAAaw3B,EAAO94B,UAEtB,IAAK,qBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECzC,WAAYs3B,EAAO94B,UAErB,IAAK,mBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAEC/C,SAAU43B,EAAO94B,UAEnB,IAAK,oBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECvC,UAAWo3B,EAAO94B,UAEpB,IAAK,kBACJ,OAAOuE,OAAAw0B,GAAA,EAAAx0B,CAAA,GACHN,EADJ,CAECrC,QAASk3B,EAAO94B,UAElB,QAAS,OAAOiE,IC5GHg1B,GAJS,kBAAMC,YAAgB,CAC7C/0B,cCDGk0B,GAAe,GC2DnB,IACIn0B,GDzDSi1B,YAAYF,KAAqBZ,IC4D9Ce,IAASC,OACR52B,EAAAC,EAAAC,cAAC22B,EAAA,EAAD,CAAUp1B,MAAOA,IAChBzB,EAAAC,EAAAC,cAAC6T,EAAA,EAAD,CAAQ+iB,SAAUC,uBACjB/2B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOgjB,OAAK,EAAC/iB,KAAK,IAAIC,UAAWG,KACjCrU,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAW1L,IACrCxI,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWxJ,IACnC1K,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWqe,KACvCvyB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAW4S,KACnC9mB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWrH,IAClC7M,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWsX,KACpCxrB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWxG,IACrC1N,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWL,IAClC7T,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAW7C,IACxCrR,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWE,IACnCpU,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWuE,KAChCzY,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWoZ,KACrCttB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAWI,KACxCtU,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWgD,KACnClX,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW8E,KAChChZ,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAW4I,KACxC9c,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAW0K,KACvC5e,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWsM,KAC5CxgB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWiN,KACvCnhB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,UAAWwF,KAC3C1Z,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,oBAAoBC,UAAW6F,KAC3C/Z,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAW8F,KACjCha,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWmG,KACpCra,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWyQ,KAChC3kB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,OAAOC,UAAWqO,KAC9BviB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWiP,KACnCnjB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAWkP,KACzCpjB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWmP,KAC/BrjB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWiQ,KACtCnkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAW+P,KACtCjkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWgQ,KACtClkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAW8P,KACnChkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWkQ,KAChCpkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAWqQ,KACzCvkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWmQ,KACtCrkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWoQ,KACrCtkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWsQ,KAChCxkB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,SAAS+iB,OAAK,EAAC9iB,UAAWkT,KACtCpnB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWqe,KACpCvyB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWuX,KAChCzrB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWoS,KACpCtmB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,wBAAwBC,UAAWsZ,KAC/CxtB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,qBAAqBC,UAAWqa,KAC5CvuB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,uBAAuBC,UAAWsa,KAC9CxuB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,4BAA4BC,UAAW+iB,KACnDj3B,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,yBAAyBC,UAAWgjB,KAChDl3B,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,2BAA2BC,UAAWijB,KAClDn3B,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,yBAAyBC,UAAW0a,KAChD5uB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,sBAAsBC,UAAW4a,KAC7C9uB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,wBAAwBC,UAAW2a,KAC/C7uB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,mCAAmCC,UAAW6a,KAC1D/uB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,gCAAgCC,UAAW8a,KACvDhvB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,kCAAkCC,UAAW+a,KACzDjvB,EAAAC,EAAAC,cAAC8T,EAAA,EAAD,CAAOC,KAAK,eAAeC,UAAWgb,QAG5BtZ,SAASsH,eAAe","file":"static/js/main.e3dc229d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon, Image, Modal,Header } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass ModalWord extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Modal className=\"modal-word\" trigger = {\r\n          <List.Content >\r\n            <span className=\"word-icon-wrapper\">\r\n               <Icon name='right eye' />\r\n            </span>\r\n          </List.Content>\r\n            } closeIcon>\r\n            <Modal.Content image>\r\n              <Image wrapped size='medium' src={this.props.image} />\r\n              <Modal.Description className=\"modal-word-description\">\r\n\r\n                <Header><h4><span onClick={this.props.voiceWordFromModal.bind(this)} ></span>{this.props.name} - {this.props.translation}                   <span>\r\n                    <Icon name = 'right microphone'/>\r\n                  </span> </h4></Header>\r\n                <div className=\"modal-icon-wrapper-delete\">\r\n                  <span>\r\n                    <Icon name = 'right trash alternate outline'/>\r\n                  </span>\r\n                </div>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n        </Modal>\r\n  );\r\n  }\r\n}\r\n\r\nexport default ModalWord;","let actions = {\r\n\tupdateTotalScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TOTAL_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\r\n\t},\r\n\tupdateTodayScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TODAY_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\t\t\r\n\t},\r\n\tupdateExerciseScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_EXERCISES_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateTestsScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsTotal: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_TOTAL',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsRemaining: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_REMAINING',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsStudied: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_STUDIED',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tchangeColorScheme: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_COLOR_SCHEME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tchangeSoundVolume: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_SOUND_VOLUME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleVocabModal: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_VOCAB_MODAL',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tselectVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\r\n\t},\r\n\tvoiceVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'VOICE_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tselectBook: function(book) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BOOK',\r\n\t\t\tpayload: book\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSize: function(fontSize) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SIZE',\r\n\t\t\tpayload: fontSize\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontFamily: function(fontFamily) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_FAMILY',\r\n\t\t\tpayload: fontFamily\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSpacing: function(fontSpacing) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SPACING',\r\n\t\t\tpayload: fontSpacing\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontWeight: function(fontWeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_WEIGHT',\r\n\t\t\tpayload: fontWeight\r\n\t\t}\t\t\r\n\t},\t\t\t\t\r\n\tselectFontColor: function(fontColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_COLOR',\r\n\t\t\tpayload: fontColor\r\n\t\t}\t\t\r\n\t},\r\n\tselectBgColor: function(bgColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BG_COLOR',\r\n\t\t\tpayload: bgColor\r\n\t\t}\t\t\r\n\t}\t\t\r\n\r\n}\r\n\r\nexport default actions;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Icon, Image } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport ModalWord from './ModalWord';\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass VocabWord extends Component {\r\n\r\n\r\n  delete(id){\r\n    this.props.delete(id);\r\n  }\r\n\r\n\r\n   voiceWord = (word) =>{\r\n      speech.say(word);\r\n   }\r\n\r\n   openWord = (word) => {\r\n    console.log(word);\r\n    this.props.actions.selectVocabWord(word);\r\n    this.props.actions.toggleVocabModal(true);\r\n   }\r\n\r\n  render() {\r\n    var descriptionVisible = false;\r\n    return (\r\n      <List.Item >\r\n        <Fragment>\r\n          <Image avatar src={this.props.image} />\r\n          <List.Content className=\"word-content\" onClick={this.openWord.bind(this, this.props.word)}>\r\n            <List.Header as='a'>{this.props.name} - {this.props.transcription} - {this.props.translation}</List.Header>\r\n            {descriptionVisible ?         \r\n              <List.Description className=\"word-meaning\">\r\n                  <b>{this.props.meaning}</b>\r\n              </List.Description> :null\r\n            }\r\n          </List.Content>\r\n        </Fragment>  \r\n      <List.Content>\r\n            <Button.Group>\r\n              <span onClick={this.voiceWord.bind(this, this.props.name)} className=\"word-icon-wrapper\" title=\"Озвучить\">\r\n                 <Icon name = 'right microphone'/>\r\n              </span>\r\n              <span onClick={this.delete.bind(this, this.props.id)} className=\"word-icon-wrapper\" title=\"Удалить\">\r\n                  <Icon name='right trash alternate outline' />\r\n              </span>\r\n            </Button.Group>              \r\n      </List.Content>\r\n    </List.Item>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VocabWord);","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {  Dropdown} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass VocabSideMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       items: [],\r\n       options: [],\r\n       value: null\r\n\r\n    }\r\n  }\r\n\r\n  \tUNSAFE_componentWillMount() {\r\n   \r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const items = res.data;\r\n\t        this.setState({ items }, () => this.consoleParams() );\r\n\t      }) \r\n\t  }\r\n\r\n\t  consoleParams = () =>{\r\n\t  \tlet newItems = [];\r\n\t  \tthis.state.items.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.category, \r\n                        value: item.category \r\n                     }))\r\n\t  \tthis.setState({\r\n\t  \t\toptions: newItems\r\n\t  \t}, () => this.getUnique())\r\n\t  }\r\n\r\n\t  getUnique = () => {\r\n\t  \tvar arr = this.state.options;\r\n\t  \tvar comp = 'text';\r\n  \t\t\tconst unique = arr\r\n       \t\t.map(e => e[comp])\r\n   \t\t\t\t.map((e, i, final) => final.indexOf(e) === i && i)\r\n    \t\t\t.filter(e => arr[e]).map(e => arr[e]);\r\n\t   \tthis.setState({\r\n\t   \t\toptions: unique\r\n\t   \t})\t\t\r\n\t\t}\r\n\r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var value = this.state.value;\r\n      var newObj = {};\r\n      newObj['value'] = value;\r\n      newObj['options'] = options;\r\n      this.props.callbackFromParent(newObj);\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )\r\n\r\n    consoleProps = () =>{\r\n      console.log(this.props);\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical className=\"side-menu\">\r\n        <Menu.Item name='inbox' active >\r\n          <Dropdown placeholder='Выберите категорию'\r\n                    fluid\r\n                    clearable\r\n                    value={this.state.value} \r\n                    search\r\n                    key={this.state.options.id}\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} />\r\n        </Menu.Item>\r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabSideMenu;","import React, { Component } from 'react';\r\nimport {Menu, Image, Icon, Modal, Form, Button} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      inputLogin: '',\r\n      inputPassword: '',\r\n      doublePassword: '',\r\n      inputMail: ''\r\n    }\r\n  }\r\n\r\n  showModal = () =>{\r\n      let state = this.state.isModalVisible;\r\n      this.setState({\r\n        isModalVisible: !state\r\n      },() => console.log(this.state.isModalVisible) )\r\n  }\r\n\r\n    changeLogin = (event) =>{\r\n      this.setState({\r\n        inputLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    changePassword = (event) =>{\r\n      this.setState({\r\n        inputPassword: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMail = (event) =>{\r\n      this.setState({\r\n        inputMail: event.target.value\r\n      })\r\n    }\r\n\r\n    changeDoublePassword = (event) =>{\r\n      this.setState({\r\n        doublePassword: event.target.value\r\n      })\r\n    }    \r\n\r\n  render() {\r\n    return (\r\n        <Menu className=\"top-menu\">\r\n          <Menu.Item>\r\n            <Link to=\"/\">Главная</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/vocabulary\">Словарь</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item>\r\n            <Link to=\"/grammar\">Грамматика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/training\">Тренировки</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/tests\">Тесты</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/materials\">Материалы</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/books\">Книги</Link>\r\n          </Menu.Item>           \r\n          {/*\r\n            <Menu.Item>\r\n              <Link to=\"/statistics\">Статистика</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/audioplayer\">Статистика</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/settings\">Настройки</Link>\r\n            </Menu.Item> \r\n          */}         \r\n             \r\n      \r\n\r\n        {/*\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Войти</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishLogin}>Войти</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Регистрация</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите e-mail</label>\r\n                  <input value={this.state.inputMail} onChange={this.changeMail} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>                   \r\n                <Form.Field>\r\n                  <label>Повторите пароль</label>\r\n                  <input value={this.state.doublePassword} onChange={this.changeDoublePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishRegistration}>Зарегистрироваться</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>                                             \r\n          <Menu.Item position=\"right\" className=\"menu-image\" >\r\n            {this.state.isModalVisible ?\r\n              <div className=\"user-modal\">\r\n                <div className=\"user-modal-pic\">\r\n                  <Image src=\"/icons/member.png\" />              \r\n                  <div className=\"user-modal-name\">\r\n                    <h5> User</h5>\r\n                    <h6>blabla@mail.com</h6>\r\n                  </div>                \r\n                </div>\r\n                <p><Link to=\"/statistics\"> <Icon name='chart bar outline' size='' />Статистика</Link></p>\r\n                <p><Link to=\"/settings\"> <Icon name='setting' size=''  />Настройки</Link></p>\r\n                <p><Link to=\"/statistics\"> <Icon name='log out' size=''  />Выйти</Link></p>\r\n              </div> : null\r\n            }\r\n            <Image className=\"user-avatar\" onClick={this.showModal} src=\"/icons/member.png\" />\r\n          </Menu.Item> \r\n        */}\r\n                                                                                                    \r\n        </Menu>\r\n \t);\r\n  }\r\n}\r\n\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport { Button, Menu, Modal, Form } from 'semantic-ui-react'\r\nimport { Input} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass VocabTopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      search: '',\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: '',\r\n      categories: [],\r\n      categoryValue: 'all'  \r\n    };\r\n    this.delete = this.delete;\r\n    this.voiceWord = this.voiceWord;\r\n    this.voiceWordFromModal = this.voiceWordFromModal;\r\n    this.sortByName = this.sortByName;\r\n    this.sortByTranslation = this.sortByTranslation;\r\n    this.sortByDate = this.sortByDate;\r\n    this.newFunction = this.newFunction;  \r\n    \r\n  }\r\n\r\n  consoleProps = () =>{\r\n    console.log(this.props)\r\n  }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({search: event.target.value.substr(0,20)}, ()=> this.searchFunction() );\r\n    } \r\n\r\n//загрузка слова\r\n    changeNameValue = (event) =>{\r\n      this.setState({\r\n        inputName: event.target.value\r\n      })\r\n    }\r\n\r\n    changeTranslationValue = (event) =>{\r\n      this.setState({\r\n        inputTranslation: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMeaningValue = (event) =>{\r\n      this.setState({\r\n        inputMeaning: event.target.value\r\n      })\r\n    }    \r\n\r\n    changeCategoryValue = (event) =>{\r\n      this.setState({\r\n        inputCategory: event.target.value\r\n      })\r\n    } \r\n\r\n    changeImageValue = (event) =>{\r\n      this.setState({\r\n        inputImage: event.target.value\r\n      })\r\n    }\r\n\r\n    submitForm = (e) =>{\r\n    var newWords = this.props.words.slice();\r\n    const inputName = this.state.inputName;\r\n    const inputTranslation = this.state.inputTranslation;\r\n    const inputMeaning = this.state.inputMeaning;\r\n    const inputCategory = this.state.inputCategory;\r\n    const inputStringDate = new Date().toUTCString();\r\n    console.log(inputStringDate);\r\n    const inputDate = new Date(inputStringDate);\r\n    const inputImage = this.state.inputImage;\r\n    const inputId = 30;\r\n    const obj ={'id': inputId,\r\n          'name': inputName, \r\n          'translation': inputTranslation, \r\n          'meaning': inputMeaning,\r\n          'image': inputImage, \r\n          'date': inputDate,\r\n          'category': inputCategory\r\n          } \r\n\r\n    newWords.unshift(obj); \r\n  \r\n      this.setState({ words: newWords}, () => console.log(this.state.words) );\r\n      this.setState({\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: ''\r\n      }, () => this.newFunc() )\r\n    }    \r\n\r\n    newFunc = () =>{\r\n      var words = this.state.words;\r\n      this.props.callbackFromApp(words);\r\n    }\r\n\r\n    searchFunction = () =>{\r\n      var search = this.state.search;\r\n      this.props.searchFromApp(search);\r\n    }    \r\n\r\n  render() {\r\n\r\n   return (\r\n      <Menu text className=\"vocab-top-menu-wrapper vocab-top-menu-wrapper-color\">\r\n        <Menu.Item>\r\n          <Modal className=\"modal-form\" trigger={<Button primary>Добавить слово</Button>} closeIcon>\r\n            <Form className=\"input-form\">\r\n              <Form.Field>\r\n                <label>Введите слово</label>\r\n                <input value={this.state.inputName} onChange={this.changeNameValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите перевод</label>\r\n                <input value={this.state.inputTranslation} onChange={this.changeTranslationValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите категорию</label>\r\n                <input value={this.state.inputCategory} onChange={this.changeCategoryValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Выберите изображение</label>\r\n                <input value={this.state.inputImage} onChange={this.changeImageValue} type=\"file\" accept=\"image/png, image/jpeg\" />\r\n              </Form.Field>                   \r\n              <Button primary onClick={this.submitForm}>Добавить</Button>\r\n            </Form>         \r\n          </Modal>\r\n        </Menu.Item>\r\n        <Menu.Item name='removeWords'> \r\n          <Button primary >\r\n            Удалить\r\n          </Button>\r\n        </Menu.Item>        \r\n        <Menu.Item name='byName'> \r\n          <Button primary onClick = {this.props.sortByName}>\r\n            по имени\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byTranslation'> \r\n          <Button primary onClick = {this.props.sortByTranslation}>\r\n            по переводу\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byMeaning'> \r\n          <Button primary onClick = {this.props.sortByDate}>\r\n            по дате\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n         <Input icon='search' placeholder='Search...' onChange={this.updateSearch}/>\r\n        </Menu.Item> \r\n   \r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabTopMenu;","import React, { Component, Fragment } from 'react';\r\nimport { List, Button, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport VocabWord from'./VocabWord'\r\nimport VocabSideMenu from'./VocabSideMenu'\r\nimport TopMenu from './TopMenu'\r\nimport VocabTopMenu from './VocabTopMenu'\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Vocabulary extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twords: [],\r\n\t\t\tfilteredWords: [],\r\n\t\t\tisOldestFirst: true,\r\n\t\t\tvisible: 15,\r\n\t\t\tquery: '',\r\n\t\t\tsearchString: [],\r\n\t\t\tsearch: '',\r\n\t\t\tcategories: [],\r\n\t\t\tcategoryValue: 'all'\t\r\n\t\t};\r\n\t\tthis.delete = this.delete;\r\n\t\tthis.handler = this.handler.bind(this);\t\r\n\t\tthis.sortByName = this.sortByName;\r\n\t\tthis.sortByTranslation = this.sortByTranslation;\r\n\t\tthis.sortByDate = this.sortByDate;\r\n\t\r\n\t}\r\n\r\n handler() {\r\n    this.setState({\r\n     words: []\r\n    })\r\n  }\r\n\r\n//подгрузка слов\r\n\tloadMore = () => {\r\n\t    this.setState((prev) => {\r\n\t      return {visible: prev.visible + 15};\r\n\t    });\r\n\t  }\r\n\r\n//сортировка по дате\r\n\tsortByDate = () => {\r\n    const words = this.state.filteredWords.slice();\r\n    let newWords = [];\r\n    if(this.state.isOldestFirst){\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(b.date) - new Date(a.date);\r\n      });\r\n    }\r\n    else{\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(a.date) - new Date(b.date);\r\n      });      \r\n    }\r\n    this.setState({\r\n      isOldestFirst: !this.state.isOldestFirst,\r\n      filteredWords: newWords\r\n    })\r\n\t} \r\n\r\n//сортировка по имени\r\n\tsortByName = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name) /*console.log('a,b ', a,b) */ );\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name) /*console.log('b,a ', b,a) */ );\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n//сортировка по переводу\r\n\tsortByTranslation = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\t    axios.get('./working.json')\r\n\t      .then(res => {\r\n\t        const words = res.data;\r\n\t        this.setState({ words, filteredWords: words });\r\n\t      })\r\n\t  }\r\n\r\n   delete = (id) =>{\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t})\r\n   }\r\n\r\n   deleteWord = (id) => {\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t}, () => this.toggleModal());\r\n   }\r\n\r\n   myCallback = (dataFromChild) =>{\r\n\t   \tlet words = this.state.words.slice();\r\n\t   \tlet filteredWords;\r\n\t   \tif (dataFromChild.value !== '') {\r\n\t   \t\tfilteredWords = words.filter(item => item.category == dataFromChild.value); \r\n\t   \t} else {\r\n\t   \t\tfilteredWords = words;\r\n\t   \t} \t\r\n   \t\tthis.setState({\r\n   \t\t\tfilteredWords,\r\n   \t\t\tcategoryValue: dataFromChild.value,\r\n   \t\t\toptions: dataFromChild.options\r\n   \t\t}) \r\n   }\r\n\r\n   topMenuCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\twords: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   searchCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tsearch: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   consoleState = () => {\r\n   \tconsole.log(this.state.categoryValue);\r\n   }\r\n\r\n   toggleModal = () => {\r\n   \tlet value = this.props.store.vocabModalOpen;\r\n   \tthis.props.actions.toggleVocabModal(!value);\r\n   }\r\n\r\n\r\n\r\n  render() {  \t\r\n  \tlet filteredWords = this.state.filteredWords.slice().filter(\r\n  \t\t(word) =>{\r\n  \t\t\treturn word.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n  \t\t}\r\n  \t);  \t\r\n    return (\r\n    \t<Fragment>\r\n    \t\t{this.props.store.vocabModalOpen ?\r\n\t    \t\t<div className=\"modal-container\">\r\n\t    \t\t\t<div className=\"modal-word\">\r\n\t    \t\t\t\t<span title=\"Закрыть\" onClick={this.toggleModal} className=\"modal-word__icon modal-word__icon--close\"><Icon name = 'close' size=\"large\" /></span>\r\n\t    \t\t\t\t<div className=\"modal-word__image\">\r\n\t    \t\t\t\t\t<img src = {this.props.store.selectedVocabWord.image} />\r\n\t    \t\t\t\t</div>\r\n\t    \t\t\t\t<p className=\"modal-word__title\">{this.props.store.selectedVocabWord.name} - <span className=\"modal-word__translation\">{this.props.store.selectedVocabWord.translation}</span></p>\r\n\t    \t\t\t\t<span onClick={this.deleteWord.bind(this, this.props.store.selectedVocabWord.id)} title=\"Удалить\" className=\"modal-word__icon modal-word__icon--delete\"><Icon size=\"large\" name = 'trash alternate outline'/></span>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n    \t\t: null}\r\n\t    \t<div className=\"content-wrapper\">\r\n\t    \t\t<TopMenu></TopMenu>\r\n\t    \t\t<div className=\"vocab-side-menu\">\r\n\t    \t\t\t<VocabSideMenu callbackFromParent={this.myCallback} items={this.state.words} ></VocabSideMenu>\r\n\t    \t\t\t<div className=\"vocab-top-menu\">\r\n\t    \t\t\t\t<VocabTopMenu \r\n\t    \t\t\t\t\thandler = {this.handler}\r\n\t    \t\t\t\t\tsortByName={this.sortByName}\r\n\t    \t\t\t\t\tsortByTranslation={this.sortByTranslation}\r\n\t    \t\t\t\t\tsortByDate ={this.sortByDate}\r\n\t     \t\t\t\t\tcallbackFromApp={this.topMenuCallback}\r\n\t    \t\t\t\t\tsearchFromApp={this.searchCallback} \r\n\t    \t\t\t\t\t>\r\n\t\t\t\t\t\t</VocabTopMenu>\r\n\t\t\t \t\t\t<List className=\"vocab-list\" relaxed='very'>\r\n\t\t\t\t\t\t\t{filteredWords.slice(0, this.state.visible).map((word,index) => \r\n\t\t\t\t\t\t\t\t(this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === word.category) && \r\n\t\t\t\t\t\t\t\t<VocabWord\r\n\t\t\t\t\t\t\t\t\tword = {word}\r\n\t\t\t\t\t\t\t\t\tdelete={this.delete}\r\n\t\t\t\t\t\t\t\t\tid={word.id}\r\n\t\t\t\t\t\t\t\t\tkey={word.id} \r\n\t\t\t\t\t\t\t\t\tname={word.name}\r\n\t\t\t\t\t\t\t\t\ttranscription = {word.transcription} \r\n\t\t\t\t\t\t\t\t\ttranslation={word.translation} \r\n\t\t\t\t\t\t\t\t\tmeaning={word.meaning}\r\n\t\t\t\t\t\t\t\t\timage={word.image} \r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t</VocabWord>\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t  \t\t\t</List>\r\n\t\t\t  \t\t\t<div className=\"load-more-button\">\r\n\t\t\t\t\t\t\t{this.state.visible < this.state.words.length &&\r\n\t\t\t\t            \t<Button onClick={this.loadMore} primary>Загрузить ещё</Button>\r\n\t\t\t\t          \t}\t\t\t\t  \t\t\t\t\r\n\t\t\t  \t\t\t</div>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    \t<footer></footer>\r\n\t    </Fragment>\t\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vocabulary);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n//import { pronounce } from \"node-pronounce\";\r\n\r\nclass SplittedWords extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.fileInputRef = React.createRef();\r\n    this.state = {\r\n      wordsEl: [],\r\n      words: [],\r\n      selected: '',\r\n      loaded: false,\r\n      isModalFoundOpen: false,\r\n      isModalInputOpen: false,\r\n      sentence: \"arched owl Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('/words_full.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let splitted = this.state.sentence.split(\" \");\r\n        this.setState({ \r\n          words, splitted, loaded: true\r\n      })    \r\n    })\r\n  } \r\n\r\n  searchForWord = (item) => {\r\n    let words = this.state.words.slice()\r\n    let newItem = item.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n    let found = words.find(x => x.name === newItem);\r\n    if (found) {\r\n      this.setState({\r\n        found\r\n      }, () => this.toggleFoundModal())\r\n    } else {\r\n      this.setState({\r\n        selected: newItem\r\n      }, () => this.toggleInputModal())\r\n    }\r\n  } \r\n\r\n  toggleFoundModal = () => {\r\n    this.setState({\r\n      isModalFoundOpen: !this.state.isModalFoundOpen\r\n    })\r\n  }\r\n\r\n  toggleInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: !this.state.isModalInputOpen\r\n    })\r\n  }\r\n\r\n  changeFile = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      filePath: e.target.value\r\n    })\r\n  }\r\n\r\n  changeTranslation = (e) => {\r\n    this.setState({\r\n      translation: e.target.value\r\n    })\r\n  }\r\n\r\n  changeDefinition = (e) => {\r\n    this.setState({\r\n      definition: e.target.value\r\n    })\r\n  }\r\n\r\n  addToWords = () => {\r\n    let word = {};\r\n    word.name = this.state.selected;\r\n    word.transription = this.state.transcription;\r\n    word.translation = this.state.translation;\r\n    word.category = \"common\";\r\n    word.id = 1;\r\n    word.date = new Date();\r\n    word.definition = this.state.definition;\r\n    word.image = this.state.filePath;\r\n    //pronounce(this.state.selected);\r\n    console.log(word);\r\n  }\r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.isModalFoundOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n              <div className=\"word-modal\">\r\n                <div className=\"word-modal__image\">\r\n                  <img src=\"word-modal__picture\" src = {this.state.found.image}/>\r\n                </div>\r\n                <div className=\"word-modal__description\">\r\n                  <p className=\"word-modal__title\">{this.state.found.name} - {this.state.found.translation}</p>\r\n                  <p className=\"word-modal__meaning\">{this.state.found.definition}</p>   \r\n                  <Button primary onClick={this.toggleFoundModal}>Закрыть</Button>              \r\n                </div>\r\n              </div>              \r\n            </div>\r\n          : null}\r\n          {this.state.isModalInputOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n              <div className=\"word-modal\">\r\n                <div className=\"word-modal__description\">\r\n                  <p className=\"word-modal__title\">{this.state.selected}</p>\r\n                  <textarea value = {this.state.translation} onChange = {this.changeTranslation} type = \"text\" className=\"word-modal__textarea\" placeholder=\"Добавить перевод\" />\r\n                  <textarea value = {this.state.definition} onChange = {this.changeDefinition} type = \"text\" className=\"word-modal__textarea\" placeholder=\"Добавить значение\" />   \r\n                  <Button\r\n                      primary\r\n                      content=\"Выбрать картинку\"\r\n                      labelPosition=\"left\"\r\n                      icon=\"file\"\r\n                      onClick={() => this.fileInputRef.current.click()}\r\n                      className=\"word-modal__file\"\r\n                  />\r\n                  <input ref={this.fileInputRef}\r\n                         type=\"file\"\r\n                         hidden\r\n                         onChange={this.changeFile} />\r\n                  <div className=\"word-modal__buttons\">\r\n                    <Button primary onClick={this.addToWords}>Добавить</Button>\r\n                    <Button primary onClick={this.toggleInputModal}>Закрыть</Button>                      \r\n                  </div>\r\n                </div>\r\n              </div>              \r\n            </div>\r\n          : null}\r\n          {this.state.loaded ?\r\n            <div className=\"splitted-wrapper\">\r\n              {this.state.splitted.map((item, index) => \r\n                <span onClick={this.searchForWord.bind(this, item)}>{`${item} `}</span>\r\n              )}\r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SplittedWords;","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass GrammarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      grammar: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          const grammar = res.data;\r\n          this.setState({ grammar });\r\n        })\r\n    } \r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {(this.state.grammar.length) ?\r\n          <Table celled fixed className=\"grammar-list\">\r\n            <Table.Header>\r\n              <Table.Row columns={1} >\r\n                <Table.HeaderCell>Грамматические правила</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>        \r\n            {this.state.grammar[0].rules.map((item,index) =>\r\n              <Table.Body>\r\n                <Table.Row columns={3}>\r\n                  <Table.Cell className=\"grammar-title\">\r\n                    {item.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-description\">\r\n                    {item.description}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-button\">\r\n                    <div className=\"link-wrapper\">\r\n                      <Link to={item.link}>Начать</Link>\r\n                    </div>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            )}\r\n          </Table>: null }        \r\n          </div>\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GrammarList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nclass Statistics extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      words: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n\r\n        this.setState({ \r\n          words\r\n        }, () => this.splitIntoArrays());\r\n      })\r\n\r\n\r\n        \r\n  }   \r\n\r\n  splitIntoArrays = () =>{\r\n    var nameArrays = Object.create(null);\r\n    let words = this.state.words.slice();\r\n    words.forEach(function(word) {\r\n      var nameArray = nameArrays[word.category];\r\n      if (!nameArray) {\r\n        nameArray = nameArrays[word.category] = [];\r\n      }\r\n      nameArray.push(word);\r\n    });\r\n  \tlet names = Object.keys(nameArrays);\r\n  \tlet values = Object.values(nameArrays);\r\n  \tlet finalData = [];\r\n  \tfor (var i = 0; i < names.length; i++) {\r\n  \t\tlet tmp = {};\r\n  \t\tlet lng = values[i].length;\r\n  \t\tlet fin = Math.floor(lng/3);\r\n      \ttmp['Всего слов'] = lng;\r\n      \ttmp['Добавлено слов'] = fin;\r\n      \ttmp['name'] = names[i];\r\n      \tfinalData.push(tmp);\r\n  \t}\r\n  \tthis.setState({\r\n  \t\tnameArrays: nameArrays,\r\n  \t\tbarChartData: finalData\r\n  \t}, () => this.getYesterdaysDate() )     \r\n\r\n  }\r\n\r\n\tgetYesterdaysDate = () => {\r\n    let data = this.state.barChartData.slice(0,6);\r\n\t\tvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let dateArray = [];\t\t\r\n    var date = new Date();\r\n    let i = 0;\r\n    while ( i < 6) {\r\n\t\t  date.setDate(date.getDate() - 1);\r\n      //date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\t    dateArray.push(days[date.getDay()]); \r\n\t    i++;  \t\r\n    }\r\n    for (var j = 0; j < data.length; j++) {\r\n      data[j][\"name\"] = dateArray[j]\r\n    }\r\n    this.setState({\r\n      lineChartData: data\r\n    }, () => console.log(this.state))\r\n\r\n\r\n\t}\r\n\r\n  consoleState = () =>{\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item>\r\n                    <Button onClick={this.getYesterdaysDate}>Press</Button>\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {this.state.areTextsVisible ?\r\n              <Card.Group className=\"texts-cards statistics-wrapper\" itemsPerRow={1} >\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Графики</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n    \t\t              <BarChart\r\n    \t\t                width={800}\r\n    \t\t                height={450}\r\n    \t\t                data={this.state.barChartData}\r\n    \t\t                margin={{\r\n    \t\t                  top: 20, right: 30, left: 20, bottom: 5,\r\n    \t\t                }}\r\n    \t\t              >\r\n    \t\t                <CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t\t                <XAxis dataKey=\"name\" />\r\n    \t\t                <YAxis />\r\n    \t\t                <Tooltip />\r\n    \t\t                <Legend />\r\n    \t\t                <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n    \t\t                <Bar dataKey=\"Добавлено слов\" fill=\"#444444\" />\r\n    \t\t              </BarChart>\r\n                    </Card.Description>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <LineChart\r\n                        width={800}\r\n                        height={450}\r\n                        data={this.state.lineChartData}\r\n                        margin={{\r\n                          top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"Всего слов\" stroke=\"#3281F0\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"Добавлено слов\" stroke=\"#444444\" />\r\n                      </LineChart>\r\n                    </Card.Description>                    \r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Результаты</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                    \t<a className=\"active\">сегодня</a>\r\n                    \t<a>за неделю</a>\r\n                    \t<a>за месяц</a>\r\n                      <a>за всё время</a>\r\n                    </div>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span>\r\n\t                      \t\t\t<Icon name = 'plus square outline'/>\r\n\t                      \t\t</span>\r\n\t                      \t\t<h1>24</h1>\r\n\t                      \t\t<p>Слов добавлено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'file text'/></span>\r\n\t                      \t\t<h1>3</h1>\r\n\t                      \t\t<p>Упражнений выполнено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'gem outline'/></span>\r\n\t                      \t\t<h1>5</h1>\r\n\t                      \t\t<p>Фраз выучено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>14</h1>\r\n\t                      \t\t<p>Страниц прочитано</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'cogs'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Курсов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Тестов пройдено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>           \t                      \t\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Слова</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>1210</h1>\r\n\t                      \t\t<p>Слов всего</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>54</h1>\r\n\t                      \t\t<p>Слов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'question circle outline'/></span>\r\n\t                      \t\t<h1>1156</h1>\r\n\t                      \t\t<p>Слов на изучении</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>                \r\n              </Card.Group>: null\r\n             } \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport { Card, Image, Button, Modal} from 'semantic-ui-react'\r\n//import TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass CoursesSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      data: [],\r\n\t\t\tsentence: '',\r\n      visibleSentence: '',\r\n\t\t\tcourses: [],\r\n\t\t\tcorrect_answer: '',\r\n\t\t\twords: [],\r\n      isWordGroupVisible: true,\r\n      isFinalVisible: false,\r\n      doubleWords: [],\r\n      currentArray: [],\r\n      currentId: 0,\r\n      correctAnswer: false,\r\n      incorrectAnswer: false,\r\n      currentExerciseId: 0,\r\n      exercises: [],\r\n      headerVisible: false,\r\n      sentenceVisible: true,\r\n      positiveAnswers: [],\r\n      negativeAnswers: [],\r\n      isResultVisible: false\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n  con = () =>{\r\n    this.setState({\r\n      headerVisible: true\r\n    })\r\n    console.log(this.state);\r\n  }\r\n\r\n  updateSentence =(e)=>{\r\n    var targ = e.target.textContent + ' ';\r\n  \tvar newSentence = this.state.sentence.concat([e.target.textContent]);\r\n    var visibleSentence = this.state.visibleSentence.concat([targ]);\r\n  \tthis.setState({\r\n  \t\tsentence: newSentence,\r\n      visibleSentence: visibleSentence\r\n  \t\t//sentence: [this.state.sentence, ...e.target.textContent]\r\n  \t}, () => this.continueTraining() )\r\n  \tconsole.log(visibleSentence);\r\n  }\r\n\r\n    componentDidMount() {\r\n      var exerciseId = this.state.currentExerciseId;\r\n      axios.get('/courses.json')\r\n        .then(res => {\r\n          const courses = res.data;\r\n          const correct_answer = res.data[0].exercises[exerciseId].full_sentence;\r\n          const words = res.data[0].exercises[exerciseId].words;\r\n          var newWords = []\r\n          for (var i = 0; i < words.length; i++) {\r\n            var a = words[i].variants;\r\n            for (var j = 0; j < a.length; j++) {\r\n              newWords.push(a[j]);\r\n            }\r\n          }          \r\n          var result = []; \r\n          for(var i=0;i < newWords.length;i = i+4){\r\n            result.push(newWords.slice(i,i+4));\r\n          }\r\n          console.log(this.props);\r\n          this.setState({ \r\n            courses: courses, \r\n            correct_answer: correct_answer, \r\n            words: words, \r\n            doubleWords: result,\r\n            exercises: this.props.exercises,\r\n            headerVisible: true \r\n          }, () => this.renderArray() );\r\n        })\r\n    }\r\n\r\n    propsToState = () =>{\r\n      this.setState({\r\n        exercises: this.props.exercises\r\n      })\r\n    }\r\n\r\n    submitAnswer = () =>{\r\n    \tvar sentence = this.state.sentence;\r\n      var positiveAnswers = this.state.positiveAnswers;\r\n      var negativeAnswers = this.state.negativeAnswers;\r\n    \tvar correct_answer = this.state.correct_answer.replace(/\\s/g, '');\r\n\r\n    \tif(sentence===correct_answer){\r\n        positiveAnswers.push(sentence);\r\n    \t\tthis.setState({\r\n          correctAnswer: true,\r\n          positiveAnswers: positiveAnswers\r\n\r\n        })\r\n\r\n    \t}\r\n    \telse{\r\n        negativeAnswers.push(sentence);        \r\n    \t\tthis.setState({\r\n          incorrectAnswer: true,\r\n          negativeAnswers: negativeAnswers\r\n\r\n        })\r\n    \t};\r\n\r\n    }\r\n\r\n    renderArray = () =>{\r\n      var array = this.state.doubleWords.slice();\r\n      var id  = this.state.currentExerciseId;\r\n      var currentArray = array[id];\r\n      this.setState({\r\n        currentArray: currentArray\r\n      })\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      var id  = this.state.currentId;\r\n      var words = this.state.doubleWords.slice();\r\n      id = id+1;\r\n      var currentArray = words[id];\r\n      if(id<words.length){\r\n        this.setState({\r\n          currentId: id,\r\n          currentArray: currentArray\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isWordGroupVisible: false,\r\n          currentId: 0\r\n        }, ()=>this.submitAnswer() )\r\n      }\r\n    }\r\n\r\n\r\n    nextSentence = () =>{\r\n      let courses = this.state.courses.slice();\r\n      let currentId = this.state.currentId;\r\n      let exerciseId = this.state.currentExerciseId;\r\n      exerciseId  = exerciseId + 1;\r\n      if(exerciseId<courses[0].exercises.length){\r\n\r\n        const correct_answer = courses[0].exercises[exerciseId].full_sentence;\r\n        const words = courses[0].exercises[exerciseId].words;\r\n        console.log(correct_answer);\r\n        console.log(words);\r\n            var newWords = []\r\n            for (var i = 0; i < words.length; i++) {\r\n              var a = words[i].variants;\r\n              for (var j = 0; j < a.length; j++) {\r\n                newWords.push(a[j]);\r\n              }\r\n            }          \r\n            var result = []; \r\n            for(var i=0;i < newWords.length;i = i+4){\r\n              result.push(newWords.slice(i,i+4));\r\n            }\r\n        console.log(result);\r\n        console.log(newWords);\r\n        var currentArray = result[currentId]; \r\n        console.log(currentArray);\r\n\r\n        this.setState({\r\n          currentExerciseId: exerciseId,\r\n          isWordGroupVisible: true,\r\n          isFinalVisible: false,\r\n          correct_answer: correct_answer,\r\n          words: words,\r\n          doubleWords: result,\r\n          currentArray: currentArray,\r\n          visibleSentence: '',\r\n          sentence: '',\r\n          incorrectAnswer: false,\r\n          correctAnswer: false\r\n\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          isResultVisible: true,\r\n          incorrectAnswer: false,\r\n          correctAnswer: false,\r\n          isWordGroupVisible: false,\r\n          isFinalVisible: false,\r\n          sentenceVisible: false,\r\n          headerVisible: false                      \r\n        })\r\n\r\n      } \r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    var id = this.state.currentExerciseId;\r\n    return (\r\n          <Card>\r\n            <Image src='/courses.png' />\r\n            <Card.Content>\r\n              <Card.Header>{this.props.course}</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Requires {this.props.time} minutes of your time</span>\r\n              </Card.Meta>\r\n              <Card.Description>This course consists of {this.props.tasks} exercises</Card.Description>\r\n              <Card.Description>\r\n                <Modal className=\"modal\" trigger={<Button primary>Start</Button>} closeIcon>\r\n                    <Card className=\"wrapper-variant\">\r\n                        <Card.Content>\r\n                        {this.state.isResultVisible ? <h1>Congratulations</h1>: null }\r\n                        {this.state.headerVisible ? \r\n                          <Card.Header className=\"header-variant course-simple-item-header\">{this.state.exercises[id].translation}</Card.Header>: null  \r\n                        }\r\n                        {this.state.sentenceVisible ?\r\n                            <Card.Header className=\"header-variant course-simple-item-sentence\">{this.state.visibleSentence}</Card.Header>: null\r\n                         }\r\n                          \r\n    \r\n                          <Card.Description className=\"button-wrap\">\r\n                            <Button.Group className=\"button-group button-variants\">\r\n                            { /*this.state.isWordGroupVisible ? this.state.words.map((word, index) =>\r\n                                <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{word}</Button>\r\n                                ) : null */\r\n                                /*\r\n                                this.state.doubleWords.map((item,index) => {\r\n                                    return item.map((word,index) => \r\n                                      <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{word}</Button>\r\n                                    )\r\n                                } */\r\n                                this.state.isWordGroupVisible ?\r\n                                this.state.currentArray.map((item,index) => \r\n                                  <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{item}</Button>\r\n                                ): null\r\n                              }                            \t\r\n                            </Button.Group>\r\n                            { (this.state.isFinalVisible && this.state.correctAnswer) ? <h1 className=\"course-simple-item right\">Right!</h1>: null }\r\n                            { (this.state.isFinalVisible && this.state.incorrectAnswer) ? <h1 className=\"course-simple-item wrong\">Wrong!</h1>: null }\r\n                            <Button.Group className=\"button-group\">\r\n                              <Button className=\"button-variant\" primary onClick={this.con}>Console</Button>\r\n                            </Button.Group>\r\n                            <Button.Group className=\"button-group\">\r\n                              <Button className=\"button-variant\" primary onClick={this.nextSentence}>Continue</Button>\r\n                            </Button.Group>                                                                                                                                                                                                        \r\n                          </Card.Description>                          \r\n                        </Card.Content>\r\n                    </Card>\r\n                </Modal>                \r\n              </Card.Description>\r\n             </Card.Content>\r\n          </Card> \r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button} from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport CoursesSimpleItem from './CoursesSimpleItem';\r\n\r\nclass CoursesSimple extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      courses: [],\r\n      words: [],\r\n      exercises: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/courses.json')\r\n        .then(res => {\r\n          const courses = res.data;\r\n          this.setState({ courses: courses }, () => this.mapCourses() );\r\n        })\r\n    }\r\n\r\n    mapCourses = () =>{\r\n      var courses = this.state.courses.slice();\r\n      var arrays = [];\r\n      for (var i = 0; i < courses.length; i++) {\r\n            var a = courses[i].exercises;\r\n            for (var j = 0; j < a.length; j++) {\r\n              arrays.push(a[j]);\r\n            }\r\n      }   \r\n      console.log(arrays) \r\n      this.setState({\r\n        exercises: arrays\r\n      })   \r\n      /*\r\n          for (var i = 0; i < words.length; i++) {\r\n            var a = words[i].variants;\r\n            for (var j = 0; j < a.length; j++) {\r\n              newWords.push(a[j]);\r\n            }\r\n          }   */    \r\n    }\r\n\r\n    con = () =>{\r\n      let courses = this.state.courses.slice();\r\n\r\n      console.log(courses[0].exercises[0].words[1].variants);\r\n      console.log(courses[0].exercises[1].words);\r\n      console.log(courses[1].exercises[0].words);\r\n      console.log(courses[1].exercises[1].words);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          {this.state.courses.map((course, index) =>\r\n            <CoursesSimpleItem\r\n                      \r\n              exerciseName={course.exercises[0].full_sentence}\r\n              exercises = {this.state.exercises}\r\n              exerciseTranslation={course.exercises[0].translation}\r\n              key={index}\r\n              name = {course.course}\r\n              time={course.time}\r\n              tasks={course.tasks}\r\n\r\n            />\r\n          )}\r\n        </Card.Group>\r\n        <Button onClick={this.con}>Console</Button>\r\n        <Button onClick={this.mapCourses}>Courses</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\nclass CoursesList extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card>                           \r\n        </Card.Group>        \r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport CoursesSimple from './CoursesSimple'\r\nimport CoursesMedium from './CoursesMedium'\r\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass CoursesList extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                  <Link to={\"/coursessimple\"}>Simple courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                <Link to={\"/coursesintermediate\"}>Intermediate courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                <Link to={\"/coursesadvanced\"}>Advanced courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card>       \r\n        </Card.Group>\r\n        <Router>\r\n          <div>\r\n            <Route path=\"/courses/simple\" component={CoursesSimple} />\r\n            <Route path=\"/courses/medium\" component={CoursesMedium} />     \r\n          </div>\r\n        </Router>                  \r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Training extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper training-cards\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/englishtorussian.jpg' />              \r\n              </div>\r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/englishtorussian\">С английского на русский </Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/russiantoenglish.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/russiantoenglish\">С русского на английский</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/memory.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/cards\">Словарные карточки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/audio.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/audio\">Аудиотренировка</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/construct.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/constructword\">Конструктор слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n          {/*\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/pronunciation.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/pronunciation\">Произношение</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>  \r\n          */}\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/fillthegaps.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/fragments\">Заполни пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreatetext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreatetext\">Воспроизведи текст</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreateaudiotext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreateaudiotext\">Воспроизведи аудиоисторию</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/insertspaces.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/insertspaces\">Расставьте пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/truefalse.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/rightwrong\">Верно-неверно</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/proverbs.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/proverbs\">Пословицы и поговорки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>                                                                                                               \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Training;","import React, { Component, Fragment } from 'react';\r\nimport {Image } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n}\r\n \r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper recommended-wrapper\">\r\n          \t<div className=\"main-section section-1\">\r\n          \t  <div className=\"section-overlay\">\r\n          \t  \t<div className=\"section-header\">\r\n          \t  \t\t<h2>Лучший способ выучить язык</h2>\r\n          \t  \t\t<Link to=\"/training\" className=\"outline-link\">Начать учиться</Link>\r\n          \t  \t</div>\r\n          \t  </div>              \r\n            </div>\r\n          \t<div className=\"advantage-section\">\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/settings.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Простой интерфейс</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notebook.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Удобный словарь</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/user.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разнообразные тренировки</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notepad.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Большое количество обучающих материалов</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/house.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Грамматика и тесты</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/pen.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Полностью бесплатно</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>          \t                \r\n            </div>            \r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image words-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Изучайте слова</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>20 тематических наборов</li>\r\n\t            \t\t\t<li>Более 2000 слов</li>\r\n\t            \t\t\t<li>Словарь с расширенным функционалом</li>            \t\t\t            \t\t\t\r\n\t            \t\t\t<li>Возможность изучать добавленные слова</li>            \t\t\t\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/vocabulary\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Тренируйтесь</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>11 видов тренировок</li>\r\n\t            \t\t\t<li>Тренировка чтения, говорения и понимания на слух</li>\r\n\t            \t\t\t<li>Возможность добавлять на тренировку изучаемые слова</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/training\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image training-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image grammar-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Учите грамматику</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Изучение грамматики английского языка</li>\r\n\t            \t\t\t<li>Наглядные примеры</li>\r\n\t            \t\t\t<li>Тесты на любую тематику</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/grammar\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Улучшайте навыки чтения</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Множество текстов и аудиотекстов различной тематики</li>\r\n\t            \t\t\t<li>Тексты разного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/texts\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image texts-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n          {/*\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image books-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Читайте книги</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Книги на любой вкус</li>\r\n\t            \t\t\t<li>Возможность слушать аудиокниги</li>\r\n\t            \t\t\t<li>Книги различного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/books\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div> \r\n          */}  \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message, TextArea} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport './style.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass ConstructWord extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    \tthis.btn = React.createRef();\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentWord: '',\r\n        currentFullWord: null,\r\n        currentTranslation: '',\r\n        currentMeaning: '',\r\n        isStarterVisible: true,\r\n        isCardVisible: false,\r\n        isFinalVisible: false,\r\n        inputValue: null,\r\n        nameArray: [],\r\n        wordNameArray: [],\r\n        nameArrayId: 0,\r\n        currentValue: '',\r\n        search: '',\r\n        currentImage: null,\r\n        areButtonsVisible: true,\r\n        isImageVisible: false,\r\n        wordId: 0,\r\n        mistakeCount: 0,\r\n        animationState: false,\r\n        fade: false        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/vocabulary2.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        const currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n        const currentTranslation = words[id].translation;\r\n        const currentImage = words[id].image;\r\n        const currentMeaning = words[id].meaning;\r\n        const nameArray = currentWord.split('');\r\n        const randomNameArray = currentWord.split('');\r\n        for (let i = randomNameArray.length - 1; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n        }\r\n        const wordNameArray = [];\r\n        for (var i = 0; i < nameArray.length; i++) {\r\n          wordNameArray.push(' ');\r\n        }\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          currentFullWord\r\n          });\r\n      })\r\n      document.body.addEventListener(\"keydown\", this.myHandler);\r\n    }\r\n \r\n  myHandler = (e) =>{\r\n    const fade = this.state.fade;\r\n    let mistakeCount = this.state.mistakeCount;\r\n    let currentFullWord = this.state.currentFullWord;\r\n    let negativeWords = this.state.negativeWords.slice();\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let currentValue = this.state.currentValue;\r\n    let currentWord = this.state.currentWord;      \r\n    let id = this.state.nameArrayId;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let tempParam;\r\n    if ((e.key=== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        currentValue = currentValue + e.key;\r\n        this.state.wordNameArray[id] = e.key;\r\n        for (var i = 0; i < randomNameArray.length; i++) {\r\n          if (randomNameArray[i] === e.key) {\r\n            tempParam = i;\r\n            break;\r\n          }\r\n        }\r\n        randomNameArray.splice(tempParam,1);       \r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: e.key,\r\n          randomNameArray\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((e.key !== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        mistakeCount++;\r\n        this.setState({\r\n          mistakeCount,\r\n          fade: true\r\n        })\r\n      }\r\n      else if((e.keyCode == '13') && (this.state.isCardVisible) ){\r\n        this.continueTraining();\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false\r\n        })        \r\n      }\r\n  }    \r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let currentFullWord = this.state.currentFullWord;\r\n\t  let negativeWords = this.state.negativeWords.slice();\r\n\t  let positiveWords = this.state.positiveWords.slice();\r\n\t  let currentValue = this.state.currentValue;\r\n\t  let currentWord = this.state.currentWord;\t  \r\n\t\tif (mistakeCount > 2){\r\n\t\t\tnegativeWords.push(currentFullWord);\r\n\t\t}\r\n\r\n\t\telse if(currentWord !== currentValue){\r\n\t\t  \tnegativeWords.push(currentFullWord);\r\n\t\t  \tthis.setState({\r\n\t\t  \t\tnegativeWords\r\n\t\t  \t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpositiveWords.push(currentFullWord)\r\n\t\t} \r\n      let id = this.state.id;\r\n      let wordsLength = this.state.words.length;\r\n      let words = this.state.words; \r\n\r\n      id = id + 1;\r\n       if(id < wordsLength) {\r\n       \tconst currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n\t\tconst currentTranslation = words[id].translation;\r\n\t\tconst currentImage = words[id].image;\r\n\t\tconst currentMeaning = words[id].meaning;        \r\n\t\tconst nameArray = currentWord.split('');\r\n\t\tconst randomNameArray = currentWord.split('');\r\n\t\tfor (let i = randomNameArray.length - 1; i > 0; i--) {\r\n\t\t    const j = Math.floor(Math.random() * (i + 1));\r\n\t\t    [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n\t\t}\r\n\t\tconst wordNameArray = [];\r\n\t\tfor (var i = 0; i < nameArray.length; i++) {\r\n\t\t\twordNameArray.push(' ');\r\n\t\t}\r\n        this.setState({\r\n            id,\r\n            words, \r\n            currentWord,\r\n            currentFullWord,\r\n            currentTranslation,\r\n            currentImage,\r\n            currentMeaning,\r\n            randomNameArray,\r\n            nameArray,\r\n            wordNameArray,\r\n            isImageVisible: false,\r\n            areButtonsVisible: true,\r\n            currentValue: '',\r\n            nameArrayId: 0,\r\n            mistakeCount: 0,\r\n            positiveWords,\r\n            negativeWords\r\n        })\r\n      }\r\n        else{\r\n          this.setState({\r\n           isFinalVisible: true,\r\n           isCardVisible: false,\r\n           isStarterVisible: false,\r\n      \t\t\tpositiveWords,\r\n      \t\t\tnegativeWords           \r\n          })\r\n        }\r\n    }\r\n  \r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }  \r\n\r\n   checkValue = () =>{\r\n   \tvar currentWord = this.state.currentWord;\r\n    var currentValue = this.state.currentValue;\r\n    if(currentWord.length === currentValue.length){\r\n    \tthis.setState({\r\n    \t\tareButtonsVisible: false,\r\n    \t\tisImageVisible: true\r\n    \t})\r\n    }   \t\r\n   }\r\n\r\n   compareWord = (e) =>{\r\n    var id = this.state.nameArrayId;\r\n    var currentWord = this.state.currentWord;\r\n    var nameArray = this.state.nameArray;\r\n    var randomNameArray = this.state.randomNameArray;\r\n    var currentValue = this.state.currentValue;\r\n    var currentLetter = e.target.textContent.slice(0,1);\r\n    var mistakeCount = this.state.mistakeCount;\r\n      if( (currentLetter === nameArray[id]) && (currentValue.length < currentWord.length) ){\r\n        e.target.className = \"hidden\";\r\n        currentValue = currentValue + currentLetter;\r\n        this.state.wordNameArray[id] = currentLetter;\r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: currentLetter\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((currentLetter !== nameArray[id]) && (currentValue.length < currentWord.length)) {\r\n\t      mistakeCount++;\r\n\t      this.setState({\r\n\t      \tmistakeCount,\r\n          fade: true\r\n\t      })\r\n      }\r\n      else {\r\n      \tthis.setState({\r\n      \t\tisFinalVisible: true,\r\n      \t\tisCardVisible: false\r\n      \t})      \t\r\n      }\r\n} \r\n\r\n\r\n\r\n  render() {\r\n    const fade = this.state.fade;\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/construct.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n            <Container \r\n                onAnimationEnd={() => this.setState({ fade: false })}\r\n                className={fade ? 'fade construct-word-container' : 'construct-word-container'}>\r\n              <ul>\r\n              {this.state.wordNameArray.map((name,index) =>\r\n                <input key={index}  readOnly value={name} maxLength=\"1\" />\r\n               )}\r\n              </ul>\r\n              {this.state.areButtonsVisible ? \r\n\t              <ul>\r\n\t              {this.state.randomNameArray.map((name,index) =>\r\n\t                <li key={index} \r\n                      onClick={this.compareWord}\r\n                  > \r\n                      {name} \r\n                  </li>\r\n\t               )}\r\n\t              </ul>: null \r\n              }\r\n            {this.state.isImageVisible ?\r\n            \t<Fragment>\r\n            \t\t<p>{this.state.currentMeaning}</p>\r\n                   <div className=\"texts-image-wrapper\">\r\n                    <Image src={this.state.currentImage} ></Image>\r\n                  </div>\r\n            \t</Fragment> \r\n            \t : null\r\n            }\r\n            </Container>\r\n            <Button primary onClick={this.continueTraining} >Продолжить</Button>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default ConstructWord;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Proverbs extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n    shuffleArray = () =>{\r\n      let currentArray = this.state.currentArray.slice();\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n  \t  let mistakeCount = this.state.mistakeCount;\r\n  \t  let negativeProverbs = this.state.negativeProverbs.slice();\r\n  \t  let positiveProverbs = this.state.positiveProverbs.slice();\r\n      let id = this.state.id;\r\n      let proverbs = this.state.proverbs;\r\n      id = id + 1;\r\n      if (id < 2) {\r\n        const currentProverb = proverbs[id];\r\n        const currentProverbName = proverbs[id].proverb;\r\n        const currentTranslation = proverbs[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }        \r\n        this.setState({\r\n            id,\r\n            proverbs, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray,\r\n            constructedProverb: [],\r\n            positiveProverbs,\r\n            negativeProverbs,\r\n            isCheckButtonVisible: false,\r\n            isDKButtonVisible: true,\r\n            isContinueButtonVisible: false,\r\n            isResultWrong: false,\r\n            nameClass: ''\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false,\r\n          isStarterVisible: false,\r\n          positiveProverbs,\r\n          negativeProverbs           \r\n        })\r\n      }\r\n  }\r\n\r\n   setValue = (e) =>{\r\n    let target = e.target;\r\n    let parent = e.target.parentElement.children;\r\n    var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    currentArray.splice(indexTarget,1);\r\n    constructedProverb.push(e.target.textContent);\r\n\r\n    this.setState({\r\n      constructedProverb: constructedProverb\r\n    })\r\n    if(currentArray.length == 0){\r\n      this.setState({\r\n        isCheckButtonVisible: true,\r\n        isDKButtonVisible: false\r\n      })\r\n    }\r\n  } \r\n\r\n    removeValue = (e) =>{\r\n      let target = e.target;\r\n      let parent = e.target.parentElement.children;\r\n      var indexTarget = 0;\r\n          while ( (target = target.previousElementSibling) ) {\r\n            indexTarget++\r\n      }\r\n      let constructedProverb = this.state.constructedProverb;\r\n      let currentArray = this.state.currentArray;\r\n      constructedProverb.splice(indexTarget,1);\r\n      currentArray.push(e.target.textContent);\r\n      this.setState({\r\n        currentArray\r\n      })\r\n      if(currentArray.length > 0){\r\n        this.setState({\r\n          isCheckButtonVisible: false\r\n        })\r\n      }\r\n  }\r\n\r\n  dontKnow = (e) =>{\r\n    let negativeProverbs = this.state.negativeProverbs;    \r\n    let currentProverbName = this.state.currentProverbName;\r\n    let currentArray = currentProverbName.split(\" \");\r\n    let constructedProverb = [];\r\n    for (var i = 0; i < currentArray.length; i++) {\r\n      constructedProverb.push(currentArray[i])\r\n    }\r\n    negativeProverbs.push(currentProverbName);\r\n    this.setState({\r\n      currentArray: [],\r\n      isDKButtonVisible: false,\r\n      isContinueButtonVisible: true,\r\n      isCheckButtonVisible: false,\r\n      constructedProverb\r\n    })\r\n  }\r\n\r\n  checkProverb = (e) =>{\r\n    let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let negativeProverbs = this.state.negativeProverbs.slice();\r\n    var sentence = this.state.constructedProverb.slice().join(' ');\r\n    if(sentence === this.state.currentProverbName){\r\n      positiveProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        nameClass: 'audio-name-green',\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        positiveProverbs\r\n      })      \r\n    }\r\n    else {\r\n      negativeProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        nameClass: 'audio-name-red',\r\n        isResultWrong: true,\r\n        negativeProverbs\r\n      })      \r\n    }\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      proverbs: [],\r\n      id: 0,\r\n      currentProverbName: '',\r\n      currentTranslation: '',\r\n      mistakeCount: 0,\r\n      positiveProverbs: [],\r\n      negativeProverbs: [],\r\n      currentArray: [],\r\n      isStarterVisible: true,\r\n      isCardVisible: false,\r\n      isFinalVisible: false,\r\n      areButtonsVisible: false,\r\n      isContinueButtonVisible: false,\r\n      isCheckButtonVisible: false,\r\n      isDKButtonVisible: true,\r\n      constructedProverb: [],\r\n      nameClass: '',\r\n      isResultWrong: false      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/proverbs.json')\r\n      .then(res => {\r\n        const proverbs = res.data;\r\n        let random = [];\r\n        while(random.length < 2) {\r\n          var el = proverbs[Math.floor(Math.random() * proverbs.length)];\r\n          if (random.indexOf(el) === -1) {\r\n            random.push(el)\r\n          };                \r\n        }\r\n  \r\n        const currentProverb = random[id];\r\n        const currentProverbName = random[id].proverb;\r\n        const currentTranslation = random[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }                    \r\n        this.setState({ \r\n            proverbs: random, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray\r\n          });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/proverbs.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card proverb-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n              <div className={`proverb-result ${this.state.nameClass}`} >\r\n                  {this.state.constructedProverb.map((item,index) =>\r\n                      <span key={index} className=\"proverb-span\" onClick={this.removeValue}>{item}</span>\r\n                  )}\r\n              </div>\r\n              {this.state.isResultWrong ?\r\n                <div className={`proverb-result audio-name-green`}>\r\n                  {this.state.currentProverbName}\r\n                </div> : null\r\n              }\r\n              <div className=\"fragment-variants\">\r\n                {this.state.currentArray.map((item, index) =>\r\n                  <span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"proverb-button-container\">\r\n              {this.state.isCheckButtonVisible ? \r\n                <Button primary onClick={this.checkProverb} >Проверить</Button> : null\r\n              }\r\n              {this.state.isDKButtonVisible ? \r\n                <Button primary onClick={this.dontKnow}>Не знаю</Button> :null\r\n              }\r\n              {this.state.isContinueButtonVisible ? \r\n                <Button primary onClick={this.continueTraining} >Продолжить</Button> : null\r\n              }                \r\n              </div>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeProverbs.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveProverbs.length ? this.state.positiveProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          ) : null}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveProverbs.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {2 - this.state.positiveProverbs.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Proverbs;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\n\r\nclass Cards extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });          \r\n        })\r\n   }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (val) => {\r\n      if (val) {\r\n        var positiveWords = this.state.positiveWords.slice();\r\n        positiveWords.push(this.state.currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n        })        \r\n      } else {\r\n        var negativeWords = this.state.negativeWords.slice();\r\n        negativeWords.push(this.state.currentWord);      \r\n        this.setState({\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true\r\n        })        \r\n      }     \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      let result = this.state.result;\r\n      id = id + 1;\r\n      if (id < result.length){ \r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];       \r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n      })\r\n    }\r\n\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }    \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Словарные карточки</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent} >Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n           <div className=\"card-image-wrapper recognize-cards\">\r\n             <Image src={this.state.currentWord.image} />\r\n           </div>\r\n              <Card.Content>\r\n                <Card.Header>{this.state.currentWord.name} \r\n                <span onClick={this.voiceWord} className=\"training-card__icon\" title=\"Прослушать\">\r\n                  <Icon name = 'right sound'/> \r\n                </span>\r\n                </Card.Header>\r\n                {this.state.isTranslationVisible ? \r\n                  <Fragment>\r\n                    <Card.Meta>{this.state.currentWord.translation}</Card.Meta>\r\n                    <Card.Description>{}</Card.Description>                  \r\n                  </Fragment>:null\r\n                }\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} primary>Знаю</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} primary>Не знаю</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  { (this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Cards;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Audio extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({\r\n        search: event.target.value.substr(0,20),\r\n        tempSearch: event.target.value.substr(0,20)});\r\n    }  \r\n\r\n\r\n    positiveResponse = () =>{\r\n      let positiveWords = this.state.positiveWords.slice();\r\n      let negativeWords = this.state.negativeWords.slice();\r\n      let currentWord = this.state.currentWord;\r\n      let search = this.state.search;\r\n\r\n      if(currentWord.name === search){\r\n        positiveWords.push(currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-green'\r\n        })\r\n      }\r\n      else if(search === ''){\r\n        negativeWords.push(currentWord);        \r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red',\r\n          tempSearch: 'нет ответа'\r\n        }) \r\n      }\r\n\r\n      else {\r\n        negativeWords.push(currentWord);\r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red'\r\n        })        \r\n      }\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < result.length) { \r\n      const currentWord = result[id][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: true,\r\n          isInputVisible: true,\r\n          search: '',\r\n          correctNameVisible: false        \r\n        })\r\n      } \r\n\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          correctNameVisible: false,\r\n          search: ''\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var word = this.state.currentWord.name;\r\n      speech.say(word);\r\n   }  \r\n\r\n   showImage = () => {\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false,\r\n        correctNameVisible: false,\r\n        correctName: null,\r\n        correctNameClass: 'audio-name-green',\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        tempSearch: '',\r\n        metaClass: 'blue',\r\n        nameClass: ''         \r\n      }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result }, () => console.log(this.state.result));\r\n        })\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />\r\n            </div>  \r\n              <Card.Content>\r\n                <Card.Header>Аудирование</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group>:\r\n          null\r\n        }\r\n         {this.state.isCardVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"audio-header-wrapper\" >\r\n             <Card className=\"audio-training\"  >\r\n                <Card.Content>\r\n                  <Card.Header className=\"audio-header\">\r\n                    <Button onClick={this.voiceWord} primary><Icon size=\"big\" name=\"microphone\"></Icon></Button>\r\n                    {this.state.isInputVisible ?\r\n                      <Input placeholder=\"Введите прослушанное слово\" id=\"audo-input\" onChange={this.updateSearch}/>:null\r\n\r\n                    } \r\n                  </Card.Header>\r\n                  {this.state.isTranslationVisible ? \r\n                    <Fragment>\r\n                    {this.state.correctNameVisible ? <Card.Meta className={this.state.correctNameClass}>{this.state.currentWord.name}</Card.Meta>: null }\r\n                      <Card.Meta className={this.state.nameClass}>{this.state.tempSearch}</Card.Meta>\r\n                      <Card.Meta className={this.state.metaClass}>{this.state.currentWord.translation}</Card.Meta>\r\n                      <Card.Description className=\"audio-description\">{}</Card.Description>                  \r\n                    </Fragment>:null\r\n                  }\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className=\"audio-image-outer-wrapper\">\r\n                  {this.state.isImageVisible ?\r\n                   <div className=\"audio-image-wrapper\">\r\n                     <Image src={this.state.currentWord.image} />\r\n                   </div> :null\r\n                 }\r\n                 {this.state.isLinkVisible ?\r\n                   <div className=\"audio-image-text\">\r\n                       <a onClick={this.showImage}>Show hint</a>\r\n                   </div> :null\r\n                  }                 \r\n                </div>\r\n                  <Button.Group className=\"audio-buttons-wrapper\">\r\n                  {this.state.showNavButtons ?\r\n                  <Fragment>\r\n                    <Button onClick={this.positiveResponse} primary>Проверить</Button>\r\n                  </Fragment>:null\r\n                  }  \r\n                  {this.state.showContinueButton ?\r\n                    <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n\r\n                  }\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group> :\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          </div>\r\n          <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Audio;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EnglishToRussian extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      currentWord: '',\r\n      flagState: false,\r\n      result: [],\r\n      disabled: false        \r\n    }, () => {\r\n      this.initialLoad();\r\n    })\r\n  }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 10; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if (id < result.length) {\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({\r\n            id,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            currentWord,\r\n            disabled: false\r\n          })\r\n        }  \r\n\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          search: ''\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var name = this.state.currentName;\r\n      speech.say(name);\r\n   }  \r\n\r\n   showImage = ()=>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  } \r\n\r\n   dontKnow = () =>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true\r\n    })\r\n   }\r\n\r\n      render() {\r\n        return (\r\n          <Fragment>\r\n          <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n           {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n              <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/englishtorussian.jpg' />\r\n              </div>  \r\n                <Card.Content>\r\n                  <Card.Header>Перевод</Card.Header>\r\n                  <Card.Description>\r\n                    <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n           {this.state.isCardVisible ?\r\n           \t<Container className=\"list-container\">\r\n           \t\t<Card className=\"training-card\">\r\n    \t       \t\t<Label>\r\n                  {this.state.currentWord.name}\r\n                    <span className=\"training-card__icon\" onClick={this.voiceWord} title=\"Прослушать\">\r\n                      <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n                    </span>\r\n                </Label>\r\n    \t       \t\t<Container className=\"list-inner-wrapper\">\r\n    \t\t\t        <List className=\"training-list\">\r\n    \t\t\t        {this.state.result[this.state.id].map((word, index) =>\r\n    \t\t\t            <List.Item key={index} className=\"training-list-item\">\r\n    \t\t\t              <List.Content>\r\n    \t\t\t                <List.Header as='a'>\r\n                            <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.translation}</Button>\r\n                          </List.Header>\r\n    \t\t\t              </List.Content>\r\n    \t\t\t            </List.Item>\r\n    \t\t\t        )}\r\n                    <List.Item className=\"training-list-item\">\r\n                      <List.Content>\r\n                        <List.Header as='a'>\r\n                          <Button onClick={this.dontKnow} className=\"help\" >Не знаю</Button>\r\n                        </List.Header>\r\n                      </List.Content>\r\n                    </List.Item>              \r\n    \t\t\t        </List>\r\n                  {this.state.isImageVisible ?\r\n                    <div className=\"training-right-wrapper\">\r\n                      <div className=\"training-image-wrapper\">\r\n                        <Image src={this.state.currentWord.image} className=\"training-image\">\r\n                        </Image>                \r\n                      </div>\r\n                    {this.state.flagState && this.state.isImageVisible ?\r\n                      <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n                    }                                     \r\n                    </div>: null               \r\n                   }\r\n    \t       \t\t</Container>\r\n           \t\t</Card>\r\n          \t</Container> :\r\n               null\r\n            }\r\n            {this.state.isFinalVisible ?\r\n             <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n                 <Card className=\"card-training\" >\r\n                    <Card.Content>\r\n                      <Card.Header>Результаты</Card.Header>\r\n                      <Divider/>\r\n                      <Card.Description className=\"audio-list-container\"> \r\n                      {(this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                       <Message>\r\n                          <Message.Header>Поздравляем!</Message.Header>\r\n                          <p>\r\n                            Все задания выполнены правильно\r\n                          </p>\r\n                       </Message> \r\n                      }\r\n                      </Card.Description>\r\n                      <Card.Description className=\"results-wrapper\">\r\n                        <div className=\"positive-results-wrapper\"> \r\n                          <div className=\"positive-results\">\r\n                            {this.state.positiveWords.length}\r\n                          </div>\r\n                          <Label>Верно</Label>                    \r\n                        </div>\r\n                        <div className=\"negative-results-wrapper\"> \r\n                          <div className=\"negative-results\">\r\n                            {this.state.result.length - this.state.positiveWords.length}\r\n                          </div> \r\n                          <Label>Неверно</Label>                   \r\n                        </div>\r\n                      </Card.Description>\r\n                      <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                      </Button.Group>\r\n                    </Card.Content>\r\n                  </Card>          \r\n            </Card.Group>                \r\n               : null\r\n            }\r\n            </div>\r\n            <footer></footer>\r\n        </Fragment>\r\n    \t);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnglishToRussian);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport classnames from 'classnames';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass RussianToEnglish extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n    this.state = {\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n  this.setStateOnStart()\r\n}\r\n\r\nsetStateOnStart = () => {\r\n  this.setState({\r\n    words: [],\r\n    negativeWords: [],\r\n    positiveWords: [],\r\n    id: 0,\r\n    isCardVisible: false,\r\n    isButtonVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: true,\r\n    showContinueButton: false,\r\n    isFinalVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: true,\r\n    isInputVisible: true,\r\n    search: '',\r\n    currentWord: '',\r\n    flagState: false,\r\n    result: [],\r\n    disabled: false    \r\n  }, () => this.initialLoad())\r\n}\r\n\r\n  initialLoad = () => {\r\n    var id = this.state.id;\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = [];\r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            var el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          result });\r\n      })\r\n  }\r\n\r\n\r\nstartTraining = () =>{\r\n  this.setState({\r\n    isButtonVisible: false,\r\n    isCardVisible: true\r\n  })\r\n}\r\n\r\ncontinueTraining = () =>{\r\n  let id = this.state.id;\r\n  id = id + 1;\r\n  const result = this.state.result;\r\n  if(id < result.length) {\r\n    const currentWord =  result[id][Math.floor(Math.random() * result[id].length)];\r\n    this.setState({\r\n      id,\r\n      currentWord, \r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      disabled: false\r\n    })\r\n  } \r\n  else this.setState({\r\n    isFinalVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: false,\r\n    showContinueButton: false, \r\n    isCardVisible: false,\r\n    isButtonVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: false,\r\n    isInputVisible: false,\r\n    search: ''   \r\n\r\n  }) \r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentName;\r\n  speech.say(newWords);\r\n}  \r\n\r\nshowImage = ()=>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    isLinkVisible: false\r\n  })\r\n}\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    var positiveWords = this.state.positiveWords.slice();\r\n    var negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  }\r\n\r\n\r\ndontKnow = () =>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    flagState: true\r\n  })\r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentWord.name;\r\n  speech.say(newWords);\r\n} \r\n\r\nrender() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n          {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n            <Image src='training/russiantoenglish.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n            <Card.Header>Перевод</Card.Header>\r\n            <Card.Description>\r\n            <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n            </Card.Description>\r\n            </Card.Content>\r\n            </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n          {this.state.isCardVisible ?\r\n            <Container className=\"list-container\">\r\n            <Card className=\"training-card\">\r\n            <Label>\r\n            {this.state.currentWord.translation}\r\n            <span onClick={this.voiceWord} className=\"training-card__icon\">\r\n            <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n            </span>\r\n            </Label>\r\n            <Container className=\"list-inner-wrapper\">\r\n            <List className=\"training-list\">\r\n            {this.state.result[this.state.id].map((word, index) =>\r\n             <List.Item key={index} className=\"training-list-item\">\r\n             <List.Content>\r\n             <List.Header as='a'>\r\n             <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.name}</Button>\r\n             </List.Header>\r\n             </List.Content>\r\n             </List.Item>\r\n             )}\r\n            <List.Item className=\"training-list-item \">\r\n            <List.Content>\r\n            <List.Header as='a'>\r\n            <Button className=\"dont-know\" onClick={this.dontKnow} >Не знаю</Button>\r\n            </List.Header>\r\n            </List.Content>\r\n            </List.Item>              \r\n            </List>\r\n            {this.state.isImageVisible ?\r\n              <div className=\"training-right-wrapper\">\r\n              <div className=\"training-image-wrapper\">\r\n              <Image src={this.state.currentWord.image} className=\"training-image\">\r\n              </Image>                \r\n              </div>\r\n              {this.state.flagState ?\r\n                <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n\r\n              }                                     \r\n              </div>: null               \r\n            }\r\n            </Container>\r\n            </Card>\r\n            </Container> :\r\n            null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n           <Card className=\"card-training\" >\r\n           <Card.Content>\r\n           <Card.Header>Результаты</Card.Header>\r\n           <Divider/>\r\n           <Card.Description className=\"audio-list-container\"> \r\n           {  (this.state.negativeWords.length !== 0 ) ?\r\n            <List className=\"audio-list\">\r\n            {this.state.negativeWords.map((item, index) => \r\n              <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n              )}\r\n            </List>: \r\n            <Message>\r\n            <Message.Header>Поздравляем!</Message.Header>\r\n            <p>\r\n            Все задания выполнены правильно\r\n            </p>\r\n            </Message> \r\n          }\r\n        </Card.Description>\r\n    <Card.Description className=\"results-wrapper\">\r\n    <div className=\"positive-results-wrapper\"> \r\n    <div className=\"positive-results\">\r\n    {this.state.positiveWords.length}\r\n    </div>\r\n    <Label>Верно</Label>                    \r\n    </div>\r\n    <div className=\"negative-results-wrapper\"> \r\n    <div className=\"negative-results\">\r\n    {this.state.result.length - this.state.positiveWords.length}\r\n    </div> \r\n    <Label>Неверно</Label>                   \r\n    </div>\r\n    </Card.Description>\r\n    <Button.Group className=\"card-buttons-wrapper\">\r\n    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n    </Button.Group>\r\n    </Card.Content>\r\n    </Card>          \r\n    </Card.Group>          \r\n    : null\r\n  }\r\n  </div>\r\n  <footer></footer>\r\n  </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nexport default RussianToEnglish;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button,Card,Image} from 'semantic-ui-react';\r\n\r\nclass Videos extends Component {\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      videos: [],\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      channelId: null,\r\n      image: '',\r\n      link: '',\r\n      visible: 8\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('/videos.json')\r\n        .then(res => {\r\n          const videos = res.data;\r\n          const name = videos[id].name;\r\n          const description = videos[id].description;\r\n          const channelId = videos[id].channelId;\r\n          const image = videos[id].image;\r\n          const link = videos[id].link;\r\n           this.setState({ \r\n            videos, \r\n            name, \r\n            description, \r\n            channelId, \r\n            image,\r\n            link });\r\n        })\r\n    }\r\n\r\n    cons = () =>{\r\n      console.log(this.state);\r\n    }\r\n\r\n    loadMore = () => {\r\n      this.setState((prev) => {\r\n        return {visible: prev.visible + 4};\r\n      });\r\n    }    \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n        <Button onClick={this.cons} >console</Button>\r\n        <Card.Group itemsPerRow={4} className=\"videos-container\">\r\n          {this.state.videos.slice(0,this.state.visible).map((video,index) =>\r\n            <Card key={index}>\r\n              <Image src={video.image} />\r\n              <Card.Content className=\"video-wrapper\">\r\n                <Card.Header>{video.name}</Card.Header>\r\n                <Card.Description>{video.description}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra className=\"video-extra\">\r\n                 <Link to={video.link}>{video.name}</Link>\r\n              </Card.Content>\r\n            </Card> \r\n          )}                                                                           \r\n        </Card.Group>\r\n           <div className=\"load-more-button\">\r\n            {this.state.visible < this.state.videos.length &&\r\n                    <Button onClick={this.loadMore} primary>Загрузить</Button>\r\n                  }                 \r\n          </div>\r\n          </div>\r\n          <footer></footer>\r\n       </Fragment>\r\n  );\r\n  } \r\n\r\n\r\n}\r\n\r\nexport default Videos;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Fragments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        texts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setStateOnStart();\r\n    }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        texts: [],\r\n        options: [],\r\n        categoryValue: '',\r\n        value: null,\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isResultVisible: false,\r\n        title: '',\r\n        content: '',\r\n        image: null,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        rightAnswers: 0,\r\n        //livesCount: 3,\r\n        livesArray: []        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content) )\r\n          this.setState({ \r\n            texts,\r\n            contentArray\r\n          }, () => this.setMenuParams());\r\n        })\r\n    }\r\n\r\n    setMenuParams = () =>{\r\n      let options = [];\r\n      this.state.texts.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var options = this.state.options.slice();\r\n      var comp = 'text';\r\n      const unique = options\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => options[e]).map(e => options[e]);\r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n\r\n    selectValue = () => {\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue() )         \r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.buildLives();\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.builtArray())\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n    \t\tcontentArray: [],\r\n    \t\tcurrentTempArray: [],\r\n    \t\tcurrentStringArray: [],\r\n    \t\tcurrentRandomWord: '',\r\n    \t\tcurrentFinalArray: [],\r\n    \t\tcurrentRandomArray: [],\r\n    \t\tcurrentOneArray: [],\r\n    \t\tactiveInput: 0,\r\n    \t\tactiveArray: [],\r\n    \t\tsortedRandomArray: [],\r\n    \t\tcomparativeRandomArray: [],\r\n    \t\tfragmentArrayIndexes: []        \r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n    builtArray = () => {\r\n      let currentOneArray = [];\r\n\t    let activeTargetContent = this.state.content.slice();\r\n      let currentStringArray = activeTargetContent.split(\". \");\r\n      currentStringArray.pop();\r\n      let currentFullArray = [];\r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n      \tcurrentFullArray.push(currentStringArray[i].split(\" \"));\r\n      }\r\n      let currentWordArray = currentStringArray[0].split(\" \");\r\n      let currentRandomArray = [];\r\n      let currentRandomIndexes = [];\r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet j = Math.floor(Math.random()*currentFullArray[i].length);\r\n      \tcurrentRandomArray.push(currentFullArray[i][j]);\r\n      \tcurrentRandomIndexes.push(j);\r\n      }\r\n      let random = currentWordArray[Math.floor(Math.random()*currentWordArray.length)];\r\n      let currentFinalArray = [];\r\n    \r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet curArr = currentFullArray[i];\r\n\t      \tfor (var j = 0; j < curArr.length; j++) {\r\n            \tcurrentOneArray.push(curArr[j]);\r\n\t\t      \tif (j !== currentRandomIndexes[i] ) {\r\n\t\t      \t\tcurrentFinalArray.push(<span className=\"fragment-span\">{curArr[j]}</span>)\r\n\t\t      \t}\r\n\t\t      \telse {\r\n\t\t      \t\tcurrentFinalArray.push(<span onClick={this.resetValue} className=\"fragment-input\"></span>)\r\n\t\t      \t}\r\n\t      \t}\r\n\t      \tcurrentFinalArray.push(<span className=\"fragment-dot\">.</span>);\r\n      }\r\n\r\n      this.setState({\r\n      \tcurrentStringArray,\r\n        currentWordArray,\r\n        currentRandomWord: random,\r\n        currentFinalArray,\r\n        currentRandomIndexes,\r\n        currentRandomArray,\r\n        currentFullArray,\r\n        currentOneArray\r\n      }, () => this.shuffleArray())     \r\n    }\r\n\r\n   setValue = (e) => {\r\n      let activeInput = this.state.activeInput;\r\n      let activeArray = [];\r\n      let currentFullArray = this.state.currentFullArray.slice();\r\n      let currentFinalArray = this.state.currentFinalArray.slice();\r\n      let currentRandomArray = this.state.currentRandomArray.slice();\r\n      let currentRandomIndexes = this.state.currentRandomIndexes.slice();\r\n      let activeTargetTitle = e.target.textContent;\r\n      let fragmentArray = [];\r\n      let fragmentArrayIndexes = [];\r\n      let fragmentDescription = document.getElementsByClassName('fragment-description')[0].children;\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif(fragmentDescription[i].className == \"fragment-input\"){\r\n      \t\tfragmentArrayIndexes.push(i);\r\n      \t\tfragmentArray.push(fragmentDescription[i]);\r\n      \t}\r\n      }\r\n      for (var i = 0; i < fragmentArrayIndexes.length; i++) {\r\n      \tactiveArray.push(i);\r\n      }\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif( (fragmentDescription[i].className == \"fragment-input\") && (i == fragmentArrayIndexes[activeInput])){\r\n      \t\tfragmentDescription[i].textContent = activeTargetTitle;\r\n      \t}\r\n      }\r\n\t\t  fragmentArrayIndexes.splice(activeInput, 1);\r\n      let comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n      let sortedRandomArray = this.state.sortedRandomArray.slice();\r\n      let target = e.target;\r\n      comparativeRandomArray.push(target.textContent);\r\n      var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n      }\r\n\r\n      sortedRandomArray.splice(indexTarget, 1);\r\n      if (sortedRandomArray.length === 0) {\r\n      \tthis.setState({\r\n      \t\tisCheckButtonVisible: true\r\n      \t})\r\n      }\r\n\r\n      activeInput++;\r\n      this.setState({\r\n  \t\t\tactiveInput,\r\n  \t\t\tactiveArray,\r\n  \t\t\tfragmentArrayIndexes,\r\n  \t\t\tcurrentRandomArray,\r\n  \t\t\tcomparativeRandomArray,\r\n  \t\t\tsortedRandomArray\r\n\t\t})\r\n    \r\n  }\r\n\r\n\tshuffleArray = () => {\r\n\t\tlet array = this.state.currentRandomArray.slice();\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t    this.setState({\r\n        \tsortedRandomArray: array\t    \t\r\n\t    })\r\n\t}\r\n\r\n    resetValue = (e) =>{\r\n\t    let sortedRandomArray = this.state.sortedRandomArray.slice(); \r\n      let element = e.target;\r\n      if (e.target.textContent !== \"\") {\r\n      \t  sortedRandomArray.push(e.target.textContent);\r\n      \t  element.innerText = \"\";\r\n  \t      this.setState({\r\n  \t      \tsortedRandomArray: sortedRandomArray\r\n  \t      })\r\n\t        var indexTarget = 0;\r\n\t        while ( (element = element.previousElementSibling) ) {\r\n\t          indexTarget++\r\n\t        }\r\n      }\r\n    }\r\n\r\n    submitText = (e) =>{\r\n    \tlet comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    \tlet currentSortedArray = this.state.currentRandomArray.slice();\r\n    \tlet sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    \tlet count = 0;\r\n    \tfor (var i = 0; i < currentSortedArray.length; i++) {\r\n    \t\tif (currentSortedArray[i] === comparativeRandomArray[i]) {\r\n    \t\t\tcount++;\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\tsortedRandomArray.push(comparativeRandomArray[i])\r\n    \t\t}\r\n    \t\t\r\n    \t}\r\n    \tlet rightAnswers = count;\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: false,\r\n    \t\tisResultVisible: true,\r\n    \t\tisSingleTextVisible: false,\r\n    \t\trightAnswers,\r\n    \t\tsortedRandomArray\r\n    \t})\r\n    }\r\n\r\n    tryAgain = () =>{\r\n    \tlet lives = this.state.livesCount;\r\n    \tlives = lives - 1;\r\n    \tthis.setState({\r\n    \t\tisResultVisible: false,\r\n    \t\tisSingleTextVisible: true,\r\n    \t\tlivesCount: lives\r\n    \t}, () => this.buildLives() )\r\n    }\r\n\r\n    buildLives = () =>{\r\n    \tlet livesCount = this.state.livesCount;\r\n    \tlet lives = [];\r\n    \tfor (var i = 0; i < livesCount; i++) {\r\n    \t\tlives.push(<Icon name='like' size='big' />)\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tlivesArray: lives\r\n    \t})\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible && this.state.texts.length ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n            {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                \t<div className=\"fragments-close\">\r\n                \t\t<span onClick={this.backToTexts}>\r\n                \t\t\t<Icon name='close' size='big' />\r\n                \t\t</span>\r\n                \t</div>\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t{this.state.currentFinalArray}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n             \t<div className=\"fragment-variants\">\r\n            \t\t{this.state.sortedRandomArray.map((item, index) =>\r\n            \t\t\t<span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n            \t\t)}\r\n\t            \t{this.state.isCheckButtonVisible ? \r\n\t            \t\t<Button onClick={this.submitText} >Проверить</Button> :null\r\n\t            \t}             \t\t\r\n            \t</div>\r\n                </Card>:null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t<h2>Вы расставили правильно {this.state.rightAnswers} из {this.state.currentRandomArray.length} слов </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                  \t<Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary ><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default Fragments;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Pronunciation extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\ttexts: [],\r\n\t\tnegativeSentences: [],\r\n\t\tpositiveSentences: [],\r\n\t\tid: 0,\r\n\t\tcurrentText: '',\r\n\t\tcurrentTextContent: '',\r\n\t\tcurrentSentence: '',\r\n\t\tisCardVisible: false,\r\n\t\tisButtonVisible: true,\r\n\t\tisTranslationVisible: false,\r\n\t\tshowNavButtons: true,\r\n\t\tshowContinueButton: false,\r\n\t\tisFinalVisible: false,\r\n\t\tshowSubmitButtons: true,\r\n\t\toptions: {\r\n\t\t  autostart: false\r\n\t\t},\r\n\t\ttranscript: '',\r\n\t\tresetTranscript: null,\r\n\t\tbrowserSupportsSpeechRecognition: null,\r\n\t\trecognition: null,\r\n\t\tstartListening: null,\r\n\t\tstopListening: null ,\r\n\t\tsplittedText: [],\r\n\t\tisDeleteVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      var id = this.state.id;\r\n      axios.all([\r\n          axios.get('/texts.json')\r\n        ])\r\n        .then(axios.spread((textsRes) => {\r\n          const texts = textsRes.data;\r\n          const currentText = texts[id].content;\r\n          let splittedText = currentText.split(\". \").slice(0,3);\r\n          let currentSentence = splittedText[id] + '.'; \r\n          let currentSentenceContent = splittedText[id].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();           \r\n          this.setState({\r\n            texts,\r\n            currentSentence,\r\n            splittedText,\r\n            currentText,\r\n            transcript: this.props.transcript,\r\n            resetTranscript: this.props.resetTranscript,\r\n            browserSupportsSpeechRecognition: this.props.browserSupportsSpeechRecognition,\r\n            recognition: this.props.recognition,\r\n            startListening: this.props.startListening,\r\n            stopListening: this.props.stopListening \r\n          }, () => this.state.stopListening() );          \r\n        }));      \r\n    }\r\n\r\n  setStateOnStart = () => {\r\n\r\n  }\r\n\r\n  initialLoad = () => {\r\n\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      }, () => this.state.startListening())\r\n    }\r\n\r\n    submitResponse = () =>{\r\n      var objectTranscription = document.getElementById('transcription').textContent;\r\n      var positiveSentences = this.state.positiveSentences;\r\n      var negativeSentences = this.state.negativeSentences;\r\n      let currentSentence = this.state.currentSentence;\r\n      let currentSentenceContent = this.state.currentSentenceContent;\r\n   \r\n      if(currentSentenceContent === objectTranscription){\r\n        positiveSentences.push(currentSentence);     \r\n      }\r\n\r\n      else {\r\n        negativeSentences.push(currentSentence);\r\n        console.log(negativeSentences);\r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        positiveSentences,\r\n        negativeSentences\r\n\r\n      }, () => this.continueTraining() )        \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let length = this.state.splittedText.length;\r\n      let splittedText = this.state.splittedText;\r\n      let newId = this.state.id;\r\n      newId = newId + 1;\r\n      const texts = this.state.texts;\r\n      if(newId < length){\r\n      \tlet currentSentence = splittedText[newId] + '.';\r\n      \tlet currentSentenceContent = splittedText[newId].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();\r\n \r\n        this.setState({\r\n          id: newId,\r\n          currentSentence,\r\n          currentSentenceContent,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else {\r\n        this.state.stopListening();\r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false\r\n        })\r\n      }  \r\n    }\r\n\r\n    callSubmit = () =>{\r\n      this.state.resetTranscript();\r\n      this.continueTraining();\r\n    }\r\n\r\n    clearTranscription = () =>{\r\n    \tlet transcript = this.props.transcript;\r\n    \tlet newTranscript =\ttranscript.substring(0,transcript.length - 1);\r\n    \tthis.props.transcript = newTranscript;\r\n    }\r\n\r\n  render() {\r\n\r\n    const {transcript} = this.props;\r\n\r\n    if (!this.state.browserSupportsSpeechRecognition) {\r\n      return null\r\n    }\r\n    this.state.recognition.lang = 'en-US';\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/microphone.jpg' />\r\n              </div>  \r\n              <Card.Content>\r\n                <Card.Header>Произношение</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group> : null\r\n         }\r\n         {this.state.isCardVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\"  >\r\n                  <Card.Content>\r\n                    <Card.Header className=\"pronunciation-header\">\r\n                      Произнесите слово в микрофон\r\n                    </Card.Header>\r\n                    <Card.Header className=\"pronunciation-text\">{this.state.currentSentence}\r\n                    </Card.Header>                \r\n                    <Card.Description id=\"transcription\" className=\"pronunciation-transcription\">\r\n                    <span className=\"transcription-text\">\r\n                      {transcript} </span>\r\n                      {this.props.transcript.length ?\r\n                      <div className=\"pronunciation-clear-wrapper\" onClick = {this.clearTranscription}>\r\n    \t                  <span className=\"triangle\"> </span>\r\n    \t                  <span className=\"pronunciation-clear\">\r\n    \t                  \t<Icon name = 'delete'/>\r\n    \t                  </span>                  \t\r\n                      </div> : null\r\n                  }\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                    {this.state.showNavButtons ?\r\n                    <Fragment>\r\n                      <Button onClick={this.submitResponse} primary>Проверить</Button>\r\n                    </Fragment>:null\r\n                    }  \r\n                    {this.state.showContinueButton ?\r\n                      <Button onClick={this.callSubmit} primary>Продолжить</Button>:null\r\n                    }\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\" >\r\n                  <Card.Content>\r\n                    <Card.Header>Результаты</Card.Header>\r\n                    <Divider/>\r\n                    <Card.Description className=\"audio-list-container\"> \r\n                    {  (this.state.negativeSentences.length !== 0 ) ?\r\n                        <div className=\"answers-wrapper\">\r\n                          <List className=\"audio-list\">\r\n                          <h2>Верные ответы</h2>\r\n                          {this.state.positiveSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                          <List className=\"audio-list\">\r\n                          <h2>Неверные ответы</h2>\r\n                          {this.state.negativeSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                       </div> : \r\n                     <Message>\r\n                        <Message.Header>Поздравляем!</Message.Header>\r\n                        <p>\r\n                          Все задания выполнены правильно\r\n                        </p>\r\n                     </Message> \r\n                    }\r\n\r\n                    </Card.Description>\r\n                    <Card.Description className=\"results-wrapper\">\r\n                      <div className=\"positive-results-wrapper\"> \r\n                        <div className=\"positive-results\">\r\n                          {this.state.positiveSentences.length}\r\n                        </div>\r\n                        <Label>Верно</Label>                    \r\n                      </div>\r\n                      <div className=\"negative-results-wrapper\"> \r\n                        <div className=\"negative-results\">\r\n                          {this.state.negativeSentences.length}\r\n                        </div> \r\n                        <Label>Неверно</Label>                   \r\n                      </div>\r\n                    </Card.Description>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                      <Button primary>Продолжить</Button>\r\n                      <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default SpeechRecognition({autostart: false})(Pronunciation);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\n\r\nclass RecreateText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '3',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      categoryValue: ''\r\n\t\t}\r\n\t}\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.makeTextsVisible());\r\n      })\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();   \r\n  }   \r\n\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      })      \r\n    }\r\n\r\n\r\n    makeTextsVisible = () =>{\r\n      this.setState({\r\n        areTextsVisible: true        \r\n      }, () => this.createMenuItems());\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '5',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0\r\n      })\r\n    }\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        spllittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutes * 60);\r\n          clearInterval(this.state.intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent\r\n          })\r\n\r\n        }\r\n        this.state.secondsRemaining--;\r\n        this.state.totalSecondsSpent++;\r\n\r\n   \r\n    }\r\n    startCountDown = () => {\r\n        this.state.intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.state.secondsRemaining = time * 60;\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.spllittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.spllittedSentences[index];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = this.state.spllittedSentences.filter(item => item !== this.draggedItem);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ spllittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.spllittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n      }\r\n    }\r\n    if(wrongCount==0){\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =()=>{\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(this.state.intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent       \r\n      })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '3',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0        \r\n      }) \r\n  }\r\n\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    menuChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.menuChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null\r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.splitText}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.spllittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <h2>Время вышло</h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\nimport Speech from 'speak-tts'\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport { Howl } from \"howler\";\r\n\r\nclass RecreateAudioText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t      texts: [],\r\n\t      contentArray: [],\r\n\t      areTextsVisible: false,\r\n\t      isMenuVisible: false,\r\n\t      isSingleTextVisible: false,\r\n        options: [],\r\n        categoryValue: '',\r\n\t      isResultVisible: false,\r\n\t      isResultWrong: false,\r\n        title: '',\r\n\t      content: '',\r\n\t      image: null,\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('./audiotexts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        this.setState({ \r\n          texts,\r\n          areTextsVisible: true         \r\n        }, () => this.createMenuItems());\r\n      })        \r\n  }   \r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n    createTrack = (id) => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) => {\r\n          let currentTrack = new Howl({\r\n            src: \"tracks/\" + res.data.slice(id - 1, id),\r\n            html5: true,\r\n            volume: 0.5 / 10\r\n          });\r\n          this.setState({\r\n            currentTrack,\r\n            audio: res.data\r\n          }) \r\n        });    \r\n    }\r\n\r\n    readMore = (id) =>{\r\n\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id - 1].title;\r\n      let content = texts[id - 1].content;\r\n      let image = texts[id - 1].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.createTrack(id))       \r\n    }\r\n\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        categoryValue: '',\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0,\r\n        value: null        \r\n      })\r\n    }\r\n\r\n\r\n\r\n  showFinal = () =>{\r\n    this.setState({\r\n      isResultVisible: true  \r\n    })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,    \r\n      }) \r\n  }\r\n\r\n  playText = () => {\r\n    let playing = !this.state.playing;\r\n    let currentTrack = this.state.currentTrack;\r\n    if (playing) {\r\n      currentTrack.play();\r\n    } else {\r\n      currentTrack.pause();\r\n    }\r\n    this.setState({\r\n      playing,\r\n      currentTrack\r\n    })\r\n  }\r\n\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        splittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n          let intervalHandle = this.state.intervalHandle;\r\n          clearInterval(intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent,\r\n            intervalHandle\r\n          })\r\n\r\n        }\r\n        this.setState({\r\n          secondsRemaining: this.state.secondsRemaining - 1,\r\n          totalSecondsSpent: this.state.totalSecondsSpent + 1\r\n        })\r\n \r\n    }\r\n    startCountDown = () => {\r\n        let intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.setState({\r\n          intervalHandle,\r\n          secondsRemaining: time * 60\r\n        })\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.splittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.splittedSentences[index];\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n    let items = this.state.splittedSentences.filter(item => item !== this.draggedItem);\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ splittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.splittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let rightAnswers = 0;\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n        rightAnswers++;\r\n      }\r\n    }\r\n    if (wrongCount == 0) {\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes,\r\n      rightAnswers\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =() => {\r\n    this.checkSentences();\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let intervalHandle = this.state.intervalHandle;\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent,\r\n        intervalHandle        \r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }         \r\n              {(this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text display-none\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    {this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"pause\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    {!this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"play\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    <div className=\"buttons-wrapper\">\r\n\t                    <Button primary onClick={this.splitText}>Я прослушал</Button>\r\n           \t\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.splittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <div>\r\n                        <h2>Время вышло</h2>\r\n                        <h2>Правильно расставлено {this.state.rightAnswers} из {this.state.splittedSentences.length} предложений</h2> \r\n                      </div>                      \r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateAudioText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Input, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass InsertSpaces extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }   \r\n\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      inputContent: '',\r\n      textContent: '',\r\n      newContent: '',\r\n      image: null,\r\n      options: [],\r\n      textsLoaded: false,\r\n      categoryValue: ''\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n      }) \r\n  }\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let inputContent = texts[id].content;\r\n      inputContent = inputContent.replace(/\\s/g, '');\r\n      let image = texts[id].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image,\r\n        inputContent\r\n      })      \r\n    }\r\n\r\n\r\n  showFinal = () =>{\r\n      this.setState({\r\n        isResultVisible: true,\r\n        isTaskStarted: false\r\n   \r\n      })\r\n  }\r\n\r\nsetCaretPosition = (ctrl, pos) => {\r\n\r\n  if (ctrl.setSelectionRange) {\r\n    ctrl.focus();\r\n    ctrl.setSelectionRange(pos, pos);\r\n\r\n  } else if (ctrl.createTextRange) {\r\n    var range = ctrl.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n}\r\n\r\n  updateValue = (event) =>{\r\n  \tlet newContent = this.state.newContent;\r\n  \tlet target = event.target;\r\n    let str = event.target.value;\r\n    let indexOfSpace = event.target.value.indexOf(\" \") + 1;\r\n    let word = event.target.value.substr(0, indexOfSpace - 1);\r\n    let newstr = event.target.value.substring(indexOfSpace);\r\n    newContent = newContent + (word + ' ');\r\n      this.setState({\r\n      \tnewContent,\r\n        inputContent: newstr\r\n      }, () => this.setCaretPosition(target, 0));\r\n  }\r\n\r\n  startExercise = () => {\r\n    this.setState({\r\n      isTaskStarted: true,\r\n      isSingleTextVisible: false\r\n    })\r\n  }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.startExercise}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }             \r\n             {this.state.isTaskStarted ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <p className=\"single-text-card-description p-wrap fragment-description recreate-text inserted-text\">\r\n                      { this.state.newContent}\r\n                    </p>\r\n                    <Input className=\"insert-spaces-input\" value={this.state.inputContent} onChange={this.updateValue} />\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.showFinal}>Проверить</Button>\r\n                      </Button.Group>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <div className=\"recreate-results\">\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Исходный текст</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.content}</p>\r\n                      </div>\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Результат</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.newContent}</p>\r\n                      </div>                      \r\n                    </div>                                     \r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }    \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default InsertSpaces;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card, Embed, Modal,Image, Rating} from 'semantic-ui-react';\r\n//import LazyLoad from 'react-lazy-load';\r\n\r\nclass TED extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      isModalVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCAuUUnT6oDeKwE6v1NGQxug\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n      handleClick = (event) => {\r\n        this.setState({\r\n          currentPage: Number(event.target.id)\r\n        });\r\n      }\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos.items);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  showModal = () =>{\r\n    this.setState({\r\n      isModalVisible: true\r\n    })\r\n  }\r\n\r\n   render() {\r\n     \r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default TED;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass EngVid extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCKRBA9XfgzAtJodE4t8cUeg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default EngVid;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass BritishCouncil extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    let API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    let channelID = \"UCOtnu-KKoAbN47IuYMeDPOg\";\r\n    let maxResults = 36;\r\n    let url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default BritishCouncil;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image, Input, Icon} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Khan extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      currentComment: '',\r\n      likes: 0,\r\n      dislikes: 0,\r\n      comments: [\r\n        {\r\n          author: 'new2341',\r\n          comment: 'Just a typicall comment'\r\n        },\r\n        {\r\n          author: 'cauthor',\r\n          comment: 'nice! liked it'\r\n        }\r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UC4a-Gbdw7vOaccHmFo40b9g\";\r\n    var maxResults = 48;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,200)});\r\n    } \r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  addComment = () =>{\r\n    let comments = this.state.comments.slice();\r\n    let currentComment = this.state.currentComment;\r\n    let temp = {};\r\n    temp['author'] = 'blabla';\r\n    temp['comment'] = currentComment;\r\n    comments.unshift(temp);\r\n    console.log(comments);\r\n    this.setState({\r\n      comments: comments,\r\n      currentComment: ''\r\n    })\r\n  }\r\n\r\n  thumbsUp = () => {\r\n    let count = this.state.likes;\r\n    count++;\r\n    this.setState({\r\n      likes: count\r\n    })\r\n  }\r\n\r\n  thumbsDown = () => {\r\n    let count = this.state.dislikes;\r\n    count++;\r\n    this.setState({\r\n      dislikes: count\r\n    })\r\n  }\r\n\r\n  consoleState = ()=>{\r\n    console.log(this.state)\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Открыть</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header className=\"video-header-wrapper\">\r\n                    <div className=\"video-header\">{item.snippet.title}</div> \r\n                    <div className=\"video-likes\">\r\n                      <div className=\"video-likes-item first\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsUp}>\r\n                          <Icon name='thumbs up' size='large' />\r\n                        </span>\r\n                        <span>{this.state.likes}</span>\r\n                      </div>\r\n                      <div className=\"video-likes-item second\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsDown}>\r\n                          <Icon name='thumbs down' size='large' />\r\n                        </span>\r\n                        <span>{this.state.dislikes}</span>\r\n                      </div>\r\n                    </div> \r\n                  </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                    <div className=\"comment-section\">\r\n                      <div className=\"comment-section-input\">\r\n                        <Input placeholder='type...' value={this.state.currentComment} onChange={this.updateSearch} /><Button onClick={this.addComment}>Отправить</Button>\r\n                      </div>\r\n                      <div className=\"comment-section-comments\">\r\n                          {this.state.comments.map((item, index) =>\r\n                            <div className=\"single-comment\" key={index}>\r\n                              <h4>{item.author}</h4>\r\n                              <p>{item.comment}</p>                              \r\n                            </div>\r\n                           )}\r\n                      </div>\r\n                    </div>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <h4>{item.snippet.title}</h4>                 \r\n                  <Image src={item.snippet.thumbnails.high.url} />\r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Khan;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Coursera extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCZ50rYSkYQG31YDEJm9Di_g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Coursera;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyFallon extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UC8-Th83bH_thdKZDJCrn88g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyFallon;","import React, { Component, Fragment } from 'react';\r\nimport { Embed,Modal,Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyKimmel extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCa6vGFO9ty8v5KZJXQxdhaw\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyKimmel;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass ConanOBrien extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCi7GJNg51C3jgmYTUwqoUXA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n      axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default ConanOBrien;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Ellen extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCp0hYYBW6IMayGgR-WeoCvQ\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Ellen;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JamesCorden extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCJ0uqCI0Vqr2Rrt1HseGirg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JamesCorden;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass SethMeyers extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCVTyTA7-g9nopHeHbeuvpRA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default SethMeyers;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass StephenColbert extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCMtFAi84ehTSYSE9XoHefig\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default StephenColbert;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass TextsList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      textsLoaded: false,\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content))\r\n          this.setState({ \r\n            texts: texts,\r\n            contentArray: contentArray\r\n          }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n        })\r\n    }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )         \r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {!this.state.isSingleTextVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }\r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card text-item\">\r\n                  <Card.Content>\r\n                    <Image src={this.state.image} />\r\n                    <Card.Header>{this.state.title}</Card.Header>\r\n                    <Card.Description className=\"single-text-card-description p-wrap\">\r\n                      { /*this.state.content.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase() */ this.state.content}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n                  <Button onClick={this.backToTexts} >Вернуться</Button>\r\n                </Card>:null\r\n              }          \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default TextsList;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    constructMenu = () =>{\r\n      let options = [];\r\n      this.state.words.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n      })    \r\n    }  \r\n\r\n    setValue = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.setValue() )  \r\n\r\n    readMore = (id) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let currentColor = colors[Math.floor(Math.random()*colors.length)];\r\n      let activeTargetTitle = this.state.words.find(x => x.id === id).name;\r\n\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(false);          \r\n      \t} \r\n      }\r\n\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords,\r\n        currentColor,\r\n        arrayOfButtons,\r\n        iconsArray,\r\n        disabled      \t\r\n      })\r\n    }\r\n\r\n\r\n    addToList = (id) =>{\r\n      let addedItems = this.state.addedItems.slice();\r\n      let currentWords = this.state.currentWords.slice();\r\n      let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let iconsArray = this.state.iconsArray.slice();\r\n      let selected = currentWords.find(x => x.id === id);      \r\n      arrayOfButtons[id] = \"Добавлено !\";\r\n      iconsArray[id] = false;\r\n      disabled[id] = \"disabled\";\r\n      addedItems.push(selected);\r\n      this.setState({\r\n      \taddedItems,\r\n      \tarrayOfButtons,\r\n      \ticonsArray,\r\n      \tdisabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      let sortedByNameUp = this.state.sortedByNameUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByNameUp: !sortedByNameUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByTranslationUp: !this.state.sortedByTranslationUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n   \tlet addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    arrayOfButtons[id] = \"Добавить\";    \r\n    iconsArray[id] = true;\r\n    disabled[id] = false;\r\n \t  addedItems.splice(addedItems.findIndex(function(item){\r\n        return item.id === id;\r\n    }), 1);\r\n    this.setState({ addedItems, disabled, iconsArray, arrayOfButtons });\r\n   }\r\n\r\n   deleteAll = () => {\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n    let addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    addedItems = [];\r\n    for (var i = 0; i < disabled.length; i++) {\r\n      disabled[i] = false;\r\n      arrayOfButtons[i] = \"Добавить\";\r\n      iconsArray[i] = true;\r\n    }\r\n    this.setState({ addedItems, arrayOfButtons, iconsArray, disabled  })    \r\n   }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"#3281F0\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      contentLoaded: false      \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n          .then(axios.spread((firstResponse, secondResponse) => { \r\n          let words = firstResponse.data;\r\n          let allWords = secondResponse.data;\r\n          let contentArray = [];\r\n          this.setState({\r\n            allWords,\r\n            words,\r\n            contentArray,\r\n            contentLoaded: true\r\n          }, () => this.constructMenu());\r\n       }))\r\n   }\r\n\t\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.contentLoaded ?\r\n            <div className=\"texts-wrapper\">\r\n              <Menu className=\"texts-menu decks-menu\" vertical>\r\n                {this.state.isDropdownVisible ? \r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item> : null\r\n                }\r\n                <Menu.Item className=\"no-top-padding added-title\" style = {{ backgroundColor: this.state.currentColor}} >\r\n                  {this.state.addedItems.length ? \"Добавленные\" : \"Добавленных пока нет\"}\r\n                </Menu.Item>\r\n                <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                  {(this.state.addedItems.length) ? \r\n                  <ul className=\"decks-added-wrapper\">\r\n                    {this.state.addedItems.map((item,index)=> \r\n                      <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                        <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem.bind(this, item.id)} ><Icon name='trash alternate' /></span></li>\r\n                    )}\r\n                  </ul> : null\r\n                } \r\n                </Menu.Item>\r\n                { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n                <Menu.Item className=\"decks-button-wrapper\" >\r\n                   <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Изучить <Icon name='book' className=\"nav-icon-left\" /> </Button>\r\n                   <Button onClick={this.deleteAll} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Удалить <Icon name='trash alternate' className=\"nav-icon-left\" /> </Button>\r\n                </Menu.Item> : null\r\n                }           \r\n              </Menu>           \r\n                {(this.state.words.length && this.state.areTextsVisible) ? \r\n                <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n                  {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                    <Card key={index} className=\"decks-single-card\">\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"decks-description\">\r\n                              <h2>{item.name}</h2>\r\n                              <h3>{item.number} слов</h3>\r\n                              <Button onClick={this.readMore.bind(this, item.id)} primary className=\"decks-button\" >Открыть</Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  )}\r\n                </Card.Group> : null\r\n               }\r\n               {this.state.isSingleTextVisible ?\r\n                <div className=\"decks-outer-wrapper\">\r\n                <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                  <Menu.Item name='byName'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                      по имени \r\n                      {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item name='byTranslation'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                      по переводу \r\n                      {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item style={{float: \"right\"}} name='close'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.setStateOnStart} title=\"Назад\">\r\n                      <Icon name='window close outline' className=\"nav-icon-left\" /> \r\n                    </Button>\r\n                  </Menu.Item>  \r\n                </Menu>\r\n                  <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                    {this.state.currentWords.map((item, index) => \r\n                      <Card key={index}>\r\n                        <Card.Content>\r\n                          <div className=\"texts-image-wrapper decks-image\">\r\n                            <Image src={item.image} />\r\n                            <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                                <h3>{item.name}</h3>\r\n                                <h4>{item.translation}</h4>\r\n                                <Button className=\"decks-button-add\" onClick={this.addToList.bind(this, item.id)} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                  {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                  } \r\n                                  {this.state.arrayOfButtons[index]}\r\n                                </Button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Card>\r\n                     )}\r\n                  </Card.Group> \r\n                </div> : null}       \r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass AudioList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      categoryArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"navy\",\"maroon\",\"magenta\",\"green\",\"teal\",\"tomato\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      currentAudio: null,\r\n      playState: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n              .then(axios.spread((firstResponse, secondResponse) => { \r\n              let words = firstResponse.data;\r\n              let allWords = secondResponse.data;\r\n              let contentArray = [];\r\n              let currentAudio = new Audio('audio/Baskervilles1.mp3');\r\n          this.setState({\r\n            allWords: allWords,\r\n            words: words,\r\n            contentArray: contentArray,\r\n            currentAudio: currentAudio\r\n          }, () => this.consoleParams() );\r\n       }))\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.words.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n        const unique = arr\r\n            .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      console.log(categoryValue);\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )  \r\n\r\n    readMore = (e) =>{\r\n      let arrayOfButtons = [];      \r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let target = e.target.parentElement;\r\n      let color = colors[Math.floor(Math.random()*colors.length)];\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].textContent;\r\n      for (var i = 0; i < allWords.length; i++) {\r\n        if(allWords[i][\"category\"] === activeTargetTitle ){\r\n          currentWords.push(allWords[i])\r\n        } \r\n      }\r\n\r\n      for (var i = 0; i < currentWords.length; i++) {\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(\"\");\r\n      }\r\n      \r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords: currentWords,\r\n        currentColor: color,\r\n        arrayOfButtons: arrayOfButtons,\r\n        iconsArray: iconsArray,\r\n        disabled: disabled        \r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n\r\n    addedFirst = () =>{\r\n      console.log(this.state);\r\n      let state = this.state.sortedByTranslationUp;\r\n      this.setState({\r\n        addedUp: !state\r\n      })\r\n    }\r\n\r\n  //сортировка по имени\r\n    sortByName = () =>{\r\n        let state = this.state.sortedByNameUp;\r\n        console.log(\"current words\", this.state.currentWords);\r\n      const words = this.state.currentWords.slice();\r\n      let newWords = words;\r\n      if(this.state.isOldestFirst){\r\n        newWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n      } else {\r\n        newWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n      }\r\n      console.log(\"new words\", newWords);\r\n      this.setState({\r\n        isOldestFirst: !this.state.isOldestFirst,\r\n        currentWords: newWords,\r\n        sortedByNameUp: !state      \r\n      })    \r\n    }\r\n\r\n    startPlayer = () =>{\r\n      let currentState = this.state.playState;\r\n      this.setState({\r\n        playState: !currentState\r\n      }, () => this.playAudio() )\r\n    }\r\n\r\n    playAudio = () =>{\r\n      let audio = this.state.currentAudio;\r\n      if(this.state.playState){\r\n        audio.play();\r\n      }\r\n      else{\r\n        audio.pause();\r\n      }\r\n      this.setState({\r\n        currentAudio: audio\r\n      })\r\n    }\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          <Menu className=\"texts-menu decks-menu\" vertical>\r\n            {this.state.isDropdownVisible ? \r\n                <Menu.Item name='inbox' >\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item> : null\r\n            }\r\n              <Menu.Item>\r\n                <Button onClick={this.startPlayer}>\r\n                {this.state.playState ?\r\n                 <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  }Listen</Button>\r\n\r\n              </Menu.Item>\r\n              <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                {(this.state.addedItems.length) ? \r\n                <ul className=\"decks-added-wrapper\">\r\n                  {this.state.addedItems.map((item,index)=> \r\n                    <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                      <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem} ><Icon name='trash alternate' size='' /></span></li>\r\n                  )}\r\n                </ul> : null\r\n              } \r\n              </Menu.Item>\r\n              { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n              <Menu.Item className=\"decks-button-wrapper\" >\r\n                 <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} >Изучить</Button>\r\n              </Menu.Item> : null\r\n              }           \r\n            </Menu>           \r\n              {(this.state.words.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n              {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper decks-image\">\r\n                      <Image src={item.image} />\r\n                      <div className=\"decks-description\">\r\n                          <h2>{item.name}</h2>\r\n                          <h3><span>{item.number}</span></h3>\r\n                          <Button onClick={this.readMore} primary className=\"decks-button\" >Открыть</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ?\r\n              <div className=\"decks-outer-wrapper\">\r\n              <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                <Menu.Item name='byName'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                    по имени \r\n                    {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item name='byTranslation'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                    по переводу \r\n                    {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item style={{float: \"right\"}} name='close'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.backToDecks}>\r\n                    <Icon name='window close outline' size='small' className=\"nav-icon-left\" /> \r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n                <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                  {this.state.currentWords.map((item, index) => \r\n                    <Card key={index}>\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                              <h3>{item.name}</h3>\r\n                              <h4>{item.translation}</h4>\r\n                              <Button className=\"decks-button-add\" onClick={this.addToList} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                } \r\n                                {this.state.arrayOfButtons[index]}\r\n                              </Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                   )}\r\n                </Card.Group> \r\n              </div> : null}\r\n       \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default AudioList;","import React, { Component, Fragment } from 'react';\r\nimport {  List, Icon, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      email: \"user1233\",\r\n      password: 69691231,\r\n      colorValue: \"#3281F0\",\r\n      colorOptions: [{ key: 1, value: \"#3281F0\", text: \"#3281F0\"}, { key: 2, value: \"red\", text: \"red\"}]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      \r\n  }   \r\n\r\n  changeColor = (e, { value }) => {\r\n    console.log(e);\r\n    this.setState({ colorValue: value })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"settings-wrapper\">\r\n            <div className=\"settings-container\">\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Цветовая схема</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Громкость звука</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input, Dropdown, TextArea, Form, Checkbox ,Icon, Rating, List } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      books: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areBooksVisible: true,\r\n      isMenuVisible: true,\r\n      isPreviewVisible: false,\r\n      isSingleBookVisible: false,\r\n      isBookNavPanelVisible: false,\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n      description: null,\r\n      image: null,\r\n      contentArray: [],\r\n      currentBook: '',\r\n      currentPage: '',\r\n      currentPageIndex: 0,\r\n      currentArrayBooks: [],\r\n      currentIndexArray: [],\r\n      bookHTML: '',\r\n      parsedBook: null,\r\n      bookPages: [],\r\n      bookValue: null,\r\n      bookVal: '',\r\n      currentComment: '',\r\n      currentName: '',\r\n      currentEmail: '',\r\n      likes: 0,\r\n      errors: {},\r\n      checkedItems: new Map(),\r\n      checked: false,\r\n      audiobooks: [],\r\n      currentAudio: null,\r\n      newAudio: null,\r\n      playState: false,\r\n      currentAudioId: 0,\r\n      thumbArray: [],\r\n      scrollForwardState: true,\r\n      scrollBackwardState: false,\r\n      currentVolume: 50,\r\n      currentRange: 0,\r\n      currentDuration: null,\r\n      minutes: 0,\r\n      hours: 0,\r\n      seconds: 0,\r\n      rating: 0,\r\n      maxRating: 5\r\n\r\n    }\r\n  }\r\n\r\n  handleCheckChange = (e) => {\r\n    const item = e.target.name;\r\n    const isChecked = e.target.checked;\r\n    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/books.json')\r\n        .then(res => {\r\n          let books = res.data;\r\n          let contentArray = [];\r\n          let thumbArray = [];\r\n          books.map((item, index) =>{ \r\n            contentArray.push(item.content); \r\n            thumbArray.push(item.image); \r\n          })\r\n          this.setState({ \r\n            books,\r\n            contentArray\r\n          }, () => this.createMenu() );\r\n        })\r\n    }\r\n\r\n    callFunctions = () =>{\r\n    \tthis.createMenu();\r\n    }\r\n\r\n    createMenu = () =>{\r\n      let options = [];\r\n      this.state.books.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.genre, \r\n                        value: item.genre \r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    selectValue = () =>{\r\n      var bookVal = this.state.bookValue;\r\n      this.setState({\r\n        bookVal\r\n      })  \r\n    }\r\n\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue())         \r\n\r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    } \r\n\r\n\r\n\t  addComment = () =>{\r\n\t    let comments = this.state.comments.slice();\r\n\t    let errors = this.state.errors;\r\n\t    let currentComment = this.state.currentComment;\r\n\t    let currentName = this.state.currentName;\r\n\t    let currentEmail = this.state.currentEmail;\r\n\t    let temp = {};\r\n\t    if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n\t\t    temp['author'] = currentName;\r\n\t\t    temp['comment'] = currentComment;\r\n\t\t    comments.unshift(temp);\r\n\t\t    this.setState({\r\n\t\t      comments,\r\n\t\t      currentName: '',\r\n\t\t      currentComment: '',\r\n\t\t      currentEmail: ''\r\n\t\t    })\r\n\t    }\r\n\t    else if (currentName == ''){\r\n\t    \terrors['name'] = \"Заполните поле имени!\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors\r\n\t    \t})\r\n\t    }\r\n\t    else if(currentComment == ''){\r\n\t    \terrors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors\r\n\t    \t})\t    \t\r\n\t    }\r\n\t    else if(currentEmail == ''){\r\n\t    \terrors['email'] = \"Заполните поле почты\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors\r\n\t    \t})\t    \t\r\n\t    }\r\n\r\n\t  }\r\n\r\n    updateComment = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,500)});\r\n    }\r\n\r\n\r\n    updateName = (event) =>{\r\n      this.setState({currentName: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateEmail = (event) =>{\r\n      this.setState({currentEmail: event.target.value.substr(0,500)});\r\n    }      \r\n\r\n    checkChange = (e) =>{\r\n      this.setState({\r\n      \tchecked: !this.state.checked\r\n      })\r\n    } \r\n\r\n    handleRate = (e, { rating, maxRating }) => this.setState({ rating, maxRating })\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu></TopMenu>\r\n        <div className=\"texts-wrapper\">\r\n        {this.state.isMenuVisible ?\r\n          <Menu className=\"texts-menu\" vertical>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите жанр'\r\n                fluid\r\n                value={this.state.value} \r\n                key={this.state.options.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleChange}\r\n                options={this.state.options} \r\n              />\r\n            </Menu.Item>\r\n          </Menu>:null\r\n        }\r\n            {(this.state.books.length && this.state.areBooksVisible) ? \r\n            <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n            {this.state.books.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.genre) &&\r\n              <Card key={index} className=\"single-book\">\r\n                <Card.Content>\r\n                  <div className=\"texts-image-wrapper books-image-wrapper\">\r\n                    <Image src={item.image} />\r\n                  </div>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-author\">{item.author}</span></Card.Header>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-title\">{item.title}</span> <span className=\"books-genre\">{item.genre.map((genre, ind) => <span>{`#${genre}`}</span>)}</span></Card.Header>\r\n                  <div className=\"books-information\">\r\n                    <div className=\"books-views\">\r\n                      <span><Icon name='eye' size='' /> </span>\r\n                      <span>1234</span>\r\n                    </div>\r\n                    <div className=\"books-favourites\">\r\n                      <span><Icon name='heart' size='' /></span> \r\n                      <span>39</span>\r\n                    </div>\r\n                    <Rating className = \"books-rating\" maxRating={5} onRate={this.handleRate} />\r\n                  </div>\r\n                  <Card.Description>\r\n                    {item.content.substr(0,250) + ' ...'}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button primary><Link className=\"training-link books-link\"  to={{ pathname: `/books/${item.id}`,  query: { item } }}>Читать</Link></Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n           }\r\n           {this.state.isSingleBookVisible ?\r\n           \t<Fragment>\r\n              <Menu className=\"texts-menu audio-menu\" vertical>\r\n                <Menu.Item name='inbox' >\r\n                  <List className=\"audiobooks-list\">\r\n                  {this.state.audiobooks.map((item,index) =>\r\n                    <List.Item key={index}>\r\n                      <div className=\"audiobooks-image-wrapper\">\r\n                        <Image src={this.state.image} />\r\n                      </div>\r\n                      <div className=\"audiobooks-content-wrapper\">\r\n                         <div className=\"audio-name-wrapper\">\r\n                           <h4>Chapter {index + 1} </h4>\r\n                           <p>{this.state.title}</p>\r\n                         </div>\r\n                         <div className=\"audio-range-control\">\r\n                            <input id=\"range-control\" type=\"range\" value={this.state.currentRange} min=\"0\" max={this.state.currentDuration} step=\"1\" onInput={this.setRange} onChange={this.setRange}></input>                           \r\n                         </div>\r\n                         <div className=\"audiobooks-controls-wrapper\">\r\n                            <span className=\"audiobooks-icon\" onClick={this.startPlayer}>\r\n                              {this.state.playState ?\r\n                                <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  \r\n                              } \r\n                           </span>\r\n                            <span className=\"audiobooks-icon\" onClick={this.scrollBackward}>\r\n                                <Icon name='backward' size='' /> \r\n                           </span>                            \r\n                            <span className=\"audiobooks-icon\" onClick={this.scrollForward}>\r\n                                <Icon name='forward' size='' />\r\n                           </span>\r\n                           <div className=\"audiobooks-icon audiobooks-input\">\r\n                             <Icon name='volume up' size='' />\r\n                             <input id=\"vol-control\" type=\"range\" value={this.state.currentVolume} min=\"0\" max=\"100\" step=\"1\" onInput={this.setVolume} onChange={this.setVolume}></input>\r\n                             <span className=\"audiobooks-time\">{this.state.hours}.{this.state.minutes}.{this.state.seconds}</span>\r\n                           </div>\r\n                         </div>\r\n                       </div>\r\n                    </List.Item>\r\n                  )}\r\n                  </List>\r\n                </Menu.Item>\r\n              </Menu>            \r\n      \t\t\t\t<Card className=\"single-text-card\">\r\n      \t\t\t\t\t<Card.Content>\r\n      \t\t\t\t\t<div className=\"book-index\">\r\n                  <span className=\"nav-icon-close\" onClick={this.backToBooks} >\r\n                    <Icon name='window close outline' size=\"big\"/>\r\n                  </span>\r\n      \t\t\t\t\t\t<ul className=\"pagination-container\">\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.prevButton}><Icon name='arrow left' size='small'  className=\"nav-icon-right\"/> Previous page</li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.nextButton}>Next page <Icon name='arrow right' size='small' className=\"nav-icon-left\" /> </li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.chapterIndex}>Pages index \r\n                      {this.state.isBookNavPanelVisible ?\r\n                      <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  } \r\n                    </li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.downloadBook}>Download  <Icon name='download' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t\t</ul>           \t\t\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t  <Card.Header className=\"single-book-title\">{this.state.title}</Card.Header>\r\n      \t\t\t\t\t  <Card.Description className=\"single-text-card-description\">\r\n      \t\t\t\t\t    <div className=\"p-wrap\">\r\n      \t\t\t\t\t      {this.state.currentPage}\r\n      \t\t\t\t\t    </div>\r\n      \t\t\t\t\t  </Card.Description>\r\n      \t\t\t\t\t</Card.Content>\r\n      \t\t\t\t\t<ul className=\"pagination-container\">\r\n      \t\t\t\t\t\t{this.renderFirstButton()}\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.scrollToTop}>Top <Icon name='arrow up' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.prevButton}><Icon name='arrow left' size='small'  className=\"nav-icon-right\"/> Previous page </li>\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.nextButton}>Next page <Icon name='arrow right' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t    {this.renderLastButton()}                \t\r\n      \t\t\t\t\t</ul>\r\n      \t\t\t\t</Card>\r\n      \t\t\t</Fragment> : null\r\n            }          \r\n        </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Materials extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/video.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/videos\">Видео</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card> \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/words.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/decks\">Наборы слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/texts.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/texts\">Обучающие тексты</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>             \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/books.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/books\">Книги</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n                                                                                                                                                             \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Materials;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Checkbox,Icon, Form, Divider, Label } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport ReactDOM from 'react-dom';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\n\r\nclass Example extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      categoryArray: [],\r\n      value: null,\r\n      areTestsVisible: true,\r\n      isSingleTestVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      value: '',\r\n      currentValue: '',\r\n      currentTest: [],\r\n      activeTest: null,\r\n      curIndexTest: 0,\r\n      curIndexCheckbox: 0,\r\n      correctResults: [],\r\n      correctAnswers: [],\r\n      incorrectAnswers: [],\r\n      isMenuVisible: true,\r\n      isTooltipVisible: false,\r\n      currentColor: null\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/tests.json')\r\n        .then(res => {\r\n          let tests = res.data;\r\n          this.setState({ \r\n            tests: tests\r\n          }, () => this.getMenuParams());\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (prevState.currentTest !== this.state.currentTest) {\r\n        \r\n      }\r\n    }\r\n\r\n    getMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.tests.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.title, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n    testChange = (e) =>{\r\n      let parentid = e.target.getAttribute(\"parentid\");   \r\n      let id = e.target.getAttribute(\"id\");\r\n      let currentTest = this.state.currentTest.slice();\r\n      let currentState = currentTest[parentid][id];\r\n      const arr = new Array(3).fill(false);\r\n      arr[id] = true;\r\n      currentTest[parentid] = arr;\r\n      this.setState({\r\n        currentTest\r\n      })\r\n    }\r\n\r\n\r\n    selectTest = (testId) =>{\r\n      let tests = this.state.tests.slice();\r\n      let activeTest = tests.find(x => x.id === testId);\r\n\r\n      let currentTest = [];\r\n      let testItem = [];\r\n      let correctResults = [];\r\n\r\n      activeTest.tasks.map((item, index) => correctResults.push(item.correct_answer));      \r\n      for (var i = 0; i < 3; i++) {\r\n        testItem.push(false);\r\n      }\r\n      for (var i = 0; i < activeTest.tasks.length; i++) {\r\n        currentTest.push(testItem);\r\n      }\r\n      this.setState({\r\n        activeTest,\r\n        currentTest,\r\n        correctResults\r\n      }, () => this.setState({\r\n          areTestsVisible: false,\r\n          isSingleTestVisible: true,\r\n      }));\r\n    }\r\n\r\n    backToTests = () =>{\r\n      this.setState({\r\n        areTestsVisible: true,\r\n        isSingleTestVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n    \t\tcurrentTest: [],\r\n    \t\tcurIndexTest: 0,\r\n    \t\tcurIndexCheckbox: 0,\r\n    \t\tcorrectResults: [],\r\n    \t\tcorrectAnswers: [],\r\n    \t\tincorrectAnswers: [],\r\n      })\r\n    }\r\n\r\n    checkResults = () =>{\r\n    \tlet resultsArray = this.state.currentTest.slice();\r\n    \tlet correctResults = this.state.correctResults.slice();\r\n    \tlet finalResults = [];\r\n    \tlet correctAnswers = [];\r\n    \tlet incorrectAnswers = [];\r\n    \tfor (var i = 0; i < resultsArray.length; i++) {\r\n    \t\tlet item = resultsArray[i];\r\n    \t\tfor (var j = 0; j < item.length; j++) {\r\n    \t\t\tif (item[j]) {\r\n    \t\t\t\tfinalResults.push(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n      if(finalResults.length == this.state.activeTest.tasks.length) {\r\n        for (var i = 0; i < finalResults.length; i++) {\r\n          if(correctResults[i] === finalResults[i]){\r\n            correctAnswers.push(i)\r\n          }\r\n          else{\r\n            incorrectAnswers.push(i)\r\n          }\r\n        }\r\n        this.setState({\r\n          isResultVisible: true,\r\n          isSingleTestVisible: false,\r\n          correctAnswers,\r\n          incorrectAnswers,\r\n          isMenuVisible: false,\r\n          isTooltipVisible: false\r\n        })                \r\n      }\r\n      else{\r\n        this.setState({\r\n          isTooltipVisible: true\r\n        })\r\n      }\r\n \t\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {this.state.areTestsVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n                <Menu.Item name='inbox'>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n          {(this.state.tests.length && this.state.areTestsVisible) ? \r\n            <Card.Group className=\"texts-cards tests-cards\" itemsPerRow={3} >\r\n              {this.state.tests.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&            \r\n              <Card key={index} className=\"test-card test-item\" style = {{boxShadow: `0 1px 3px 0 ${item.color}, 0 0 0 1px ${item.color}` }} >\r\n                <Card.Content>\r\n                  <Card.Header className=\"tests-card-title\" style = {{backgroundColor: item.color}} >\r\n                  \t<h3>{item.difficulty}</h3>\r\n                  \t<span>{item.title}</span>\r\n                  </Card.Header>\r\n                  <Card.Description className=\"tests-card-description\">\r\n                     <p className=\"tests-card-description-line\">Количество заданий - <span className=\"tests-card-description-txt\">{item.number}</span></p>\r\n                     <p className=\"tests-card-description-line\">Максимальное кол-во баллов - <span className=\"tests-card-description-txt\">{item.totalScore}</span></p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={ () => {this.selectTest(item.id)} /*this.selectTest.bind(this, item.id) */} style = {{backgroundColor: item.color }} >Начать тест</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n          }\r\n         {this.state.isSingleTestVisible ? \r\n            <Card className=\"single-text-card tests-wrapper\">\r\n              <h1>\r\n              \t{this.state.activeTest.title}\r\n              \t<span onClick={this.backToTests} ><Icon name='window close outline'/></span>\r\n              </h1>\r\n              <Card.Content>\r\n                {this.state.activeTest.tasks.slice().map((item, index) =>\r\n                    <Card.Description key={item.id} id={index} className=\"single-text-card-description\">\r\n                    <h3 >{item.sentence}</h3>\r\n                    <Form className=\"single-test-form\" >\r\n                      {item.variants.map((param, ind) => \r\n                        <label className=\"test-label\" key={ind}>\r\n                          <input type=\"checkbox\" \r\n                            id={ind}\r\n                            parentid={item.id}\r\n                            label={param}\r\n                            name='checkboxRadioGroup'\r\n                            value={item}\r\n                            checked={this.state.currentTest[item.id][ind]}\r\n                            onChange={this.testChange}/>\r\n                            {param}                          \r\n                        </label>\r\n                      )}                                             \r\n                    </Form>                      \r\n                  </Card.Description>\r\n                )}\r\n              </Card.Content>\r\n              {this.state.isTooltipVisible ?\r\n                <div className=\"tests-tooltip\">\r\n                    <h4>Заполните все поля!</h4>               \r\n                </div> : null\r\n              }\r\n              <div className=\"tests-button-wrapper decks-button-wrapper\">\r\n              \t<Button onClick={this.checkResults} >Принять</Button>                  \t\r\n              </div>\r\n            </Card>:null\r\n          }\r\n          {this.state.isResultVisible ? \r\n            <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper test-final\" >\r\n             <Card className=\"card-training test-result-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n    \t\t\t\t\t\t  <div className=\"grades-results-wrapper\">\r\n    \t\t\t\t\t\t\t  <h3>Количество правильных ответов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n                    <h3>Количество набранных баллов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n    \t\t\t\t\t\t  </div>\t\t                  \r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.correctAnswers.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.incorrectAnswers.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.backToTests}>Назад к тестам</Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group> : null \r\n          }       \r\n          </div>\r\n        </div>  \r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Example;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Rightwrong extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isImageVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false         \r\n      }, () => this.initialLoad())\r\n   } \r\n\r\n   initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n \r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }  \r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          console.log(result);               \r\n          this.setState({ \r\n            words, \r\n            result,\r\n            currentWord });\r\n        })\r\n   }\r\n\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (response) => {\r\n      if (response) {\r\n        let positiveWords = this.state.positiveWords.slice();        \r\n        positiveWords.push(this.state.currentWord); \r\n        this.setState({ positiveWords })       \r\n      } else {\r\n          let negativeWords = this.state.negativeWords.slice();          \r\n          negativeWords.push(this.state.currentWord);\r\n          this.setState({ negativeWords })          \r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true\r\n      })      \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id =this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < this.state.result.length){\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];     \r\n        this.setState({\r\n          id,\r\n          currentWord, \r\n          isImageVisible: false,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n      })\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Верно-неверно</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent}>Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"rightwrong-timer\"> \r\n                </Card.Header>\r\n                <Card.Header className=\"rightwrong-header\">{this.state.currentWord.name} \r\n                </Card.Header>                \r\n                <Card.Header>{this.state.currentWord.translation} \r\n                </Card.Header>\r\n                <div className=\"rightwrong-image-wrapper\">\r\n                {this.state.isImageVisible ?\r\n                  <Image src={this.state.currentWord.image} className=\"rightwrong-image\"></Image> : null               \r\n                }\r\n                </div>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} className=\"red false-button\" primary>Неверно</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} className=\"green true-button\" primary>Верно</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {(this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Rightwrong;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[1].main_points;\r\n          const fullData = res.data[0].rules[1].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[2].main_points;\r\n          const fullData = res.data[0].rules[2].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[3].main_points;\r\n          const fullData = res.data[0].rules[3].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[4].main_points;\r\n          const fullData = res.data[0].rules[4].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[5].main_points;\r\n          const fullData = res.data[0].rules[5].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[6].main_points;\r\n          const fullData = res.data[0].rules[6].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFuturePerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[8].main_points;\r\n          const fullData = res.data[0].rules[8].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPastPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[7].main_points;\r\n          const fullData = res.data[0].rules[7].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[9].main_points;\r\n          const fullData = res.data[0].rules[9].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[10].main_points;\r\n          const fullData = res.data[0].rules[10].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass GrammarFuturePerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[11].main_points;\r\n          const fullData = res.data[0].rules[11].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfectContinuous;","import React,{Component} from 'react';\r\n//import './audioplayer.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\nimport jsmediatags from \"jsmediatags\";\r\nimport { Howl } from \"howler\";\r\nimport axios from 'axios';\r\n\r\n//import {bindActionCreators} from 'redux';\r\n//import actions from './actions/index';\r\n\r\n//import {connect} from 'react-redux';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: [],\r\n      soundVolume: 5,\r\n      playing: false,\r\n      muted: false,\r\n      currentTrack: null,\r\n      currentTrackLength: null,\r\n      currentTrackInfo: null,\r\n      currentTrackPicture: null,\r\n      currentId: 4,\r\n      order: \"consecutive\",\r\n      duration: 0,\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n      currentDuration: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\",\r\n      tracksVisible: true,\r\n      interval: null,\r\n      progress: 0,\r\n      decodingFinished: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      currentId: 1\r\n    }, () => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) =>\r\n          this.setState({ audio: res.data })\r\n        );       \r\n    }) \r\n  }\r\n\r\n/*\r\n  componentDidUpdate(prevProps){\r\n    let currentTrack = this.state.currentTrack;\r\n    if(prevProps.store.playing !== this.state.playing) { \r\n      this.setState({playing: this.state.playing})\r\n      if (this.state.playing === false) {\r\n        currentTrack.pause();\r\n      } else {\r\n        let interval = this.state.interval;\r\n        currentTrack.play();\r\n        interval = setInterval(() => this.startCycle(), 1000);\r\n        this.setState({ interval });\r\n      }\r\n    }    \r\n\r\n    if(prevProps.store.currentId !== this.state.currentId) { \r\n      if (currentTrack) {\r\n        currentTrack.pause();\r\n      }   \r\n      this.setState({\r\n        currentTrack\r\n      }, () => this.callFunctions(this.state.currentId));\r\n    }\r\n  }\r\n*/\r\n  callFunctions = () => {\r\n    let id = this.state.currentId;\r\n    let currentTrack = new Howl({\r\n      src: \"tracks/\" + this.state.audio.slice(id, id + 1),\r\n      html5: true,\r\n      volume: this.state.soundVolume / 10\r\n    });\r\n    var duration, minutes, seconds, currentMinutes, currentSeconds;\r\n    currentTrack.on(\"load\", () => {\r\n      duration = currentTrack.duration();\r\n      minutes = Math.floor(duration / 60);\r\n      seconds = Math.floor(duration - minutes * 60);\r\n      minutes = (\"0\" + minutes).slice(-2);\r\n      seconds = (\"0\" + seconds).slice(-2);\r\n      currentMinutes = \"00\";\r\n      currentSeconds = \"00\";\r\n      this.setState({ minutes, seconds, duration, currentTrack }, () => {\r\n        this.setState({ decodingFinished: true });        \r\n        if (this.state.playing) {\r\n          this.continuePlay();\r\n        } \r\n      });\r\n    });\r\n    this.readTags(id);\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      progress: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\"\r\n    })\r\n  }\r\n\r\n  readTags = (id) => {\r\n    let track = this.state.audio[id];\r\n    jsmediatags.read(\r\n      \"http://localhost:3000/tracks/\" + `${this.state.audio[id]}`,\r\n      {\r\n        onSuccess: (tag) => {\r\n          this.setState({ currentTrackInfo: tag }, () => {\r\n            this.decodeTrackInfo();\r\n          });\r\n        },\r\n        onError: (error) => {\r\n          console.log(\":(\", error.type, error.info);\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  decodeTrackInfo = () => {\r\n    let title = this.state.currentTrackInfo.tags.title;\r\n    let artist = this.state.currentTrackInfo.tags.artist;\r\n    let currentTrackPicture;\r\n    if (this.state.currentTrackInfo.tags.picture) {\r\n      const { data, type } = this.state.currentTrackInfo.tags.picture;\r\n      const byteArray = new Uint8Array(data);\r\n      const blob = new Blob([byteArray], { type });\r\n      currentTrackPicture = URL.createObjectURL(blob);\r\n    }\r\n    this.setState({\r\n      currentTrackPicture,\r\n      currentTrackTitle: title,\r\n      currentTrackArtist: artist\r\n    })\r\n  };\r\n\r\n  playMusic = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let interval = this.state.interval;\r\n    if (this.state.playing) {\r\n      currentTrack.pause();\r\n      //this.props.actions.changePlayingState(false);\r\n      clearInterval(interval);\r\n      this.setState({ interval });\r\n    } else {\r\n      currentTrack.volume(this.state.soundVolume / 10);\r\n      currentTrack.play();\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n      this.setState({ interval });\r\n      //this.props.actions.changePlayingState(true);\r\n    }\r\n    //this.props.actions.changePlayingState(!this.state.playing);\r\n    this.setState({currentTrack});\r\n  };\r\n\r\n  continuePlay = () =>{\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.playing) {\r\n      currentTrack.stop();\r\n    }\r\n    let interval = this.state.interval;\r\n    clearInterval(interval);\r\n    currentTrack.play();\r\n    if (this.state.playing) {\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n    }    \r\n    this.setState({ interval });    \r\n  }\r\n\r\n  changeVolume = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(e.target.value / 10);\r\n    this.setState({ soundVolume: e.target.value, currentTrack });\r\n  };\r\n\r\n  nextTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    console.log(\"currentTrack\", currentTrack);\r\n    currentTrack.stop();\r\n    if (this.state.currentId < this.state.audio.length - 1) {\r\n      //this.props.actions.selectTrack(this.state.currentId + 1);\r\n    } else {\r\n       //this.props.actions.selectTrack(0);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  prevTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    currentTrack.stop();\r\n    if (this.state.currentId > 0) {\r\n      //this.props.actions.selectTrack(this.state.currentId - 1);\r\n    } else {\r\n      //this.props.actions.selectTrack(this.state.audio.length - 1);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  muteSound = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.muted) {\r\n      currentTrack.mute(false);\r\n    } else {\r\n      currentTrack.mute(true);\r\n    }\r\n    this.setState({\r\n      muted: !this.state.muted,\r\n      currentTrack,\r\n    });\r\n  };\r\n\r\n  startCycle = () => {\r\n    this.incTime();\r\n    this.updateProgress();\r\n  };\r\n\r\n  updateProgress = () => {\r\n    let time = Math.round(this.state.currentTrack.seek());\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let progress = ((time / duration) * 100).toFixed(2);\r\n    this.setState({ progress });\r\n    //this.props.actions.changeProgressState(progress);\r\n  };\r\n\r\n  incTime = () => {\r\n    let currentDuration = Math.round(this.state.currentTrack.seek());\r\n    let currentMinutes = Math.floor(currentDuration / 60);\r\n    let currentSeconds = Math.floor(currentDuration - currentMinutes * 60);\r\n    currentMinutes = (\"0\" + currentMinutes).slice(-2);\r\n    currentSeconds = (\"0\" + currentSeconds).slice(-2);\r\n    this.setState({ currentSeconds, currentMinutes, currentDuration });\r\n    if (currentDuration === this.state.currentTrack.duration()) {\r\n      let currentTrack = this.state.currentTrack;\r\n      currentTrack.stop();      \r\n      if (this.state.currentId < this.state.audio.length - 1) {\r\n        //this.props.actions.selectTrack(this.state.currentId + 1);\r\n      } else {\r\n        //this.props.actions.selectTrack(0);\r\n      }\r\n      this.setState({ currentTrack, decodingFinished: false }, () => {\r\n        this.resetState();\r\n        this.callFunctions(this.state.currentId);\r\n      });      \r\n    }\r\n  };\r\n\r\n  setSeek = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let seek = (e.target.value * duration) / 100;\r\n    currentTrack.seek(seek);\r\n    console.log(\"seek\", Math.round(seek));\r\n    this.setState({ currentTrack, progress: e.target.value }, () => {\r\n      this.incTime();\r\n      //this.props.actions.changeProgressState(Math.round(seek));\r\n      console.log(this.state.progress);\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"player__visualizer player-visualizer\">\r\n          <div className=\"player-visualizer__waveform\" id=\"waveform\"></div>\r\n        </div>\r\n        <div className=\"player__top player-top\">\r\n          <span className=\"player-top__time\">{this.state.currentMinutes}.{this.state.currentSeconds}</span>\r\n          <div className=\"player-top__progress player-progress\">\r\n              <input\r\n                className=\"player-progress__input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                type=\"range\"\r\n                value={this.state.progress}\r\n                onChange={this.setSeek}\r\n              />\r\n          </div>\r\n          <span className=\"player-top__time\">{this.state.minutes}.{this.state.seconds}</span>\r\n        </div>\r\n        <div className=\"player-main\">\r\n          <div className=\"player-left\">\r\n            <div className=\"player-info player__info\">\r\n              <div className=\"player-info__icon player-icon\">\r\n                  {this.state.currentTrackPicture ? (\r\n                    <img src={this.state.currentTrackPicture} className=\"player-icon__picture\" alt=\"\" />\r\n                  ) : null}              \r\n              </div>\r\n              <div className=\"player-info__description player-description\">\r\n                <p className=\"player-description__name\">{this.state.currentTrackTitle}</p>\r\n                <p className=\"player-description__artist\">{this.state.currentTrackArtist}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"player__controls player-controls\">\r\n              <div className=\"player-controls__navigation\">\r\n                <div className=\"player-controls__item player-controls__left\" onClick={this.prevTrack}><i className=\"fas fa-backward\"></i></div>\r\n                {!this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-play\"></i></div> : null}\r\n                {this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-pause\"></i></div> : null}\r\n                <div className=\"player-controls__item player-controls__right\" onClick={this.nextTrack}><i className=\"fas fa-forward\"></i></div>         \r\n              </div>\r\n            </div>        \r\n          </div>\r\n          <div className=\"player-controls__volume player-volume\">\r\n            <div className=\"player-controls__item player-volume__item\"><i className=\"fas fa-volume-up\"></i></div>\r\n                      <input\r\n                        className=\"player-controls__audio\"\r\n                        value={this.state.soundVolume}\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        onChange={this.changeVolume}\r\n                        type=\"range\"\r\n                      />        \r\n          </div>      \r\n        </div>\r\n      </div>        \r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n*/\r\nexport default AudioPlayer;","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu, Icon, TextArea, Form, Checkbox, Input } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport iconv from 'iconv-lite';\r\n//import {decode, encode, labels} from 'iso-8859-2';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass SelectedBook extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      text: null,\r\n      pageIndexes: [],\r\n      currentPageId: 0,\r\n      loaded: false,\r\n      settingsFont: false,\r\n      SettingsPalette: false,\r\n      fontSize: 16,\r\n      fontFamily: \"'Times New Roman', sans-serif\",\r\n      lineHeight: 32,\r\n      fontWeight: 400,\r\n      pages: 0,\r\n      isFontModalOpen: false,\r\n      fontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\r\n      bgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\r\n      \r\n      fontSizeTemp: 16,\r\n      lineHeightTemp: 32,\r\n      fontFamilyTemp: \"'Times New Roman', sans-serif\",\r\n      fontWeightTemp: 400,\r\n\r\n      color: '#222222',\r\n      backgroundColor: '#f6f6f6',\r\n\r\n      isColorModalOpen: false,\r\n      activeFontColor: '#222222',\r\n      activeBgColor: '#f6f6f6',\r\n      fontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\r\n      bgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\r\n      colorScheme: [  \r\n              '#000000','#111111','#222222','#333333',\r\n              '#444444','#555555','#666666','#777777',\r\n              '#888888','#999999','#a7a7a7','#b8b8b8',\r\n              '#d0d0d0','#dcdcdc','#f6f6f6','#ffffff'   ],\r\n      errors: {},\r\n      comments: [{\r\n        \"author\": \"Author 1\",\r\n        \"comment\": \"simple comment\"\r\n      }],   \r\n      commentsVisible: false          \r\n    }\r\n  }\r\n/*\r\n  componentDidMount(){\r\n    axios.get('/books.json')\r\n      .then(res => {\r\n        let books = res.data; \r\n        let selectedBook = books.find(x => x.id == this.props.match.params.id);\r\n        let options = {\r\n          method: 'GET',\r\n          url: selectedBook.link,\r\n          responseType: 'text/plain',\r\n          charset: 'ISO-8859-2',\r\n          headers: {\r\n            'Content-Type': 'text/plain;charset=ISO-8859-2',\r\n          },\r\n          responseEncoding: 'ISO-8859-2'          \r\n    \r\n        }\r\n        axios.request(options)\r\n        .then(book => {\r\n          this.setState({\r\n            text: book.data.toString().split(\"\\n\")\r\n          }, () => this.splitIntoPages())\r\n        })\r\n      })\r\n  } \r\n*/\r\n\r\n  componentDidMount(){\r\n    var myHeaders = new Headers();\r\n    myHeaders.append('Content-Type','text/plain; charset=UTF-8');  \r\n    const that = this;\r\n    axios.get('/books.json')\r\n      .then(res => {\r\n        let books = res.data; \r\n        let selectedBook = books.find(x => x.id == this.props.match.params.id);\r\n        fetch(selectedBook.link, myHeaders)\r\n          .then(response => response.arrayBuffer())\r\n          .then(function (buffer) {\r\n              const decoder = new TextDecoder('iso-8859-1');\r\n              let text = decoder.decode(buffer).split(\"\\n\");\r\n              return text\r\n          })\r\n          .then((text) => that.setState({ text}, () => that.splitIntoPages() ))\r\n      })\r\n\r\n  } \r\n\r\n  splitIntoPages = () => {\r\n    let text = this.state.text;\r\n    let pages = []; let pageIndexes = [];\r\n    let value = 1600 / this.state.lineHeight;\r\n    let pagesCount = Math.ceil(text.length / value);\r\n    let currentMin = 0;\r\n    let currentMax = 50;\r\n      for (var i = 0; i < pagesCount; i++) {\r\n        pages.push(text.slice(currentMin,currentMax));\r\n        currentMin = currentMin + 50;\r\n        currentMax = currentMax + 50;\r\n      }\r\n      for (var i = 0; i < pagesCount; i++) {\r\n        pageIndexes.push(i);\r\n      }\r\n      this.setState({ pages, \r\n                      pageIndexes, \r\n                      currentPage: pages[0],\r\n                      loaded: true });\r\n  }  \r\n\r\n    prevButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages;\r\n      if(currentPageId > 0){\r\n        currentPageId--;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    }\r\n\r\n    nextButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages.slice();\r\n      if(currentPageId < pages.length - 1){\r\n        currentPageId++;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    }  \r\n\r\n    changeFont = () => {\r\n      this.setState({\r\n        isFontModalOpen: true\r\n      })\r\n    } \r\n\r\n    changeColor = () => {\r\n      this.setState({\r\n        isColorModalOpen: true\r\n      })\r\n    }     \r\n\r\n\r\n  changePage = (e) =>{\r\n      let currentPageId = Number(e.target.value);\r\n      let pages = this.state.pages;\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId, currentPage\r\n      })  \r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      isFontModalOpen: false,\r\n      isColorModalOpen: false\r\n    })\r\n  }\r\n\r\n  changeValue = (e) =>{\r\n    this.setState({fontSizeTemp: e.target.value})\r\n  }\r\n\r\n  changeFontFamily = (e) =>{\r\n    this.setState({fontFamilyTemp: e.target.value})\r\n  }\r\n\r\n  changeFontWeight = (e) =>{\r\n    this.setState({fontWeightTemp: e.target.value})\r\n  }\r\n\r\n  changeLineHeight = (e) =>{\r\n    this.setState({lineHeightTemp: e.target.value})\r\n  } \r\n\r\n  applyFontSettings = () => {\r\n    this.setState({\r\n      fontSize: this.state.fontSizeTemp,\r\n      lineHeight: this.state.lineHeightTemp,\r\n      fontFamily: this.state.fontFamilyTemp,\r\n      fontWeight: this.state.fontWeightTemp,\r\n      isFontModalOpen: false\r\n    })\r\n  }\r\n\r\n\r\n  setFontColor = (e) =>{\r\n    let fontState = this.state.fontState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < fontState.length; i++) {\r\n      fontState[i] = false;\r\n    }\r\n    fontState[index] = true;\r\n    this.setState({\r\n      activeFontColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      fontState\r\n    })\r\n  }\r\n\r\n  setBgColor = (e) =>{\r\n    let bgState = this.state.bgState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < bgState.length; i++) {\r\n      bgState[i] = false\r\n    }\r\n    bgState[index] = true;\r\n    this.setState({\r\n      activeBgColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      bgState\r\n    })\r\n  }\r\n\r\n  applyColorSettings = () =>{\r\n    this.setState({\r\n      color: this.state.activeFontColor,\r\n      backgroundColor: this.state.activeBgColor,\r\n      isColorModalOpen: false\r\n    })    \r\n  }\r\n\r\n//comments\r\n\r\n    addComment = () =>{\r\n      let comments = this.state.comments.slice();\r\n      let errors = this.state.errors;\r\n      let currentComment = this.state.currentComment;\r\n      let currentName = this.state.currentName;\r\n      let currentEmail = this.state.currentEmail;\r\n      let temp = {};\r\n      if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n        temp['author'] = currentName;\r\n        temp['comment'] = currentComment;\r\n        comments.unshift(temp);\r\n        this.setState({\r\n          comments,\r\n          currentName: '',\r\n          currentComment: '',\r\n          currentEmail: ''\r\n        })\r\n      }\r\n      else if (currentName == ''){\r\n        errors['name'] = \"Заполните поле имени!\";\r\n        this.setState({\r\n          errors\r\n        })\r\n      }\r\n      else if(currentComment == ''){\r\n        errors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n      else if(currentEmail == ''){\r\n        errors['email'] = \"Заполните поле почты\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n\r\n    }\r\n\r\n    updateComment = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,500)});\r\n    }\r\n\r\n\r\n    updateName = (event) =>{\r\n      this.setState({currentName: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateEmail = (event) =>{\r\n      this.setState({currentEmail: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    toggleComments = () => {\r\n      this.setState({ commentsVisible: !this.state.commentsVisible })\r\n    }\r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.isFontModalOpen ?\r\n            <div className=\"settings-overlay\">\r\n              <div className=\"select-palette-wrapper select-font-wrapper\">\r\n                <span className=\"close-button\" onClick={this.closeModal}>\r\n                  <i className=\"fas fa-times\"></i>\r\n                </span>\r\n                <div className=\"select-font\">\r\n                  <div className=\"select-font-block\">\r\n                    <span>Размер</span>\r\n                    <div className=\"select-font-input\">\r\n                      <input onChange={this.changeValue} type=\"range\" min=\"8\" max=\"24\" value={this.state.fontSizeTemp} name=\"\"/>               \r\n                      <span className=\"select-font-value\">{this.state.fontSizeTemp}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"select-font-block\">\r\n                    <span>Интервал</span>         \r\n                    <div className=\"select-font-input\">\r\n                      <input onChange={this.changeLineHeight} type=\"range\" min=\"16\" max=\"72\" value={this.state.lineHeightTemp} name=\"\"/>                \r\n                      <span className=\"select-font-value\">{this.state.lineHeightTemp}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"select-font-block\">\r\n                    <span>Жирность</span>\r\n                    <div className=\"select-font-input\">\r\n                      <input onChange={this.changeFontWeight} type=\"range\" min=\"200\" max=\"900\" step=\"100\" value={this.state.fontWeightTemp} name=\"\"/>               \r\n                      <span className=\"select-font-value\">{this.state.fontWeightTemp}</span>\r\n                    </div>  \r\n                  </div>\r\n                </div>\r\n                <select className=\"select-font-family\" onChange={this.changeFontFamily} value={this.state.fontFamily}>\r\n                  <option value =\"'Times New Roman', sans-serif\">Times New Roman</option>\r\n                  <option value =\"'Arial', sans-serif\">Arial</option>\r\n                  <option value =\"'Verdana', sans-serif\">Verdana</option>\r\n                  <option value =\"'Lucida Console', sans-serif\">Lucida Console</option>\r\n                  <option value =\"'Georgia', serif\">Georgia</option>\r\n                  <option value =\"'Courier New', monospace\">Gourier New</option>\r\n                </select>\r\n                <p className=\"select-font-example\" style={{ \r\n                                      fontSize: this.state.fontSizeTemp + \"px\", \r\n                                      fontFamily: this.state.fontFamilyTemp,\r\n                                      lineHeight: this.state.lineHeightTemp + \"px\",\r\n                                      fontWeight: this.state.fontWeightTemp }} >Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet</p>                  \r\n                <button className=\"normal-button\" onClick={this.applyFontSettings} >Применить</button>\r\n              </div>    \r\n            </div>\r\n          : null}\r\n          {this.state.isColorModalOpen ?\r\n            <div className=\"settings-overlay\">\r\n              <div className=\"select-palette-wrapper\">\r\n                <span className=\"close-button\" onClick={this.closeModal} >\r\n                  <i className=\"fas fa-times\"></i>\r\n                </span>\r\n                <div className=\"select-palette-container\">\r\n                  <div className=\"palette-container-item\">\r\n                    <p>Шрифт</p>\r\n                    <div className=\"select-palette\">\r\n                      {this.state.colorScheme.map((item,index) =>\r\n                        <div key={index} className=\"palette-item\" data-index={index} onClick={this.setFontColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                          {this.state.fontState[index] ? \r\n                            <span><i className=\"fas fa-check\"></i></span>  : null\r\n                          }\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"palette-container-item\">\r\n                    <p>Фон</p>\r\n                    <div className=\"select-palette\">\r\n                      {this.state.colorScheme.map((item,index) =>\r\n                        <div key={index} className=\"palette-item\" data-index={index} onClick={this.setBgColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                          {this.state.bgState[index] ?\r\n                            <span><i className=\"fas fa-check\"></i></span> \r\n                             : null\r\n                          }\r\n                        </div>\r\n                      )}          \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"palette-item-selected\" style={{ backgroundColor: this.state.activeBgColor }} >\r\n                  <span style={{ color: this.state.activeFontColor  }} >Lorem ipsum </span>\r\n                </div>                \r\n                <button className=\"normal-button\" onClick={this.applyColorSettings} >Применить</button>          \r\n              </div>              \r\n            </div>\r\n          : null}\r\n          <div className=\"navigation-panel\">\r\n            <div className=\"navigation-progress\"> \r\n              <input  \r\n                type=\"range\" \r\n                value={this.state.currentPageId} \r\n                max={this.state.pages.length - 1} \r\n                min=\"0\"\r\n                onChange={this.changePage} />\r\n            </div>\r\n            <div className=\"nav-pagination\">{this.state.currentPageId + 1} / {this.state.pages.length}</div>            \r\n            <div className=\"navigation-links\">\r\n              <span onClick={this.prevButton} className=\"navigation-links__item\" title=\"Назад\"><Icon name='arrow left' size='large' /> </span>\r\n              <span onClick={this.nextButton} className=\"navigation-links__item\" title=\"Вперед\"><Icon name='arrow right' size='large' /> </span>\r\n              <span onClick={this.changeFont} className=\"navigation-links__item\" title=\"Настройки шрифта\"><Icon name='font' size='large' /> </span>\r\n              <span onClick={this.changeColor} className=\"navigation-links__item\" title=\"Настройки цвета\"><Icon name='tint' size='large' /> </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"selected-book\" style={{ backgroundColor: this.state.backgroundColor, color: this.state.color}}>\r\n            {this.state.loaded ?\r\n              <div className=\"selected-book__content book-content\" style= \r\n                                          {{ lineHeight: this.state.lineHeight + \"px\",\r\n                                             fontWeight: this.state.fontWeight, \r\n                                             fontSize:   this.state.fontSize + \"px\", \r\n                                             fontFamily: this.state.fontFamily }}>\r\n                  {this.state.currentPage.map((item,index) => <p key={index}>{item}</p>) }             \r\n              </div>\r\n            : null}\r\n          </div>\r\n          <div className=\"single-text-form__wrapper\">\r\n            <div className=\"comments__header\">\r\n              <span className=\"comments-header__counter\">{this.state.comments.length} комментариев</span>\r\n              <span className=\"comments-header__button\" onClick={this.toggleComments}>{this.state.commentsVisible ? 'Скрыть комментарии': 'Показать комментарии'}</span>\r\n            </div>\r\n            {this.state.commentsVisible ?\r\n              <>\r\n                <div className=\"single-text-card-form\">\r\n                  <Form>\r\n                    <Form.Field>\r\n                      <Input value={this.state.currentName} onChange={this.updateName} focus placeholder='Имя'/>\r\n                      <span>{this.state.errors['name']}</span>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <Input value={this.state.currentEmail} onChange={this.updateEmail} focus placeholder='Email'/>\r\n                      <span>{this.state.errors['email']}</span>\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <TextArea value={this.state.currentComment} onChange={this.updateComment} maxLength=\"50\" placeholder='Ваш комментарий' />\r\n                      <span>{this.state.errors['comment']}</span>\r\n                    </Form.Field>                           \r\n                    <Button onClick={this.addComment} type='submit'>Отправить</Button>\r\n                  </Form>         \r\n                </div>\r\n                <div className=\"single-text-card-comments\">\r\n                  {this.state.comments.map((item, index) =>\r\n                    <div className=\"single-text-card-comment\" key={index}>\r\n                      <h3>{item.author}</h3>\r\n                      <p>{item.comment}</p>                              \r\n                    </div>\r\n                   )}                       \r\n                </div>\r\n              </> \r\n            : null}           \r\n          </div>      \r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedBook);","let selectedBook = {}\r\n\r\n\r\nlet initialState = {\r\n\t\"totalScore\": 0,\r\n\t\"todayScore\": 0,\r\n\t\"exercisesComplete\": 0,\r\n\t\"testsComplete\": 0,\r\n\t\"wordsTotal\": 0,\r\n\t\"wordsStudied\": 0,\r\n\t\"wordsRemaining\": 0,\r\n\t\"vocabModalOpen\": false,\r\n\t\"selectedVocabWord\": null,\r\n\t\"selectedBook\": selectedBook\t\t\r\n};\r\n\r\n\r\n\r\nlet reducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_TOTAL_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalScore: action.payload }\r\n\r\n\t\tcase 'UPDATE_TODAY_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodayScore: action.payload }\r\n\r\n\t\tcase 'UPDATE_EXERCISES_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texercisesComplete: action.payload }\r\n\r\n\t\tcase 'UPDATE_TESTS_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttestsComplete: action.payload }\r\n\r\n\t\tcase 'UPDATE_WORDS_TOTAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsTotal: action.payload }\r\n\r\n\t\tcase 'UPDATE_WORDS_REMAINING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsRemaining: action.payload }\r\n\r\n\t\tcase 'UPDATE_WORDS_STUDIED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsStudied: action.payload }\r\n\r\n\t\tcase 'CHANGE_COLOR_SCHEME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorScheme: action.payload }\r\n\r\n\t\tcase 'CHANGE_SOUND_VOLUME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsoundVolume: action.payload }\r\n\r\n\t\tcase 'TOGGLE_VOCAB_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedVocabWord: action.payload }\t\t\r\n\r\n\t\tcase 'VOICE_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabWord: action.payload }\r\n\r\n\t\tcase 'SELECT_BOOK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedBook: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_FAMILY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontFamily: action.payload }\t\r\n\r\n\t\tcase 'SELECT_FONT_SPACING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontSpacing: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_WEIGHT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontWeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_SIZE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontSize: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontColor: action.payload }\t\r\n\r\n\t\tcase 'SELECT_BG_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbgColor: action.payload }\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default reducer;","import {combineReducers} from 'redux';\r\nimport reducer from './index';\r\n\r\nlet createRootReducer = () => combineReducers({\r\n\treducer\r\n})\r\n\r\nexport default createRootReducer;","import {createStore} from 'redux';\r\nimport createRootReducer from '../reducers/rootReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default function configureStore(){\r\n\tlet store = createStore(createRootReducer(), initialState);\r\n\treturn store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Vocabulary from './Vocabulary';\r\nimport SplittedWords from './SplittedWords';\r\nimport GrammarList from './GrammarList'\r\nimport Statistics from './Statistics'\r\nimport CoursesList from './CoursesList'\r\nimport Training from './Training'\r\nimport Main from './Main'\r\nimport CoursesSimple from './CoursesSimple'\r\nimport ConstructWord from './ConstructWord'\r\nimport Proverbs from './Proverbs'\r\nimport Cards from './Cards'\r\nimport Audio from './Audio'\r\nimport EnglishToRussian from './EnglishToRussian'\r\nimport RussianToEnglish from './RussianToEnglish'\r\nimport Videos from './Videos'\r\nimport Fragments from './Fragments'\r\nimport Pronunciation from './Pronunciation'\r\nimport RecreateText from './RecreateText'\r\nimport RecreateAudioText from './RecreateAudioText'\r\nimport InsertSpaces from './InsertSpaces'\r\nimport TED from './videos/TED'\r\nimport EngVid from './videos/EngVid'\r\nimport BritishCouncil from './videos/BritishCouncil'\r\nimport Khan from './videos/Khan'\r\nimport Coursera from './videos/Coursera'\r\nimport JimmyFallon from './videos/JimmyFallon'\r\nimport JimmyKimmel from './videos/JimmyKimmel'\r\nimport ConanOBrien from './videos/ConanOBrien'\r\nimport Ellen from './videos/Ellen'\r\nimport JamesCorden from './videos/JamesCorden'\r\nimport SethMeyers from './videos/SethMeyers'\r\nimport StephenColbert from './videos/StephenColbert'\r\nimport TextsList from './TextsList'\r\nimport Decks from './Decks'\r\nimport AudioList from './AudioList'\r\nimport Settings from './Settings'\r\nimport BookList from './BookList'\r\nimport Materials from './Materials'\r\nimport Example from './Example'\r\nimport Rightwrong from './Rightwrong'\r\nimport GrammarItem from './grammar/GrammarItem'\r\nimport GrammarPresentSimple from './grammar/GrammarPresentSimple'\r\nimport GrammarPastSimple from './grammar/GrammarPastSimple'\r\nimport GrammarFutureSimple from './grammar/GrammarFutureSimple'\r\nimport GrammarPresentContinuous from './grammar/GrammarPresentContinuous'\r\nimport GrammarPastContinuous from './grammar/GrammarPastContinuous'\r\nimport GrammarFutureContinuous from './grammar/GrammarFutureContinuous'\r\nimport GrammarPresentPerfect from './grammar/GrammarPresentPerfect'\r\nimport GrammarFuturePerfect from './grammar/GrammarFuturePerfect'\r\nimport GrammarPastPerfect from './grammar/GrammarPastPerfect'\r\nimport GrammarPresentPerfectContinuous from './grammar/GrammarPresentPerfectContinuous'\r\nimport GrammarPastPerfectContinuous from './grammar/GrammarPastPerfectContinuous'\r\nimport GrammarFuturePerfectContinuous from './grammar/GrammarFuturePerfectContinuous'\r\nimport AudioPlayer from './AudioPlayer'\r\nimport SelectedBook from './SelectedBook'\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport configureStore from \"./store/index\";\r\n\r\nlet initialState = [];\r\nlet store = configureStore(initialState);\r\n\r\n\r\nReactDOM.render(  \r\n\t<Provider store={store}>\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<div className=\"router-wrapper\">\r\n\t\t\t\t<Route exact path=\"/\" component={Main}/>\r\n\t\t\t\t<Route path=\"/vocabulary\" component={Vocabulary} />\r\n\t\t\t\t<Route path=\"/splitted\" component={SplittedWords} />\r\n\t\t\t\t<Route path=\"/selectedbook\" component={SelectedBook} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t\t<Route path=\"/grammar\" component={GrammarList} />\r\n\t\t\t\t<Route path=\"/materials\" component={Materials} />\r\n\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\r\n\t\t\t\t<Route path=\"/courses\" component={CoursesList} />\r\n\t\t\t\t<Route path=\"/coursessimple\" component={CoursesSimple} />\r\n\t\t\t\t<Route path=\"/training\" component={Training} />\t\t  \r\n\t\t\t\t<Route path=\"/cards\" component={Cards} />\r\n\t\t\t\t<Route path=\"/rightwrong\" component={Rightwrong} />\t\t\r\n\t\t\t\t<Route path=\"/constructword\" component={ConstructWord} />\r\n\t\t\t\t<Route path=\"/proverbs\" component={Proverbs}/>\r\n\t\t\t\t<Route path=\"/audio\" component={Audio} />\r\n\t\t\t\t<Route path=\"/pronunciation\" component={Pronunciation} />\r\n\t\t\t\t<Route path=\"/recreatetext\" component={RecreateText} />\r\n\t\t\t\t<Route path=\"/recreateaudiotext\" component={RecreateAudioText} />\r\n\t\t\t\t<Route path=\"/insertspaces\" component={InsertSpaces} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/englishtorussian\" component={EnglishToRussian} />\r\n\t\t\t\t<Route path=\"/russiantoenglish\" component={RussianToEnglish} />\r\n\t\t\t\t<Route path=\"/videos\" component={Videos} />\r\n\t\t\t\t<Route path=\"/fragments\" component={Fragments} />\r\n\t\t\t\t<Route path=\"/decks\" component={Decks} />\t\t\r\n\t\t\t\t<Route path=\"/ted\" component={TED} />\r\n\t\t\t\t<Route path=\"/engvideo\" component={EngVid} />\r\n\t\t\t\t<Route path=\"/britishcouncil\" component={BritishCouncil} />\r\n\t\t\t\t<Route path=\"/khan\" component={Khan} />\r\n\t\t\t\t<Route path=\"/conanobrien\" component={ConanOBrien} />\r\n\t\t\t\t<Route path=\"/jimmyfallon\" component={JimmyFallon} />\r\n\t\t\t\t<Route path=\"/jimmykimmel\" component={JimmyKimmel} />\r\n\t\t\t\t<Route path=\"/coursera\" component={Coursera} />\r\n\t\t\t\t<Route path=\"/ellen\" component={Ellen} />\r\n\t\t\t\t<Route path=\"/stephencolbert\" component={StephenColbert} />\r\n\t\t\t\t<Route path=\"/jamescorden\" component={JamesCorden} />\r\n\t\t\t\t<Route path=\"/sethmeyers\" component={SethMeyers} />\r\n\t\t\t\t<Route path=\"/texts\" component={TextsList} />\r\n\t\t\t\t<Route path=\"/books\" exact component={BookList} />\r\n\t\t\t\t<Route path=\"/books/:id\" component={SelectedBook} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/tests\" component={Example} />\r\n\t\t\t\t<Route path=\"/audiolist\" component={AudioList} />\r\n\t\t\t\t<Route path=\"/grammarpresentsimple\" component={GrammarPresentSimple} />\r\n\t\t\t\t<Route path=\"/grammarpastsimple\" component={GrammarPastSimple} />\r\n\t\t\t\t<Route path=\"/grammarfuturesimple\" component={GrammarFutureSimple} />\r\n\t\t\t\t<Route path=\"/grammarpresentcontinuous\" component={GrammarPresentContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastcontinuous\" component={GrammarPastContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfuturecontinuous\" component={GrammarFutureContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfect\" component={GrammarPresentPerfect} />\r\n\t\t\t\t<Route path=\"/grammarpastperfect\" component={GrammarPastPerfect} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfect\" component={GrammarFuturePerfect} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfectcontinuous\" component={GrammarPresentPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastperfectcontinuous\" component={GrammarPastPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfectcontinuous\" component={GrammarFuturePerfectContinuous} />\r\n\t\t\t\t<Route path=\"/audioplayer\" component={AudioPlayer} />\r\n\t\t\t</div>\r\n\t\t</Router>\t\r\n\t</Provider>, document.getElementById('root'));\r\n\r\n/*\r\n\tconst routes = [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\tcomponent: App\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/grammar',\r\n\t\t\tcomponent: GrammarList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/courses',\r\n\t\t\tcomponent: CoursesList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursessimple',\r\n\t\t\tcomponent: CoursesSimple\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/training',\r\n\t\t\tcomponent: Training\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/constructword',\r\n\t\t\tcomponent: ConstructWord\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/cards',\r\n\t\t\tcomponent: Cards\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/audio',\r\n\t\t\tcomponent: Audio\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/pronunciation',\r\n\t\t\tcomponent: Pronunciation\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/englishtorussian',\r\n\t\t\tcomponent: EnglishToRussian\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/russiantoenglish',\r\n\t\t\tcomponent: RussianToEnglish\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/videos', \r\n\t\t\tcomponent: Videos\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ted', \r\n\t\t\tcomponent: TED\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/engvid', \r\n\t\t\tcomponent: EngVid\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/britishcouncil', \r\n\t\t\tcomponent: BritishCouncil\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/khan', \r\n\t\t\tcomponent: Khan\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/conanobrien', \r\n\t\t\tcomponent: ConanOBrien\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmyfallon', \r\n\t\t\tcomponent: JimmyFallon\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmykimmel', \r\n\t\t\tcomponent: JimmyKimmel\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursera',\r\n\t\t\tcomponent: Coursera\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ellen',\r\n\t\t\tcomponent: Ellen\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/stephencolbert',\r\n\t\t\tcomponent: StephenColbert\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jamescorden',\r\n\t\t\tcomponent: JamesCorden\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/sethmeyers',\r\n\t\t\tcomponent: SethMeyers\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/texts',\r\n\t\t\tcomponent: TextsList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/tests',\r\n\t\t\tcomponent: Example\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t]\r\n\t*/\r\n/*\r\nReactDOM.render(  \r\n  <Router>\r\n\t  <div className=\"router-wrapper\">\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n\t  </div>\r\n  </Router>, document.getElementById('root'));\r\n*/"],"sourceRoot":""}