{"version":3,"sources":["actions/index.js","VocabWord.js","VocabSideMenu.js","TopMenu.js","VocabTopMenu.js","Vocabulary.js","GrammarList.js","SelectedGrammar.js","Statistics.js","Training.js","Main.js","ConstructWord.js","Proverbs.js","Cards.js","Audio.js","EnglishToRussian.js","RussianToEnglish.js","Videos.js","FillTheGaps.js","RecreateText.js","RecreateAudioText.js","InsertSpaces.js","SelectedVideo.js","TextsList.js","Decks.js","Settings.js","BookList.js","Materials.js","Tests.js","TrueOrFalse.js","AudioPlayer.js","Comments.js","ModalFont.js","ModalColor.js","WordFound.js","SelectedBook.js","reducers/settingsReducer.js","reducers/exercisesReducer.js","reducers/booksReducer.js","reducers/vocabularyReducer.js","reducers/testsReducer.js","reducers/resultsReducer.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["actions","updateTotalScore","score","type","payload","updateExerciseComplete","number","updateTestsComplete","updateTests","val","changeColorScheme","changeSoundVolume","toggleVocabModal","selectVocabWord","word","voiceVocabWord","selectBook","book","selectFontSize","fontSize","selectFontFamily","fontFamily","selectFontSpacing","lineHeight","selectFontWeight","fontWeight","selectFontColor","fontColor","selectBgColor","backgroundColor","addCommentToBook","id","comment","toggleFontModal","state","toggleColorModal","toggleSearchModal","updateEngToRus","updateRusToEng","updateConstructedWords","updateAudioWords","updateCardWords","updateTrueOrFalse","updateRecreateTxt","value","updateRecreateAudioTxt","updateFillTheGaps","updatePlaceSpaces","updateCommonPhrases","VocabWord","voiceWord","speech","say","openWord","_this","props","this","delete","react_default","a","createElement","List","Item","react","Image","avatar","src","image","Content","className","onClick","bind","Header","as","name","transcription","translation","Description","meaning","Button","Group","title","Icon","Component","connect","store","reducer","dispatch","bindActionCreators","VocabSideMenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","consoleParams","newItems","items","map","item","i","push","key","text","category","setState","options","getUnique","arr","unique","e","final","indexOf","filter","newFunc","slice","newObj","callbackFromParent","handleChange","_ref","consoleProps","console","log","_this2","axios","get","then","res","data","Menu","vertical","active","Dropdown","placeholder","fluid","clearable","search","selection","onChange","TopMenu","showModal","isModalVisible","changeLogin","event","inputLogin","target","changePassword","inputPassword","changeMail","inputMail","changeDoublePassword","doublePassword","Link","to","VocabTopMenu","updateSearch","substr","searchFunction","changeNameValue","inputName","changeTranslationValue","inputTranslation","changeMeaningValue","inputMeaning","changeCategoryValue","inputCategory","changeImageValue","inputImage","submitForm","newWords","words","inputStringDate","Date","toUTCString","inputDate","obj","date","unshift","callbackFromApp","searchFromApp","categories","categoryValue","voiceWordFromModal","sortByName","sortByTranslation","sortByDate","newFunction","Modal","trigger","primary","closeIcon","Form","Field","accept","Input","icon","Vocabulary","loadMore","prev","visible","filteredWords","isOldestFirst","sort","b","localeCompare","splice","findIndex","deleteWord","toggleModal","myCallback","dataFromChild","topMenuCallback","searchCallback","consoleState","vocabModalOpen","query","searchString","handler","assertThisInitialized","_this3","toLowerCase","size","selectedVocabWord","alt","src_TopMenu","src_VocabSideMenu","src_VocabTopMenu","relaxed","index","src_VocabWord","length","vocabularyReducer","GrammarList","grammar","Table","celled","fixed","Row","columns","HeaderCell","rules","Body","Cell","description","pathname","concat","SelectedGrammar","startTraining","isButtonVisible","isCardVisible","goBack","fullData","newId","stepId","currentTitle","currentDescription","currentExamples","examples","isBackButtonVisible","continueTraining","isFinalVisible","currentName","consoleFunction","main_points","showContinueButton","array","selectedGrammar","find","x","match","params","steps","Card","itemsPerRow","exampleName","exampleTranslation","Statistics","countTests","testsPercentage","testsScore","Math","round","reduce","sum","cur","percentage","tests","testsLoaded","countWords","total","wordsTrained","defineProperty","splitIntoArrays","nameArrays","create","forEach","nameArray","names","keys","values","finalData","tmp","lng","fin","floor","barChartData","getYesterdaysDate","sorter","monday","tuesday","wednesday","thursday","friday","saturday","sunday","days","dateArray","setDate","getDate","getDay","j","item1","item2","lineChartData","inDayRange","option","current","year","getFullYear","month","getMonth","day","today","applyFunction","getTime","inWeekRange","weekDay","start","inMonthRange","totalDays","daysInMonth","inAllRange","func","prop","exercises","testsStore","learnedWords","engToRusWords","rusToEngWords","cardWords","constructWords","audioWords","trueOrFalseWords","switchTab","tab","selectMenuItem","menu","loaded","wordsLoaded","contentArray","isMenuVisible","isSingleTextVisible","isResultVisible","isResultWrong","negativeWords","positiveWords","content","spllittedSentences","reservedSentences","seconds","minutes","secondsRemaining","intervalHandle","wrongIndexes","totalSecondsSpent","secondsSpent","minutesSpent","isModalOpen","exerciseMenu","action","wordMenu","testMenu","generalMenu","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","resultsStore","exercisesComplete","testsComplete","totalScore","openModal","recreateTxt","recreateAudioTxt","fillTheGaps","placeSpaces","commonPhrases","engToRusWordsTotal","rusToEngWordsTotal","audioWordsTotal","cardWordsTotal","trueOrFalseWordsTotal","constructWordsTotal","exercisesReducer","testsReducer","resultsReducer","Training","Main","ConstructWord","setStateOnStart","currentWord","currentFullWord","currentTranslation","currentMeaning","isStarterVisible","inputValue","wordNameArray","nameArrayId","currentValue","currentImage","areButtonsVisible","isImageVisible","wordId","mistakeCount","animationState","fade","initialLoad","split","randomNameArray","random","document","body","addEventListener","myHandler","tempParam","checkValue","keyCode","wordsLength","_ref2","exercise","uuidv4","updateConstructWord","compareWord","currentLetter","textContent","btn","React","createRef","Container","Label","onAnimationEnd","readOnly","maxLength","Divider","Message","Proverbs","shuffleArray","currentArray","negativeProverbs","positiveProverbs","proverbs","currentProverbName","proverb","constructedProverb","isCheckButtonVisible","isDKButtonVisible","isContinueButtonVisible","nameClass","updateTotalExercises","setValue","indexTarget","previousElementSibling","removeValue","dontKnow","checkProverb","join","el","_ref3","Cards","isTranslationVisible","showNavButtons","result","renderComponent","checkResponse","Meta","extra","Audio","correctNameVisible","correctName","correctNameClass","isLinkVisible","isInputVisible","tempSearch","metaClass","positiveResponse","showImage","EnglishToRussian","flagState","disabled","selectedWord","ref","currentButtonColor","RussianToEnglish","Videos","cons","videos","channelId","link","video","FillTheGaps","texts","areTextsVisible","currentTempArray","currentStringArray","currentRandomWord","currentFinalArray","currentRandomArray","currentOneArray","activeInput","activeArray","sortedRandomArray","comparativeRandomArray","fragmentArrayIndexes","rightAnswers","setMenuParams","difficulty","selectValue","startExercise","builtArray","backToTexts","pop","currentFullArray","currentWordArray","currentRandomIndexes","curArr","resetValue","activeTargetTitle","fragmentArray","fragmentDescription","getElementsByClassName","children","element","innerText","submitText","currentSortedArray","count","RecreateText","makeTextsVisible","readMore","createMenuItems","splitText","splittedSentenceVisible","startCountDown","tick","time","clearInterval","timeIsOut","setInterval","onDragStart","draggedItem","dataTransfer","effectAllowed","setData","setDragImage","onDragOver","draggedOverItem","onDragEnd","draggedIdx","checkSentences","splittedSentences","wrongCount","showFinal","selectCategory","menuChange","idx","draggable","RecreateAudioText","createTrack","currentTrack","Howl","html5","volume","audio","playing","tryAgain","playText","play","pause","InsertSpaces","inputContent","newContent","textsLoaded","replace","isTaskStarted","setCaretPosition","ctrl","pos","setSelectionRange","focus","createTextRange","range","collapse","moveEnd","moveStart","select","updateValue","indexOfSpace","newstr","substring","SelectedVideo","getItems","url","selectedVideo","channelID","maxResults","currentComment","addComment","comments","temp","thumbsUp","likes","thumbsDown","dislikes","author","channels","Fragment","Embed","autoplay","videoId","snippet","thumbnails","high","source","TextsList","parentElement","activeTargetContent","activeTargetImage","Decks","constructMenu","level","arrayOfButtons","iconsArray","colors","arrayOfColors","allWords","currentWords","currentColor","isDropdownVisible","addToList","addedItems","selected","addedFirst","sortedByTranslationUp","addedUp","sortedByNameUp","deleteItem","deleteAll","contentLoaded","all","spread","firstResponse","secondResponse","style","sendWords","float","color","Settings","changeColor","colorValue","email","password","colorOptions","BookList","createMenu","age","genres","sizes","ageTemp","sizesTemp","books","genre","hasOwnProperty","age_restriction","bookVal","bookValue","handleGenreChange","currentGenre","handleRatingChange","rating","handleLengthChange","currentLength","scrollToTop","window","scrollTo","myRef","offsetTop","allBoooks","areBooksVisible","isPreviewVisible","isSingleBookVisible","isBookNavPanelVisible","currentBook","currentPage","currentPageIndex","currentArrayBooks","currentIndexArray","bookHTML","parsedBook","bookPages","currentEmail","errors","checkedItems","Map","checked","audiobooks","currentAudio","newAudio","playState","currentAudioId","scrollForwardState","scrollBackwardState","currentVolume","currentRange","currentDuration","hours","allBooks","views","Rating","defaultRating","maxRating","booksReducer","Materials","Tests","getMenuParams","categoryArray","testChange","parentid","getAttribute","currentTest","Array","selectTest","testId","activeTest","testItem","correctResults","tasks","correct_answer","areTestsVisible","isSingleTestVisible","backToTests","curIndexTest","curIndexCheckbox","correctAnswers","incorrectAnswers","checkResults","resultsArray","finalResults","test","isTooltipVisible","prevState","boxShadow","sentence","variants","param","ind","label","TrueOrFalse","response","AudioPlayer","callFunctions","duration","currentId","soundVolume","on","decodingFinished","continuePlay","readTags","resetState","progress","currentMinutes","currentSeconds","jsmediatags","read","onSuccess","tag","currentTrackInfo","decodeTrackInfo","onError","error","info","currentTrackPicture","tags","artist","picture","_this$state$currentTr","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","currentTrackTitle","currentTrackArtist","playMusic","interval","startCycle","stop","changeVolume","nextTrack","prevTrack","muteSound","muted","mute","incTime","updateProgress","seek","toFixed","setSeek","currentTrackLength","order","tracksVisible","min","max","Comments","datestring","getHours","getMinutes","updateComment","updateName","updateEmail","booksComments","Number","noComments","TextArea","ModalFont","changeValue","fontSizeTemp","changeFontFamily","fontFamilyTemp","changeFontWeight","fontWeightTemp","changeLineHeight","lineHeightTemp","applyFontSettings","closeModal","step","ModalColor","setFontColor","fontState","currentTarget","activeFontColor","setBgColor","bgState","activeBgColor","applyColorSettings","isColorModalOpen","colorScheme","data-index","colorvalue","WordFound","closeSearchModal","_React$createElement","definition","SelectedBook","splitIntoPages","pages","pageIndexes","pagesCount","ceil","currentMin","currentMax","txt","newTxt","newSentence","splittedPage","prevButton","currentPageId","nextButton","changePage","toggleComments","commentsVisible","searchForWord","detail","newItem","found","toggleFoundModal","toggleInputModal","isModalInputOpen","changeFont","closeInputModal","fileInputRef","wordsEl","isModalFoundOpen","myHeaders","Headers","append","that","obj1","obj2","selectedBook","fetch","arrayBuffer","buffer","TextDecoder","decode","isSearchModalOpen","src_WordFound","isFontModalOpen","src_ModalFont","src_ModalColor","page","index1","index2","index3","index4","src_Comments","initialState","settingsReducer","arguments","undefined","objectSpread","toConsumableArray","commentId","vocabWord","createRootReducer","combineReducers","createStore","ReactDOM","render","es","BrowserRouter","basename","process","Route","exact","path","component","getElementById"],"mappings":"iVA2MeA,EA3MD,CAEbC,iBAAkB,SAASC,GAC1B,MAAO,CACNC,KAAM,qBACNC,QAASF,IAGXG,uBAAwB,SAASC,GAChC,MAAO,CACNH,KAAM,4BACNC,QAASE,IAGXC,oBAAqB,SAASD,GAC7B,MAAO,CACNH,KAAM,wBACNC,QAASE,IAIXE,YAAa,SAASC,GACrB,MAAO,CACNN,KAAM,eACNC,QAASK,IAIXC,kBAAmB,SAASD,GAC3B,MAAO,CACNN,KAAM,sBACNC,QAASK,IAGXE,kBAAmB,SAASF,GAC3B,MAAO,CACNN,KAAM,sBACNC,QAASK,IAIXG,iBAAkB,SAASH,GAC1B,MAAO,CACNN,KAAM,qBACNC,QAASK,IAGXI,gBAAiB,SAASC,GACzB,MAAO,CACNX,KAAM,oBACNC,QAASU,IAGXC,eAAgB,SAASD,GACxB,MAAO,CACNX,KAAM,mBACNC,QAASU,IAIXE,WAAY,SAASC,GACpB,MAAO,CACNd,KAAM,cACNC,QAASa,IAGXC,eAAgB,SAASC,GACxB,MAAO,CACNhB,KAAM,mBACNC,QAASe,IAGXC,iBAAkB,SAASC,GAC1B,MAAO,CACNlB,KAAM,qBACNC,QAASiB,IAGXC,kBAAmB,SAASC,GAC3B,MAAO,CACNpB,KAAM,sBACNC,QAASmB,IAGXC,iBAAkB,SAASC,GAC1B,MAAO,CACNtB,KAAM,qBACNC,QAASqB,IAGXC,gBAAiB,SAASC,GACzB,MAAO,CACNxB,KAAM,oBACNC,QAASuB,IAGXC,cAAe,SAASC,GACvB,MAAO,CACN1B,KAAM,kBACNC,QAASyB,IAGXC,iBAAkB,SAASC,EAAIC,GAC9B,MAAO,CACN7B,KAAM,sBACNC,QAAS,CAAC2B,KAAIC,aAGhBC,gBAAiB,SAASC,GACzB,MAAO,CACN/B,KAAM,oBACNC,QAAS8B,IAGXC,iBAAkB,SAASD,GAC1B,MAAO,CACN/B,KAAM,qBACNC,QAAS8B,IAGXE,kBAAmB,SAASF,GAC3B,MAAO,CACN/B,KAAM,sBACNC,QAAS8B,IAIXG,eAAgB,SAASvB,GACxB,MAAO,CACNX,KAAM,oBACNC,QAASU,IAGXwB,eAAgB,SAASxB,GACxB,MAAO,CACNX,KAAM,oBACNC,QAASU,IAGXyB,uBAAwB,SAASzB,GAChC,MAAO,CACNX,KAAM,yBACNC,QAASU,IAGX0B,iBAAkB,SAAS1B,GAC1B,MAAO,CACNX,KAAM,qBACNC,QAASU,IAIX2B,gBAAiB,SAAS3B,GACzB,MAAO,CACNX,KAAM,oBACNC,QAASU,IAIX4B,kBAAmB,SAAS5B,GAC3B,MAAO,CACNX,KAAM,uBACNC,QAASU,IAIX6B,kBAAmB,SAASC,GAC3B,MAAO,CACNzC,KAAM,sBACNC,QAASwC,IAIXC,uBAAwB,SAASD,GAChC,MAAO,CACNzC,KAAM,2BACNC,QAASwC,IAIXE,kBAAmB,SAASF,GAC3B,MAAO,CACNzC,KAAM,uBACNC,QAASwC,IAIXG,kBAAmB,SAASH,GAC3B,MAAO,CACNzC,KAAM,sBACNC,QAASwC,IAIXI,oBAAqB,SAASJ,GAC7B,MAAO,CACNzC,KAAM,wBACNC,QAASwC,aC3LNK,6MAMJC,UAAY,SAACpC,GACXqC,IAAOC,IAAItC,MAGbuC,SAAW,SAACvC,GACVwC,EAAKC,MAAMvD,QAAQa,gBAAgBC,GACnCwC,EAAKC,MAAMvD,QAAQY,kBAAiB,0EAV/BmB,GACLyB,KAAKD,MAAME,OAAO1B,oCAclB,OACE2B,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,KACEJ,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,QAAM,EAACC,IAAKV,KAAKD,MAAMY,QAC9BT,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,CAAcC,UAAU,eAAeC,QAASd,KAAKH,SAASkB,KAAKf,KAAMA,KAAKD,MAAMzC,OAClF4C,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KAAKjB,KAAKD,MAAMmB,KAAhC,MAAyClB,KAAKD,MAAMoB,cAApD,MAAsEnB,KAAKD,MAAMqB,aAE/ElB,EAAAC,EAAAC,cAACC,EAAA,EAAKgB,YAAN,CAAkBR,UAAU,gBACxBX,EAAAC,EAAAC,cAAA,SAAIJ,KAAKD,MAAMuB,YAK3BpB,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACMV,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,KACEtB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKN,UAAUqB,KAAKf,KAAMA,KAAKD,MAAMmB,MAAOL,UAAU,oBAAoBY,MAAM,oDAC5FvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,sBAEhBhB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKC,OAAOc,KAAKf,KAAMA,KAAKD,MAAMxB,IAAKsC,UAAU,oBAAoBY,MAAM,8CACtFvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,6CApCLS,aAsDTC,kBATf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMoD,UAGvB,SAA4BC,GAC1B,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAIjCH,CAA6CnC,qBCsB7CwC,cA9Eb,SAAAA,EAAYlC,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAiC,IAChBnC,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAtC,KAAMD,KAgBPwC,cAAgB,WACf,IAAIC,EAAW,GACf1C,EAAKpB,MAAM+D,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACLJ,EAASK,KAAK,CACVC,IAAKH,EAAKpE,GACVwE,KAAMJ,EAAKK,SACX5D,MAAOuD,EAAKK,aAEhClD,EAAKmD,SAAS,CACbC,QAASV,GACP,kBAAM1C,EAAKqD,eA3BErD,EA8BjBqD,UAAY,WACX,IAAIC,EAAMtD,EAAKpB,MAAMwE,QAEdG,EAASD,EACVV,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACZZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIZ,IAAI,SAAAY,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACbC,QAASG,KAtCKvD,EA2ChB4D,QAAU,WACR,IAAIR,EAAUpD,EAAKpB,MAAMwE,QAAQS,QAC7BvE,EAAQU,EAAKpB,MAAMU,MACnBwE,EAAS,GACbA,EAAM,MAAYxE,EAClBwE,EAAM,QAAcV,EACpBpD,EAAKC,MAAM8D,mBAAmBD,IAjDhB9D,EAoDhBgE,aAAe,SAACR,EAADS,GAAA,IAAM3E,EAAN2E,EAAM3E,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAK4D,aApDrD5D,EAsDhBkE,aAAe,WACbC,QAAQC,IAAIpE,EAAKC,OACjBkE,QAAQC,IAAIpE,EAAKpB,QAtDnBoB,EAAKpB,MAAQ,CACV+D,MAAO,GACPS,QAAS,GACT9D,MAAO,MALMU,2FASW,IAAAqE,EAAAnE,KAC1BoE,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAM9B,EAAQ8B,EAAIC,KAClBL,EAAKlB,SAAS,CAAER,SAAS,kBAAM0B,EAAK5B,qDA+CzC,OACErC,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAMC,UAAQ,EAAC7D,UAAU,aACvBX,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,QAAQyD,QAAM,GAC5BzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAUC,YAAY,0GACZC,OAAK,EACLC,WAAS,EACT3F,MAAOY,KAAKtB,MAAMU,MAClB4F,QAAM,EACNlC,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxB0G,WAAS,EACTC,SAAYlF,KAAK8D,aACjBZ,QAASlD,KAAKtB,MAAMwE,mBAzEZvB,sBCqIbwD,cArIb,SAAAA,EAAYpF,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAmF,IAChBrF,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAiD,GAAA7C,KAAAtC,KAAMD,KAURqF,UAAY,WACR,IAAI1G,EAAQoB,EAAKpB,MAAM2G,eACvBvF,EAAKmD,SAAS,CACZoC,gBAAiB3G,GACjB,kBAAMuF,QAAQC,IAAIpE,EAAKpB,MAAM2G,mBAfjBvF,EAkBhBwF,YAAc,SAACC,GACbzF,EAAKmD,SAAS,CACZuC,WAAYD,EAAME,OAAOrG,SApBbU,EAwBhB4F,eAAiB,SAACH,GAChBzF,EAAKmD,SAAS,CACZ0C,cAAeJ,EAAME,OAAOrG,SA1BhBU,EA8BhB8F,WAAa,SAACL,GACZzF,EAAKmD,SAAS,CACZ4C,UAAWN,EAAME,OAAOrG,SAhCZU,EAoChBgG,qBAAuB,SAACP,GACtBzF,EAAKmD,SAAS,CACZ8C,eAAgBR,EAAME,OAAOrG,SApCjCU,EAAKpB,MAAQ,CACX2G,gBAAgB,EAChBG,WAAY,GACZG,cAAe,GACfI,eAAgB,GAChBF,UAAW,IAPG/F,wEA2ChB,OACII,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,YACdX,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,KAAT,+CAEF/F,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,eAAT,+CAEF/F,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,YAAT,iEAEF/F,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,aAAT,iEAEF/F,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,mCAEF/F,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,cAAT,2DAEF/F,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,mCAEA/F,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BACnBX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,eAAT,yEArEQtE,wCCqKPuE,cAlKb,SAAAA,EAAYnG,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAkG,IAChBpG,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAgE,GAAA5D,KAAAtC,KAAMD,KAuBRiE,aAAe,WACbC,QAAQC,IAAIpE,EAAKC,QAzBDD,EA4BhBqG,aAAe,SAACZ,GACdzF,EAAKmD,SAAS,CAAC+B,OAAQO,EAAME,OAAOrG,MAAMgH,OAAO,EAAE,KAAM,kBAAKtG,EAAKuG,oBA7BrDvG,EAiChBwG,gBAAkB,SAACf,GACjBzF,EAAKmD,SAAS,CACZsD,UAAWhB,EAAME,OAAOrG,SAnCZU,EAuChB0G,uBAAyB,SAACjB,GACxBzF,EAAKmD,SAAS,CACZwD,iBAAkBlB,EAAME,OAAOrG,SAzCnBU,EA6ChB4G,mBAAqB,SAACnB,GACpBzF,EAAKmD,SAAS,CACZ0D,aAAcpB,EAAME,OAAOrG,SA/CfU,EAmDhB8G,oBAAsB,SAACrB,GACrBzF,EAAKmD,SAAS,CACZ4D,cAAetB,EAAME,OAAOrG,SArDhBU,EAyDhBgH,iBAAmB,SAACvB,GAClBzF,EAAKmD,SAAS,CACZ8D,WAAYxB,EAAME,OAAOrG,SA3DbU,EA+DhBkH,WAAa,SAAC1D,GACd,IAAI2D,EAAWnH,EAAKC,MAAMmH,MAAMvD,QAC1B4C,EAAYzG,EAAKpB,MAAM6H,UACvBE,EAAmB3G,EAAKpB,MAAM+H,iBAC9BE,EAAe7G,EAAKpB,MAAMiI,aAC1BE,EAAgB/G,EAAKpB,MAAMmI,cAC3BM,GAAkB,IAAIC,MAAOC,cACnCpD,QAAQC,IAAIiD,GACZ,IAAMG,EAAY,IAAIF,KAAKD,GAGrBI,EAAK,CAAChJ,GADI,GAEV2C,KAAQqF,EACRnF,YAAeqF,EACfnF,QAAWqF,EACXhG,MANab,EAAKpB,MAAMqI,WAOxBS,KAAQF,EACRtE,SAAY6D,GAGlBI,EAASQ,QAAQF,GAEfzH,EAAKmD,SAAS,CAAEiE,MAAOD,GAAW,kBAAMhD,QAAQC,IAAIpE,EAAKpB,MAAMwI,SAC/DpH,EAAKmD,SAAS,CACdsD,UAAW,GACXE,iBAAkB,GAClBE,aAAc,GACdW,UAAW,GACXT,cAAe,GACfE,WAAY,IACT,kBAAMjH,EAAK4D,aA7FA5D,EAgGhB4D,QAAU,WACR,IAAIwD,EAAQpH,EAAKpB,MAAMwI,MACvBpH,EAAKC,MAAM2H,gBAAgBR,IAlGbpH,EAqGhBuG,eAAiB,WACf,IAAIrB,EAASlF,EAAKpB,MAAMsG,OACxBlF,EAAKC,MAAM4H,cAAc3C,IArG3BlF,EAAKpB,MAAQ,CACXwI,MAAO,GACPlC,OAAQ,GACRuB,UAAW,GACXE,iBAAkB,GAClBE,aAAc,GACdW,UAAW,GACXT,cAAe,GACfE,WAAY,GACZa,WAAY,GACZC,cAAe,OAEjB/H,EAAKG,OAASH,EAAKG,OACnBH,EAAKJ,UAAYI,EAAKJ,UACtBI,EAAKgI,mBAAqBhI,EAAKgI,mBAC/BhI,EAAKiI,WAAajI,EAAKiI,WACvBjI,EAAKkI,kBAAoBlI,EAAKkI,kBAC9BlI,EAAKmI,WAAanI,EAAKmI,WACvBnI,EAAKoI,YAAcpI,EAAKoI,YApBRpI,wEA4GjB,OACGI,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM1B,MAAI,EAAClC,UAAU,uDACnBX,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,KACEJ,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOtH,UAAU,aAAauH,QAASlI,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,mFAAyCC,WAAS,GACvFpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAM1H,UAAU,cACdX,EAAAC,EAAAC,cAACmI,EAAA,EAAKC,MAAN,KACEtI,EAAAC,EAAAC,cAAA,0FACAF,EAAAC,EAAAC,cAAA,SAAOhB,MAAOY,KAAKtB,MAAM6H,UAAWrB,SAAUlF,KAAKsG,gBAAiB3J,KAAK,UAE3EuD,EAAAC,EAAAC,cAACmI,EAAA,EAAKC,MAAN,KACEtI,EAAAC,EAAAC,cAAA,sGACAF,EAAAC,EAAAC,cAAA,SAAOhB,MAAOY,KAAKtB,MAAM+H,iBAAkBvB,SAAUlF,KAAKwG,uBAAwB7J,KAAK,UAEzFuD,EAAAC,EAAAC,cAACmI,EAAA,EAAKC,MAAN,KACEtI,EAAAC,EAAAC,cAAA,kHACAF,EAAAC,EAAAC,cAAA,SAAOhB,MAAOY,KAAKtB,MAAMmI,cAAe3B,SAAUlF,KAAK4G,oBAAqBjK,KAAK,UAEnFuD,EAAAC,EAAAC,cAACmI,EAAA,EAAKC,MAAN,KACEtI,EAAAC,EAAAC,cAAA,oIACAF,EAAAC,EAAAC,cAAA,SAAOhB,MAAOY,KAAKtB,MAAMqI,WAAY7B,SAAUlF,KAAK8G,iBAAkBnK,KAAK,OAAO8L,OAAO,2BAE3FvI,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKgH,YAA9B,uDAIN9G,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,eACdhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAAf,+CAIFnI,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,UACdhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAAWd,KAAKD,MAAMgI,YAAtC,gDAIF7H,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,iBACdhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAAWd,KAAKD,MAAMiI,mBAAtC,kEAIF9H,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,aACdhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAAWd,KAAKD,MAAMkI,YAAtC,0CAIF/H,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,KACCJ,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOC,KAAK,SAAS9D,YAAY,YAAYK,SAAUlF,KAAKmG,wBA5J1CxE,aCSrBiH,cACL,SAAAA,EAAY7I,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA4I,IACjB9I,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA0G,GAAAtG,KAAAtC,KAAMD,KA2BP8I,SAAW,WACP/I,EAAKmD,SAAS,SAAC6F,GACb,MAAO,CAACC,QAASD,EAAKC,QAAU,OA9BpBjJ,EAmClBmI,WAAa,WACV,IAAMf,EAAQpH,EAAKpB,MAAMsK,cAAcrF,QACnCsD,EAAW,GAEbA,EADCnH,EAAKpB,MAAMuK,cACD/B,EAAMgC,KAAK,SAAS/I,EAAEgJ,GAC/B,OAAO,IAAI/B,KAAK+B,EAAE3B,MAAQ,IAAIJ,KAAKjH,EAAEqH,QAI5BN,EAAMgC,KAAK,SAAS/I,EAAEgJ,GAC/B,OAAO,IAAI/B,KAAKjH,EAAEqH,MAAQ,IAAIJ,KAAK+B,EAAE3B,QAGzC1H,EAAKmD,SAAS,CACZgG,eAAgBnJ,EAAKpB,MAAMuK,cAC3BD,cAAe/B,KAlDFnH,EAuDlBiI,WAAa,WACZ,IAAMb,EAAQpH,EAAKpB,MAAMsK,cAAcrF,QACnCsD,EAAWC,EAEdD,EADEnH,EAAKpB,MAAMuK,cACF/B,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAAShJ,EAAEe,KAAKkI,cAAcD,EAAEjI,QAE3CgG,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAASA,EAAEjI,KAAKkI,cAAcjJ,EAAEe,QAEvDpB,EAAKmD,SAAS,CACbgG,eAAgBnJ,EAAKpB,MAAMuK,cAC3BD,cAAe/B,KAjECnH,EAsElBkI,kBAAoB,WACnB,IAAMd,EAAQpH,EAAKpB,MAAMsK,cAAcrF,QACnCsD,EAAWC,EAEdD,EADEnH,EAAKpB,MAAMuK,cACF/B,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAAShJ,EAAEiB,YAAYgI,cAAcD,EAAE/H,eAElD8F,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAASA,EAAE/H,YAAYgI,cAAcjJ,EAAEiB,eAE9DtB,EAAKmD,SAAS,CACbgG,eAAgBnJ,EAAKpB,MAAMuK,cAC3BD,cAAe/B,KAhFCnH,EA4FhBG,OAAS,SAAC1B,GACT,IAAI2I,EAAQpH,EAAKpB,MAAMwI,MAAMvD,QAC7BuD,EAAMmC,OAAOnC,EAAMoC,UAAU,SAAS1G,GACrC,OAAOA,EAAErE,KAAOA,IACf,GACFuB,EAAKmD,SAAS,CAAEiE,WAjGDpH,EAoGhByJ,WAAa,SAAChL,GACb,IAAI2I,EAAQpH,EAAKpB,MAAMwI,MAAMvD,QAC7BuD,EAAMmC,OAAOnC,EAAMoC,UAAU,SAAS1G,GACrC,OAAOA,EAAErE,KAAOA,IACf,GACFuB,EAAKmD,SAAS,CAAEiE,SAAS,kBAAMpH,EAAK0J,iBAzGrB1J,EA4GhB2J,WAAa,SAACC,GACZ,IACIV,EADA9B,EAAQpH,EAAKpB,MAAMwI,MAAMvD,QAG5BqF,EAD2B,KAAxBU,EAActK,MACD8H,EAAMzD,OAAO,SAAAd,GAAI,OAAIA,EAAKK,WAAa0G,EAActK,QAErD8H,EAEjBpH,EAAKmD,SAAS,CACb+F,gBACAnB,cAAe6B,EAActK,MAC7B8D,QAASwG,EAAcxG,WAvHVpD,EA2HhB6J,gBAAkB,SAACD,GACjB5J,EAAKmD,SAAS,CACbiE,MAAOwC,KA7HM5J,EAiIhB8J,eAAiB,SAACF,GAChB5J,EAAKmD,SAAS,CACb+B,OAAQ0E,KAnIK5J,EAuIhB+J,aAAe,WACd5F,QAAQC,IAAIpE,EAAKpB,MAAMmJ,gBAxIR/H,EA2IhB0J,YAAc,WACb,IAAIpK,EAAQU,EAAKC,MAAM8B,MAAMiI,eAC7BhK,EAAKC,MAAMvD,QAAQY,kBAAkBgC,IA3IvCU,EAAKpB,MAAQ,CACZwI,MAAO,GACP8B,cAAe,GACfC,eAAe,EACfF,QAAS,GACTgB,MAAO,GACPC,aAAc,GACdhF,OAAQ,GACR4C,WAAY,GACZC,cAAe,OAEhB/H,EAAKG,OAASH,EAAKG,OACnBH,EAAKmK,QAAUnK,EAAKmK,QAAQlJ,KAAbmB,OAAAgI,EAAA,EAAAhI,QAAAgI,EAAA,EAAAhI,CAAApC,KACfA,EAAKiI,WAAajI,EAAKiI,WACvBjI,EAAKkI,kBAAoBlI,EAAKkI,kBAC9BlI,EAAKmI,WAAanI,EAAKmI,WAjBNnI,yEAsBfE,KAAKiD,SAAS,CACbiE,MAAO,yDA6DgB,IAAA/C,EAAAnE,KACvBoE,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GACJ,IAAM2C,EAAQ3C,EAAIC,KAClBL,EAAKlB,SAAS,CAAEiE,QAAO8B,cAAe9B,uCA0DpC,IAAAiD,EAAAnK,KACJgJ,EAAgBhJ,KAAKtB,MAAMsK,cAAcrF,QAAQF,OACpD,SAACnG,GACA,OAA6E,IAAtEA,EAAK4D,KAAKkJ,cAAc5G,QAAQ2G,EAAKzL,MAAMsG,OAAOoF,iBAG1D,OACClK,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEP,KAAKD,MAAM8B,MAAMiI,eACjB5J,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACdX,EAAAC,EAAAC,cAAA,QAAMqB,MAAM,6CAAUX,QAASd,KAAKwJ,YAAa3I,UAAU,4CAA2CX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,QAAQmJ,KAAK,WAChInK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKM,IAAOV,KAAKD,MAAM8B,MAAMyI,kBAAkB3J,MAAO4J,IAAI,MAE3DrK,EAAAC,EAAAC,cAAA,KAAGS,UAAU,qBAAqBb,KAAKD,MAAM8B,MAAMyI,kBAAkBpJ,KAArE,MAA6EhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,2BAA2Bb,KAAKD,MAAM8B,MAAMyI,kBAAkBlJ,cAC3JlB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKuJ,WAAWxI,KAAKf,KAAMA,KAAKD,MAAM8B,MAAMyI,kBAAkB/L,IAAKkD,MAAM,6CAAUZ,UAAU,6CAA4CX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAM2I,KAAK,QAAQnJ,KAAO,+BAGnL,KACFhB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAACqK,EAAD,CAAe5G,mBAAoB7D,KAAKyJ,WAAYhH,MAAOzC,KAAKtB,MAAMwI,QACtEhH,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAACsK,EAAD,CACCT,QAAWjK,KAAKiK,QAChBlC,WAAY/H,KAAK+H,WACjBC,kBAAmBhI,KAAKgI,kBACxBC,WAAajI,KAAKiI,WACjBP,gBAAiB1H,KAAK2J,gBACvBhC,cAAe3H,KAAK4J,iBAGvB1J,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,aAAa8J,QAAQ,QACpC3B,EAAcrF,MAAM,EAAG3D,KAAKtB,MAAMqK,SAASrG,IAAI,SAACpF,EAAKsN,GAAN,OACjB,QAA7BT,EAAKzL,MAAMmJ,eAAuD,KAA7BsC,EAAKzL,MAAMmJ,eAAwBsC,EAAKzL,MAAMmJ,gBAAkBvK,EAAK0F,WAC3G9C,EAAAC,EAAAC,cAACyK,EAAD,CACCvN,KAAQA,EACR2C,OAAQkK,EAAKlK,OACb1B,GAAIjB,EAAKiB,GACTuE,IAAKxF,EAAKiB,GACV2C,KAAM5D,EAAK4D,KACXC,cAAiB7D,EAAK6D,cACtBC,YAAa9D,EAAK8D,YAClBE,QAAShE,EAAKgE,QACdX,MAAOrD,EAAKqD,MACZiK,MAAOA,OAIR1K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACfb,KAAKtB,MAAMqK,QAAU/I,KAAKtB,MAAMwI,MAAM4D,QAC7B5K,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK6I,SAAUR,SAAO,GAAvC,iFAMXnI,EAAAC,EAAAC,cAAA,uBA9MmBuB,aA6NVC,kBATf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMqM,oBAGvB,SAA4BhJ,GACxB,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAInCH,CAA6CgH,YC5K7CoC,cAvDb,SAAAA,EAAYjL,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAgL,IAChBlL,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA8I,GAAA1I,KAAAtC,KAAMD,KACDrB,MAAQ,CACXuM,QAAS,IAHKnL,mFAOC,IAAAqE,EAAAnE,KACjBoE,IAAMC,IAAI,mBACPC,KAAK,SAAAC,GACJ,IAAM0G,EAAU1G,EAAIC,KACpBL,EAAKlB,SAAS,CAAEgI,+CAMpB,OACE/K,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACbb,KAAKtB,MAAMuM,QAAQH,OACrB5K,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,QAAM,EAACC,OAAK,EAACvK,UAAU,gBAC5BX,EAAAC,EAAAC,cAAC8K,EAAA,EAAMlK,OAAP,KACEd,EAAAC,EAAAC,cAAC8K,EAAA,EAAMG,IAAP,CAAWC,QAAS,GAClBpL,EAAAC,EAAAC,cAAC8K,EAAA,EAAMK,WAAP,0IAGHvL,KAAKtB,MAAMuM,QAAQ,GAAGO,MAAM9I,IAAI,SAACC,EAAKiI,GAAN,OAC/B1K,EAAAC,EAAAC,cAAC8K,EAAA,EAAMO,KAAP,CAAY3I,IAAK8H,GACf1K,EAAAC,EAAAC,cAAC8K,EAAA,EAAMG,IAAP,CAAWC,QAAS,GAClBpL,EAAAC,EAAAC,cAAC8K,EAAA,EAAMQ,KAAP,CAAY7K,UAAU,iBACnB8B,EAAKzB,MAERhB,EAAAC,EAAAC,cAAC8K,EAAA,EAAMQ,KAAP,CAAY7K,UAAU,uBACnB8B,EAAKgJ,aAERzL,EAAAC,EAAAC,cAAC8K,EAAA,EAAMQ,KAAP,CAAY7K,UAAU,kBACpBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAI,CAAE2F,SAAQ,YAAAC,OAAclJ,EAAKpE,IAAOwL,MAAO,CAAEpH,UAAvD,+CAMF,OAGZzC,EAAAC,EAAAC,cAAA,uBAnDkBuB,sBCkLXmK,cA/Kd,SAAAA,EAAY/L,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA8L,IACjBhM,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA4J,GAAAxJ,KAAAtC,KAAMD,KA0CNgM,cAAgB,WACdjM,EAAKmD,SAAS,CACZ+I,iBAAiB,EACjBC,eAAe,KA9CFnM,EAkDjBoM,OAAS,WACP,IAAIC,EAAWrM,EAAKpB,MAAMyN,SAASxI,QAC/BmH,EAASqB,EAASrB,OAClBsB,EAAQtM,EAAKpB,MAAM2N,OAGvB,GAFAD,GAAiB,EACjBnI,QAAQC,IAAIkI,GACPA,EAAQtB,GAAYsB,EAAQ,EAAI,CACjC,IAAIE,EAAeH,EAASC,GAAO3K,MAC/B8K,EAAqBJ,EAASC,GAAOT,YACrCa,EAAkBL,EAASC,GAAOK,SACtC3M,EAAKmD,SAAS,CACZoJ,OAAQD,EACRE,eACAC,qBACAC,yBAID,GAAa,IAAVJ,EAAY,CAClB,IAAIE,EAAeH,EAASC,GAAO3K,MAC/B8K,EAAqBJ,EAASC,GAAOT,YACrCa,EAAkBL,EAASC,GAAOK,SACtC3M,EAAKmD,SAAS,CACZyJ,qBAAqB,EACrBL,OAAQD,EACRE,eACAC,qBACAC,yBAIIJ,EAAQ,GACdtM,EAAKmD,SAAS,CACZyJ,qBAAqB,KAnFV5M,EAwFjB6M,iBAAmB,WACjB,IAAIR,EAAWrM,EAAKpB,MAAMyN,SAASxI,QAC/BmH,EAASqB,EAASrB,OAClBsB,EAAQtM,EAAKpB,MAAM2N,OAEvB,IADAD,GAAiB,GACNtB,EAAO,CACd,IAAIwB,EAAeH,EAASC,GAAO3K,MAC/B8K,EAAqBJ,EAASC,GAAOT,YACrCa,EAAkBL,EAASC,GAAOK,SACtC3M,EAAKmD,SAAS,CACZyJ,qBAAqB,EACrBL,OAAQD,EACRE,eACAC,qBACAC,yBAKJ1M,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBX,eAAe,KA7GJnM,EAkHjBJ,UAAY,WACVC,IAAOC,IAAIE,EAAKpB,MAAMmO,cAnHP/M,EAuHjBgN,gBAAkB,WAChB7I,QAAQC,IAAIpE,EAAKpB,QAtHnBoB,EAAKpB,MAAQ,CACZyN,SAAU,GACPM,SAAU,GACVM,YAAa,GACbxO,GAAI,EACJ8N,OAAQ,EACRC,aAAc,GACdC,mBAAoB,GACpBC,gBAAiB,GACjBP,eAAe,EACfe,oBAAoB,EACpBJ,gBAAgB,EAChBZ,iBAAiB,EACjBU,qBAAqB,EACrBO,MAAO,IAhBMnN,mFAqBG,IAAAqE,EAAAnE,KACdqM,EAASrM,KAAKtB,MAAM2N,OACxBjI,IAAMC,IAAI,oBACPC,KAAK,SAAAC,GACJN,QAAQC,IAAIK,EAAIC,MAChB,IAAI0I,EAAkB3I,EAAIC,KAAK,GAAGgH,MAAM2B,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,IAAM4F,EAAKpE,MAAMsN,MAAMC,OAAO/O,KAClF0F,QAAQC,IAAIgJ,GACZ,IAAIH,EAAcG,EAAgBH,YAC9BZ,EAAWe,EAAgBK,MAC3BjB,EAAeH,EAASE,GAAQ5K,MAChC8K,EAAqBJ,EAASE,GAAQV,YACtCa,EAAkBL,EAASE,GAAQI,SACvCtI,EAAKlB,SAAS,CACZkJ,WACAG,eACAC,qBACAC,kBACAO,mDAsFN,OACE7M,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAMuN,cACT/L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,gBACpCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,qBACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAchB,KAAKtB,MAAM4N,cACzBpM,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,iCAAiCb,KAAKtB,MAAM6N,qBAE1ErM,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACKZ,KAAKtB,MAAM8N,gBAAgB9J,IAAI,SAACC,EAAMiI,GAAP,OAC9B1K,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,2BAA2BiC,IAAM8H,GAC3D1K,EAAAC,EAAAC,cAAA,UAAKuC,EAAK+K,aACVxN,EAAAC,EAAAC,cAAA,SAAIuC,EAAKgL,mBAAT,SAIPzN,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,4BACvBb,KAAKtB,MAAMgO,oBACZxM,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKkM,QAA9B,kCAAsD,KACpDhM,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK2M,kBAA9B,2CAIN,KAEF3M,KAAKtB,MAAMkO,eACb1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,gEAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,uCACAd,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,uBACbb,KAAKtB,MAAMqO,YAAYrK,IAAI,SAACC,EAAMiI,GAAP,OACzB1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQjI,MAG7BzC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACbX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,eAAeoF,GAAG,YAAlC,0GAKL,KAEL/F,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK8M,iBAAtB,mBA3KoBnL,6BCGxBiM,cAEL,SAAAA,EAAY7N,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA4N,IACjB9N,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA0L,GAAAtL,KAAAtC,KAAMD,KA+KN8N,WAAa,SAACP,GACZ,IAAIQ,EAAiBC,EACjBT,EAAOxC,OAAS,GAClBgD,EAAkBE,KAAKC,MAAMX,EAAOY,OAAO,SAAEC,EAAMC,GAAR,OAAiBD,EAAMC,EAAIC,YAAY,GAAKvO,EAAKpB,MAAM4P,MAAMxD,OAAS,IAAM,GACvHiD,EAAaT,EAAOY,OAAO,SAAEC,EAAMC,GAAR,OAAiBD,EAAMC,EAAI1R,OAAQ,IACnC,IAAlB4Q,EAAOxC,QAChBgD,EAAkBR,EAAO,GAAGQ,gBAC5BC,EAAaT,EAAO,GAAG5Q,QAEvBoR,EAAkB,EAClBC,EAAa,GAEfjO,EAAKmD,SAAS,CACZ6K,kBAAiBC,aAAYQ,aAAa,KA7L7BzO,EAiMjB0O,WAAa,SAAClB,EAAQpM,GACpB,IAAIuN,EAAQ,EACZ,GAAInB,EAAOxC,OAAS,EAClB,IAAK,IAAIlI,EAAI,EAAGA,EAAI0K,EAAOxC,OAAQlI,IACjC6L,GAASnB,EAAO1K,GAAG8L,aAAa5D,YAIlC2D,EAD2B,IAAlBnB,EAAOxC,OACRwC,EAAO,GAAGoB,aAAa5D,OAEvB,EAEVhL,EAAKmD,SAALf,OAAAyM,EAAA,EAAAzM,CAAA,GACGhB,EAAOuN,KA9MK3O,EAkNjB8O,gBAAkB,WAChB,IAAIC,EAAa3M,OAAO4M,OAAO,MACnBhP,EAAKpB,MAAMwI,MAAMvD,QACvBoL,QAAQ,SAASzR,GACrB,IAAI0R,EAAYH,EAAWvR,EAAK0F,UAC3BgM,IACHA,EAAYH,EAAWvR,EAAK0F,UAAY,IAE1CgM,EAAUnM,KAAKvF,KAMlB,IAJA,IAAI2R,EAAQ/M,OAAOgN,KAAKL,GAEpBM,EAASjN,OAAOiN,OAAON,GACvBO,EAAY,GACPxM,EAAI,EAAGA,EAAIqM,EAAMnE,OAAQlI,IAAK,CACtC,IAAIyM,EAAM,GACNC,EAAMH,EAAOvM,GAAGkI,OAChByE,EAAMvB,KAAKwB,MAAMF,EAAI,GACtBD,EAAI,2DAAgBC,EACpBD,EAAI,uEAAkBE,EACtBF,EAAG,KAAWJ,EAAMrM,GACpBwM,EAAUvM,KAAKwM,GAGnBvP,EAAKmD,SAAS,CACb4L,aACAY,aAAcL,GACZ,kBAAMtP,EAAK4P,uBA7OE5P,EAiPlB4P,kBAAoB,WAyBjB,IAvBA,IAAIlL,EAAO1E,EAAKpB,MAAM+Q,aAAa9L,MAAM,EAAE,GAErCgM,EAAS,CACbC,OAAU,EACVC,QAAW,EACXC,UAAa,EACbC,SAAY,EACZC,OAAU,EACVC,SAAY,EACZC,OAAU,GAUVC,EAAO,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UAC1EC,EAAY,GACZ5I,EAAO,IAAIJ,KACXxE,EAAI,EACAA,EAAI,GACZ4E,EAAK6I,QAAQ7I,EAAK8I,UAAY,GAE7BF,EAAUvN,KAAKsN,EAAK3I,EAAK+I,WACzB3N,IAED,IAAK,IAAI4N,EAAI,EAAGA,EAAIhM,EAAKsG,OAAQ0F,IAC/BhM,EAAKgM,GAAL,KAAkBJ,EAAUI,GAE9BhM,EAAK0E,KAAK,SAAC/I,EAAGgJ,GACZ,IAAIsH,EAAQtQ,EAAEe,KAAKkJ,cACfsG,EAAQvH,EAAEjI,KAAKkJ,cACnB,OAAOuF,EAAOc,GAASd,EAAOe,KAGhC5Q,EAAKmD,SAAS,CACZ0N,cAAenM,KA1RF1E,EA8RjB8Q,WAAa,SAACC,GACZ,IAAIC,EAAU,IAAI1J,KACd2J,EAAOD,EAAQE,cACfC,EAAQH,EAAQI,WAChBC,EAAML,EAAQR,UACdc,EAAQ,IAAIhK,KAAJ,GAAAyE,OAAYkF,EAAZ,KAAAlF,OAAoBoF,EAAQ,EAA5B,KAAApF,OAAiCsF,IAO7CrR,EAAKuR,cALL,SAAmB1O,GACjB,IAAI6E,EAAO,IAAIJ,KAAKzE,EAAK6E,MACzB,OAAQA,EAAK8J,WAAaF,EAAME,UAAY,OAAY9J,EAAK8J,WAAaF,EAAME,WAGpDT,IA1Sf/Q,EA6SjByR,YAAc,SAACV,GACb,IAAIC,EAAU,IAAI1J,KACd2J,EAAOD,EAAQE,cACfC,EAAQH,EAAQI,WAChBC,EAAML,EAAQR,UACdkB,EAAUV,EAAQP,SAElBkB,EAAQ,IAAIrK,KAAJ,GAAAyE,OAAYkF,EAAZ,KAAAlF,OAAoBoF,EAAQ,EAA5B,KAAApF,OAAiCsF,IAS7CrR,EAAKuR,cAPL,SAAmB1O,GACjB,IAAI6E,EAAO,IAAIJ,KAAKzE,EAAK6E,MACzB,OACEA,EAAK8J,WAAcG,EAAMH,UAAa,OAAY,EAAIE,IAAchK,EAAK8J,WAAcG,EAAMH,UAAa,MAAWE,GAI3FX,IA7Tf/Q,EAgUjB4R,aAAe,SAACb,GACd,IAAIC,EAAU,IAAI1J,KACd2J,EAAOD,EAAQE,cACfC,EAAQH,EAAQI,WAEhBS,EAQJ,SAAsBV,EAAOF,GACzB,OAAO,IAAI3J,KAAK2J,EAAME,EAAO,GAAGX,UATpBsB,CAAYX,EAAOF,GAC/BU,EAAQ,IAAIrK,KAAJ,GAAAyE,OAAYkF,EAAZ,KAAAlF,OAAoBoF,EAAQ,EAA5B,IAAiC,IAW7CnR,EAAKuR,cATL,SAAmB1O,GACjB,IAAI6E,EAAO,IAAIJ,KAAKzE,EAAK6E,MACzB,OAAQA,EAAK8J,WAAaG,EAAMH,UAAa,MAAWK,GAAcnK,EAAK8J,WAAaG,EAAMH,WAOlET,IAjVf/Q,EAoVjB+R,WAAa,SAAChB,GAMZ/Q,EAAKuR,cAJL,SAAmB1O,GACjB,OAAOA,GAGqBkO,IA1Vf/Q,EA6VjBuR,cAAgB,SAACS,EAAMjB,GACrB,IAEIkB,EAFAC,EAAYlS,EAAKC,MAAM8B,MACvByM,EAAQxO,EAAKC,MAAMkS,WAGvB,GAAe,aAAXpB,EACF,IAAKkB,KAAQC,EAAW,CACtB,IAAI/U,EAAM+U,EAAUD,GAAMtO,OAAOqO,GACjChS,EAAKmD,SAALf,OAAAyM,EAAA,EAAAzM,CAAA,GACG6P,EAAO9U,SAGP,GAAe,SAAX4T,EACPvC,EAAQA,EAAM7K,OAAOqO,GACrBhS,EAAKmD,SAAS,CACZqL,SACC,kBAAMxO,EAAK+N,WAAW/N,EAAKpB,MAAM4P,cACjC,GAAe,SAAXuC,EAAmB,CAC1B,IAAIqB,EAAe,GAOnB,IAAKH,KANLG,EAAaC,cAAgBrS,EAAKC,MAAM8B,MAAMsQ,cAC9CD,EAAaE,cAAgBtS,EAAKC,MAAM8B,MAAMuQ,cAC9CF,EAAaG,UAAYvS,EAAKC,MAAM8B,MAAMwQ,UAC1CH,EAAaI,eAAiBxS,EAAKC,MAAM8B,MAAMyQ,eAC/CJ,EAAaK,WAAazS,EAAKC,MAAM8B,MAAM0Q,WAC3CL,EAAaM,iBAAmB1S,EAAKC,MAAM8B,MAAM2Q,iBACpCN,EACXA,EAAaH,GAAQG,EAAaH,GAAMtO,OAAOqO,GAC/ChS,EAAK0O,WAAW0D,EAAaH,GAAOA,EAAO,WAxXlCjS,EA6XjB2S,UAAY,SAACC,EAAKnU,GAChBuB,EAAK6S,eAAeD,EAAI,GAAInU,GACb,UAAXmU,EAAI,GACN5S,EAAK8Q,WAAW8B,EAAI,IACA,SAAXA,EAAI,GACb5S,EAAKyR,YAAYmB,EAAI,IACD,UAAXA,EAAI,GACb5S,EAAK4R,aAAagB,EAAI,IAEtB5S,EAAK+R,WAAWa,EAAI,KAtYP5S,EA0YjB6S,eAAiB,SAAC3P,EAAUzE,GAG1B,IAFA,IAAItB,EAAM+F,EAAW,OACjB4P,EAAO9S,EAAKpB,MAAMzB,GAAK0G,QAClBf,EAAI,EAAGA,EAAIgQ,EAAK9H,OAAQlI,IAC3BgQ,EAAKhQ,GAAGrE,KAAOA,EACjBqU,EAAKhQ,GAAG+B,QAAS,EAEjBiO,EAAKhQ,GAAG+B,QAAS,EAGrB7E,EAAKmD,SAALf,OAAAyM,EAAA,EAAAzM,CAAA,GAAiBjF,EAAM2V,KAlZzB9S,EAAKpB,MAAQ,CACTmU,QAAQ,EACRtE,aAAa,EACbuE,aAAa,EACb5L,MAAO,GACP6G,WAAY,EACZD,gBAAiB,EACjBiF,aAAc,GACdC,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfC,QAAS,GACT3S,MAAO,KACP4S,mBAAoB,GACpBC,kBAAmB,GACnBC,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACdnF,WAAY,KACZY,aAAc,GACdkB,cAAe,GACfhM,OAAQ,UACRsP,aAAa,EACbC,aAAc,CACZ,CACE3V,GAAM,EACN2C,KAAQ,6CACRiT,OAAU,CAAC,WAAY,SACvBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,oDACRiT,OAAU,CAAC,WAAY,QACvBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,8CACRiT,OAAU,CAAC,WAAY,SACvBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,iEACRiT,OAAU,CAAC,WAAY,OACvBxP,QAAU,IAGdyP,SAAU,CACR,CACE7V,GAAM,EACN2C,KAAQ,6CACRiT,OAAU,CAAC,OAAQ,SACnBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,oDACRiT,OAAU,CAAC,OAAQ,QACnBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,8CACRiT,OAAU,CAAC,OAAQ,SACnBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,iEACRiT,OAAU,CAAC,OAAQ,OACnBxP,QAAU,IAGd0P,SAAU,CACR,CACE9V,GAAM,EACN2C,KAAQ,6CACRiT,OAAU,CAAC,OAAQ,SACnBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,oDACRiT,OAAU,CAAC,OAAQ,QACnBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,8CACRiT,OAAU,CAAC,OAAQ,SACnBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,iEACRiT,OAAU,CAAC,OAAQ,OACnBxP,QAAU,IAGd2P,YAAa,CACX,CACE/V,GAAM,EACN2C,KAAQ,6CACRiT,OAAU,CAAC,UAAW,SACtBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,oDACRiT,OAAU,CAAC,UAAW,QACtBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,8CACRiT,OAAU,CAAC,UAAW,SACtBxP,QAAU,GAEZ,CACEpG,GAAM,EACN2C,KAAQ,iEACRiT,OAAU,CAAC,UAAW,OACtBxP,QAAU,KAtID7E,mFA4IG,IAEdiS,EAFc5N,EAAAnE,KACdgS,EAAYhS,KAAKD,MAAM8B,MAE3B,IAAKkQ,KAAQC,EAAW,CACtB,IAAI/U,EAAM+U,EAAUD,GACpB/R,KAAKiD,SAALf,OAAAyM,EAAA,EAAAzM,CAAA,GACG6P,EAAO9U,IAGZ,IAAIiV,EAAe,GAOnB,IAAKH,KANLG,EAAaC,cAAgBnS,KAAKD,MAAM8B,MAAMsQ,cAC9CD,EAAaE,cAAgBpS,KAAKD,MAAM8B,MAAMuQ,cAC9CF,EAAaG,UAAYrS,KAAKD,MAAM8B,MAAMwQ,UAC1CH,EAAaI,eAAiBtS,KAAKD,MAAM8B,MAAMyQ,eAC/CJ,EAAaK,WAAavS,KAAKD,MAAM8B,MAAM0Q,WAC3CL,EAAaM,iBAAmBxS,KAAKD,MAAM8B,MAAM2Q,iBACpCN,EAAc,CACzB,IAAIjV,EAAMiV,EAAaH,GACvB/R,KAAKwO,WAAWvR,EAAK8U,EAAO,SAE9B/R,KAAKiD,SAAS,CACZiP,eACA5D,MAAOtO,KAAKD,MAAMkS,WAClBY,QAAQ,GACP,WAAQ1O,EAAK0J,WAAW1J,EAAKzF,MAAM4P,OAC3BnK,EAAKlB,SAAS,CAAE6P,aAAa,MAExC1O,IAAMC,IAAI,qBACPC,KAAK,SAAAC,GACJ,IAAI2C,EAAQ3C,EAAIC,KAChBL,EAAKlB,SAAS,CACZiE,SACC,kBAAM/C,EAAKyK,uDA2OX,IAAAzE,EAAAnK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACZb,KAAKtB,MAAMuV,YACV/T,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACXX,EAAAC,EAAAC,cAACmU,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRjQ,KAAMxE,KAAKtB,MAAM+Q,aACjBiF,OAAQ,CACNC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,KAGxC5U,EAAAC,EAAAC,cAACmU,EAAA,EAAD,CAAeQ,gBAAgB,QAC/B7U,EAAAC,EAAAC,cAACmU,EAAA,EAAD,CAAOS,QAAQ,SACf9U,EAAAC,EAAAC,cAACmU,EAAA,EAAD,MACArU,EAAAC,EAAAC,cAACmU,EAAA,EAAD,MACArU,EAAAC,EAAAC,cAACmU,EAAA,EAAD,MACArU,EAAAC,EAAAC,cAACmU,EAAA,EAAD,CAAKS,QAAQ,0DAAaC,KAAK,eAIvC,KACF/U,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACXX,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,iCAAiC4M,YAAa,GA2ClEvN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,sBACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,6BAAvB,+FACEb,KAAKtB,MAAM6P,aAAevO,KAAKtB,MAAMoU,aAAe9S,KAAKtB,MAAMmU,OACjE3S,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4BAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,yBAEfhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMwI,MAAM4D,QACtB5K,EAAAC,EAAAC,cAAA,wFAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,eACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKD,MAAMmV,aAAaC,mBAC7BjV,EAAAC,EAAAC,cAAA,2HAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,iBACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKD,MAAMmV,aAAaE,eAC7BlV,EAAAC,EAAAC,cAAA,0GAGNF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKD,MAAMmV,aAAaG,YAC7BnV,EAAAC,EAAAC,cAAA,+FAGc,OAG1BF,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,sBACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,6BAAvB,uHACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACZb,KAAKtB,MAAMwV,aAAaxR,IAAI,SAACC,EAAMiI,GAAP,OAC3B1K,EAAAC,EAAAC,cAAA,QAAM0C,IAAKH,EAAKpE,GAAIuC,QAASqJ,EAAKsI,UAAU1R,KAAKoJ,EAAMxH,EAAKwR,OAAQxR,EAAKpE,IAAKsC,UAAW8B,EAAKgC,OAAS,yBAA2B,IAAKhC,EAAKzB,SAG/IlB,KAAKtB,MAAMmU,OACV3S,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4BAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,yBAEfhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMyT,cAAcrH,QAC9B5K,EAAAC,EAAAC,cAAA,kIAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,eACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM0T,cAActH,QAC9B5K,EAAAC,EAAAC,cAAA,gHAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,iBACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM6T,WAAWzH,QAC3B5K,EAAAC,EAAAC,cAAA,yGAGNF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBAAuBC,QAASd,KAAKsV,WAChDpV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM2T,UAAUvH,QAC1B5K,EAAAC,EAAAC,cAAA,qHAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,6BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM8T,iBAAiB1H,QACjC5K,EAAAC,EAAAC,cAAA,yFAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,0BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM4T,eAAexH,QAC/B5K,EAAAC,EAAAC,cAAA,0GAGNF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM6W,YAAYzK,QAC5B5K,EAAAC,EAAAC,cAAA,qHAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,0BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM8W,iBAAiB1K,QACjC5K,EAAAC,EAAAC,cAAA,mJAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,6BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM+W,YAAY3K,QAC5B5K,EAAAC,EAAAC,cAAA,oGAGJF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMgX,YAAY5K,QAC5B5K,EAAAC,EAAAC,cAAA,yGAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,6BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMiX,cAAc7K,QAC9B5K,EAAAC,EAAAC,cAAA,+FAIN,OAGNF,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,sBACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,6BAAvB,uEACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACZb,KAAKtB,MAAM0V,SAAS1R,IAAI,SAACC,EAAMiI,GAAP,OACvB1K,EAAAC,EAAAC,cAAA,QAAM0C,IAAKH,EAAKpE,GAAIuC,QAASqJ,EAAKsI,UAAU1R,KAAKoJ,EAAMxH,EAAKwR,OAAQxR,EAAKpE,IAAKsC,UAAW8B,EAAKgC,OAAS,yBAA2B,IAAKhC,EAAKzB,SAG/IlB,KAAKtB,MAAMoU,YACZ5S,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4BAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,yBAEfhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMkX,oBAChB1V,EAAAC,EAAAC,cAAA,kIAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,eACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMmX,oBAChB3V,EAAAC,EAAAC,cAAA,gHAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,iBACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMoX,iBAChB5V,EAAAC,EAAAC,cAAA,yGAGNF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMqX,gBAChB7V,EAAAC,EAAAC,cAAA,qHAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,6BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMsX,uBAChB9V,EAAAC,EAAAC,cAAA,yFAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,0BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMuX,qBAChB/V,EAAAC,EAAAC,cAAA,2GAIN,OAGNF,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,sBACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,6BAAvB,kCACAX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACZb,KAAKtB,MAAM2V,SAAS3R,IAAI,SAACC,EAAMiI,GAAP,OACvB1K,EAAAC,EAAAC,cAAA,QAAM0C,IAAOH,EAAKpE,GAAIuC,QAASqJ,EAAKsI,UAAU1R,KAAKoJ,EAAMxH,EAAKwR,OAAQxR,EAAKpE,IAAKsC,UAAW8B,EAAKgC,OAAS,yBAA2B,IAAKhC,EAAKzB,SAGjJlB,KAAKtB,MAAM6P,YACZrO,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4BAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBC,QAASd,KAAKsV,WAC7CpV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,UACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAM4P,MAAMxD,QACtB5K,EAAAC,EAAAC,cAAA,yGAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,0BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMoP,iBAChB5N,EAAAC,EAAAC,cAAA,qHAEFF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,6BACnBhB,EAAAC,EAAAC,cAAA,UAAKJ,KAAKtB,MAAMqP,YAChB7N,EAAAC,EAAAC,cAAA,+FAIJ,UAMdF,EAAAC,EAAAC,cAAA,uBApqBiBuB,aAmrBVC,kBATf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,iBAAkBjE,WAAYvT,EAAMyX,aAAa7H,MAAO4G,aAAcxW,EAAM0X,iBAGnG,SAA4BrU,GACxB,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAInCH,CAA6CgM,GC/kB7CyI,mLAtGX,OACEnW,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,mCACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,qCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,qBAAT,yIAIjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,qCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,qBAAT,wIAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,2BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,8GAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,0BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,iGAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,8BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,kBAAT,kGAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,gCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,gBAAT,4FAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,iCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,iBAAT,8GAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,sCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,sBAAT,wJAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,iCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,iBAAT,8GAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,8BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,gBAAT,gFAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,6BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,aAAT,6HAKrB/F,EAAAC,EAAAC,cAAA,uBAnGeuB,aCuKR2U,cArKb,SAAAA,EAAYvW,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAsW,IAChBxW,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAoU,GAAAhU,KAAAtC,KAAMD,KACDrB,MAAQ,GAFGoB,wEAShB,OACEI,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,2JACAF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,YAAYpF,UAAU,gBAA/B,sFAIJX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,wBAEbR,EAAAC,EAAAC,cAAA,+GAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,wBAEbR,EAAAC,EAAAC,cAAA,mGAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,oBAEbR,EAAAC,EAAAC,cAAA,0JAGHF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,uBAEbR,EAAAC,EAAAC,cAAA,yOAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,qBAEbR,EAAAC,EAAAC,cAAA,gHAEDF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQE,IAAI,mBAEbR,EAAAC,EAAAC,cAAA,6HAIJF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCAIhBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,6FACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,oIACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,2MACAF,EAAAC,EAAAC,cAAA,8NAEDF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,cAAcpF,UAAU,gBAAjC,iDAIHX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,sFACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,4GACAF,EAAAC,EAAAC,cAAA,2QACAF,EAAAC,EAAAC,cAAA,wSAEDF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,YAAYpF,UAAU,gBAA/B,gDAGFX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iCAKjBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gCAIhBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,yGACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,6NACAF,EAAAC,EAAAC,cAAA,+GACAF,EAAAC,EAAAC,cAAA,0IAEDF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,WAAWpF,UAAU,gBAA9B,iDAIHX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,8IACAF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,uSACAF,EAAAC,EAAAC,cAAA,0LAEDF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,SAASpF,UAAU,gBAA5B,gDAGFX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCA2BrBX,EAAAC,EAAAC,cAAA,uBAhKWuB,wDCOb4U,cAEL,SAAAA,EAAYxW,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAuW,IACjBzW,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAqU,GAAAjU,KAAAtC,KAAMD,KAWNyW,gBAAkB,WAChB1W,EAAKmD,SAAS,CACZiE,MAAO,GACPkM,cAAe,GACfC,cAAe,GACf9U,GAAI,EACJkY,YAAa,GACbC,gBAAiB,KACjBC,mBAAoB,GACpBC,eAAgB,GAChBC,kBAAkB,EAClB5K,eAAe,EACfW,gBAAgB,EAChBkK,WAAY,KACZ9H,UAAW,GACX+H,cAAe,GACfC,YAAa,EACbC,aAAc,GACdjS,OAAQ,GACRkS,aAAc,KACdC,mBAAmB,EACnBC,gBAAgB,EAChBC,OAAQ,EACRC,aAAc,EACdC,gBAAgB,EAChBC,MAAM,GACL,kBAAM1X,EAAK2X,iBAtCC3X,EAyCjB2X,YAAc,WACZ,IAAIlZ,EAAKuB,EAAKpB,MAAMH,GACpB6F,IAAMC,IAAI,qBACTC,KAAK,SAAAC,GASJ,IARA,IAAM2C,EAAQ3C,EAAIC,KACZkS,EAAkBxP,EAAM3I,GACxBkY,EAAcvP,EAAM3I,GAAI2C,KACxByV,EAAqBzP,EAAM3I,GAAI6C,YAC/B8V,EAAehQ,EAAM3I,GAAIoC,MACzBiW,EAAiB1P,EAAM3I,GAAI+C,QAC3B0N,EAAYyH,EAAYiB,MAAM,IAC9BC,EAAkBlB,EAAYiB,MAAM,IACjC9U,EAAI+U,EAAgB7M,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CAC/C,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADKmB,EAEJ,CAAC4T,EAAgBnH,GAAImH,EAAgB/U,IAA/E+U,EAAgB/U,GAF8BmB,EAAA,GAE1B4T,EAAgBnH,GAFUzM,EAAA,GAKrD,IADA,IAAMgT,EAAgB,GACbnU,EAAI,EAAGA,EAAIoM,EAAUlE,OAAQlI,IACpCmU,EAAclU,KAAK,KAErB/C,EAAKmD,SAAS,CACZiE,QACAuP,cACAE,qBACAO,eACAN,iBACAe,kBACA3I,YACA+H,gBACAL,sBAGJmB,SAASC,KAAKC,iBAAiB,UAAWjY,EAAKkY,YAzEhClY,EA4EjBkY,UAAY,SAAC1U,GACX,IAMI2U,EANAX,EAAexX,EAAKpB,MAAM4Y,aAC1BL,EAAenX,EAAKpB,MAAMuY,aAC1BR,EAAc3W,EAAKpB,MAAM+X,YACzBlY,EAAKuB,EAAKpB,MAAMsY,YAChBhI,EAAYlP,EAAKpB,MAAMsQ,UACvB2I,EAAkB7X,EAAKpB,MAAMiZ,gBAEjC,GAAKrU,EAAER,MAAOkM,EAAUzQ,IAAS0Y,EAAanM,OAAS2L,EAAY3L,QAAYhL,EAAKpB,MAAMuN,cAAiB,CACvGgL,GAA8B3T,EAAER,IAChC,IAAIiU,EAAgBjX,EAAKpB,MAAMqY,cAAcpT,QAC7CoT,EAAcxY,GAAM+E,EAAER,IACtB,IAAK,IAAIF,EAAI,EAAGA,EAAI+U,EAAgB7M,OAAQlI,IAC1C,GAAI+U,EAAgB/U,KAAOU,EAAER,IAAK,CAChCmV,EAAYrV,EACZ,MAGJ+U,EAAgBtO,OAAO4O,EAAU,KAC/B1Z,EACFuB,EAAKmD,SAAS,CACZ8T,gBACAE,eACAD,YAAazY,EACbuY,WAAYxT,EAAER,IACd6U,mBACC,kBAAM7X,EAAKoY,oBAEP5U,EAAER,MAAQkM,EAAUzQ,IAAS0Y,EAAanM,OAAS2L,EAAY3L,QAAYhL,EAAKpB,MAAMuN,eAC7FqL,IACAxX,EAAKmD,SAAS,CACZqU,eACAE,MAAM,KAGa,OAAdlU,EAAE6U,SAAsBrY,EAAKpB,MAAMuN,cAC1CnM,EAAK6M,mBAIL7M,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBX,eAAe,KAtHNnM,EA2HjBiM,cAAgB,WACdjM,EAAKmD,SAAS,CACZ4T,kBAAkB,EAClB5K,eAAe,KA9HFnM,EAkIjB6M,iBAAmB,WAClB,IAAI2K,EAAexX,EAAKpB,MAAM4Y,aAC1BZ,EAAkB5W,EAAKpB,MAAMgY,gBAC7BtD,EAAgBtT,EAAKpB,MAAM0U,cAAczP,QACzC0P,EAAgBvT,EAAKpB,MAAM2U,cAAc1P,QACzCsT,EAAenX,EAAKpB,MAAMuY,aAC1BR,EAAc3W,EAAKpB,MAAM+X,YAC1Ba,EAAe,EAClBlE,EAAcvQ,KAAK6T,GAGZD,IAAgBQ,GACtB7D,EAAcvQ,KAAK6T,GACnB5W,EAAKmD,SAAS,CACbmQ,mBAIFC,EAAcxQ,KAAK6T,GAElB,IAAInY,EAAKuB,EAAKpB,MAAMH,GAChB6Z,EAActY,EAAKpB,MAAMwI,MAAM4D,OAC/B5D,EAAQpH,EAAKpB,MAAMwI,MAEvB,IADA3I,GAAU,GACD6Z,EAAa,CAQtB,IAPE,IAAM1B,EAAkBxP,EAAM3I,GACxBkY,EAAcvP,EAAM3I,GAAI2C,KAC1ByV,EAAqBzP,EAAM3I,GAAI6C,YAC/B8V,EAAehQ,EAAM3I,GAAIoC,MACzBiW,EAAiB1P,EAAM3I,GAAI+C,QAC3B0N,EAAYyH,EAAYiB,MAAM,IAC9BC,EAAkBlB,EAAYiB,MAAM,IACjC9U,EAAI+U,EAAgB7M,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CACjD,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADOyV,EAEN,CAACV,EAAgBnH,GAAImH,EAAgB/U,IAA/E+U,EAAgB/U,GAFgCyV,EAAA,GAE5BV,EAAgBnH,GAFY6H,EAAA,GAKrD,IADA,IAAMtB,EAAgB,GACbnU,EAAI,EAAGA,EAAIoM,EAAUlE,OAAQlI,IACrCmU,EAAclU,KAAK,KAElB/C,EAAKmD,SAAS,CACV1E,KACA2I,QACAuP,cACAC,kBACAC,qBACAO,eACAN,iBACAe,kBACA3I,YACA+H,gBACAK,gBAAgB,EAChBD,mBAAmB,EACnBF,aAAc,GACdD,YAAa,EACbM,aAAc,EACdjE,gBACAD,sBAGD,CACH,IAAIlM,EAAQpH,EAAKpB,MAAM2U,cAAc1P,QACjC2U,EAAW,GAAI5J,EAAe,GAClC4J,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAM2U,cAAcvI,OAC1C,IAAK,IAAIlI,EAAI,EAAGA,EAAIsE,EAAM4D,OAAQlI,IAChC8L,EAAa7L,KAAKqE,EAAMtE,GAAGrE,IAE7B+Z,EAAS5J,aAAeA,EACxB5O,EAAKC,MAAMvD,QAAQgc,oBAAoBF,GACvCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiB6b,EAAS5b,OAC7CoD,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBX,eAAe,EACf4K,kBAAkB,EAClBxD,gBACDD,oBAhNYtT,EAqNjBJ,UAAY,WACVC,IAAOC,IAAIE,EAAKpB,MAAMmO,cAtNP/M,EAyNjBoY,WAAa,WACRpY,EAAKpB,MAAM+X,YAAY3L,SAAWhL,EAAKpB,MAAMuY,aAAanM,QAC5DhL,EAAKmD,SAAS,CACbkU,mBAAmB,EACnBC,gBAAgB,KA7NHtX,EAkOjB2Y,YAAc,SAACnV,GACb,IAAI/E,EAAKuB,EAAKpB,MAAMsY,YAChBP,EAAc3W,EAAKpB,MAAM+X,YACzBzH,EAAYlP,EAAKpB,MAAMsQ,UACvBiI,EAAenX,EAAKpB,MAAMuY,aAC1ByB,EAAgBpV,EAAEmC,OAAOkT,YAAYhV,MAAM,EAAE,GAC7C2T,EAAexX,EAAKpB,MAAM4Y,aAC9B,GAAKoB,IAAkB1J,EAAUzQ,IAAS0Y,EAAanM,OAAS2L,EAAY3L,OAAS,CACnFxH,EAAEmC,OAAO5E,UAAY,SACrBoW,GAA8ByB,EAC9B,IAAI3B,EAAgBjX,EAAKpB,MAAMqY,cAAcpT,QAC7CoT,EAAcxY,GAAMma,IAClBna,EACFuB,EAAKmD,SAAS,CACZ8T,gBACAE,eACAD,YAAazY,EACbuY,WAAY4B,GACX,kBAAM5Y,EAAKoY,oBAEPQ,IAAkB1J,EAAUzQ,IAAS0Y,EAAanM,OAAS2L,EAAY3L,QAC9EwM,IACAxX,EAAKmD,SAAS,CACbqU,eACCE,MAAM,KAIT1X,EAAKmD,SAAS,CACb2J,gBAAgB,EAChBX,eAAe,KA9PhBnM,EAAK8Y,IAAMC,IAAMC,YAClBhZ,EAAKpB,MAAQ,GAHEoB,mFASfE,KAAKwW,mDA4PE,IAAArS,EAAAnE,KACDwX,EAAOxX,KAAKtB,MAAM8Y,KACxB,OACEtX,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAMmY,iBACX3W,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,uBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACAtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,4BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,kFACAd,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACEnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK+L,eAA9B,yGAKR,KAEA/L,KAAKtB,MAAMuN,cACX/L,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CAAWlY,UAAU,kBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,kBACfX,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,KACKhZ,KAAKtB,MAAMiY,oBAEdzW,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CACIE,eAAgB,kBAAM9U,EAAKlB,SAAS,CAAEuU,MAAM,KAC5C3W,UAAW2W,EAAO,gCAAkC,4BACtDtX,EAAAC,EAAAC,cAAA,UACCJ,KAAKtB,MAAMqY,cAAcrU,IAAI,SAACxB,EAAK0J,GAAN,OAC5B1K,EAAAC,EAAAC,cAAA,SAAO0C,IAAK8H,EAAQsO,UAAQ,EAAC9Z,MAAO8B,EAAMiY,UAAU,SAGrDnZ,KAAKtB,MAAMyY,kBACXjX,EAAAC,EAAAC,cAAA,UACCJ,KAAKtB,MAAMiZ,gBAAgBjV,IAAI,SAACxB,EAAK0J,GAAN,OAC9B1K,EAAAC,EAAAC,cAAA,MAAI0C,IAAK8H,EACJ9J,QAASqD,EAAKsU,aAEbvX,MAGD,KAETlB,KAAKtB,MAAM0Y,eACXlX,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACCL,EAAAC,EAAAC,cAAA,SAAIJ,KAAKtB,MAAMkY,gBACV1W,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACdX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAKtB,MAAMwY,iBAG3B,MAGJhX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK2M,kBAA9B,kEAGD,KAEF3M,KAAKtB,MAAMkO,eACX1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,0CAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACAlZ,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,wBACY,IAApCb,KAAKtB,MAAM0U,cAActI,OAC3B5K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cACfb,KAAKtB,MAAM0U,cAAc1Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,gBAG9DlB,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACGnZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAQrY,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAM2U,cAAcvI,QAE5B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEF9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMwI,MAAM4D,OAAS9K,KAAKtB,MAAM2U,cAAcvI,QAEtD5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGJ9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBAClBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,gEACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,gBAAgBoF,GAAG,aAAnC,kFAK3B,MAGL/F,EAAAC,EAAAC,cAAA,uBAnXoBuB,aAkYbC,kBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6C2U,GCnYtD+C,eACL,SAAAA,EAAYvZ,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAsZ,IACjBxZ,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAoX,GAAAhX,KAAAtC,KAAMD,KAYNgM,cAAgB,WACdjM,EAAKmD,SAAS,CACV4T,kBAAkB,EAClB5K,eAAe,KAhBJnM,EAoBjByZ,aAAe,WAEb,IADA,IAAIC,EAAe1Z,EAAKpB,MAAM8a,aAAa7V,QAClCf,EAAI4W,EAAa1O,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CAChD,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADMmB,EAEX,CAACyV,EAAahJ,GAAIgJ,EAAa5W,IAAnE4W,EAAa5W,GAFkCmB,EAAA,GAE9ByV,EAAahJ,GAFiBzM,EAAA,KAtBnCjE,EA4BjB6M,iBAAmB,WAClB,IAAI8M,EAAmB3Z,EAAKpB,MAAM+a,iBAAiB9V,QAC/C+V,EAAmB5Z,EAAKpB,MAAMgb,iBAAiB/V,QAC9CpF,EAAKuB,EAAKpB,MAAMH,GAChBob,EAAW7Z,EAAKpB,MAAMib,SAE1B,IADApb,GAAU,GACD,EAAG,CAIV,IAHA,IAAMqb,EAAqBD,EAASpb,GAAIsb,QAClClD,EAAqBgD,EAASpb,GAAI6C,YACpCoY,EAAeI,EAAmBlC,MAAM,KACnC9U,EAAI4W,EAAa1O,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CAChD,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADMyV,EAEX,CAACmB,EAAahJ,GAAIgJ,EAAa5W,IAAnE4W,EAAa5W,GAFkCyV,EAAA,GAE9BmB,EAAahJ,GAFiB6H,EAAA,GAIlDvY,EAAKmD,SAAS,CACZ1E,KACAob,WACAC,qBACAjD,qBACA6C,eACAM,mBAAoB,GACpBJ,mBACAD,mBACAM,sBAAsB,EACtBC,mBAAmB,EACnBC,yBAAyB,EACzB9G,eAAe,EACf+G,UAAW,SAGV,CACH,IAAI5B,EAAW,GACfA,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAMgb,iBAAiB5O,OAC7ChL,EAAKC,MAAMvD,QAAQgD,oBAAoB8Y,GACvCxY,EAAKC,MAAMvD,QAAQ2d,qBAAqB,GACxCra,EAAKC,MAAMvD,QAAQC,iBAAiB6b,EAAS5b,OAC7CoD,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBX,eAAe,EACf4K,kBAAkB,EAClB6C,mBACAD,uBAvEW3Z,EA4EjBsa,SAAW,SAAC9W,GAGV,IAFA,IAAImC,EAASnC,EAAEmC,OACX4U,EAAc,EACT5U,EAASA,EAAO6U,wBACvBD,IAEF,IAAIP,EAAqBha,EAAKpB,MAAMob,mBAChCN,EAAe1Z,EAAKpB,MAAM8a,aAC9BA,EAAanQ,OAAOgR,EAAY,GAChCP,EAAmBjX,KAAKS,EAAEmC,OAAOkT,aACjC7Y,EAAKmD,SAAS,CACZ6W,uBAEyB,IAAxBN,EAAa1O,QACdhL,EAAKmD,SAAS,CACZ8W,sBAAsB,EACtBC,mBAAmB,KA5FRla,EAiGjBya,YAAc,SAACjX,GAGb,IAFA,IAAImC,EAASnC,EAAEmC,OACX4U,EAAc,EACT5U,EAASA,EAAO6U,wBACvBD,IAEF,IAAIP,EAAqBha,EAAKpB,MAAMob,mBAChCN,EAAe1Z,EAAKpB,MAAM8a,aAC9BM,EAAmBzQ,OAAOgR,EAAY,GACtCb,EAAa3W,KAAKS,EAAEmC,OAAOkT,aAC3B7Y,EAAKmD,SAAS,CACZuW,iBAECA,EAAa1O,OAAS,GACvBhL,EAAKmD,SAAS,CACZ8W,sBAAsB,KAhHXja,EAqHjB0a,SAAW,SAAClX,GAKV,IAJA,IAAImW,EAAmB3Z,EAAKpB,MAAM+a,iBAC9BG,EAAqB9Z,EAAKpB,MAAMkb,mBAChCJ,EAAeI,EAAmBlC,MAAM,KACxCoC,EAAqB,GAChBlX,EAAI,EAAGA,EAAI4W,EAAa1O,OAAQlI,IACvCkX,EAAmBjX,KAAK2W,EAAa5W,IAEvC6W,EAAiB5W,KAAK+W,GACtB9Z,EAAKmD,SAAS,CACZuW,aAAc,GACdQ,mBAAmB,EACnBC,yBAAyB,EACzBF,sBAAsB,EACtBD,wBAnIaha,EAuIjB2a,aAAe,SAACnX,GACd,IAAIoW,EAAmB5Z,EAAKpB,MAAMgb,iBAAiB/V,QAC/C8V,EAAmB3Z,EAAKpB,MAAM+a,iBAAiB9V,QACpC7D,EAAKpB,MAAMob,mBAAmBnW,QAAQ+W,KAAK,OAC1C5a,EAAKpB,MAAMkb,oBACzBF,EAAiB7W,KAAK/C,EAAKpB,MAAMkb,oBACjC9Z,EAAKmD,SAAS,CACZiX,UAAW,mBACXD,yBAAyB,EACzBF,sBAAsB,EACtBC,mBAAmB,EACnBN,uBAIFD,EAAiB5W,KAAK/C,EAAKpB,MAAMkb,oBACjC9Z,EAAKmD,SAAS,CACZgX,yBAAyB,EACzBF,sBAAsB,EACtBC,mBAAmB,EACnBE,UAAW,iBACX/G,eAAe,EACfsG,uBA7JW3Z,EAkKjB0W,gBAAkB,WAChB1W,EAAKmD,SAAS,CACZ0W,SAAU,GACVpb,GAAI,EACJqb,mBAAoB,GACpBjD,mBAAoB,GACpBW,aAAc,EACdoC,iBAAkB,GAClBD,iBAAkB,GAClBD,aAAc,GACd3C,kBAAkB,EAClB5K,eAAe,EACfW,gBAAgB,EAChBuK,mBAAmB,EACnB8C,yBAAyB,EACzBF,sBAAsB,EACtBC,mBAAmB,EACnBF,mBAAoB,GACpBI,UAAW,GACX/G,eAAe,GACd,kBAAMrT,EAAK2X,iBAtLC3X,EAyLjB2X,YAAc,WACZ,IAAIlZ,EAAKuB,EAAKpB,MAAMH,GACpB6F,IAAMC,IAAI,mBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAMoV,EAAWpV,EAAIC,KACjBoT,EAAS,GACPA,EAAO9M,OAAS,GAAG,CACvB,IAAI6P,EAAKhB,EAAS3L,KAAKwB,MAAMxB,KAAK4J,SAAW+B,EAAS7O,UAC1B,IAAxB8M,EAAOpU,QAAQmX,IACjB/C,EAAO/U,KAAK8X,GAMhB,IAHA,IAAMf,EAAqBhC,EAAOrZ,GAAIsb,QAChClD,EAAqBiB,EAAOrZ,GAAI6C,YAClCoY,EAAeI,EAAmBlC,MAAM,KACnC9U,EAAI4W,EAAa1O,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CAChD,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADMgY,EAEX,CAACpB,EAAahJ,GAAIgJ,EAAa5W,IAAnE4W,EAAa5W,GAFkCgY,EAAA,GAE9BpB,EAAahJ,GAFiBoK,EAAA,GAIlD9a,EAAKmD,SAAS,CACV0W,SAAU/B,EACVgC,qBACAjD,qBACA6C,oBA9MR1Z,EAAKpB,MAAQ,GAFEoB,mFASfE,KAAKwW,mDA4ME,IAAArS,EAAAnE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAMmY,iBACX3W,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,uBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACAtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,2BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,kFACAd,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACEnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK+L,eAA9B,yGAKR,KAEA/L,KAAKtB,MAAMuN,cACX/L,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CAAWlY,UAAU,kBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,+BACfX,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,KACKhZ,KAAKtB,MAAMiY,oBAEZzW,EAAAC,EAAAC,cAAA,OAAKS,UAAS,kBAAAgL,OAAoB7L,KAAKtB,MAAMwb,YACxCla,KAAKtB,MAAMob,mBAAmBpX,IAAI,SAACC,EAAKiI,GAAN,OAC/B1K,EAAAC,EAAAC,cAAA,QAAM0C,IAAK8H,EAAO/J,UAAU,eAAeC,QAASqD,EAAKoW,aAAc5X,MAG9E3C,KAAKtB,MAAMyU,cACVjT,EAAAC,EAAAC,cAAA,OAAKS,UAAS,mCACXb,KAAKtB,MAAMkb,oBACL,KAEX1Z,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACZb,KAAKtB,MAAM8a,aAAa9W,IAAI,SAACC,EAAMiI,GAAP,OAC3B1K,EAAAC,EAAAC,cAAA,QAAMU,QAASqD,EAAKiW,SAAUtX,IAAK8H,EAAO/J,UAAU,iBAAiB8B,MAGzEzC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACdb,KAAKtB,MAAMqb,qBACV7Z,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKya,cAA9B,0DAAkE,KAEnEza,KAAKtB,MAAMsb,kBACV9Z,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwa,UAA9B,yCAA0D,KAE3Dxa,KAAKtB,MAAMub,wBACV/Z,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK2M,kBAA9B,gEAAuE,QAK5E,KAEF3M,KAAKtB,MAAMkO,eACX1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,0CAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACAlZ,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,wBACe,IAAvCb,KAAKtB,MAAM+a,iBAAiB3O,OAC5B5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAKtB,MAAMgb,iBAAiB5O,OAAS9K,KAAKtB,MAAMgb,iBAAiBhX,IAAI,SAACC,EAAMiI,GAAP,OAClE1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,MAC7B,MAENzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAKtB,MAAM+a,iBAAiB/W,IAAI,SAACC,EAAMiI,GAAP,OAC7B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,QAIxCzC,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACGnZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAQrY,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAMJF,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMgb,iBAAiB5O,QAE/B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEF9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZ,EAAIb,KAAKtB,MAAMgb,iBAAiB5O,QAEnC5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGJ9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACtBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,gEACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,gBAAgBoF,GAAG,aAAnC,kFAKvB,MAGL/F,EAAAC,EAAAC,cAAA,uBArUeuB,aAoVRC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6C0X,ICpVtDuB,eAEL,SAAAA,EAAY9a,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA6a,IACjB/a,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA2Y,GAAAvY,KAAAtC,KAAMD,KAULyW,gBAAkB,WACjB1W,EAAKmD,SAAS,CACZiE,MAAO,GACPkM,cAAe,GACfC,cAAe,GACf9U,GAAI,EACJ0N,eAAe,EACfD,iBAAiB,EACjB8O,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBJ,gBAAgB,GACf,kBAAM9M,EAAK2X,iBAvBC3X,EA0BhB2X,YAAc,WACXrT,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACdwW,EAAS,GACJpY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKmI,OAAS,GAAG,CACrB,IAAI6P,EAAKzT,EAAM8G,KAAKwB,MAAMxB,KAAK4J,SAAW1Q,EAAM4D,UACtB,IAAtBnI,EAAKa,QAAQmX,IACfhY,EAAKE,KAAK8X,GAGdK,EAAOnY,KAAKF,GAGd,IAAM8T,EAAcuE,EAAO,GAAGhN,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SACnEhL,EAAKmD,SAAS,CACZiE,QACAuP,cACAuE,cA9COlb,EAkDfmb,gBAAkB,WAChBnb,EAAKmD,SAAS,CACZ+I,iBAAiB,EACjBC,eAAe,KArDJnM,EAyDfob,cAAgB,SAACje,GACf,GAAIA,EAAK,CACP,IAAIoW,EAAgBvT,EAAKpB,MAAM2U,cAAc1P,QAC7C0P,EAAcxQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CACZoQ,gBACAyH,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,QAEjB,CACL,IAAIoG,EAAgBtT,EAAKpB,MAAM0U,cAAczP,QAC7CyP,EAAcvQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CACZmQ,gBACA0H,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,MA1EXlN,EA+Ef6M,iBAAmB,WACjB,IAAIpO,EAAKuB,EAAKpB,MAAMH,GAChByc,EAASlb,EAAKpB,MAAMsc,OAExB,IADAzc,GAAU,GACDyc,EAAOlQ,OAAO,CACrB,IAAM2L,EAAeuE,EAAOzc,GAAIyP,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SACrEhL,EAAKmD,SAAS,CACZ1E,KACAkY,cACAqE,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,QAGnB,CACH,IAAI9F,EAAQpH,EAAKpB,MAAM2U,cAAc1P,QACjC2U,EAAW,GAAI5J,EAAe,GAClC4J,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAM2U,cAAcvI,OAC1C,IAAK,IAAIlI,EAAI,EAAGA,EAAIsE,EAAM4D,OAAQlI,IAChC8L,EAAa7L,KAAKqE,EAAMtE,GAAGrE,IAE7B+Z,EAAS5J,aAAeA,EACxB5O,EAAKC,MAAMvD,QAAQyC,gBAAgBqZ,GACnCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiB6b,EAAS5b,OAC7CoD,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBkO,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBf,eAAe,EACfD,iBAAiB,MAhHRlM,EAsHjBJ,UAAY,WACVC,IAAOC,IAAIE,EAAKpB,MAAMmO,cArHxB/M,EAAKpB,MAAQ,GAFIoB,mFAQfE,KAAKwW,mDAmHL,OACEtW,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAMsN,gBACX9L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,uBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,yBAEbR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,gHACAd,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACEnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKib,iBAA9B,yGAKR,KAEAjb,KAAKtB,MAAMuN,cACZ/L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,uBAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBAChBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAKtB,MAAM+X,YAAY9V,SAElCT,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAchB,KAAKtB,MAAM+X,YAAYvV,KACrChB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKN,UAAWmB,UAAU,sBAAsBY,MAAM,gEACnEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAO,kBAGdlB,KAAKtB,MAAMoc,qBACV5a,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACoN,EAAA,EAAK2N,KAAN,KAAYnb,KAAKtB,MAAM+X,YAAYrV,aACnClB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,OACU,MAGhBnB,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcwa,OAAK,GACjBlb,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACvBb,KAAKtB,MAAMqc,eACZ7a,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKkb,cAAcna,KAAKf,MAAM,GAAOqI,SAAO,GAA7D,4BACAnI,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKkb,cAAcna,KAAKf,MAAM,GAAQqI,SAAO,GAA9D,0CACU,KAEXrI,KAAKtB,MAAMsO,mBACV9M,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK2M,iBAAkBtE,SAAO,GAA/C,gEAAoE,SAM3E,KAEFrI,KAAKtB,MAAMkO,eACX1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,0CAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACAlZ,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,wBACW,IAApCb,KAAKtB,MAAM0U,cAActI,OAC1B5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAKtB,MAAM2U,cAAc3Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAKtB,MAAM0U,cAAc1Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,iBAIhElB,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACGnZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAQrY,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAM2U,cAAcvI,QAE5B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEF9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMsc,OAAOlQ,OAAS9K,KAAKtB,MAAM2U,cAAcvI,QAEvD5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGJ9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACtBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,gEACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,gBAAgBoF,GAAG,aAAnC,kFAKvB,MAGL/F,EAAAC,EAAAC,cAAA,uBA5OYuB,aA0PLC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6CiZ,IC1PtDQ,eAEL,SAAAA,EAAYtb,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAqb,IACjBvb,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAmZ,GAAA/Y,KAAAtC,KAAMD,KAULyW,gBAAkB,WACf1W,EAAKmD,SAAS,CACZiE,MAAO,GACPkM,cAAe,GACfC,cAAe,GACf9U,GAAI,EACJ0N,eAAe,EACfD,iBAAiB,EACjB8O,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBJ,gBAAgB,EAChB0O,oBAAoB,EACpBC,YAAa,KACbC,iBAAkB,mBAClBpE,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,GACR2W,WAAY,GACZC,UAAW,OACX1B,UAAW,IACV,kBAAMpa,EAAK2X,iBAjCD3X,EAoCjB2X,YAAc,WACZrT,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACdwW,EAAS,GACJpY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKmI,OAAS,GAAG,CACrB,IAAI6P,EAAKzT,EAAM8G,KAAKwB,MAAMxB,KAAK4J,SAAW1Q,EAAM4D,UACtB,IAAtBnI,EAAKa,QAAQmX,IACfhY,EAAKE,KAAK8X,GAGdK,EAAOnY,KAAKF,GAEd,IAAM8T,EAAcuE,EAAO,GAAGhN,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SACnEhL,EAAKmD,SAAS,CACZiE,QACAuP,cACAuE,cAvDSlb,EA2DjBiM,cAAgB,WACdjM,EAAKmD,SAAS,CACZ+I,iBAAiB,EACjBC,eAAe,KA9DFnM,EAkEjBqG,aAAe,SAACZ,GACdzF,EAAKmD,SAAS,CACZ+B,OAAQO,EAAME,OAAOrG,MAAMgH,OAAO,EAAE,IACpCuV,WAAYpW,EAAME,OAAOrG,MAAMgH,OAAO,EAAE,OArE3BtG,EAwEjB+b,iBAAmB,WACjB,IAAIxI,EAAgBvT,EAAKpB,MAAM2U,cAAc1P,QACzCyP,EAAgBtT,EAAKpB,MAAM0U,cAAczP,QACzC8S,EAAc3W,EAAKpB,MAAM+X,YACzBzR,EAASlF,EAAKpB,MAAMsG,OACrByR,EAAYvV,OAAS8D,GACtBqO,EAAcxQ,KAAK4T,GACnB3W,EAAKmD,SAAS,CACZoQ,gBACAyH,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBoK,gBAAgB,EAChBsE,gBAAgB,EAChBD,eAAe,EACfzW,OAAQ,GACRkV,UAAW,sBAGI,KAAXlV,GACNoO,EAAcvQ,KAAK4T,GACnB3W,EAAKmD,SAAS,CACZqY,oBAAoB,EACpBlI,gBACA0H,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBoK,gBAAgB,EAChBsE,gBAAgB,EAChBD,eAAe,EACfzW,OAAQ,GACRkV,UAAW,iBACXyB,WAAY,8DAKdvI,EAAcvQ,KAAK4T,GACnB3W,EAAKmD,SAAS,CACZqY,oBAAoB,EACpBlI,gBACA0H,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBoK,gBAAgB,EAChBsE,gBAAgB,EAChBD,eAAe,EACfzW,OAAQ,GACRkV,UAAW,qBAxHApa,EA6HjB6M,iBAAmB,WACjB,IAAIpO,EAAKuB,EAAKpB,MAAMH,GACpBA,GAAU,EACV,IAAMyc,EAASlb,EAAKpB,MAAMsc,OAC1B,GAAIzc,EAAKyc,EAAOlQ,OAAQ,CACxB,IAAM2L,EAAcuE,EAAOzc,GAAIyP,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SAClEhL,EAAKmD,SAAS,CACZ1E,KACAkY,cACAqE,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBoK,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,GACRsW,oBAAoB,QAInB,CACH,IAAIpU,EAAQpH,EAAKpB,MAAM2U,cAAc1P,QACjC2U,EAAW,GAAI5J,EAAe,GAClC4J,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAM2U,cAAcvI,OAC1C,IAAK,IAAIlI,EAAI,EAAGA,EAAIsE,EAAM4D,OAAQlI,IAChC8L,EAAa7L,KAAKqE,EAAMtE,GAAGrE,IAE7B+Z,EAAS5J,aAAeA,EACxB5O,EAAKC,MAAMvD,QAAQwC,iBAAiBsZ,GACpCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiB6b,EAAS5b,OAC7CoD,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBkO,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBf,eAAe,EACfD,iBAAiB,EACjBoL,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChBJ,oBAAoB,EACpBtW,OAAQ,OAzKGlF,EA8KjBJ,UAAY,WACVC,IAAOC,IAAIE,EAAKpB,MAAM+X,YAAYvV,OA/KnBpB,EAkLjBgc,UAAY,WACVhc,EAAKmD,SAAS,CACZmU,gBAAgB,EAChBqE,eAAe,KAnLnB3b,EAAKpB,MAAQ,GAFIoB,mFAQfE,KAAKwW,mDAkLL,OACEtW,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAMsN,gBACX9L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,uBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACAtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,2BAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,2EACAd,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACEnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK+L,eAA9B,yGAKR,KAEA/L,KAAKtB,MAAMuN,cACZ/L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,wBAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,kBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,gBACrBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKN,UAAW2I,SAAO,EAACxH,UAAU,gBAAeX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAM2I,KAAK,MAAMnJ,KAAK,gBACvFlB,KAAKtB,MAAMgd,eACVxb,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAO7D,YAAY,qJAA6BtG,GAAG,aAAa2G,SAAUlF,KAAKmG,eAAgB,MAIlGnG,KAAKtB,MAAMoc,qBACV5a,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACCP,KAAKtB,MAAM4c,mBAAqBpb,EAAAC,EAAAC,cAACoN,EAAA,EAAK2N,KAAN,CAAWta,UAAWb,KAAKtB,MAAM8c,kBAAmBxb,KAAKtB,MAAM+X,YAAYvV,MAAmB,KAC7HhB,EAAAC,EAAAC,cAACoN,EAAA,EAAK2N,KAAN,CAAWta,UAAWb,KAAKtB,MAAMwb,WAAYla,KAAKtB,MAAMid,YACxDzb,EAAAC,EAAAC,cAACoN,EAAA,EAAK2N,KAAN,CAAWta,UAAWb,KAAKtB,MAAMkd,WAAY5b,KAAKtB,MAAM+X,YAAYrV,aACpElB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,uBAClB,MAGhBX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcwa,OAAK,GACnBlb,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACZb,KAAKtB,MAAM0Y,eACXlX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAKtB,MAAM+X,YAAY9V,SAC7B,KAETX,KAAKtB,MAAM+c,cACVvb,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACXX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK8b,WAApB,cACK,MAGV5b,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,yBACvBb,KAAKtB,MAAMqc,eACZ7a,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK6b,iBAAkBxT,SAAO,GAA/C,2DACU,KAEXrI,KAAKtB,MAAMsO,mBACV9M,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK2M,iBAAkBtE,SAAO,GAA/C,gEAAoE,SAO3E,KAEFrI,KAAKtB,MAAMkO,eACb1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,0CAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACAlZ,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,wBACY,IAApCb,KAAKtB,MAAM0U,cAActI,OACzB5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAKtB,MAAM2U,cAAc3Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAKtB,MAAM0U,cAAc1Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,iBAIlElB,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACGnZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAQrY,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAM2U,cAAcvI,QAE5B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEF9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMsc,OAAOlQ,OAAS9K,KAAKtB,MAAM2U,cAAcvI,QAEvD5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGJ9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACtBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,gEACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,gBAAgBoF,GAAG,aAAnC,kFAKrB,MAGL/F,EAAAC,EAAAC,cAAA,uBAxTUuB,aAsULC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6CyZ,ICtUtDU,eAEL,SAAAA,EAAYhc,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA+b,IACjBjc,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA6Z,GAAAzZ,KAAAtC,KAAMD,KAWLyW,gBAAkB,WACjB1W,EAAKmD,SAAS,CACZiE,MAAO,GACPkM,cAAe,GACfC,cAAe,GACf9U,GAAI,EACJ0N,eAAe,EACfD,iBAAiB,EACjB8O,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBJ,gBAAgB,EAChBwK,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,GACRyR,YAAa,GACbuF,WAAW,EACXhB,OAAQ,GACRiB,UAAU,GACT,WAAQnc,EAAK2X,iBAhCD3X,EAmCf2X,YAAc,WACZrT,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACdwW,EAAS,GACJpY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKmI,OAAS,GAAG,CACrB,IAAI6P,EAAKzT,EAAM8G,KAAKwB,MAAMxB,KAAK4J,SAAW1Q,EAAM4D,UACtB,IAAtBnI,EAAKa,QAAQmX,IACfhY,EAAKE,KAAK8X,GAGdK,EAAOnY,KAAKF,GAGd,IAAM8T,EAAcuE,EAAO,GAAGhN,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SACnEhL,EAAKmD,SAAS,CACZiE,QACAuP,cACAuE,cAvDOlb,EA2DfiM,cAAgB,WACdjM,EAAKmD,SAAS,CACZ+I,iBAAiB,EACjBC,eAAe,KA9DJnM,EAkEf6M,iBAAmB,WACjB,IAAIpO,EAAKuB,EAAKpB,MAAMH,GACpBA,GAAU,EACV,IAAMyc,EAASlb,EAAKpB,MAAMsc,OAC1B,GAAIzc,EAAKyc,EAAOlQ,OAAQ,CACtB,IAAM2L,EAAeuE,EAAOzc,GAAIyP,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SACnEhL,EAAKmD,SAAS,CACZ1E,KACAuc,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBoK,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,GACRyR,cACAwF,UAAU,QAIX,CACH,IAAI/U,EAAQpH,EAAKpB,MAAM2U,cAAc1P,QACjC2U,EAAW,GAAI5J,EAAe,GAClC4J,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAM2U,cAAcvI,OAC1C,IAAK,IAAIlI,EAAI,EAAGA,EAAIsE,EAAM4D,OAAQlI,IAChC8L,EAAa7L,KAAKqE,EAAMtE,GAAGrE,IAE7B+Z,EAAS5J,aAAeA,EACxB5O,EAAKC,MAAMvD,QAAQqC,eAAeyZ,GAClCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiB6b,EAAS5b,OAC7CoD,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBkO,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBf,eAAe,EACfD,iBAAiB,EACjBoL,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,OA7GClF,EAkHhBJ,UAAY,WACTC,IAAOC,IAAIE,EAAKpB,MAAMmO,cAnHT/M,EAsHhBgc,UAAY,WACXhc,EAAKmD,SAAS,CACZmU,gBAAgB,EAChBqE,eAAe,KAzHF3b,EA6HhB2Y,YAAc,SAACla,GACd,IAAI2d,EAAepc,EAAKpB,MAAMsc,OAAOlb,EAAKpB,MAAMH,IAAI4O,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAOA,IACnE8U,EAAgBvT,EAAKpB,MAAM2U,cAAc1P,QACzCyP,EAAgBtT,EAAKpB,MAAM0U,cAAczP,QAC1C7D,EAAKpB,MAAM+X,YAAYlY,KAAO2d,EAAa3d,IAC5C8U,EAAcxQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CACZmU,gBAAgB,EAChB4E,WAAW,EACX3I,gBACAD,gBACA6I,UAAU,MAKZ7I,EAAcvQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CACZmU,gBAAgB,EAChB4E,WAAW,EACX3I,gBACAD,gBACA6I,UAAU,MAnJCnc,EAwJhB0a,SAAW,WACV1a,EAAKmD,SAAS,CACZmU,gBAAgB,EAChB4E,WAAW,KAzJblc,EAAK8Y,IAAMC,IAAMC,YACnBhZ,EAAKpB,MAAQ,GAHIoB,mFASfE,KAAKwW,mDAsJM,IAAArS,EAAAnE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAMsN,gBACX9L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,uBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACAtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,mCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,mDACAd,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACEnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK+L,eAA9B,yGAIQ,KAClB/L,KAAKtB,MAAMuN,cACX/L,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CAAWlY,UAAU,kBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACfX,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,KACKhZ,KAAKtB,MAAM+X,YAAYvV,KACtBhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,sBAAsBC,QAASd,KAAKN,UAAW+B,MAAM,gEACnEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMb,UAAU,eAAgBK,KAAO,kBAG/ChB,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CAAWlY,UAAU,sBACpBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,iBACfb,KAAKtB,MAAMsc,OAAOhb,KAAKtB,MAAMH,IAAImE,IAAI,SAACpF,EAAMsN,GAAP,OAClC1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,EAAO/J,UAAU,sBAC/BX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KACXf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ0a,SAAU9X,EAAKzF,MAAMud,SAAWE,IAAK,SAAAvD,GAASzU,EAAKyU,IAAMA,GAAS/X,UAAWsD,EAAKzF,MAAM0d,mBAAoBtb,QAASqD,EAAKsU,YAAY1X,KAAKoD,EAAM7G,EAAKiB,KAAOjB,EAAK8D,kBAKlLlB,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWO,UAAU,sBACnBX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KACdf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKwa,SAAU3Z,UAAU,QAA1C,6CAKPb,KAAKtB,MAAM0Y,eACVlX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAKtB,MAAM+X,YAAY9V,MAAOE,UAAU,oBAGvDb,KAAKtB,MAAMsd,WAAahc,KAAKtB,MAAM0Y,eAClClX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK2M,iBAAkBtE,SAAO,GAA/C,6HAA+E,MAEzE,QAKb,KAEFrI,KAAKtB,MAAMkO,eACX1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,0CAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACAlZ,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,wBACU,IAApCb,KAAKtB,MAAM0U,cAActI,OAC3B5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAKtB,MAAM2U,cAAc3Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAKtB,MAAM0U,cAAc1Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,iBAI9DlB,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACGnZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAQrY,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAMJF,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAM2U,cAAcvI,QAE5B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEF9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMsc,OAAOlQ,OAAS9K,KAAKtB,MAAM2U,cAAcvI,QAEvD5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGJ9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACtBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,wCACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,gBAAgBoF,GAAG,aAAnC,kFAKvB,MAGL/F,EAAAC,EAAAC,cAAA,uBAtRmBuB,aAoShBC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6Cma,ICpStDM,eAEL,SAAAA,EAAYtc,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAqc,IACjBvc,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAma,GAAA/Z,KAAAtC,KAAMD,KAYRyW,gBAAkB,WAChB1W,EAAKmD,SAAS,CACZiE,MAAO,GACPkM,cAAe,GACfC,cAAe,GACf9U,GAAI,EACJ0N,eAAe,EACfD,iBAAiB,EACjB8O,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBJ,gBAAgB,EAChBwK,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,GACRyR,YAAa,GACbuF,WAAW,EACXhB,OAAQ,GACRiB,UAAU,GACT,kBAAMnc,EAAK2X,iBAjCG3X,EAoCjB2X,YAAc,WACZrT,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACdwW,EAAS,GACJpY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKmI,OAAS,GAAG,CACrB,IAAI6P,EAAKzT,EAAM8G,KAAKwB,MAAMxB,KAAK4J,SAAW1Q,EAAM4D,UACtB,IAAtBnI,EAAKa,QAAQmX,IACfhY,EAAKE,KAAK8X,GAGdK,EAAOnY,KAAKF,GAEd,IAAM8T,EAAcuE,EAAO,GAAGhN,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SACnEhL,EAAKmD,SAAS,CACZiE,QACAuP,cACAuE,cAvDSlb,EA4DnBiM,cAAgB,WACdjM,EAAKmD,SAAS,CACZ+I,iBAAiB,EACjBC,eAAe,KA/DAnM,EAmEnB6M,iBAAmB,WACjB,IAAIpO,EAAKuB,EAAKpB,MAAMH,GACpBA,GAAU,EACV,IAAMyc,EAASlb,EAAKpB,MAAMsc,OAC1B,GAAGzc,EAAKyc,EAAOlQ,OAAQ,CACrB,IAAM2L,EAAeuE,EAAOzc,GAAIyP,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAOzc,GAAIuM,SACtEhL,EAAKmD,SAAS,CACZ1E,KACAkY,cACAqE,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBoK,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,GACRiX,UAAU,QAIT,CACH,IAAI/U,EAAQpH,EAAKpB,MAAM2U,cAAc1P,QACjC2U,EAAW,GAAI5J,EAAe,GAClC4J,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAM2U,cAAcvI,OAC1C,IAAK,IAAIlI,EAAI,EAAGA,EAAIsE,EAAM4D,OAAQlI,IAChC8L,EAAa7L,KAAKqE,EAAMtE,GAAGrE,IAE7B+Z,EAAS5J,aAAeA,EAExB5O,EAAKC,MAAMvD,QAAQsC,eAAewZ,GAClCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiB6b,EAAS5b,OAC7CoD,EAAKmD,SAAS,CACV2J,gBAAgB,EAChBkO,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBf,eAAe,EACfD,iBAAiB,EACjBoL,gBAAgB,EAChBqE,eAAe,EACfC,gBAAgB,EAChB1W,OAAQ,OA/GGlF,EAoHnBJ,UAAY,WACVC,IAAOC,IAAIE,EAAKpB,MAAMmO,cArHL/M,EAwHnBgc,UAAY,WACVhc,EAAKmD,SAAS,CACZmU,gBAAgB,EAChBqE,eAAe,KA3HA3b,EA+HlB2Y,YAAc,SAACla,GACd,IAAI2d,EAAepc,EAAKpB,MAAMsc,OAAOlb,EAAKpB,MAAMH,IAAI4O,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAOA,IACnE8U,EAAgBvT,EAAKpB,MAAM2U,cAAc1P,QACzCyP,EAAgBtT,EAAKpB,MAAM0U,cAAczP,QAC1C7D,EAAKpB,MAAM+X,YAAYlY,KAAO2d,EAAa3d,IAC5C8U,EAAcxQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CACZmU,gBAAgB,EAChB4E,WAAW,EACX3I,gBACAD,gBACA6I,UAAU,MAKV7I,EAAcvQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CACZmU,gBAAgB,EAChB4E,WAAW,EACX3I,gBACAD,gBACA6I,UAAU,MArJCnc,EA2JnB0a,SAAW,WACT1a,EAAKmD,SAAS,CACZmU,gBAAgB,EAChB4E,WAAW,KA9JIlc,EAkKnBJ,UAAY,WACVC,IAAOC,IAAIE,EAAKpB,MAAM+X,YAAYvV,OAjKhCpB,EAAK8Y,IAAMC,IAAMC,YACjBhZ,EAAKpB,MAAQ,GAHEoB,mFAUjBE,KAAKwW,mDA4JE,IAAArS,EAAAnE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACGxK,KAAKtB,MAAMsN,gBACV9L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,uBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACAtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,mCAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACAV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,mDACAd,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACAnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK+L,eAA9B,yGAKA,KAED/L,KAAKtB,MAAMuN,cACV/L,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CAAWlY,UAAU,kBACrBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBAChBX,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,KACChZ,KAAKtB,MAAM+X,YAAYrV,YACxBlB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKN,UAAWmB,UAAU,uBACzCX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMb,UAAU,eAAgBK,KAAO,kBAGvChB,EAAAC,EAAAC,cAAC2Y,EAAA,EAAD,CAAWlY,UAAU,sBACrBX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,iBACfb,KAAKtB,MAAMsc,OAAOhb,KAAKtB,MAAMH,IAAImE,IAAI,SAACpF,EAAMsN,GAAP,OACrC1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,EAAO/J,UAAU,sBACjCX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACAV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KAChBf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ0a,SAAU9X,EAAKzF,MAAMud,SAAWE,IAAK,SAAAvD,GAASzU,EAAKyU,IAAMA,GAAS/X,UAAWsD,EAAKzF,MAAM0d,mBAAoBtb,QAASqD,EAAKsU,YAAY1X,KAAKoD,EAAM7G,EAAKiB,KAAOjB,EAAK4D,WAK3KhB,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWO,UAAU,uBACrBX,EAAAC,EAAAC,cAACC,EAAA,EAAKO,QAAN,KACAV,EAAAC,EAAAC,cAACC,EAAA,EAAKW,OAAN,CAAaC,GAAG,KAChBf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQV,UAAU,YAAYC,QAASd,KAAKwa,UAA5C,6CAKCxa,KAAKtB,MAAM0Y,eACVlX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAKtB,MAAM+X,YAAY9V,MAAOE,UAAU,oBAGnDb,KAAKtB,MAAMsd,UACV9b,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK2M,iBAAkBtE,SAAO,GAA/C,6HAAgF,MAE1E,QAKV,KAEDrI,KAAKtB,MAAMkO,eACX1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,0CACtCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBAChBX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACAV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACAlZ,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,wBACY,IAApCb,KAAKtB,MAAM0U,cAActI,OAC5B5K,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cACfb,KAAKtB,MAAM0U,cAAc1Q,IAAI,SAACC,EAAMiI,GAAP,OAC5B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,QAAsDyB,EAAKvB,gBAG7DlB,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACAnZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAQrY,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAMRF,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC5BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACdb,KAAKtB,MAAM2U,cAAcvI,QAE1B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEA9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACdb,KAAKtB,MAAMsc,OAAOlQ,OAAS9K,KAAKtB,MAAM2U,cAAcvI,QAErD5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGA9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACxBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,gEACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,YAAYpF,UAAU,iBAA/B,+DAKd,MAGJX,EAAAC,EAAAC,cAAA,uBAtR6BuB,aAoShBC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6Cya,ICxN7CC,eA9Eb,SAAAA,EAAYvc,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAsc,IAChBxc,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAoa,GAAAha,KAAAtC,KAAMD,KAiCNwc,KAAO,WACLtY,QAAQC,IAAKpE,EAAKpB,QAnCJoB,EAsChB+I,SAAW,WACT/I,EAAKmD,SAAS,SAAC6F,GACb,MAAO,CAACC,QAASD,EAAKC,QAAU,MAtCpCjJ,EAAKpB,MAAQ,CACX8d,OAAQ,GACRje,GAAI,EACJ2C,KAAM,GACNyK,YAAa,GACb8Q,UAAW,KACX9b,MAAO,GACP+b,KAAM,GACN3T,QAAS,GAVKjJ,mFAcE,IAAAqE,EAAAnE,KACdzB,EAAKyB,KAAKtB,MAAMH,GAClB6F,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GACJ,IAAMiY,EAASjY,EAAIC,KACbtD,EAAOsb,EAAOje,GAAI2C,KAClByK,EAAc6Q,EAAOje,GAAIoN,YACzB8Q,EAAYD,EAAOje,GAAIke,UACvB9b,EAAQ6b,EAAOje,GAAIoC,MACnB+b,EAAOF,EAAOje,GAAIme,KACvBvY,EAAKlB,SAAS,CACbuZ,SACAtb,OACAyK,cACA8Q,YACA9b,QACA+b,4CAeR,OACExc,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKuc,MAAtB,WACArc,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,oBACnCb,KAAKtB,MAAM8d,OAAO7Y,MAAM,EAAE3D,KAAKtB,MAAMqK,SAASrG,IAAI,SAACia,EAAM/R,GAAP,OACjD1K,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,GACT1K,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKic,EAAMhc,QAClBT,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,iBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAc2b,EAAMzb,MACpBhB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KAAmBsb,EAAMhR,cAE3BzL,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcwa,OAAK,EAACva,UAAU,eAC5BX,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAI,CAAE2F,SAAQ,WAAAC,OAAa8Q,EAAMpe,IAAOwL,MAAO,CAAE4S,WAAYA,EAAMzb,WAKhFlB,KAAKtB,MAAMqK,QAAU/I,KAAKtB,MAAM8d,OAAO1R,QACtC5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK6I,UAA9B,eAIN3I,EAAAC,EAAAC,cAAA,uBAzEauB,aCMfib,eAEJ,SAAAA,EAAY7c,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA4c,IAChB9c,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA0a,GAAAta,KAAAtC,KAAMD,KAURyW,gBAAkB,WAChB1W,EAAKmD,SAAS,CACZ4Z,MAAO,GACP3Z,QAAS,GACT2E,cAAe,GACfzI,MAAO,KACP0d,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACf+G,sBAAsB,EACtB7G,iBAAiB,EACjBzR,MAAO,GACP6R,QAAS,GACT3S,MAAO,KACPoS,aAAc,GACdgK,iBAAkB,GAClBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,EACbC,YAAa,GACbC,kBAAmB,GACnBC,uBAAwB,GACxBC,qBAAsB,GACtBC,aAAc,GACb,kBAAM5d,EAAK2X,iBAtCE3X,EAyClB2X,YAAc,WACZrT,IAAMC,IAAI,gBACPC,KAAK,SAAAC,GACJ,IAAIsY,EAAQtY,EAAIC,KACZuO,EAAe,GACnB8J,EAAMna,IAAI,SAACC,EAAMiI,GAAP,OAAiBmI,EAAalQ,KAAKF,EAAK2Q,WAClDxT,EAAKmD,SAAS,CACZ4Z,QACA9J,gBACC,kBAAMjT,EAAK6d,qBAlDF7d,EAsDlB6d,cAAgB,WACd,IAAIza,EAAU,GACdpD,EAAKpB,MAAMme,MAAMna,IAAI,SAACC,EAAMC,GAAP,OACPM,EAAQL,KAAK,CACTC,IAAKH,EAAKpE,GACVwE,KAAMJ,EAAKib,WACXxe,MAAOuD,EAAKib,eAE9B9d,EAAKmD,SAAS,CACZC,WACC,kBAAMpD,EAAKqD,eAhEErD,EAmElBqD,UAAY,WACV,IAAID,EAAUpD,EAAKpB,MAAMwE,QAAQS,QAE3BN,EAASH,EACZR,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACVZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIJ,EAAQI,KAAIZ,IAAI,SAAAY,GAAC,OAAIJ,EAAQI,KAC5CxD,EAAKmD,SAAS,CAAEC,QAASG,KA1ETvD,EA6ElB+d,YAAc,WACZ,IAAIhW,EAAgB/H,EAAKpB,MAAMU,MAC/BU,EAAKmD,SAAS,CACZ4E,mBAhFc/H,EAoFlBgE,aAAe,SAACR,EAADS,GAAA,IAAM3E,EAAN2E,EAAM3E,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAK+d,iBApFnD/d,EAsFlBge,cAAgB,SAACvf,GACf,IAAIse,EAAQ/c,EAAKpB,MAAMme,MAAMlZ,QACzBlC,EAAQob,EAAMte,GAAIkD,MAClB6R,EAAUuJ,EAAMte,GAAI+U,QACpB3S,EAAQkc,EAAMte,GAAIoC,MACtBb,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACfvR,QACA6R,UACA3S,SACC,kBAAMb,EAAKie,gBAlGEje,EAqGlBke,YAAc,WACZle,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACjBD,aAAc,GACdgK,iBAAkB,GAClBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,EACbC,YAAa,GACbC,kBAAmB,GACnBC,uBAAwB,GACxBC,qBAAsB,MArHN3d,EA0HlBie,WAAa,WACX,IAAIX,EAAkB,GAElBJ,EADsBld,EAAKpB,MAAM4U,QAAQ3P,QACA+T,MAAM,MACnDsF,EAAmBiB,MACnB,IACIrb,EADAsb,EAAmB,GAEvB,IAAKtb,EAAI,EAAGA,EAAIoa,EAAmBlS,OAAQlI,IAC1Csb,EAAiBrb,KAAKma,EAAmBpa,GAAG8U,MAAM,MAEnD,IAAIyG,EAAmBnB,EAAmB,GAAGtF,MAAM,KAC/CyF,EAAqB,GACrBiB,EAAuB,GAC3B,IAAKxb,EAAI,EAAGA,EAAIsb,EAAiBpT,OAAQlI,IAAK,CAC7C,IAAI4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,SAASsG,EAAiBtb,GAAGkI,QACrDqS,EAAmBta,KAAKqb,EAAiBtb,GAAG4N,IAC5C4N,EAAqBvb,KAAK2N,GAE3B,IAAIoH,EAASuG,EAAiBnQ,KAAKwB,MAAMxB,KAAK4J,SAASuG,EAAiBrT,SACpEoS,EAAoB,GAExB,IAAKta,EAAI,EAAGA,EAAIsb,EAAiBpT,OAAQlI,IAAK,CAE3C,IADF,IAAIyb,EAASH,EAAiBtb,GACnB4N,EAAI,EAAGA,EAAI6N,EAAOvT,OAAQ0F,IAChC4M,EAAgBva,KAAKwb,EAAO7N,IAC1BA,IAAM4N,EAAqBxb,GAC9Bsa,EAAkBra,KAAK3C,EAAAC,EAAAC,cAAA,QAAMS,UAAU,iBAAiBwd,EAAO7N,KAG/D0M,EAAkBra,KAAK3C,EAAAC,EAAAC,cAAA,QAAMU,QAAShB,EAAKwe,WAAYzd,UAAU,oBAGnEqc,EAAkBra,KAAK3C,EAAAC,EAAAC,cAAA,QAAMS,UAAU,gBAAhB,MAG1Bf,EAAKmD,SAAS,CACb+Z,qBACCmB,mBACAlB,kBAAmBrF,EACnBsF,oBACAkB,uBACAjB,qBACAe,mBACAd,mBACC,kBAAMtd,EAAKyZ,kBAtKEzZ,EAyKlBsa,SAAW,SAAC9W,GACV,IAMIV,EANAya,EAAcvd,EAAKpB,MAAM2e,YACzBC,EAAc,GACdH,EAAqBrd,EAAKpB,MAAMye,mBAAmBxZ,QACnD4a,EAAoBjb,EAAEmC,OAAOkT,YAC7B6F,EAAgB,GAChBf,EAAuB,GAEvBgB,EAAsB5G,SAAS6G,uBAAuB,wBAAwB,GAAGC,SACrF,IAAK/b,EAAI,EAAGA,EAAI6b,EAAoB3T,OAAQlI,IACH,mBAArC6b,EAAoB7b,GAAG/B,YACzB4c,EAAqB5a,KAAKD,GAC1B4b,EAAc3b,KAAK4b,EAAoB7b,KAGzC,IAAKA,EAAI,EAAGA,EAAI6a,EAAqB3S,OAAQlI,IAC5C0a,EAAYza,KAAKD,GAElB,IAAKA,EAAI,EAAGA,EAAI6b,EAAoB3T,OAAQlI,IACD,mBAArC6b,EAAoB7b,GAAG/B,WAAoC+B,IAAM6a,EAAqBJ,KAC1FoB,EAAoB7b,GAAG+V,YAAc4F,GAGxCd,EAAqBpU,OAAOgU,EAAa,GACxC,IAAIG,EAAyB1d,EAAKpB,MAAM8e,uBAAuB7Z,QAC3D4Z,EAAoBzd,EAAKpB,MAAM6e,kBAAkB5Z,QACjD8B,EAASnC,EAAEmC,OACf+X,EAAuB3a,KAAK4C,EAAOkT,aAEnC,IADA,IAAI0B,EAAc,EACT5U,EAASA,EAAO6U,wBACvBD,IAGFkD,EAAkBlU,OAAOgR,EAAa,GACL,IAA7BkD,EAAkBzS,QACrBhL,EAAKmD,SAAS,CACb8W,sBAAsB,IAIxBsD,IACAvd,EAAKmD,SAAS,CACfoa,cACAC,cACAG,uBACAN,qBACAK,yBACAD,uBAxNiBzd,EA4NnByZ,aAAe,WAEX,IADH,IAAItM,EAAQnN,EAAKpB,MAAMye,mBAAmBxZ,QAC9Bf,EAAIqK,EAAMnC,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CACvC,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADHyV,EAEhB,CAACpL,EAAMuD,GAAIvD,EAAMrK,IAAvCqK,EAAMrK,GAFgCyV,EAAA,GAE5BpL,EAAMuD,GAFsB6H,EAAA,GAI3CvY,EAAKmD,SAAS,CACVsa,kBAAmBtQ,KAnORnN,EAuOlBwe,WAAa,SAAChb,GACZ,IAAIia,EAAoBzd,EAAKpB,MAAM6e,kBAAkB5Z,QACjDib,EAAUtb,EAAEmC,OACa,KAAzBnC,EAAEmC,OAAOkT,cACZ4E,EAAkB1a,KAAKS,EAAEmC,OAAOkT,aAChCiG,EAAQC,UAAY,GACnB/e,EAAKmD,SAAS,CACbsa,kBAAmBA,MA9ONzd,EAwPlBgf,WAAa,SAACxb,GAKb,IAJA,IAAIka,EAAyB1d,EAAKpB,MAAM8e,uBAAuB7Z,QAC3Dob,EAAqBjf,EAAKpB,MAAMye,mBAAmBxZ,QACnD4Z,EAAoBzd,EAAKpB,MAAM6e,kBAAkB5Z,QACjDqb,EAAQ,EACHpc,EAAI,EAAGA,EAAImc,EAAmBjU,OAAQlI,IAC1Cmc,EAAmBnc,KAAO4a,EAAuB5a,GACpDoc,IAGAzB,EAAkB1a,KAAK2a,EAAuB5a,IAIhD,IAAI8a,EAAesB,EAEd1G,EAAW,GACfA,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQsiB,EACjBlf,EAAKC,MAAMvD,QAAQ8C,kBAAkBgZ,GACrCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiBuiB,GACrClf,EAAKmD,SAAS,CACb8W,sBAAsB,EACtB7G,iBAAiB,EACjBD,qBAAqB,EACrByK,eACAH,uBAlRAzd,EAAKpB,MAAQ,CACXme,MAAO,IAHO/c,mFAQhBE,KAAKwW,mDAgRE,IAAArS,EAAAnE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACdb,KAAKtB,MAAMsU,eAAiBhT,KAAKtB,MAAMme,MAAM/R,OAC5C5K,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,aAAa6D,UAAQ,GACnCxE,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMU,MAClB0D,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK8D,aACjBZ,QAASlD,KAAKtB,MAAMwE,YAGhB,KAERlD,KAAKtB,MAAMme,MAAM/R,QAAU9K,KAAKtB,MAAMoe,gBACtC5c,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,cAAc4M,YAAa,GAChDzN,KAAKtB,MAAMme,MAAMna,IAAI,SAACC,EAAMiI,GAAP,OAA+C,QAA7BzG,EAAKzF,MAAMmJ,eAAuD,KAA7B1D,EAAKzF,MAAMmJ,eAAwB1D,EAAKzF,MAAMmJ,gBAAkBlF,EAAKib,aAChJ1d,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,GACT1K,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,SAEnBT,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAc2B,EAAKlB,OACnBvB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACGsB,EAAK2Q,QAAQlN,OAAO,EAAE,KAAO,SAGlClG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASqD,EAAK2Z,cAAc/c,KAAKoD,EAAMxB,EAAKpE,KAApD,kDAGY,KAEhByB,KAAKtB,MAAMuU,oBACT/S,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,YAAavc,MAAQ,uHACxCvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAGzBnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4DAC1Bb,KAAKtB,MAAMwe,oBAGnBhd,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACdb,KAAKtB,MAAM6e,kBAAkB7a,IAAI,SAACC,EAAMiI,GAAP,OACjC1K,EAAAC,EAAAC,cAAA,QAAMU,QAASqD,EAAKiW,SAAUtX,IAAK8H,EAAO/J,UAAU,iBAAiB8B,KAErE3C,KAAKtB,MAAMqb,qBACX7Z,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK8e,YAAtB,0DAAuD,OAG9C,KAET9e,KAAKtB,MAAMwU,gBACVhT,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4DAC3BX,EAAAC,EAAAC,cAAA,8IAA6BJ,KAAKtB,MAAMgf,aAAxC,iBAA0D1d,KAAKtB,MAAMye,mBAAmBrS,OAAxF,gCAGH5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAAEnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,gBAAgBoF,GAAG,aAAnC,gFAEX,OAIlB/F,EAAAC,EAAAC,cAAA,uBAvWkBuB,aAsXXC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6Cgb,ICxXtDqC,eAEL,SAAAA,EAAYlf,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAif,IACjBnf,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA+c,GAAA3c,KAAAtC,KAAMD,KA2BN0X,YAAc,WACZrT,IAAMC,IAAI,gBACPC,KAAK,SAAAC,GACJ,IAAIsY,EAAQtY,EAAIC,KACZuO,EAAe,GACnB8J,EAAMna,IAAI,SAACC,EAAMiI,GAAP,OAAiBmI,EAAalQ,KAAKF,EAAK2Q,WAClDxT,EAAKmD,SAAS,CACZ4Z,QACA9J,gBACC,kBAAMjT,EAAKof,wBArCHpf,EAyCjB0W,gBAAkB,WAChB1W,EAAKmD,SAAS,CACZ4Z,MAAO,GACP9J,aAAc,GACd+J,iBAAiB,EACjB9J,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfC,QAAS,GACT3S,MAAO,KACP4S,mBAAoB,GACpBC,kBAAmB,GACnBC,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,GACb,kBAAMlU,EAAK2X,iBAhEC3X,EAuEjBqf,SAAW,SAAC5gB,GACV,IAAIse,EAAQ/c,EAAKpB,MAAMme,MAAMlZ,QAEzBlC,EAAQob,EAAMte,GAAIkD,MAClB6R,EAAUuJ,EAAMte,GAAI+U,QACpB3S,EAAQkc,EAAMte,GAAIoC,MACtBb,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACfvR,QACA6R,UACA3S,WAnFab,EAuFjBof,iBAAmB,WACjBpf,EAAKmD,SAAS,CACZ6Z,iBAAiB,GAChB,kBAAMhd,EAAKsf,qBA1FCtf,EA6FjBke,YAAc,WACZle,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACfD,aAAc,GACdgK,iBAAkB,GAClBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,GACnBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,EACbC,YAAa,GACbC,kBAAmB,GACnBC,uBAAwB,GACxBC,qBAAsB,GACtBvK,iBAAiB,EACjBC,eAAe,EACfM,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,KAvHDlU,EA2HjBuf,UAAY,WACV,IAAIxL,EAAe,GACfP,EAAUxT,EAAKpB,MAAM4U,QACrB0J,EAAqB1J,EAAQoE,MAAM,MACvCsF,EAAmBiB,MACnB,IAAIzK,EAAoBF,EAAQoE,MAAM,MACtClE,EAAkByK,MAClB,IAAK,IAAIrb,EAAI,EAAGA,EAAIoa,EAAmBlS,OAAQlI,IAC1CiR,EAAahR,KAAK,uBAEvB,IAAK,IAAID,EAAIoa,EAAmBlS,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CACpD,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADUmB,EAEH,CAACiZ,EAAmBxM,GAAIwM,EAAmBpa,IAA3Foa,EAAmBpa,GAFgCmB,EAAA,GAE5BiZ,EAAmBxM,GAFSzM,EAAA,GAIxDjE,EAAKmD,SAAS,CACZgQ,qBAAqB,EACrBqM,yBAAyB,EACzB/L,mBAAoByJ,EACpBxJ,oBACAK,gBAEC,kBAAM/T,EAAKyf,oBAhJCzf,EAmJjBgE,aAAe,SAACyB,GACfzF,EAAKmD,SAAS,CACZyQ,QAASnO,EAAME,OAAOrG,SArJRU,EAyJjB0f,KAAO,WACH,IAAI9L,EAAU1F,KAAKwB,MAAM1P,EAAKpB,MAAMiV,iBAAmB,IACnDF,EAAU3T,EAAKpB,MAAMiV,iBAA8B,GAAVD,EAe7C,GAdA5T,EAAKmD,SAAS,CACZyQ,UACAD,YAEEA,EAAU,IACZ3T,EAAKmD,SAAS,CACZwQ,QAAS,IAAM3T,EAAKpB,MAAM+U,UAG1BC,EAAU,IACZ5T,EAAKmD,SAAS,CACZ7D,MAAO,IAAMsU,IAGD,IAAZA,EAA4B,IAAZD,EAAe,CACjC,IAAIgM,EAAO3f,EAAKpB,MAAMoV,kBAClBE,EAAehG,KAAKwB,MAAMiQ,EAAO,IACjC1L,EAAejU,EAAKpB,MAAMoV,kBAA+B,GAAVJ,EACnDgM,cAAc5f,EAAKpB,MAAMkV,gBACzB9T,EAAK6f,YACL7f,EAAKmD,SAAS,CACZ+Q,eACAD,iBAIJjU,EAAKpB,MAAMiV,mBACX7T,EAAKpB,MAAMoV,qBAvLEhU,EA0LjByf,eAAiB,WACbzf,EAAKpB,MAAMkV,eAAiBgM,YAAY9f,EAAK0f,KAAM,KACnD,IAAIC,EAAO3f,EAAKpB,MAAMgV,QACtB5T,EAAKpB,MAAMiV,iBAA0B,GAAP8L,GA7LjB3f,EAgMjB+f,YAAc,SAACvc,EAAGsH,GAChB9K,EAAKggB,YAAchgB,EAAKpB,MAAM6U,mBAAmB3I,GACjDtH,EAAEyc,aAAaC,cAAgB,OAC/B1c,EAAEyc,aAAaE,QAAQ,YAAa3c,EAAEmC,QACtCnC,EAAEyc,aAAaG,aAAa5c,EAAEmC,OAAQ,GAAI,KApM3B3F,EAuMjBqgB,WAAa,SAAAvV,GACX,IAAMwV,EAAkBtgB,EAAKpB,MAAM6U,mBAAmB3I,GAGtD,GAAI9K,EAAKggB,cAAgBM,EAAzB,CAKA,IAAI3d,EAAQ3C,EAAKpB,MAAM6U,mBAAmB9P,OAAO,SAAAd,GAAI,OAAIA,IAAS7C,EAAKggB,cAGvErd,EAAM4G,OAAOuB,EAAO,EAAG9K,EAAKggB,aAE5BhgB,EAAKmD,SAAS,CAAEsQ,mBAAoB9Q,MArNrB3C,EAwNjBugB,UAAY,WACVvgB,EAAKwgB,WAAa,MAzNHxgB,EA4NjBygB,eAAiB,WAKf,IAJA,IAAI/M,EAAoB1T,EAAKpB,MAAM8U,kBAC/BgN,EAAoB1gB,EAAKpB,MAAM6U,mBAC/BM,EAAe/T,EAAKpB,MAAMmV,aAAalQ,QACvC8c,EAAa,EACR7d,EAAI,EAAGA,EAAI4d,EAAkB1V,OAAQlI,IACxC4d,EAAkB5d,KAAO4Q,EAAkB5Q,IAC7CiR,EAAajR,GAAK,sBAClB6d,KAGA5M,EAAajR,GAAK,sBAGJ,IAAf6d,GACD3gB,EAAK4gB,YAGP5gB,EAAKmD,SAAS,CACZ4Q,kBA/Oa/T,EAqPjB6f,UAAW,WACT7f,EAAKmD,SAAS,CACZkQ,eAAe,EACfmM,yBAAyB,KAxPZxf,EA4PjB4gB,UAAY,WACR,IAAIjB,EAAO3f,EAAKpB,MAAMoV,kBAClBE,EAAehG,KAAKwB,MAAMiQ,EAAO,IACjC1L,EAAejU,EAAKpB,MAAMoV,kBAAoC,GAAfE,EAC/CsE,EAAW,GACfA,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAMgf,aAC5B5d,EAAKC,MAAMvD,QAAQ2C,kBAAkBmZ,GACrCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiBqD,EAAKpB,MAAMgf,cAC/CgC,cAAc5f,EAAKpB,MAAMkV,gBACzB9T,EAAKmD,SAAS,CACZiQ,iBAAiB,EACjBoM,yBAAyB,EACzBtL,eACAD,kBA5QWjU,EAgRfsf,gBAAkB,WAChB,IAAIlc,EAAU,GACdpD,EAAKpB,MAAMme,MAAMna,IAAI,SAACC,EAAMC,GAAP,OACPM,EAAQL,KAAK,CACTC,IAAKH,EAAKpE,GACVwE,KAAMJ,EAAKib,WACXxe,MAAOuD,EAAKib,eAE9B9d,EAAKmD,SAAS,CACZC,WACC,kBAAMpD,EAAKqD,eA1RDrD,EA6RfqD,UAAY,WACV,IAAIC,EAAMtD,EAAKpB,MAAMwE,QAEfA,EAAUE,EACbV,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACVZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIZ,IAAI,SAAAY,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,UACA8P,eAAe,KAtSJlT,EA0Sf6gB,eAAiB,WACf,IAAI9Y,EAAgB/H,EAAKpB,MAAMU,MAC/BU,EAAKmD,SAAS,CACZ4E,mBA7SW/H,EAiTf8gB,WAAa,SAACtd,EAAD+U,GAAA,IAAMjZ,EAANiZ,EAAMjZ,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAK6gB,oBA/SrE7gB,EAAKpB,MAAQ,CACTme,MAAO,GACP9J,aAAc,GACd+J,iBAAiB,EACjB9J,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfC,QAAS,GACT3S,MAAO,KACP4S,mBAAoB,GACpBC,kBAAmB,GACnBC,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACdnM,cAAe,IAxBF/H,mFAoEfE,KAAKwW,mDA+OE,IAAArS,EAAAnE,KAEP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACVb,KAAKtB,MAAMsU,cACV9S,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,aAAa6D,UAAQ,GACnCxE,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMU,MAClB0D,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK4gB,WACjB1d,QAASlD,KAAKtB,MAAMwE,YAGhB,KAEVlD,KAAKtB,MAAMme,MAAM/R,QAAU9K,KAAKtB,MAAMoe,gBACxC5c,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,cAAc4M,YAAa,GAChDzN,KAAKtB,MAAMme,MAAMna,IAAI,SAACC,EAAMiI,GAAP,OAA+C,QAA7BzG,EAAKzF,MAAMmJ,eAAuD,KAA7B1D,EAAKzF,MAAMmJ,eAAwB1D,EAAKzF,MAAMmJ,gBAAkBlF,EAAKib,aAChJ1d,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,GACT1K,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,SAEnBT,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAc2B,EAAKlB,OACnBvB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACGsB,EAAK2Q,QAAQlN,OAAO,EAAE,KAAO,SAGlClG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASqD,EAAKgb,SAASpe,KAAKoD,EAAMxB,EAAKpE,KAA/C,2EAGY,KAEhByB,KAAKtB,MAAMuU,oBACT/S,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,0EACxBb,KAAKtB,MAAM4U,SAEfpT,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKqf,WAA9B,6DAEI,KAETrf,KAAKtB,MAAM4gB,wBACVpf,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,SAASb,KAAKtB,MAAMgV,QAAlC,IAA4C1T,KAAKtB,MAAM+U,SACvDvT,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,0EACzBb,KAAKtB,MAAM6U,mBAAmB7Q,IAAI,SAACC,EAAMke,GAAP,OAC/B3gB,EAAAC,EAAAC,cAAA,KAAGS,UAAW,+BAAiCsD,EAAKzF,MAAMmV,aAAagN,GACnEC,WAAS,EACThe,IAAO+d,EACPV,WAAY,kBAAMhc,EAAKgc,WAAWU,IAClChB,YAAa,SAAAvc,GAAC,OAAIa,EAAK0b,YAAYvc,EAAGud,IACtCR,UAAWlc,EAAKkc,WAAa1d,EAAO,QAI9CzC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKugB,gBAA9B,4DAEM,KAEXvgB,KAAKtB,MAAMwU,gBACVhT,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,gFAC1BX,EAAAC,EAAAC,cAAA,oLACAF,EAAAC,EAAAC,cAAA,oEAAeJ,KAAKtB,MAAMsV,aAA1B,mCAA+ChU,KAAKtB,MAAMqV,aAA1D,4CAGJ7T,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKge,aAA9B,sFAEM,KAEXhe,KAAKtB,MAAMyU,cACVjT,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4DAC1BX,EAAAC,EAAAC,cAAA,6EAGJF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKge,aAA9B,sFAEM,OAIlB9d,EAAAC,EAAAC,cAAA,uBAtamBuB,aAobZC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6Cqd,cCnbtD8B,eAEL,SAAAA,EAAYhhB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA+gB,IACjBjhB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA6e,GAAAze,KAAAtC,KAAMD,KAyCJqf,gBAAkB,WAChB,IAAI5c,EAAW,GACf1C,EAAKpB,MAAMme,MAAMna,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAKpE,GACVwE,KAAMJ,EAAKib,WACXxe,MAAOuD,EAAKib,eAE9B9d,EAAKmD,SAAS,CACZC,QAASV,GACR,kBAAM1C,EAAKqD,eApDDrD,EAuDfqD,UAAY,WACV,IAAIC,EAAMtD,EAAKpB,MAAMwE,QAEfG,EAASD,EACZV,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACVZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIZ,IAAI,SAAAY,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,EACT2P,eAAe,KAhEJlT,EAoEf6gB,eAAiB,WACf,IAAI9Y,EAAgB/H,EAAKpB,MAAMU,MAC/BU,EAAKmD,SAAS,CACZ4E,mBAvEW/H,EA2EfgE,aAAe,SAACR,EAADS,GAAA,IAAM3E,EAAN2E,EAAM3E,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAK6gB,oBA3EtD7gB,EA6EfkhB,YAAc,SAACziB,GACb6F,IACGC,IAAI,iBACJC,KAAK,SAACC,GACL,IAAI0c,EAAe,IAAIC,QAAK,CAC1BxgB,IAAK,UAAY6D,EAAIC,KAAKb,MAAMpF,EAAK,EAAGA,GACxC4iB,OAAO,EACPC,OAAQ,MAEVthB,EAAKmD,SAAS,CACZge,eACAI,MAAO9c,EAAIC,UAxFJ1E,EA6Ffqf,SAAW,SAAC5gB,GACV,IAAIse,EAAQ/c,EAAKpB,MAAMme,MAAMlZ,QACzBlC,EAAQob,EAAMte,EAAK,GAAGkD,MACtB6R,EAAUuJ,EAAMte,EAAK,GAAG+U,QACxB3S,EAAQkc,EAAMte,EAAK,GAAGmC,IAC1BZ,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACfvR,QACA6R,UACA3S,SACC,kBAAMb,EAAKkhB,YAAYziB,MAzGbuB,EA6Gfke,YAAc,WACZle,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACfE,iBAAiB,EACjBC,eAAe,EACftL,cAAe,GACfoZ,aAAc,KACdK,SAAS,EACT7N,QAAS,KACTC,QAAS,MACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACd0J,aAAc,EACdte,MAAO,QAhIIU,EAoIjByhB,SAAW,WACPzhB,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACfE,iBAAiB,EACjBC,eAAe,KA1IJrT,EA8IjB0hB,SAAW,WACT,IAAIF,GAAWxhB,EAAKpB,MAAM4iB,QACtBL,EAAenhB,EAAKpB,MAAMuiB,aAC1BK,EACFL,EAAaQ,OAEbR,EAAaS,QAEf5hB,EAAKmD,SAAS,CACZqe,UACAL,kBAxJanhB,EA6Jfuf,UAAY,WACV,IAAIxL,EAAe,GACfP,EAAUxT,EAAKpB,MAAM4U,QACrB0J,EAAqB1J,EAAQoE,MAAM,MACvCsF,EAAmBiB,MACnB,IAAIzK,EAAoBF,EAAQoE,MAAM,MACtClE,EAAkByK,MAClB,IAAK,IAAIrb,EAAI,EAAGA,EAAIoa,EAAmBlS,OAAQlI,IAC1CiR,EAAahR,KAAK,uBAEvB,IAAK,IAAID,EAAIoa,EAAmBlS,OAAS,EAAGlI,EAAI,EAAGA,IAAK,CACpD,IAAM4N,EAAIxC,KAAKwB,MAAMxB,KAAK4J,UAAYhV,EAAI,IADUyV,EAEH,CAAC2E,EAAmBxM,GAAIwM,EAAmBpa,IAA3Foa,EAAmBpa,GAFgCyV,EAAA,GAE5B2E,EAAmBxM,GAFS6H,EAAA,GAIxDpU,QAAQC,IAAI8Y,GACZld,EAAKmD,SAAS,CACZgQ,qBAAqB,EACrBqM,yBAAyB,EACzBkB,kBAAmBxD,EACnBxJ,oBACAK,gBAEC,kBAAM/T,EAAKyf,oBAnLDzf,EAsLfgE,aAAe,SAACyB,GACfzF,EAAKmD,SAAS,CACZyQ,QAASnO,EAAME,OAAOrG,SAxLVU,EA4Lf0f,KAAO,WACH,IAAI9L,EAAU1F,KAAKwB,MAAM1P,EAAKpB,MAAMiV,iBAAmB,IACnDF,EAAU3T,EAAKpB,MAAMiV,iBAA8B,GAAVD,EAe7C,GAdA5T,EAAKmD,SAAS,CACZyQ,UACAD,YAEEA,EAAU,IACZ3T,EAAKmD,SAAS,CACZwQ,QAAS,IAAM3T,EAAKpB,MAAM+U,UAG1BC,EAAU,IACZ5T,EAAKmD,SAAS,CACZ7D,MAAO,IAAMsU,IAGD,IAAZA,EAA4B,IAAZD,EAAe,CACjC,IAAIgM,EAAO3f,EAAKpB,MAAMoV,kBAClBE,EAAehG,KAAKwB,MAAMiQ,EAAO,IACjC1L,EAAejU,EAAKpB,MAAMoV,kBAAoC,GAAfE,EAC/CJ,EAAiB9T,EAAKpB,MAAMkV,eAChC8L,cAAc9L,GACd9T,EAAK6f,YACL7f,EAAKmD,SAAS,CACZ+Q,eACAD,eACAH,mBAGJ9T,EAAKmD,SAAS,CACZ0Q,iBAAkB7T,EAAKpB,MAAMiV,iBAAmB,EAChDG,kBAAmBhU,EAAKpB,MAAMoV,kBAAoB,KA5NzChU,EAgOfyf,eAAiB,WACb,IAAI3L,EAAiBgM,YAAY9f,EAAK0f,KAAM,KACxCC,EAAO3f,EAAKpB,MAAMgV,QACtB5T,EAAKmD,SAAS,CACZ2Q,iBACAD,iBAAyB,GAAP8L,KArOT3f,EAyOjB+f,YAAc,SAACvc,EAAGsH,GAChB9K,EAAKggB,YAAchgB,EAAKpB,MAAM8hB,kBAAkB5V,GAChDtH,EAAEyc,aAAaC,cAAgB,OAC/B1c,EAAEyc,aAAaE,QAAQ,YAAa3c,EAAEmC,QACtCnC,EAAEyc,aAAaG,aAAa5c,EAAEmC,OAAQ,GAAI,KA7O3B3F,EAgPjBqgB,WAAa,SAAAvV,GACX,IAAMwV,EAAkBtgB,EAAKpB,MAAM8hB,kBAAkB5V,GACrD,GAAI9K,EAAKggB,cAAgBM,EAAzB,CAGA,IAAI3d,EAAQ3C,EAAKpB,MAAM8hB,kBAAkB/c,OAAO,SAAAd,GAAI,OAAIA,IAAS7C,EAAKggB,cACtErd,EAAM4G,OAAOuB,EAAO,EAAG9K,EAAKggB,aAC5BhgB,EAAKmD,SAAS,CAAEud,kBAAmB/d,MAvPpB3C,EA0PjBugB,UAAY,WACVvgB,EAAKwgB,WAAa,MA3PHxgB,EA8PjBygB,eAAiB,WAMf,IALA,IAAI/M,EAAoB1T,EAAKpB,MAAM8U,kBAC/BgN,EAAoB1gB,EAAKpB,MAAM8hB,kBAC/B3M,EAAe/T,EAAKpB,MAAMmV,aAAalQ,QACvC+Z,EAAe,EACf+C,EAAa,EACR7d,EAAI,EAAGA,EAAI4d,EAAkB1V,OAAQlI,IACxC4d,EAAkB5d,KAAO4Q,EAAkB5Q,IAC7CiR,EAAajR,GAAK,sBAClB6d,MAGA5M,EAAajR,GAAK,sBAClB8a,KAGe,IAAf+C,GACF3gB,EAAK4gB,YAGP5gB,EAAKmD,SAAS,CACZ4Q,eACA6J,kBApRa5d,EAyRjB6f,UAAW,WACT7f,EAAKygB,iBACLzgB,EAAKmD,SAAS,CACZkQ,eAAe,EACfmM,yBAAyB,KA7RZxf,EAiSjB4gB,UAAY,WACV,IAAI9M,EAAiB9T,EAAKpB,MAAMkV,eAC5B6L,EAAO3f,EAAKpB,MAAMoV,kBAClBE,EAAehG,KAAKwB,MAAMiQ,EAAO,IACjC1L,EAAejU,EAAKpB,MAAMoV,kBAAoC,GAAfE,EAC/CsE,EAAW,GACfA,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAMgf,aAC5B5d,EAAKC,MAAMvD,QAAQ6C,uBAAuBiZ,GAC1CxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiBqD,EAAKpB,MAAMgf,cAC/CgC,cAAc9L,GACd9T,EAAKmD,SAAS,CACZiQ,iBAAiB,EACjBoM,yBAAyB,EACzBtL,eACAD,eACAH,oBAjTJ9T,EAAKpB,MAAQ,CACRme,MAAO,GACP9J,aAAc,GACd+J,iBAAiB,EACjB9J,eAAe,EACfC,qBAAqB,EACpB/P,QAAS,GACT2E,cAAe,GAChBqL,iBAAiB,EACjBC,eAAe,EACd1R,MAAO,GACR6R,QAAS,GACT3S,MAAO,KACNsgB,aAAc,KACdK,SAAS,EACT7N,QAAS,KACTC,QAAS,IACTC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,GACdC,kBAAmB,EACnBC,aAAc,EACdC,aAAc,EACd0J,aAAc,GAzBH5d,mFA+BG,IAAAqE,EAAAnE,KAClBoE,IAAMC,IAAI,qBACPC,KAAK,SAAAC,GACJ,IAAIsY,EAAQtY,EAAIC,KAChBL,EAAKlB,SAAS,CACZ4Z,QACAC,iBAAiB,GAChB,kBAAM3Y,EAAKib,uDAkRX,IAAAjV,EAAAnK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACdb,KAAKtB,MAAMsU,cACV9S,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,aAAa6D,UAAQ,GACnCxE,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMU,MAClB0D,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK8D,aACjBZ,QAASlD,KAAKtB,MAAMwE,YAGhB,KAENlD,KAAKtB,MAAMoe,gBACb5c,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,cAAc4M,YAAa,GAChDzN,KAAKtB,MAAMme,MAAMna,IAAI,SAACC,EAAMiI,GAAP,OAA+C,QAA7BT,EAAKzL,MAAMmJ,eAAuD,KAA7BsC,EAAKzL,MAAMmJ,eAAwBsC,EAAKzL,MAAMmJ,gBAAkBlF,EAAKib,aAChJ1d,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,GACT1K,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,SAEnBT,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAc2B,EAAKlB,OACnBvB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACGsB,EAAK2Q,QAAQlN,OAAO,EAAE,KAAO,SAGlClG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASqJ,EAAKgV,SAASpe,KAAKoJ,EAAMxH,EAAKpE,KAA/C,2EAGY,KAEhByB,KAAKtB,MAAMuU,oBACT/S,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,uFACxBb,KAAKtB,MAAM4U,SAEdtT,KAAKtB,MAAM4iB,QACVphB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBAAqBC,QAASd,KAAKwhB,UAChDthB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAM2I,KAAK,QAAQnJ,KAAK,WAClB,KAERlB,KAAKtB,MAAM4iB,QAGH,KAFRphB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBAAqBC,QAASd,KAAKwhB,UAChDthB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAM2I,KAAK,QAAQnJ,KAAK,UAG5BhB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACdX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKqf,WAA9B,oEAIG,KAETrf,KAAKtB,MAAM4gB,wBACVpf,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,SAASb,KAAKtB,MAAMgV,QAAlC,IAA4C1T,KAAKtB,MAAM+U,SACvDvT,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,0EACzBb,KAAKtB,MAAM8hB,kBAAkB9d,IAAI,SAACC,EAAMke,GAAP,OAC9B3gB,EAAAC,EAAAC,cAAA,KAAGS,UAAW,+BAAiCsJ,EAAKzL,MAAMmV,aAAagN,GACnEC,WAAS,EACThe,IAAO+d,EACPV,WAAY,kBAAMhW,EAAKgW,WAAWU,IAClChB,YAAa,SAAAvc,GAAC,OAAI6G,EAAK0V,YAAYvc,EAAGud,IACtCR,UAAWlW,EAAKkW,WAAa1d,EAAO,QAK9CzC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKugB,gBAA9B,4DAEM,KAEXvgB,KAAKtB,MAAMwU,gBACVhT,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,gFAC1BX,EAAAC,EAAAC,cAAA,oLACAF,EAAAC,EAAAC,cAAA,oEAAeJ,KAAKtB,MAAMsV,aAA1B,mCAA+ChU,KAAKtB,MAAMqV,aAA1D,4CAGJ7T,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKge,aAA9B,sFAEM,KAEXhe,KAAKtB,MAAMyU,cACVjT,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,4DAC1BX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,uIAA2BJ,KAAKtB,MAAMgf,aAAtC,iBAAwD1d,KAAKtB,MAAM8hB,kBAAkB1V,OAArF,0EAIN5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKge,aAA9B,sFAEM,OAIlB9d,EAAAC,EAAAC,cAAA,uBAhcwBuB,aA8cjBC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6Cmf,IC9ctDY,eAEL,SAAAA,EAAY5hB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA2hB,IACjB7hB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAyf,GAAArf,KAAAtC,KAAMD,KAUNyW,gBAAkB,WAChB1W,EAAKmD,SAAS,CACZ4Z,MAAO,GACP9J,aAAc,GACd+J,iBAAiB,EACjB9J,eAAe,EACfC,qBAAqB,EACrBC,iBAAiB,EACjBC,eAAe,EACfC,cAAe,GACfC,cAAe,GACfC,QAAS,GACTsO,aAAc,GACdjJ,YAAa,GACbkJ,WAAY,GACZlhB,MAAO,KACPuC,QAAS,GACT4e,aAAa,EACbja,cAAe,IACd,kBAAM/H,EAAK2X,iBA9BC3X,EAiCjB2X,YAAc,WACZrT,IAAMC,IAAI,gBACPC,KAAK,SAAAC,GACJ,IAAIsY,EAAQtY,EAAIC,KACZuO,EAAe,GACnB8J,EAAMna,IAAI,SAACC,EAAMiI,GAAP,OAAiBmI,EAAalQ,KAAKF,EAAK2Q,WAClDxT,EAAKmD,SAAS,CACZ4Z,QACA9J,gBACC,WACCjT,EAAKmD,SAAS,CACZ6e,aAAa,IAEfhiB,EAAKsf,uBA9CEtf,EAmDfqf,SAAW,SAAC5gB,GACV,IAAIse,EAAQ/c,EAAKpB,MAAMme,MAAMlZ,QACzBlC,EAAQob,EAAMte,GAAIkD,MAClB6R,EAAUuJ,EAAMte,GAAI+U,QACpBsO,EAAe/E,EAAMte,GAAI+U,QAC7BsO,EAAeA,EAAaG,QAAQ,MAAO,IAC3C,IAAIphB,EAAQkc,EAAMte,GAAImC,IACtBZ,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBD,eAAe,EACfvR,QACA6R,UACA3S,QACAihB,kBAjEW9hB,EAsEjB4gB,UAAY,WACV5gB,EAAKmD,SAAS,CACZiQ,iBAAiB,EACjB8O,eAAe,KAzEFliB,EA6EnBmiB,iBAAmB,SAACC,EAAMC,GACxB,GAAID,EAAKE,kBACPF,EAAKG,QACLH,EAAKE,kBAAkBD,EAAKA,QAEvB,GAAID,EAAKI,gBAAiB,CAC/B,IAAIC,EAAQL,EAAKI,kBACjBC,EAAMC,UAAS,GACfD,EAAME,QAAQ,YAAaN,GAC3BI,EAAMG,UAAU,YAAaP,GAC7BI,EAAMI,WAvFS7iB,EA2FjB8iB,YAAc,SAACrd,GACd,IAAIsc,EAAa/hB,EAAKpB,MAAMmjB,WACxBpc,EAASF,EAAME,OACdod,EAAetd,EAAME,OAAOrG,MAAMoE,QAAQ,KAAO,EACjDlG,EAAOiI,EAAME,OAAOrG,MAAMgH,OAAO,EAAGyc,EAAe,GACnDC,EAASvd,EAAME,OAAOrG,MAAM2jB,UAAUF,GAC1ChB,GAA2BvkB,EAAO,IAChCwC,EAAKmD,SAAS,CACb4e,aACCD,aAAckB,GACb,kBAAMhjB,EAAKmiB,iBAAiBxc,EAAQ,MArG1B3F,EAwGjBge,cAAgB,WACdhe,EAAKmD,SAAS,CACZ+e,eAAe,EACf/O,qBAAqB,KA3GRnT,EA+GjBsf,gBAAkB,WAChB,IAAIlc,EAAU,GACdpD,EAAKpB,MAAMme,MAAMna,IAAI,SAACC,EAAMC,GAAP,OACPM,EAAQL,KAAK,CACTC,IAAKH,EAAKpE,GACVwE,KAAMJ,EAAKib,WACXxe,MAAOuD,EAAKib,eAE9B9d,EAAKmD,SAAS,CACZC,WACC,kBAAMpD,EAAKqD,eAzHCrD,EA4HjBqD,UAAY,WACV,IAAIC,EAAMtD,EAAKpB,MAAMwE,QAEfG,EAASD,EACZV,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACVZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIZ,IAAI,SAAAY,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,KApIIvD,EAwIjB6gB,eAAiB,WACf,IAAI9Y,EAAgB/H,EAAKpB,MAAMU,MAC/BU,EAAKmD,SAAS,CACZ4E,mBA3Ia/H,EA+IjBgE,aAAe,SAACR,EAADS,GAAA,IAAM3E,EAAN2E,EAAM3E,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAK6gB,oBA7IrE7gB,EAAKpB,MAAQ,GAFIoB,mFAQfE,KAAKwW,mDAyIE,IAAArS,EAAAnE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACVb,KAAKtB,MAAMsU,cACV9S,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,aAAa6D,UAAQ,GACnCxE,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMU,MAClB0D,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK8D,aACjBZ,QAASlD,KAAKtB,MAAMwE,YAGhB,KAEVlD,KAAKtB,MAAMojB,aAAe9hB,KAAKtB,MAAMoe,gBACvC5c,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,cAAc4M,YAAa,GAChDzN,KAAKtB,MAAMme,MAAMna,IAAI,SAACC,EAAMiI,GAAP,OAA+C,QAA7BzG,EAAKzF,MAAMmJ,eAAuD,KAA7B1D,EAAKzF,MAAMmJ,eAAwB1D,EAAKzF,MAAMmJ,gBAAkBlF,EAAKib,aAChJ1d,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,GACT1K,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,SAEnBT,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAc2B,EAAKlB,OACnBvB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACGsB,EAAK2Q,QAAQlN,OAAO,EAAE,KAAO,SAGlClG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASqD,EAAKgb,SAASpe,KAAKoD,EAAMxB,EAAKpE,KAA/C,2EAGY,KAEhByB,KAAKtB,MAAMuU,oBACT/S,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,0EACxBb,KAAKtB,MAAM4U,SAEfpT,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK8d,eAA9B,6DAEI,KAEV9d,KAAKtB,MAAMsjB,cACT9hB,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,2CACtBX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,wFACTb,KAAKtB,MAAMmjB,YAEf3hB,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAO7H,UAAU,sBAAsBzB,MAAOY,KAAKtB,MAAMkjB,aAAc1c,SAAUlF,KAAK4iB,cACtF1iB,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACpBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK0gB,WAA9B,6DAGA,KAET1gB,KAAKtB,MAAMwU,gBACVhT,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,0CACdX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKge,aAClB9d,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,UAG5BnK,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcC,UAAU,qBACtBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACbX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAd,mFACAX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAAuBb,KAAKtB,MAAM4U,UAEjDpT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACbX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,wBAAd,0DACAX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAAuBb,KAAKtB,MAAMmjB,eAIrD3hB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,wCACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,gBAAgBoF,GAAG,aAAnC,gFAEV,OAIlB/F,EAAAC,EAAAC,cAAA,uBAxPmBuB,aAsQZC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6C+f,cC3G7CqB,eA9Jd,SAAAA,EAAYjjB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAgjB,IACjBljB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA8gB,GAAA1gB,KAAAtC,KAAMD,KAiCNkjB,SAAW,WACT,IACIC,EACF,sGAGApjB,EAAKpB,MAAMykB,cAAcC,UACzB,0CACAtjB,EAAKpB,MAAM2kB,WACXjf,IAAMC,IAAI6e,GACP5e,KAAK,SAAAC,GACJ,IAAMiY,EAASjY,EAAIC,KACnB1E,EAAKmD,SAAS,CACZuZ,SACA/Z,MAAO+Z,EAAO/Z,WAhDP3C,EAqDjBqG,aAAe,SAACZ,GACdzF,EAAKmD,SAAS,CAACqgB,eAAgB/d,EAAME,OAAOrG,MAAMgH,OAAO,EAAE,QAtD5CtG,EAyDjByjB,WAAa,WACX,IAAIC,EAAW1jB,EAAKpB,MAAM8kB,SAAS7f,QAC/B2f,EAAiBxjB,EAAKpB,MAAM4kB,eAC5BG,EAAO,CACXA,OAAiB,UACjBA,EAAI,QAAcH,EAClBE,EAAS/b,QAAQgc,GACjB3jB,EAAKmD,SAAS,CACZugB,SAAUA,EACVF,eAAgB,MAlEHxjB,EAsEjB4jB,SAAW,WACT,IAAI1E,EAAQlf,EAAKpB,MAAMilB,MACvB3E,IACAlf,EAAKmD,SAAS,CACZ0gB,MAAO3E,KA1EMlf,EA8EjB8jB,WAAa,WACX,IAAI5E,EAAQlf,EAAKpB,MAAMmlB,SACvB7E,IACAlf,EAAKmD,SAAS,CACZ4gB,SAAU7E,KAlFGlf,EAsFjB+I,SAAW,WACT/I,EAAKmD,SAAS,SAAC6F,GACb,MAAO,CAACC,QAASD,EAAKC,QAAU,OAtFlCjJ,EAAKpB,MAAQ,CACX8d,OAAQ,GACR3J,QAAQ,EACRpQ,MAAO,GACP6gB,eAAgB,GAChBK,MAAO,EACPE,SAAU,EACVR,WAAY,IACZta,QAAS,GACTya,SAAU,CACR,CACEM,OAAQ,UACRtlB,QAAS,0BAEX,CACEslB,OAAQ,UACRtlB,QAAS,oBAlBAsB,mFAwBE,IACbqjB,EADahf,EAAAnE,KAEjBoE,IAAMC,IAAI,iBACPC,KAAK,SAAAC,GACJ,IAAIwf,EAAWxf,EAAIC,KACnB2e,EAAgBY,EAAS5W,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAO4F,EAAKpE,MAAMsN,MAAMC,OAAO/O,KACpE4F,EAAKlB,SAAS,CAAEkgB,iBAAiB,kBAAMhf,EAAK8e,gDA8DxC,IAAA9Y,EAAAnK,KACR,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAM+D,MAAMqI,OACjB5K,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6jB,SAAA,KACE9jB,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAe,EAAG5M,UAAU,wBACrCb,KAAKtB,MAAM+D,MAAMkB,MAAM,EAAG3D,KAAKtB,MAAMqK,SAASrG,IAAI,SAACC,EAAMiI,GAAP,OACjD1K,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,EAAO/J,UAAU,cAC1BX,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAOtH,UAAU,cAAcyH,WAAS,EAACF,QAASlI,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BAC/DX,EAAAC,EAAAC,cAAC6jB,GAAA,EAAD,CAAOC,UAAU,EAAM3lB,GAAIoE,EAAKpE,GAAG4lB,QAAStf,YAAalC,EAAKyhB,QAAQC,WAAWC,KAAKpB,IAAKqB,OAAO,YAClGrkB,EAAAC,EAAAC,cAAC+H,EAAA,EAAMnH,OAAP,CAAcH,UAAU,wBACtBX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAgB8B,EAAKyhB,QAAQ3iB,OAC5CvB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,mBAAmBC,QAASqJ,EAAKuZ,UAC/CxjB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,oBAAoBmJ,KAAK,WAEtCnK,EAAAC,EAAAC,cAAA,YAAO+J,EAAKzL,MAAMilB,QAEpBzjB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,mBAAmBC,QAASqJ,EAAKyZ,YAC/C1jB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,sBAAsBmJ,KAAK,WAExCnK,EAAAC,EAAAC,cAAA,YAAO+J,EAAKzL,MAAMmlB,aAIxB3jB,EAAAC,EAAAC,cAAC+H,EAAA,EAAMvH,QAAP,KACEV,EAAAC,EAAAC,cAAC+H,EAAA,EAAM9G,YAAP,KACEnB,EAAAC,EAAAC,cAAA,SAAIuC,EAAKyhB,QAAQzY,cAEnBzL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACbX,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAO7D,YAAY,UAAUzF,MAAO+K,EAAKzL,MAAM4kB,eAAgBpe,SAAUiF,EAAKhE,eAAgBjG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASqJ,EAAKoZ,YAAtB,2DAEhGrjB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACVsJ,EAAKzL,MAAM8kB,SAAS9gB,IAAI,SAACC,EAAMiI,GAAP,OACvB1K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBAAiBiC,IAAK8H,GACnC1K,EAAAC,EAAAC,cAAA,UAAKuC,EAAKmhB,QACV5jB,EAAAC,EAAAC,cAAA,SAAIuC,EAAKnE,gBAOvB0B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACbX,EAAAC,EAAAC,cAAA,UAAKuC,EAAKyhB,QAAQ3iB,OAClBvB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKyhB,QAAQC,WAAWC,KAAKpB,WAKjDhjB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAAWd,KAAK6I,UAAhC,eAGF,aAxJgBlH,aC8Jb6iB,eA7Jb,SAAAA,EAAYzkB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAwkB,IAChB1kB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAsiB,GAAAliB,KAAAtC,KAAMD,KAkCRqf,gBAAkB,WAChB,IAAI5c,EAAW,GACf1C,EAAKpB,MAAMme,MAAMna,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAKpE,GACVwE,KAAMJ,EAAKib,WACXxe,MAAOuD,EAAKib,eAE9B9d,EAAKmD,SAAS,CACZC,QAASV,GACR,kBAAM1C,EAAKqD,eA7CErD,EAgDlBqD,UAAY,WACV,IAAIC,EAAMtD,EAAKpB,MAAMwE,QAEfG,EAASD,EACZV,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACVZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIZ,IAAI,SAAAY,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,KAxDKvD,EA4DlB6gB,eAAiB,WACf,IAAI9Y,EAAgB/H,EAAKpB,MAAMU,MAC/BU,EAAKmD,SAAS,CACZ4E,mBA/Dc/H,EAmElBgE,aAAe,SAACR,EAADS,GAAA,IAAM3E,EAAN2E,EAAM3E,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAK6gB,oBAnEnD7gB,EAqElBqf,SAAW,SAAC7b,GAIR,IAHF,IAAIuZ,EAAQ/c,EAAKpB,MAAMme,MAAMlZ,QACzB8B,EAASnC,EAAEmC,OAAOgf,cAClB7Z,EAAQ,EACDnF,EAASA,EAAO6U,wBACvB1P,IAEJ,IAAI2T,EAAoBjb,EAAEmC,OAAOgf,cAAc9F,SAAS,GAAGA,SAAS,GAAGhG,YACnE+L,EAAsB7H,EAAMjS,GAAO0I,QACnCqR,EAAoBrhB,EAAEmC,OAAOgf,cAAc9F,SAAS,GAAGA,SAAS,GAAGA,SAAS,GAAGje,IACnFZ,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBxR,MAAO8c,EACPjL,QAASoR,EACT/jB,MAAOgkB,KApFO7kB,EAwFlBke,YAAc,WACZle,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,KAzFvBnT,EAAKpB,MAAQ,CACXme,MAAO,GACPiF,aAAa,EACb5e,QAAS,GACT2E,cAAe,GACfzI,MAAO,KACP0d,iBAAiB,EACjB7J,qBAAqB,EACrBxR,MAAO,GACP6R,QAAS,GACT3S,MAAO,KACPoS,aAAc,IAbAjT,mFAiBE,IAAAqE,EAAAnE,KAClBoE,IAAMC,IAAI,gBACPC,KAAK,SAAAC,GACJ,IAAIsY,EAAQtY,EAAIC,KACZuO,EAAe,GACnB8J,EAAMna,IAAI,SAACC,EAAMiI,GAAP,OAAiBmI,EAAalQ,KAAKF,EAAK2Q,WAClDnP,EAAKlB,SAAS,CACZ4Z,MAAOA,EACP9J,aAAcA,GACb,WACD5O,EAAKlB,SAAS,CACZ6e,aAAa,IAEf3d,EAAKib,uDAiEJ,IAAAjV,EAAAnK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACbb,KAAKtB,MAAMuU,oBAeD,KAdV/S,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,aAAa6D,UAAQ,GACnCxE,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMU,MAClB0D,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK8D,aACjBZ,QAASlD,KAAKtB,MAAMwE,YAKtBlD,KAAKtB,MAAMojB,aAAe9hB,KAAKtB,MAAMoe,gBACvC5c,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,cAAc4M,YAAa,GAChDzN,KAAKtB,MAAMme,MAAMna,IAAI,SAACC,EAAMiI,GAAP,OAA+C,QAA7BT,EAAKzL,MAAMmJ,eAAuD,KAA7BsC,EAAKzL,MAAMmJ,eAAwBsC,EAAKzL,MAAMmJ,gBAAkBlF,EAAKib,aAChJ1d,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,GACT1K,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,SAEnBT,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAc2B,EAAKlB,OACnBvB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACGsB,EAAK2Q,QAAQlN,OAAO,EAAE,KAAO,SAGlClG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASqJ,EAAKgV,UAAtB,2EAGY,KAEhBnf,KAAKtB,MAAMuU,oBACT/S,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,8BACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAKtB,MAAMiC,QACvBT,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAchB,KAAKtB,MAAM+C,OACzBvB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,uCACwDb,KAAKtB,MAAM4U,UAGjGpT,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKge,aAAtB,2DACM,OAIhB9d,EAAAC,EAAAC,cAAA,uBAxJgBuB,aCsUTijB,eApUb,SAAAA,EAAY7kB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA4kB,IAChB9kB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA0iB,GAAAtiB,KAAAtC,KAAMD,KAUR8kB,cAAgB,WACd,IAAI3hB,EAAU,GACdpD,EAAKpB,MAAMwI,MAAMxE,IAAI,SAACC,EAAMC,GAAP,OACPM,EAAQL,KAAK,CACTC,IAAKH,EAAKpE,GACVwE,KAAMJ,EAAKmiB,MACX1lB,MAAOuD,EAAKmiB,UAE9BhlB,EAAKmD,SAAS,CACZC,WACC,kBAAMpD,EAAKqD,eArBErD,EAwBhBqD,UAAY,WACV,IAAIC,EAAMtD,EAAKpB,MAAMwE,QAEfA,EAAUE,EACbV,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACVZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIZ,IAAI,SAAAY,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,aAhCYpD,EAoChBsa,SAAW,WACT,IAAIvS,EAAgB/H,EAAKpB,MAAMU,MAC/BU,EAAKmD,SAAS,CACZ4E,mBAvCY/H,EA2ChBgE,aAAe,SAACR,EAADS,GAAA,IAAM3E,EAAN2E,EAAM3E,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAKsa,cA3CrDta,EA6ChBqf,SAAW,SAAC5gB,GAUV,IATA,IAAIwmB,EAAiB,GACjBC,EAAa,GACb/I,EAAW,GACXgJ,EAASnlB,EAAKpB,MAAMwmB,cAAcvhB,QAClCwhB,EAAWrlB,EAAKpB,MAAMymB,SAASxhB,QAC/ByhB,EAAe,GACfC,EAAeJ,EAAOjX,KAAKwB,MAAMxB,KAAK4J,SAASqN,EAAOna,SACtDyT,EAAoBze,EAAKpB,MAAMwI,MAAMiG,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAOA,IAAI2C,KAEvD0B,EAAI,EAAGA,EAAIuiB,EAASra,OAAQlI,IACjCuiB,EAASviB,GAAT,WAA4B2b,IAC9B6G,EAAaviB,KAAKsiB,EAASviB,IACzBmiB,EAAeliB,KAAK,oDACpBmiB,EAAWniB,MAAK,GAChBoZ,EAASpZ,MAAK,IAIlB/C,EAAKmD,SAAS,CACZ6Z,iBAAiB,EACjB7J,qBAAqB,EACrBqS,mBAAmB,EACnBF,eACAC,eACAN,iBACAC,aACA/I,cAxEYnc,EA6EhBylB,UAAY,SAAChnB,GACX,IAAIinB,EAAa1lB,EAAKpB,MAAM8mB,WAAW7hB,QACnCyhB,EAAetlB,EAAKpB,MAAM0mB,aAAazhB,QACvCohB,EAAiBjlB,EAAKpB,MAAMqmB,eAAephB,QAC3CsY,EAAWnc,EAAKpB,MAAMud,SAAStY,QAC/BqhB,EAAallB,EAAKpB,MAAMsmB,WAAWrhB,QACnC8hB,EAAWL,EAAajY,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAOA,IAC/CwmB,EAAexmB,GAAM,2DACrBymB,EAAWzmB,IAAM,EACjB0d,EAAS1d,GAAM,WACfinB,EAAW3iB,KAAK4iB,GAChB3lB,EAAKmD,SAAS,CACbuiB,aACAT,iBACAC,aACA/I,cA5Fanc,EAiGhB4lB,WAAa,WACZ,IAAIhnB,EAAQoB,EAAKpB,MAAMinB,sBACvB7lB,EAAKmD,SAAS,CACb2iB,SAAUlnB,KApGIoB,EAyGjBiI,WAAa,WACV,IAEEqd,EAFES,EAAiB/lB,EAAKpB,MAAMmnB,eAC5B3e,EAAQpH,EAAKpB,MAAM0mB,aAAazhB,QAGrCyhB,EADEtlB,EAAKpB,MAAMuK,cACE/B,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAAShJ,EAAEe,KAAKkI,cAAcD,EAAEjI,QAE3CgG,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAASA,EAAEjI,KAAKkI,cAAcjJ,EAAEe,QAE3DpB,EAAKmD,SAAS,CACbgG,eAAgBnJ,EAAKpB,MAAMuK,cAC3Bmc,eACAS,gBAAiBA,KArHF/lB,EA0HjBkI,kBAAoB,WACnB,IACIod,EADEle,EAAQpH,EAAKpB,MAAM0mB,aAAazhB,QAGrCyhB,EADEtlB,EAAKpB,MAAMuK,cACE/B,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAAShJ,EAAEiB,YAAYgI,cAAcD,EAAE/H,eAElD8F,EAAMgC,KAAK,SAAC/I,EAAEgJ,GAAH,OAASA,EAAE/H,YAAYgI,cAAcjJ,EAAEiB,eAGlEtB,EAAKmD,SAAS,CACbgG,eAAgBnJ,EAAKpB,MAAMuK,cAC3Bmc,eACAO,uBAAwB7lB,EAAKpB,MAAMinB,yBAtIpB7lB,EA0IjBgmB,WAAa,SAACvnB,GACb,IAAIwmB,EAAiBjlB,EAAKpB,MAAMqmB,eAAephB,QAC3CqhB,EAAallB,EAAKpB,MAAMsmB,WAAWrhB,QACnC6hB,EAAa1lB,EAAKpB,MAAM8mB,WAAW7hB,QACnCsY,EAAWnc,EAAKpB,MAAMud,SAAStY,QACnCohB,EAAexmB,GAAM,mDACrBymB,EAAWzmB,IAAM,EACjB0d,EAAS1d,IAAM,EACfinB,EAAWnc,OAAOmc,EAAWlc,UAAU,SAAS3G,GAC5C,OAAOA,EAAKpE,KAAOA,IACnB,GACJuB,EAAKmD,SAAS,CAAEuiB,aAAYvJ,WAAU+I,aAAYD,oBArJlCjlB,EAwJjBimB,UAAY,WACX,IAAIhB,EAAiBjlB,EAAKpB,MAAMqmB,eAAephB,QAC3CqhB,EAAallB,EAAKpB,MAAMsmB,WAAWrhB,QACnC6hB,EAAa1lB,EAAKpB,MAAM8mB,WAAW7hB,QACnCsY,EAAWnc,EAAKpB,MAAMud,SAAStY,QACnC6hB,EAAa,GACb,IAAK,IAAI5iB,EAAI,EAAGA,EAAIqZ,EAASnR,OAAQlI,IACnCqZ,EAASrZ,IAAK,EACdmiB,EAAeniB,GAAK,mDACpBoiB,EAAWpiB,IAAK,EAElB9C,EAAKmD,SAAS,CAAEuiB,aAAYT,iBAAgBC,aAAY/I,cAnKxCnc,EAsKjB0W,gBAAkB,WACjB1W,EAAKmD,SAAS,CACZiE,MAAO,GACPhE,QAAS,GACT2E,cAAe,GACfzI,MAAO,KACP0d,iBAAiB,EACjB7J,qBAAqB,EACrBhK,eAAe,EACfqc,mBAAmB,EACnB7jB,MAAO,GACP6R,QAAS,GACT3S,MAAO,KACPoS,aAAc,GACdoS,SAAU,GACVC,aAAc,GACdF,cAAe,CAAC,WAChBG,aAAc,QACdQ,gBAAgB,EAChBF,uBAAuB,EACvBC,SAAS,EACTJ,WAAY,GACZT,eAAgB,GAChBC,WAAY,GACZ/I,SAAU,GACV+J,eAAe,GACd,kBAAMlmB,EAAK2X,iBAhME3X,EAmMjB2X,YAAc,WACbrT,IAAM6hB,IAAI,CAAC7hB,IAAMC,IAAI,gBACVD,IAAMC,IAAI,oBACdC,KAAKF,IAAM8hB,OAAO,SAACC,EAAeC,GACnC,IAAIlf,EAAQif,EAAc3hB,KACtB2gB,EAAWiB,EAAe5hB,KAE9B1E,EAAKmD,SAAS,CACZkiB,WACAje,QACA6L,aAJiB,GAKjBiT,eAAe,GACd,kBAAMlmB,EAAK+kB,sBA7MpB/kB,EAAKpB,MAAQ,GAFGoB,mFAQhBE,KAAKwW,mDA2ME,IAAArS,EAAAnE,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACCxK,KAAKtB,MAAMsnB,cACV9lB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACbX,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,wBAAwB6D,UAAQ,GAC7C1E,KAAKtB,MAAM4mB,kBACVplB,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMU,MAClB0D,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK8D,aACjBZ,QAASlD,KAAKtB,MAAMwE,WAET,KAEjBhD,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,6BAA6BwlB,MAAS,CAAEhoB,gBAAiB2B,KAAKtB,MAAM2mB,eACtFrlB,KAAKtB,MAAM8mB,WAAW1a,OAAS,qEAAgB,kHAEhD9K,KAAKtB,MAAM8mB,WAAW1a,OACxB5K,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,wCACnBX,EAAAC,EAAAC,cAAA,MAAIS,UAAU,uBACXb,KAAKtB,MAAM8mB,WAAW9iB,IAAI,SAACC,EAAKiI,GAAN,OACzB1K,EAAAC,EAAAC,cAAA,MAAI0C,IAAK8H,EAAQ/J,UAAU,oBAAoBwlB,MAAS,CAAEhoB,gBAAiB8F,EAAKzF,MAAM2mB,eACpFnlB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,0BAA0B8B,EAAKzB,KAA/C,MAAwDyB,EAAKvB,aAAmBlB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,yBAAyBC,QAASqD,EAAK2hB,WAAW/kB,KAAKoD,EAAMxB,EAAKpE,KAAM2B,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,0BAG5K,KACZlB,KAAKtB,MAAM8mB,WAAW1a,QAAU9K,KAAKtB,MAAMuU,oBAC9C/S,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWO,UAAU,wBAClBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKsmB,UAAWD,MAAS,CAAEhoB,gBAAiB2B,KAAKtB,MAAM2mB,cAAexkB,UAAU,uBAAjG,8CAAgIX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,OAAOL,UAAU,kBAA5J,KACAX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK+lB,UAAWM,MAAS,CAAEhoB,gBAAiB2B,KAAKtB,MAAM2mB,cAAexkB,UAAU,uBAAjG,8CAAgIX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,kBAAkBL,UAAU,kBAAvK,MACY,MAGbb,KAAKtB,MAAMwI,MAAM4D,QAAU9K,KAAKtB,MAAMoe,gBACxC5c,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,0BAA0B4M,YAAa,GAC1DzN,KAAKtB,MAAMwI,MAAMxE,IAAI,SAACC,EAAMiI,GAAP,OAA+C,QAA7BzG,EAAKzF,MAAMmJ,eAAuD,KAA7B1D,EAAKzF,MAAMmJ,eAAwB1D,EAAKzF,MAAMmJ,gBAAkBlF,EAAKmiB,QAChJ5kB,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,EAAO/J,UAAU,qBAC1BX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,QACjBT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACXX,EAAAC,EAAAC,cAAA,UAAKuC,EAAKzB,MACVhB,EAAAC,EAAAC,cAAA,UAAKuC,EAAK7F,OAAV,6BACAoD,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASqD,EAAKgb,SAASpe,KAAKoD,EAAMxB,EAAKpE,IAAK8J,SAAO,EAACxH,UAAU,gBAAtE,qDAME,KAEhBb,KAAKtB,MAAMuU,oBACX/S,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACfX,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM1B,MAAI,EAAClC,UAAU,yCACnBX,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,UACdhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEhoB,gBAAiB2B,KAAKtB,MAAM2mB,cAAevkB,QAAWd,KAAK+H,YAA9E,8CAEG/H,KAAKtB,MAAMmnB,eAAiB3lB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,WAAWmJ,KAAK,QAAQxJ,UAAU,kBAAqBX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,aAAamJ,KAAK,QAAQxJ,UAAU,oBAGlJX,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,iBACdhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEhoB,gBAAiB2B,KAAKtB,MAAM2mB,cAAevkB,QAAWd,KAAKgI,mBAA9E,gEAEGhI,KAAKtB,MAAMinB,sBAAwBzlB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,WAAWmJ,KAAK,QAAQxJ,UAAU,kBAAqBX,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,aAAamJ,KAAK,QAAQxJ,UAAU,oBAGzJX,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAW+lB,MAAO,CAACE,MAAO,SAAUrlB,KAAK,SACvChB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8kB,MAAS,CAAEhoB,gBAAiB2B,KAAKtB,MAAM2mB,cAAevkB,QAAWd,KAAKwW,gBAAiB/U,MAAM,kCACnGvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,uBAAuBL,UAAU,gBAAgBwJ,KAAK,QAIrEnK,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,sCAAsC4M,YAAa,GACtEzN,KAAKtB,MAAM0mB,aAAa1iB,IAAI,SAACC,EAAMiI,GAAP,OAC3B1K,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,GACT1K,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mCACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,QACjBT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBAAoBwlB,MAAS,CAAEhoB,gBAAiB8F,EAAKzF,MAAM2mB,eACtEnlB,EAAAC,EAAAC,cAAA,UAAKuC,EAAKzB,MACVhB,EAAAC,EAAAC,cAAA,UAAKuC,EAAKvB,aACVlB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQV,UAAU,mBAAmBC,QAASqD,EAAKohB,UAAUxkB,KAAKoD,EAAMxB,EAAKpE,IAAK0d,SAAW9X,EAAKzF,MAAMud,SAASrR,GAAQyb,MAAS,CAAEG,MAAOriB,EAAKzF,MAAM2mB,aAAc5Q,OAAQ,SACzKtQ,EAAKzF,MAAMsmB,WAAWpa,GAAS,KAAO1K,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,uBAAuBmJ,KAAK,QAG7ElG,EAAKzF,MAAMqmB,eAAena,YAQpC,MAEb,MAEJ1K,EAAAC,EAAAC,cAAA,uBA/TYuB,aCmEL8kB,eAhEd,SAAAA,EAAY1mB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAymB,IACjB3mB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAukB,GAAAnkB,KAAAtC,KAAMD,KAaN2mB,YAAc,SAACpjB,EAADS,GAAkB,IAAZ3E,EAAY2E,EAAZ3E,MAClB6E,QAAQC,IAAIZ,GACZxD,EAAKmD,SAAS,CAAE0jB,WAAYvnB,KAd9BU,EAAKpB,MAAQ,CACTkoB,MAAO,WACPC,SAAU,SACVF,WAAY,UACZG,aAAc,CAAC,CAAEhkB,IAAK,EAAG1D,MAAO,UAAW2D,KAAM,WAAY,CAAED,IAAK,EAAG1D,MAAO,MAAO2D,KAAM,SAN9EjD,qHAqBf,OACEI,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,wBAAhB,mFACEX,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMioB,WAClB7jB,KAAG,EACHiC,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK0mB,YACjBxjB,QAASlD,KAAKtB,MAAMooB,gBAG1B5mB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,wBAAhB,yFACEX,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMioB,WAClB7jB,KAAG,EACHiC,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK0mB,YACjBxjB,QAASlD,KAAKtB,MAAMooB,mBAMhC5mB,EAAAC,EAAAC,cAAA,uBA5DeuB,uBCGjBolB,eAEJ,SAAAA,EAAYhnB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA+mB,IAChBjnB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA6kB,GAAAzkB,KAAAtC,KAAMD,KAgENinB,WAAa,WAEX,IAAmFpkB,EAA/EM,EAAU,GAAI+jB,EAAM,GAAIC,EAAS,GAAIC,EAAQ,GAAIC,EAAU,GAAIC,EAAY,GAC/E,IAAKzkB,EAAI,EAAGA,EAAI9C,EAAKpB,MAAM4oB,MAAMxc,OAAQlI,IAEvC,IADA,IAAID,EAAO7C,EAAKpB,MAAM4oB,MAAM1kB,GAAG2kB,MACtB/W,EAAI,EAAGA,EAAI7N,EAAKmI,OAAQ0F,IAC1B0W,EAAOM,eAAe7kB,EAAK6N,IAI9B0W,EAAOvkB,EAAK6N,IAAI3N,KAAK/C,EAAKpB,MAAM4oB,MAAM1kB,GAAGrE,KAHzC2oB,EAAOvkB,EAAK6N,IAAM,GAClB0W,EAAOvkB,EAAK6N,IAAI3N,KAAK/C,EAAKpB,MAAM4oB,MAAM1kB,GAAGrE,KAO/C,IAAK,IAAMoE,KAAQukB,EACjBhkB,EAAQL,KAAK,CACXC,IAAKH,EACLI,KAAMJ,EACNvD,MAAO8nB,EAAOvkB,KAIlB,IAAKC,EAAI,EAAGA,EAAI9C,EAAKpB,MAAM4oB,MAAMxc,OAAQlI,KACuB,IAA1DwkB,EAAQ5jB,QAAQ1D,EAAKpB,MAAM4oB,MAAM1kB,GAAG6kB,kBACtCL,EAAQvkB,KAAK/C,EAAKpB,MAAM4oB,MAAM1kB,GAAG6kB,iBAIrC,IAAK7kB,EAAI,EAAGA,EAAIwkB,EAAQtc,OAAQlI,IAC9BqkB,EAAIpkB,KAAK,CACPC,IAAKskB,EAAQxkB,GACbG,KAAMqkB,EAAQxkB,GACdxD,MAAOgoB,EAAQxkB,KAQnB,IAJAykB,EAAU,wCAAiB,GAC3BA,EAAU,yCAAuB,GACjCA,EAAU,wCAAiB,GAEtBzkB,EAAI,EAAGA,EAAI9C,EAAKpB,MAAM4oB,MAAMxc,OAAQlI,IAAK,CAC5C,IAAID,EAAO7C,EAAKpB,MAAM4oB,MAAM1kB,GAAGkI,OAC3BnI,GAAQ,IACV0kB,EAAU,wCAAexkB,KAAK/C,EAAKpB,MAAM4oB,MAAM1kB,GAAGrE,IAC1CoE,EAAO,KAASA,EAAO,IAC/B0kB,EAAU,yCAAqBxkB,KAAK/C,EAAKpB,MAAM4oB,MAAM1kB,GAAGrE,IAExD8oB,EAAU,wCAAexkB,KAAK/C,EAAKpB,MAAM4oB,MAAM1kB,GAAGrE,IAItD,IAAK,IAAMoE,KAAQ0kB,EACjBF,EAAMtkB,KAAK,CACTC,IAAKH,EACLI,KAAMJ,EACNvD,MAAOioB,EAAU1kB,KAIrB7C,EAAKmD,SAAS,CACZC,UAAS+jB,MAAKE,WA9HFrnB,EAkIhB+d,YAAc,WACZ,IAAI6J,EAAU5nB,EAAKpB,MAAMipB,UACzB7nB,EAAKmD,SAAS,CACZykB,aArIY5nB,EAyIhB8nB,kBAAoB,SAACtkB,EAADS,GAAkB,IAAZ3E,EAAY2E,EAAZ3E,MACxBU,EAAKmD,SAAS,CAAE4kB,aAAczoB,KA1IhBU,EA6IhBgoB,mBAAqB,SAACxkB,EAAD+U,GAAkB,IAAZjZ,EAAYiZ,EAAZjZ,MACzBU,EAAKmD,SAAS,CAAE8kB,OAAQ3oB,KA9IVU,EAiJhBkoB,mBAAqB,SAAC1kB,EAADsX,GAAkB,IAAZxb,EAAYwb,EAAZxb,MACzBU,EAAKmD,SAAS,CAAEglB,cAAe7oB,KAlJjBU,EAqJhBooB,YAAc,WACZC,OAAOC,SAAS,EAAGtoB,EAAKuoB,MAAMC,YApJhCxoB,EAAKuoB,MAAQxP,IAAMC,YACnBhZ,EAAKpB,MAAQ,CACX4oB,MAAO,GACPiB,UAAW,GACXrlB,QAAS,GACT2kB,aAAc,GACdI,cAAe,GACf7oB,MAAO,KACP2oB,OAAQ,GACR1d,KAAM,GACNme,iBAAiB,EACjBxV,eAAe,EACfyV,kBAAkB,EAClBC,qBAAqB,EACrBC,uBAAuB,EACvBlnB,MAAO,GACPqiB,OAAQ,GACRxQ,QAAS,GACT3H,YAAa,KACbhL,MAAO,KACPioB,YAAa,GACbC,YAAa,GACbC,iBAAkB,EAClBC,kBAAmB,GACnBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,KACZC,UAAW,GACXxB,UAAW,KACXD,QAAS,GACTpE,eAAgB,GAChBzW,YAAa,GACbuc,aAAc,GACdzF,MAAO,EACP0F,OAAQ,GACRC,aAAc,IAAIC,IAClBC,SAAS,EACTC,WAAY,GACZC,aAAc,KACdC,SAAU,KACVC,WAAW,EACXC,eAAgB,EAChBC,oBAAoB,EACpBC,qBAAqB,EACrBC,cAAe,GACfC,aAAc,EACdC,gBAAiB,KACjBxW,QAAS,EACTyW,MAAO,EACP1W,QAAS,GAnDK3T,mFAuDE,IAAAqE,EAAAnE,KAClBoE,IAAMC,IAAI,cACPC,KAAK,SAAAC,GACJ,IAAI+iB,EAAQ/iB,EAAIC,KAChBL,EAAKlB,SAAS,CACZqkB,QAAO8C,SAAU7lB,EAAIC,MACpB,kBAAML,EAAK6iB,kDA4FX,IAAA7c,EAAAnK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACdb,KAAKtB,MAAMsU,cACV9S,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,aAAa6D,UAAQ,GACnCxE,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,4EACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMmpB,aAClB/kB,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK4nB,kBACjB1kB,QAASlD,KAAKtB,MAAMwE,WAGxBhD,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,wFACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMupB,cAElBljB,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAKgoB,mBACjB9kB,QAASlD,KAAKtB,MAAMyoB,SAGxBjnB,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMqpB,OAElBhjB,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK8nB,mBACjB5kB,QAASlD,KAAKtB,MAAMuoB,QAGlB,KAEJjnB,KAAKtB,MAAM4oB,MAAMxc,QAAU9K,KAAKtB,MAAM8pB,gBACxCtoB,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,cAAc4M,YAAa,GAChDzN,KAAKtB,MAAM4oB,MAAM5kB,IAAI,SAACC,EAAMiI,GAAP,OACS,QAA5BT,EAAKzL,MAAMmpB,cAAqD,KAA5B1d,EAAKzL,MAAMmpB,eAAqE,IAA9C1d,EAAKzL,MAAMmpB,aAAarkB,QAAQb,EAAKpE,OACrF,QAAtB4L,EAAKzL,MAAMqpB,QAAyC,KAAtB5d,EAAKzL,MAAMqpB,QAAiB5d,EAAKzL,MAAMqpB,SAAWplB,EAAK8kB,mBACxD,QAA7Btd,EAAKzL,MAAMupB,eAAwD,KAA7B9d,EAAKzL,MAAMupB,gBAAuE,IAA/C9d,EAAKzL,MAAMupB,cAAczkB,QAAQb,EAAKpE,MAChH2B,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,EAAO/J,UAAU,eAC1BX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKiC,EAAKhC,SAEnBT,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,gBAAeX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,gBAAgB8B,EAAKmhB,SAC3E5jB,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,gBAAeX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,eAAe8B,EAAKlB,OAA1E,KACAvB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,MAAMmJ,KAAK,UAA5B,KACAnK,EAAAC,EAAAC,cAAA,YAAOuC,EAAK0nB,QAEdnqB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,QAAQmJ,KAAK,MAC9BnK,EAAAC,EAAAC,cAAA,YAAOuC,EAAKghB,QAEdzjB,EAAAC,EAAAC,cAACkqB,GAAA,EAAD,CAAQ3hB,KAAK,OAAO4hB,cAAe5nB,EAAKolB,OAAQlnB,UAAY,eAAe2pB,UAAW,EAAGvO,UAAQ,KAEnG/b,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACGsB,EAAK2Q,QAAQlN,OAAO,EAAE,KAAO,SAGlClG,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GACbnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMnF,UAAU,2BAA4BoF,GAAI,CAAE2F,SAAQ,UAAAC,OAAYlJ,EAAKpE,IAAOwL,MAAO,CAAEpH,UAA3F,6CAIU,OAIxBzC,EAAAC,EAAAC,cAAA,uBAjPmBuB,aAgQRC,mBATf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAM+rB,eAGvB,SAA4B1oB,GACxB,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAInCH,CAA6CmlB,IChN7C2D,oLA9CX,OACExqB,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,oBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,WAAT,qCAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,oEAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,kGAGjB/F,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACfX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,wBAEXR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAad,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,UAAT,uCAMrB/F,EAAAC,EAAAC,cAAA,uBA7CgBuB,aCGlBgpB,eAEJ,SAAAA,EAAY5qB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA2qB,IAChB7qB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAyoB,GAAAroB,KAAAtC,KAAMD,KA0CN6qB,cAAgB,WACd,IAAIpoB,EAAW,GACf1C,EAAKpB,MAAM4P,MAAM5L,IAAI,SAACC,EAAMC,GAAP,OACPJ,EAASK,KAAK,CACVC,IAAKH,EAAKlB,MACVsB,KAAMJ,EAAKib,WACXxe,MAAOuD,EAAKib,eAE9B9d,EAAKmD,SAAS,CACZC,QAASV,GACR,kBAAM1C,EAAKqD,eArDArD,EAwDhBqD,UAAY,WACV,IACIC,EAAMtD,EAAKpB,MAAMwE,QAEfG,EAASD,EACZV,IAAI,SAAAY,GAAC,OAAIA,EAAC,OACVZ,IAAI,SAACY,EAAGV,EAAGW,GAAP,OAAiBA,EAAMC,QAAQF,KAAOV,GAAKA,IAC/Ca,OAAO,SAAAH,GAAC,OAAIF,EAAIE,KAAIZ,IAAI,SAAAY,GAAC,OAAIF,EAAIE,KACpCxD,EAAKmD,SAAS,CACZC,QAASG,EACTwnB,cATc,MAzDF/qB,EAsEhB6gB,eAAiB,WACf,IAAI9Y,EAAgB/H,EAAKpB,MAAMU,MAC/BU,EAAKmD,SAAS,CACZ4E,mBAzEY/H,EA6EhBgE,aAAe,SAACR,EAADS,GAAA,IAAM3E,EAAN2E,EAAM3E,MAAN,OAAkBU,EAAKmD,SAAS,CAAE7D,SAAS,kBAAMU,EAAK6gB,oBA7ErD7gB,EA+EhBgrB,WAAa,SAACxnB,GACZ,IAAIynB,EAAWznB,EAAEmC,OAAOulB,aAAa,YACjCzsB,EAAK+E,EAAEmC,OAAOulB,aAAa,MAC3BC,EAAcnrB,EAAKpB,MAAMusB,YAAYtnB,QACnCP,EAAM,IAAI8nB,MAAM,GAAGjW,MAAK,GAC9B7R,EAAI7E,IAAM,EACV0sB,EAAYF,GAAY3nB,EACxBtD,EAAKmD,SAAS,CACZgoB,iBAvFYnrB,EA2FhBqrB,WAAa,SAACC,GACZ,IACIC,EADQvrB,EAAKpB,MAAM4P,MAAM3K,QACNwJ,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAO6sB,IAEtCH,EAAc,GACdK,EAAW,GACXC,EAAiB,GAErBF,EAAWG,MAAM9oB,IAAI,SAACC,EAAMiI,GAAP,OAAiB2gB,EAAe1oB,KAAKF,EAAK8oB,kBAC/D,IAAK,IAAI7oB,EAAI,EAAGA,EAAI,EAAGA,IACrB0oB,EAASzoB,MAAK,GAEhB,IAAK,IAAIuK,EAAI,EAAGA,EAAIie,EAAWG,MAAM1gB,OAAQsC,IAC3C6d,EAAYpoB,KAAKyoB,GAGnBxrB,EAAKmD,SAAS,CACZooB,aACAJ,cACAM,kBACC,kBAAMzrB,EAAKmD,SAAS,CACnByoB,iBAAiB,EACjBC,qBAAqB,OAjHX7rB,EAqHhB8rB,YAAc,WACZ9rB,EAAKmD,SAAS,CACZyoB,iBAAiB,EACjBC,qBAAqB,EACrB3Y,eAAe,EACfE,iBAAiB,EACnB+X,YAAa,GACbY,aAAc,EACdC,iBAAkB,EAClBP,eAAgB,GAChBQ,eAAgB,GAChBC,iBAAkB,MAhIJlsB,EAoIhBmsB,aAAe,WACd,IAKKrpB,EALDspB,EAAepsB,EAAKpB,MAAMusB,YAAYtnB,QACtC4nB,EAAiBzrB,EAAKpB,MAAM6sB,eAAe5nB,QAC3CwoB,EAAe,GACfJ,EAAiB,GACjBC,EAAmB,GAEvB,IAAKppB,EAAI,EAAGA,EAAIspB,EAAaphB,OAAQlI,IAEpC,IADA,IAAID,EAAOupB,EAAatpB,GACf4N,EAAI,EAAGA,EAAI7N,EAAKmI,OAAQ0F,IAC5B7N,EAAK6N,IACR2b,EAAatpB,KAAK2N,GAKpB,GAAG2b,EAAarhB,SAAWhL,EAAKpB,MAAM2sB,WAAWG,MAAM1gB,OAAQ,CAC7D,IAAKlI,EAAI,EAAGA,EAAIupB,EAAarhB,OAAQlI,IAChC2oB,EAAe3oB,KAAOupB,EAAavpB,GACpCmpB,EAAelpB,KAAKD,GAGpBopB,EAAiBnpB,KAAKD,GAG1B,IAAIwpB,EAAO,GACXA,EAAK1vB,MAAQqvB,EAAejhB,OAC5BshB,EAAK5kB,KAAO,IAAIJ,KAChBglB,EAAK/d,WAAaL,KAAKC,MAAMme,EAAK1vB,MAAQoD,EAAKpB,MAAM2sB,WAAWG,MAAM1gB,OAAS,KAAQ,GACvFhL,EAAKC,MAAMvD,QAAQO,sBACnB+C,EAAKC,MAAMvD,QAAQQ,YAAYovB,GAC/BtsB,EAAKmD,SAAS,CACZiQ,iBAAiB,EACjByY,qBAAqB,EACrBI,iBACAC,mBACAhZ,eAAe,EACfqZ,kBAAkB,SAIpBvsB,EAAKmD,SAAS,CACZopB,kBAAkB,KA5KxBvsB,EAAKpB,MAAQ,CACX4P,MAAO,GACPpL,QAAS,GACT2E,cAAe,GACfgjB,cAAe,GACfa,iBAAiB,EACjBC,qBAAqB,EACrBlqB,MAAO,GACP6R,QAAS,GACT3S,MAAO,KACPvB,MAAO,GACP6X,aAAc,GACdgU,YAAa,GACbI,WAAY,KACZQ,aAAc,EACdC,iBAAkB,EAClBP,eAAgB,GAChBQ,eAAgB,GAChBC,iBAAkB,GAClBhZ,eAAe,EACfqZ,kBAAkB,EAClBhH,aAAc,MAvBAvlB,mFA2BE,IAAAqE,EAAAnE,KAChBoE,IAAMC,IAAI,gBACPC,KAAK,SAAAC,GACJ,IAAI+J,EAAQ/J,EAAIC,KAChBL,EAAKlB,SAAS,CACZqL,MAAOA,GACN,kBAAMnK,EAAKymB,+DAID0B,GACbA,EAAUrB,YAAgBjrB,KAAKtB,MAAMusB,6CA+IpC,IAAA9gB,EAAAnK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACXX,EAAAC,EAAAC,cAACoK,EAAD,MACAtK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACdb,KAAKtB,MAAMgtB,gBACVxrB,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAM5D,UAAU,aAAa6D,UAAQ,GACjCxE,EAAAC,EAAAC,cAACqE,EAAA,EAAKnE,KAAN,CAAWY,KAAK,SACdhB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CACEC,YAAY,8FACZC,OAAK,EACL1F,MAAOY,KAAKtB,MAAMU,MAClB0D,IAAK9C,KAAKtB,MAAMwE,QAAQ3E,GACxBwG,WAAS,EACTC,QAAM,EACNC,WAAS,EACTC,SAAYlF,KAAK8D,aACjBZ,QAASlD,KAAKtB,MAAMwE,YAGlB,KAEVlD,KAAKtB,MAAM4P,MAAMxD,QAAU9K,KAAKtB,MAAMgtB,gBACtCxrB,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,0BAA0B4M,YAAa,GAC1DzN,KAAKtB,MAAM4P,MAAM5L,IAAI,SAACC,EAAMiI,GAAP,OAA+C,QAA7BT,EAAKzL,MAAMmJ,eAAuD,KAA7BsC,EAAKzL,MAAMmJ,eAAwBsC,EAAKzL,MAAMmJ,gBAAkBlF,EAAKib,aAClJ1d,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM1K,IAAK8H,EAAO/J,UAAU,sBAAsBwlB,MAAS,CAACkG,UAAS,eAAA1gB,OAAiBlJ,EAAK6jB,MAAtB,gBAAA3a,OAA0ClJ,EAAK6jB,SAClHtmB,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,mBAAmBwlB,MAAS,CAAChoB,gBAAiBsE,EAAK6jB,QACzEtmB,EAAAC,EAAAC,cAAA,UAAKuC,EAAKib,YACV1d,EAAAC,EAAAC,cAAA,YAAOuC,EAAKlB,QAEbvB,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,0BACzBX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,+BAAb,6GAAgEX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,8BAA8B8B,EAAK7F,SACnHoD,EAAAC,EAAAC,cAAA,KAAGS,UAAU,+BAAb,mJAAwEX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,8BAA8B8B,EAAK0S,eAGhInV,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAAU,WAAOqJ,EAAKghB,WAAWxoB,EAAKpE,KAA+C8nB,MAAS,CAAChoB,gBAAiBsE,EAAK6jB,QAA7H,qEAGY,KAElBxmB,KAAKtB,MAAMitB,oBACTzrB,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,kCACdX,EAAAC,EAAAC,cAAA,UACEJ,KAAKtB,MAAM2sB,WAAW5pB,MACvBvB,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4rB,YAAanqB,MAAM,8EAAkBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,2BAErEhB,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACGZ,KAAKtB,MAAM2sB,WAAWG,MAAM7nB,QAAQjB,IAAI,SAACC,EAAMiI,GAAP,OACrC1K,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkByB,IAAKH,EAAKpE,GAAIA,GAAIqM,EAAO/J,UAAU,gCACrDX,EAAAC,EAAAC,cAAA,UAAMuC,EAAK6pB,UACXtsB,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAM1H,UAAU,oBACb8B,EAAK8pB,SAAS/pB,IAAI,SAACgqB,EAAOC,GAAR,OACjBzsB,EAAAC,EAAAC,cAAA,SAAOS,UAAU,aAAaiC,IAAK6pB,GACjCzsB,EAAAC,EAAAC,cAAA,SAAOzD,KAAK,WACV4B,GAAIouB,EACJ5B,SAAUpoB,EAAKpE,GACfquB,MAAOF,EACPxrB,KAAK,qBACL9B,MAAOuD,EACP6mB,QAASrf,EAAKzL,MAAMusB,YAAYtoB,EAAKpE,IAAIouB,GACzCznB,SAAUiF,EAAK2gB,aACd4B,UAOd1sB,KAAKtB,MAAM2tB,iBACVnsB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACXX,EAAAC,EAAAC,cAAA,kHACK,KAEXF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6CACdX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKisB,cAAtB,gDAEK,KAETjsB,KAAKtB,MAAMwU,gBACVhT,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,qDACrCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,kCACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACNlZ,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACdX,EAAAC,EAAAC,cAAA,oLAAoCF,EAAAC,EAAAC,cAAA,YAAOJ,KAAKtB,MAAMqtB,eAAejhB,QAArE,iBAAuF5K,EAAAC,EAAAC,cAAA,YAAOJ,KAAKtB,MAAM2sB,WAAWG,MAAM1gB,QAA1H,KACO5K,EAAAC,EAAAC,cAAA,6EAAkBF,EAAAC,EAAAC,cAAA,YAAOJ,KAAKtB,MAAMqtB,eAAejhB,OAAjC,KAAlB,2CAEF5K,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMqtB,eAAejhB,QAE7B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEF9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMstB,iBAAiBlhB,QAE/B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGJ9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACtBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK4rB,aAA9B,kFAIQ,OAIpB1rB,EAAAC,EAAAC,cAAA,uBAxSYuB,aAsTLC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMyX,eAGvB,SAA4BpU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6C+oB,ICpTtDkC,eAEL,SAAAA,EAAY9sB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA6sB,IACjB/sB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA2qB,GAAAvqB,KAAAtC,KAAMD,KAUNyW,gBAAkB,WAChB1W,EAAKmD,SAAS,CACZiE,MAAO,GACPkM,cAAe,GACfC,cAAe,GACf9U,GAAI,EACJ0N,eAAe,EACfmL,gBAAgB,EAChBpL,iBAAiB,EACjB8O,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBJ,gBAAgB,GACf,kBAAM9M,EAAK2X,iBAxBC3X,EA2BjB2X,YAAc,WACZrT,IAAMC,IAAI,kBACPC,KAAK,SAAAC,GAGJ,IAFA,IAAM2C,EAAQ3C,EAAIC,KACdwW,EAAS,GACJpY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAID,EAAO,GACLA,EAAKmI,OAAS,GAAG,CACrB,IAAI6P,EAAKzT,EAAM8G,KAAKwB,MAAMxB,KAAK4J,SAAW1Q,EAAM4D,UACtB,IAAtBnI,EAAKa,QAAQmX,IACfhY,EAAKE,KAAK8X,GAGdK,EAAOnY,KAAKF,GAGd,IAAM8T,EAAcuE,EAAO,GAAGhN,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SAEnEhL,EAAKmD,SAAS,CACZiE,QACA8T,SACAvE,mBAhDS3W,EAoDjBmb,gBAAkB,WAChBnb,EAAKmD,SAAS,CACZ+I,iBAAiB,EACjBC,eAAe,KAvDFnM,EA2DjBob,cAAgB,SAAC4R,GACf,GAAIA,EAAU,CACZ,IAAIzZ,EAAgBvT,EAAKpB,MAAM2U,cAAc1P,QAC7C0P,EAAcxQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CAAEoQ,sBACX,CACH,IAAID,EAAgBtT,EAAKpB,MAAM0U,cAAczP,QAC7CyP,EAAcvQ,KAAK/C,EAAKpB,MAAM+X,aAC9B3W,EAAKmD,SAAS,CAAEmQ,kBAEpBtT,EAAKmD,SAAS,CACZ6X,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBoK,gBAAgB,KAzEHtX,EA6EjB6M,iBAAmB,WACjB,IAAIpO,EAAIuB,EAAKpB,MAAMH,GACnBA,GAAU,EACV,IAAMyc,EAASlb,EAAKpB,MAAMsc,OAC1B,GAAGzc,EAAKuB,EAAKpB,MAAMsc,OAAOlQ,OAAO,CAC/B,IAAM2L,EAAeuE,EAAOzc,GAAIyP,KAAKwB,MAAMxB,KAAK4J,SAAWoD,EAAO,GAAGlQ,SACrEhL,EAAKmD,SAAS,CACZ1E,KACAkY,cACAW,gBAAgB,EAChB0D,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,QAInB,CACH,IAAI9F,EAAQpH,EAAKpB,MAAM2U,cAAc1P,QACjC2U,EAAW,GAAI5J,EAAe,GAClC4J,EAAS/Z,GAAKga,eACdD,EAAS9Q,KAAO,IAAIJ,KACpBkR,EAAS5b,MAAQoD,EAAKpB,MAAM2U,cAAcvI,OAC1C,IAAK,IAAIlI,EAAI,EAAGA,EAAIsE,EAAM4D,OAAQlI,IAChC8L,EAAa7L,KAAKqE,EAAMtE,GAAGrE,IAE7B+Z,EAAS5J,aAAeA,EACxB5O,EAAKC,MAAMvD,QAAQ0C,kBAAkBoZ,GACrCxY,EAAKC,MAAMvD,QAAQK,uBAAuB,GAC1CiD,EAAKC,MAAMvD,QAAQC,iBAAiB6b,EAAS5b,OAC7CoD,EAAKmD,SAAS,CACZ2J,gBAAgB,EAChBkO,sBAAsB,EACtBC,gBAAgB,EAChB/N,oBAAoB,EACpBf,eAAe,EACfD,iBAAiB,MAhHNlM,EAqHjBJ,UAAY,WACVC,IAAOC,IAAIE,EAAKpB,MAAMmO,cApHxB/M,EAAKpB,MAAQ,GAFIoB,mFAQfE,KAAKwW,mDAkHL,OACEtW,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACAL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACfX,EAAAC,EAAAC,cAACoK,EAAD,MACExK,KAAKtB,MAAMsN,gBACX9L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYX,UAAU,uBACpBX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAI,yBAEbR,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,kFACAd,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,KACEnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKib,iBAA9B,4CAKR,KAEAjb,KAAKtB,MAAMuN,cACZ/L,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,uBAClCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACbX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,qBAEvBX,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,CAAaH,UAAU,qBAAqBb,KAAKtB,MAAM+X,YAAYvV,MAEnEhB,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,KAAchB,KAAKtB,MAAM+X,YAAYrV,aAErClB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACdb,KAAKtB,MAAM0Y,eACVlX,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOE,IAAKV,KAAKtB,MAAM+X,YAAY9V,MAAOE,UAAU,qBAA8B,OAItFX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,CAAcwa,OAAK,GACjBlb,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACvBb,KAAKtB,MAAMqc,eACZ7a,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKkb,cAAcna,KAAKf,MAAM,GAAQa,UAAU,mBAAmBwH,SAAO,GAA3F,8CACAnI,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKkb,cAAcna,KAAKf,MAAM,GAAOa,UAAU,oBAAoBwH,SAAO,GAA3F,mCACU,KAEXrI,KAAKtB,MAAMsO,mBACV9M,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAK2M,iBAAkBtE,SAAO,GAA/C,gEAAoE,SAM7E,KAEArI,KAAKtB,MAAMkO,eACZ1M,EAAAC,EAAAC,cAACoN,EAAA,EAAKhM,MAAN,CAAYiM,YAAa,EAAG5M,UAAU,0CACpCX,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAM3M,UAAU,iBACdX,EAAAC,EAAAC,cAACoN,EAAA,EAAK5M,QAAN,KACEV,EAAAC,EAAAC,cAACoN,EAAA,EAAKxM,OAAN,qEACAd,EAAAC,EAAAC,cAACgZ,EAAA,EAAD,MACAlZ,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,wBACU,IAApCb,KAAKtB,MAAM0U,cAActI,OACzB5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,uFACCJ,KAAKtB,MAAM2U,cAAc3Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,gBAG7DlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMQ,UAAU,cAChBX,EAAAC,EAAAC,cAAA,mGACCJ,KAAKtB,MAAM0U,cAAc1Q,IAAI,SAACC,EAAMiI,GAAP,OAC1B1K,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWwC,IAAK8H,GAAQ1K,EAAAC,EAAAC,cAAA,YAAOuC,EAAKzB,MAApC,MAAoDyB,EAAKvB,iBAIhElB,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACGnZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAQrY,OAAT,4EACAd,EAAAC,EAAAC,cAAA,0LAOJF,EAAAC,EAAAC,cAACoN,EAAA,EAAKnM,YAAN,CAAkBR,UAAU,mBAC1BX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAM2U,cAAcvI,QAE5B5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,wCAEF9Y,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAMsc,OAAOlQ,OAAS9K,KAAKtB,MAAM2U,cAAcvI,QAEvD5K,EAAAC,EAAAC,cAAC4Y,EAAA,EAAD,qDAGJ9Y,EAAAC,EAAAC,cAACmB,EAAA,EAAOC,MAAR,CAAcX,UAAU,wBACtBX,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKwW,iBAA9B,gEACAtW,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,GAACnI,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAMC,GAAG,YAAYpF,UAAU,iBAA/B,+DAKnB,MAGLX,EAAAC,EAAAC,cAAA,uBAxOkBuB,aAsPXC,mBARf,SAAyBlD,GACvB,MAAO,CAACmD,MAAOnD,EAAMwX,mBAGvB,SAA4BnU,GAC1B,MAAO,CAACvF,QAASwF,YAAmBxF,EAASuF,KAGhCH,CAA6CirB,yCC0F7CE,eA5Ub,SAAAA,EAAYhtB,GAAO,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA+sB,IACjBjtB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA6qB,GAAAzqB,KAAAtC,KAAMD,KA8DRitB,cAAgB,WACd,IAMIC,EAAUvZ,EAASD,EANnBlV,EAAKuB,EAAKpB,MAAMwuB,UAChBjM,EAAe,IAAIC,QAAK,CAC1BxgB,IAAK,UAAYZ,EAAKpB,MAAM2iB,MAAM1d,MAAMpF,EAAIA,EAAK,GACjD4iB,OAAO,EACPC,OAAQthB,EAAKpB,MAAMyuB,YAAc,KAGnClM,EAAamM,GAAG,OAAQ,WACtBH,EAAWhM,EAAagM,WACxBvZ,EAAU1F,KAAKwB,MAAMyd,EAAW,IAChCxZ,EAAUzF,KAAKwB,MAAMyd,EAAqB,GAAVvZ,GAChCA,GAAW,IAAMA,GAAS/P,OAAO,GACjC8P,GAAW,IAAMA,GAAS9P,OAAO,GAChB,KACA,KACjB7D,EAAKmD,SAAS,CAAEyQ,UAASD,UAASwZ,WAAUhM,gBAAgB,WAC1DnhB,EAAKmD,SAAS,CAAEoqB,kBAAkB,IAC9BvtB,EAAKpB,MAAM4iB,SACbxhB,EAAKwtB,mBAIXxtB,EAAKytB,SAAShvB,IAtFGuB,EAyFnB0tB,WAAa,WACX1tB,EAAKmD,SAAS,CACZwqB,SAAU,EACVC,eAAgB,KAChBC,eAAgB,QA7FD7tB,EAiGnBytB,SAAW,SAAChvB,GACEuB,EAAKpB,MAAM2iB,MAAM9iB,GAC7BqvB,KAAYC,KACV,mCAAAhiB,OAAqC/L,EAAKpB,MAAM2iB,MAAM9iB,IACtD,CACEuvB,UAAW,SAACC,GACVjuB,EAAKmD,SAAS,CAAE+qB,iBAAkBD,GAAO,WACvCjuB,EAAKmuB,qBAGTC,QAAS,SAACC,GACRlqB,QAAQC,IAAI,KAAMiqB,EAAMxxB,KAAMwxB,EAAMC,UA5GzBtuB,EAkHnBmuB,gBAAkB,WAChB,IAEII,EAFA5sB,EAAQ3B,EAAKpB,MAAMsvB,iBAAiBM,KAAK7sB,MACzC8sB,EAASzuB,EAAKpB,MAAMsvB,iBAAiBM,KAAKC,OAE9C,GAAIzuB,EAAKpB,MAAMsvB,iBAAiBM,KAAKE,QAAS,KAAAC,EACrB3uB,EAAKpB,MAAMsvB,iBAAiBM,KAAKE,QAAhDhqB,EADoCiqB,EACpCjqB,KAAM7H,EAD8B8xB,EAC9B9xB,KACR+xB,EAAY,IAAIC,WAAWnqB,GAC3BoqB,EAAO,IAAIC,KAAK,CAACH,GAAY,CAAE/xB,SACrC0xB,EAAsBS,IAAIC,gBAAgBH,GAE5C9uB,EAAKmD,SAAS,CACZorB,sBACAW,kBAAmBvtB,EACnBwtB,mBAAoBV,KA/HLzuB,EAmInBovB,UAAY,WACV,IAAIjO,EAAenhB,EAAKpB,MAAMuiB,aAC1BkO,EAAWrvB,EAAKpB,MAAMywB,SACtBrvB,EAAKpB,MAAM4iB,SACbL,EAAaS,QAEbhC,cAAcyP,GACdrvB,EAAKmD,SAAS,CAAEksB,eAEhBlO,EAAaG,OAAOthB,EAAKpB,MAAMyuB,YAAc,IAC7ClM,EAAaQ,OACb0N,EAAWvP,YAAY,kBAAM9f,EAAKsvB,cAAc,KAChDtvB,EAAKmD,SAAS,CAAEksB,cAIlBrvB,EAAKmD,SAAS,CAACge,kBAnJEnhB,EAsJnBwtB,aAAe,WACb,IAAIrM,EAAenhB,EAAKpB,MAAMuiB,aAC1BnhB,EAAKpB,MAAM4iB,SACbL,EAAaoO,OAEf,IAAIF,EAAWrvB,EAAKpB,MAAMywB,SAC1BzP,cAAcyP,GACdlO,EAAaQ,OACT3hB,EAAKpB,MAAM4iB,UACb6N,EAAWvP,YAAY,kBAAM9f,EAAKsvB,cAAc,MAElDtvB,EAAKmD,SAAS,CAAEksB,cAjKCrvB,EAoKnBwvB,aAAe,SAAChsB,GACd,IAAI2d,EAAenhB,EAAKpB,MAAMuiB,aAC9BA,EAAaG,OAAO9d,EAAEmC,OAAOrG,MAAQ,IACrCU,EAAKmD,SAAS,CAAEkqB,YAAa7pB,EAAEmC,OAAOrG,MAAO6hB,kBAvK5BnhB,EA0KnByvB,UAAY,WACV,IAAItO,EAAenhB,EAAKpB,MAAMuiB,aAC9BA,EAAaG,OAAOthB,EAAKpB,MAAM0iB,OAAS,IACxCnd,QAAQC,IAAI,eAAgB+c,GAC5BA,EAAaoO,OACTvvB,EAAKpB,MAAMwuB,UAAYptB,EAAKpB,MAAM2iB,MAAMvW,OAK5ChL,EAAKmD,SAAS,CAAEge,eAAcoM,kBAAkB,GAAS,WACvDvtB,EAAK0tB,gBArLU1tB,EAyLnB0vB,UAAY,WACV,IAAIvO,EAAenhB,EAAKpB,MAAMuiB,aAC9BA,EAAaG,OAAOthB,EAAKpB,MAAM0iB,OAAS,IACxCH,EAAaoO,OACTvvB,EAAKpB,MAAMwuB,UAKfptB,EAAKmD,SAAS,CAAEge,eAAcoM,kBAAkB,GAAS,WACvDvtB,EAAK0tB,gBAnMU1tB,EAuMnB2vB,UAAY,WACV,IAAIxO,EAAenhB,EAAKpB,MAAMuiB,aAC1BnhB,EAAKpB,MAAMgxB,MACbzO,EAAa0O,MAAK,GAElB1O,EAAa0O,MAAK,GAEpB7vB,EAAKmD,SAAS,CACZysB,OAAQ5vB,EAAKpB,MAAMgxB,MACnBzO,kBAhNenhB,EAoNnBsvB,WAAa,WACXtvB,EAAK8vB,UACL9vB,EAAK+vB,kBAtNY/vB,EAyNnB+vB,eAAiB,WACf,IAEIpC,GAFOzf,KAAKC,MAAMnO,EAAKpB,MAAMuiB,aAAa6O,QAC/B9hB,KAAKC,MAAMnO,EAAKpB,MAAMuiB,aAAagM,YACd,KAAK8C,QAAQ,GACjDjwB,EAAKmD,SAAS,CAAEwqB,cA7NC3tB,EAiOnB8vB,QAAU,WACR,IAAI1F,EAAkBlc,KAAKC,MAAMnO,EAAKpB,MAAMuiB,aAAa6O,QACrDpC,EAAiB1f,KAAKwB,MAAM0a,EAAkB,IAC9CyD,EAAiB3f,KAAKwB,MAAM0a,EAAmC,GAAjBwD,GAIlD,GAHAA,GAAkB,IAAMA,GAAgB/pB,OAAO,GAC/CgqB,GAAkB,IAAMA,GAAgBhqB,OAAO,GAC/C7D,EAAKmD,SAAS,CAAE0qB,iBAAgBD,iBAAgBxD,oBAC5CA,IAAoBpqB,EAAKpB,MAAMuiB,aAAagM,WAAY,CAC1D,IAAIhM,EAAenhB,EAAKpB,MAAMuiB,aAC9BA,EAAaoO,OACTvvB,EAAKpB,MAAMwuB,UAAYptB,EAAKpB,MAAM2iB,MAAMvW,OAK5ChL,EAAKmD,SAAS,CAAEge,eAAcoM,kBAAkB,GAAS,WACvDvtB,EAAK0tB,aACL1tB,EAAKktB,cAAcltB,EAAKpB,MAAMwuB,eAlPjBptB,EAuPnBkwB,QAAU,SAAC1sB,GACT,IAAI2d,EAAenhB,EAAKpB,MAAMuiB,aAC1BgM,EAAWjf,KAAKC,MAAMnO,EAAKpB,MAAMuiB,aAAagM,YAC9C6C,EAAQxsB,EAAEmC,OAAOrG,MAAQ6tB,EAAY,IACzChM,EAAa6O,KAAKA,GAClB7rB,QAAQC,IAAI,OAAQ8J,KAAKC,MAAM6hB,IAC/BhwB,EAAKmD,SAAS,CAAEge,eAAcwM,SAAUnqB,EAAEmC,OAAOrG,OAAS,WACxDU,EAAK8vB,UAEL3rB,QAAQC,IAAIpE,EAAKpB,MAAM+uB,aA9PzB3tB,EAAKpB,MAAQ,CACX2iB,MAAO,GACP8L,YAAa,EACb7L,SAAS,EACToO,OAAO,EACPzO,aAAc,KACdgP,mBAAoB,KACpBjC,iBAAkB,KAClBK,oBAAqB,KACrBnB,UAAW,EACXgD,MAAO,cACPjD,SAAU,EACVvZ,QAAS,KACTD,QAAS,KACTyW,gBAAiB,EACjBwD,eAAgB,KAChBC,eAAgB,KAChBwC,eAAe,EACfhB,SAAU,KACV1B,SAAU,EACVJ,kBAAkB,GAtBHvtB,mFA0BA,IAAAqE,EAAAnE,KACjBA,KAAKiD,SAAS,CACZiqB,UAAW,GACV,WACD9oB,IACGC,IAAI,eACJC,KAAK,SAACC,GAAD,OACJJ,EAAKlB,SAAS,CAAEoe,MAAO9c,EAAIC,4CAoOjC,OACEtE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BAA8BtC,GAAG,cAElD2B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,oBAAoBb,KAAKtB,MAAMgvB,eAA/C,IAAgE1tB,KAAKtB,MAAMivB,gBAC3EztB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACXX,EAAAC,EAAAC,cAAA,SACES,UAAU,yBACVuvB,IAAI,IACJC,IAAI,MACJ1zB,KAAK,QACLyC,MAAOY,KAAKtB,MAAM+uB,SAClBvoB,SAAUlF,KAAKgwB,WAGrB9vB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,oBAAoBb,KAAKtB,MAAMgV,QAA/C,IAAyD1T,KAAKtB,MAAM+U,UAEtEvT,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iCACVb,KAAKtB,MAAM2vB,oBACVnuB,EAAAC,EAAAC,cAAA,OAAKM,IAAKV,KAAKtB,MAAM2vB,oBAAqBxtB,UAAU,uBAAuB0J,IAAI,KAC7E,MAERrK,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+CACbX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,4BAA4Bb,KAAKtB,MAAMswB,mBACpD9uB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,8BAA8Bb,KAAKtB,MAAMuwB,sBAG1D/uB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CAA8CC,QAASd,KAAKwvB,WAAWtvB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,qBACjGb,KAAKtB,MAAM4iB,QAAwI,KAA9HphB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CAA8CC,QAASd,KAAKkvB,WAAWhvB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,iBACzHb,KAAKtB,MAAM4iB,QAAUphB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CAA8CC,QAASd,KAAKkvB,WAAWhvB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAA4B,KACrJX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,+CAA+CC,QAASd,KAAKuvB,WAAWrvB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAI1GX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yCACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6CAA4CX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,sBAC9DX,EAAAC,EAAAC,cAAA,SACES,UAAU,yBACVzB,MAAOY,KAAKtB,MAAMyuB,YAClBiD,IAAI,IACJC,IAAI,KACJnrB,SAAUlF,KAAKsvB,aACf3yB,KAAK,oBAxTHgF,uBCNpB2uB,eAEJ,SAAAA,EAAYvwB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAswB,IAChBxwB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAouB,GAAAhuB,KAAAtC,KAAMD,KA8BRwjB,WAAa,WACX,IAAI8F,EAASvpB,EAAKpB,MAAM2qB,OACpB/F,EAAiBxjB,EAAKpB,MAAM4kB,eAC5BzW,EAAc/M,EAAKpB,MAAMmO,YACzBuc,EAAetpB,EAAKpB,MAAM0qB,aAC1B3F,EAAO,GAEX,GAAqB,KAAhB5W,GAA2C,KAAnByW,GAA4C,KAAjB8F,EAAqB,CAC3E,IAAI5hB,EAAO,IAAIJ,KACXmpB,GAAc,IAAM/oB,EAAK8I,WAAW3M,OAAO,GAAK,KAAO,KAAK6D,EAAK0J,WAAW,IAAIvN,OAAO,GAAK,IAChG6D,EAAKwJ,cAAgB,KAAO,IAAMxJ,EAAKgpB,YAAY7sB,OAAO,GAAK,KAAO,IAAM6D,EAAKipB,cAAc9sB,OAAO,GACtG8f,EAAI,UAAgBlL,eACpBkL,EAAI,OAAa5W,EACjB4W,EAAI,KAAWH,EACfG,EAAI,KAAW8M,EACf,IAAIhyB,EAAKuB,EAAKC,MAAMxB,GACpBuB,EAAKC,MAAMvD,QAAQ8B,iBAAiBC,EAAIklB,GACxC3jB,EAAKmD,SAAS,CACZ4J,YAAa,GACbyW,eAAgB,GAChB8F,aAAc,SAIO,KAAhBvc,GACPwc,EAAM,KAAW,kHACjBvpB,EAAKmD,SAAS,CACZomB,YAIuB,KAAnB/F,GACN+F,EAAM,QAAc,yOACpBvpB,EAAKmD,SAAS,CACZomB,YAIqB,KAAjBD,IACNC,EAAM,MAAY,iHAClBvpB,EAAKmD,SAAS,CACZomB,aAxEYvpB,EA8ElB4wB,cAAgB,SAACnrB,GACfzF,EAAKmD,SAAS,CAACqgB,eAAgB/d,EAAME,OAAOrG,MAAMgH,OAAO,EAAE,QA/E3CtG,EAkFlB6wB,WAAa,SAACprB,GACZzF,EAAKmD,SAAS,CAAC4J,YAAatH,EAAME,OAAOrG,MAAMgH,OAAO,EAAE,QAnFxCtG,EAsFlB8wB,YAAc,SAACrrB,GACbzF,EAAKmD,SAAS,CAACmmB,aAAc7jB,EAAME,OAAOrG,MAAMgH,OAAO,EAAE,QArFzDtG,EAAKpB,MAAQ,CACX2qB,OAAQ,GACRxW,QAAQ,GAJM/S,mFAQE,IAAAqE,EAAAnE,KAEd2C,EADc3C,KAAKD,MAAM8B,MAAMgvB,cACZ1jB,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAOuyB,OAAO3sB,EAAKpE,MAAMxB,MAC5D,GAAIoE,EAAM,CACR,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAK6gB,SAAS1Y,OAAQlI,IAAK,CAC7C,IAAI4E,EAAO,IAAIJ,KAAKzE,EAAK6gB,SAAS5gB,GAAG4E,MACjC+oB,GAAc,IAAM/oB,EAAK8I,WAAW3M,OAAO,GAAK,KAAO,KAAK6D,EAAK0J,WAAW,IAAIvN,OAAO,GAAK,IAC9F6D,EAAKwJ,cAAgB,KAAO,IAAMxJ,EAAKgpB,YAAY7sB,OAAO,GAAK,KAAO,IAAM6D,EAAKipB,cAAc9sB,OAAO,GACxGhB,EAAK6gB,SAAS5gB,GAAG4E,KAAO+oB,EAE1BvwB,KAAKiD,SAAS,CACZugB,SAAU7gB,EAAK6gB,SACf3Q,QAAQ,SAGV7S,KAAKiD,SAAS,CACZ8tB,YAAY,EACZle,QAAQ,qCAmEZ,OACE3S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6jB,SAAA,KACE9jB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACbX,EAAAC,EAAAC,cAACmI,EAAA,EAAD,KACErI,EAAAC,EAAAC,cAACmI,EAAA,EAAKC,MAAN,KACEtI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOtJ,MAAOY,KAAKtB,MAAMmO,aAAe,GAAI3H,SAAUlF,KAAK2wB,WAAYtO,OAAK,EAACxd,YAAY,uBACzF3E,EAAAC,EAAAC,cAAA,YAAOJ,KAAKtB,MAAM2qB,OAAX,OAETnpB,EAAAC,EAAAC,cAACmI,EAAA,EAAKC,MAAN,KACEtI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAOtJ,MAAOY,KAAKtB,MAAM0qB,cAAgB,GAAIlkB,SAAUlF,KAAK4wB,YAAavO,OAAK,EAACxd,YAAY,UAC3F3E,EAAAC,EAAAC,cAAA,YAAOJ,KAAKtB,MAAM2qB,OAAX,QAETnpB,EAAAC,EAAAC,cAACmI,EAAA,EAAKC,MAAN,KACEtI,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CAAU5xB,MAAOY,KAAKtB,MAAM4kB,gBAAkB,GAAIpe,SAAUlF,KAAK0wB,cAAevX,UAAU,KAAKtU,YAAY,0FAC3G3E,EAAAC,EAAAC,cAAA,YAAOJ,KAAKtB,MAAM2qB,OAAX,UAETnpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQT,QAASd,KAAKujB,WAAY5mB,KAAK,UAAvC,4DAGHqD,KAAKtB,MAAMmU,QAAU7S,KAAKtB,MAAM8kB,SAC/BtjB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACZb,KAAKtB,MAAM8kB,SAAS9gB,IAAI,SAACC,EAAMiI,GAAP,OACvB1K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BAA2BiC,IAAK8H,GAC7C1K,EAAAC,EAAAC,cAAA,UAAKuC,EAAKmhB,OAAO5jB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,yBAAyB8B,EAAK6E,OAC/DtH,EAAAC,EAAAC,cAAA,SAAIuC,EAAKI,UAIf,aA1HapB,aAwIRC,mBARf,SAAyBlD,GACvB,MAAO,CAAEmD,MAAOnD,EAAM+rB,eAGxB,SAA4B1oB,GAC1B,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAGjCH,CAA6C0uB,ICxItDW,eAEJ,SAAAA,EAAYlxB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAixB,IAChBnxB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA+uB,GAAA3uB,KAAAtC,KAAMD,KAaTmxB,YAAc,SAAC5tB,GACZxD,EAAKmD,SAAS,CAACkuB,aAAc7tB,EAAEmC,OAAOrG,SAftBU,EAkBlBsxB,iBAAmB,SAAC9tB,GAClBxD,EAAKmD,SAAS,CAACouB,eAAgB/tB,EAAEmC,OAAOrG,SAnBxBU,EAsBlBwxB,iBAAmB,SAAChuB,GAClBxD,EAAKmD,SAAS,CAACsuB,eAAgBjuB,EAAEmC,OAAOrG,SAvBxBU,EA0BlB0xB,iBAAmB,SAACluB,GAClBxD,EAAKmD,SAAS,CAACwuB,eAAgBnuB,EAAEmC,OAAOrG,SA3BxBU,EA8BlB4xB,kBAAoB,WAClB5xB,EAAKC,MAAMvD,QAAQkB,eAAeoC,EAAKpB,MAAMyyB,cAC7CrxB,EAAKC,MAAMvD,QAAQoB,iBAAiBkC,EAAKpB,MAAM2yB,gBAC/CvxB,EAAKC,MAAMvD,QAAQwB,iBAAiB8B,EAAKpB,MAAM6yB,gBAC/CzxB,EAAKC,MAAMvD,QAAQsB,kBAAkBgC,EAAKpB,MAAM+yB,iBAlChC3xB,EAqClB6xB,WAAa,WACX7xB,EAAKC,MAAMvD,QAAQiC,iBAAgB,IApCnCqB,EAAKpB,MAAQ,CACXyyB,aAAc,GACdM,eAAgB,GAChBJ,eAAgB,gCAChBE,eAAgB,KANFzxB,qHA2ChB,OACEI,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8CACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,eAAeC,QAASd,KAAK2xB,YAC3CzxB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAEfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,SAAO8E,SAAUlF,KAAKkxB,YAAav0B,KAAK,QAAQyzB,IAAI,IAAIC,IAAI,KAAKjxB,MAAOY,KAAKtB,MAAMyyB,aAAcjwB,KAAK,KACtGhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,qBAAqBb,KAAKtB,MAAMyyB,gBAGpDjxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,SAAO8E,SAAUlF,KAAKwxB,iBAAkB70B,KAAK,QAAQyzB,IAAI,KAAKC,IAAI,KAAKjxB,MAAOY,KAAKtB,MAAM+yB,eAAgBvwB,KAAK,KAC9GhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,qBAAqBb,KAAKtB,MAAM+yB,kBAGpDvxB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,SAAO8E,SAAUlF,KAAKsxB,iBAAkB30B,KAAK,QAAQyzB,IAAI,MAAMC,IAAI,MAAMuB,KAAK,MAAMxyB,MAAOY,KAAKtB,MAAM6yB,eAAgBrwB,KAAK,KAC3HhB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,qBAAqBb,KAAKtB,MAAM6yB,mBAItDrxB,EAAAC,EAAAC,cAAA,UAAQS,UAAU,qBAAqBqE,SAAUlF,KAAKoxB,iBAAkBhyB,MAAOY,KAAKtB,MAAMb,YACxFqC,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,iCAAf,mBACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,uBAAf,SACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,yBAAf,WACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,gCAAf,kBACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,oBAAf,WACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,4BAAf,gBAEFc,EAAAC,EAAAC,cAAA,KAAGS,UAAU,sBAAsBwlB,MAAO,CACpB1oB,SAAUqC,KAAKtB,MAAMyyB,aAAe,KACpCtzB,WAAYmC,KAAKtB,MAAM2yB,eACvBtzB,WAAYiC,KAAKtB,MAAM+yB,eAAiB,KACxCxzB,WAAY+B,KAAKtB,MAAM6yB,iBAJ7C,yDAKArxB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACxH,UAAU,gBAAgBC,QAASd,KAAK0xB,mBAAxD,mEAvFc/vB,aAwGTC,mBATf,SAAyBlD,GACvB,MAAO,CAAEmD,MAAOnD,EAAM+rB,eAGxB,SAA4B1oB,GAC1B,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAIjCH,CAA6CqvB,ICxGtDY,eAEJ,SAAAA,EAAY9xB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA6xB,IAChB/xB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA2vB,GAAAvvB,KAAAtC,KAAMD,KAmBR+xB,aAAe,SAACxuB,GAGd,IAFA,IAAIyuB,EAAYjyB,EAAKpB,MAAMqzB,UAAUpuB,QACjCiH,EAAQtH,EAAE0uB,cAAchH,aAAa,cAChCpoB,EAAI,EAAGA,EAAImvB,EAAUjnB,OAAQlI,IACpCmvB,EAAUnvB,IAAK,EAEjBmvB,EAAUnnB,IAAS,EACnB9K,EAAKmD,SAAS,CACZgvB,gBAAiB3uB,EAAE0uB,cAAchH,aAAa,cAC9C+G,eA7BcjyB,EAkClBoyB,WAAa,SAAC5uB,GAGZ,IAFA,IAAI6uB,EAAUryB,EAAKpB,MAAMyzB,QAAQxuB,QAC7BiH,EAAQtH,EAAE0uB,cAAchH,aAAa,cAChCpoB,EAAI,EAAGA,EAAIuvB,EAAQrnB,OAAQlI,IAClCuvB,EAAQvvB,IAAK,EAEfuvB,EAAQvnB,IAAS,EACjB9K,EAAKmD,SAAS,CACZmvB,cAAe9uB,EAAE0uB,cAAchH,aAAa,cAC5CmH,aA3CcryB,EA+ClBuyB,mBAAqB,WACnBvyB,EAAKC,MAAMvD,QAAQ4B,cAAc0B,EAAKpB,MAAM0zB,eAC5CtyB,EAAKC,MAAMvD,QAAQ0B,gBAAgB4B,EAAKpB,MAAMuzB,kBAjD9BnyB,EAoDlB6xB,WAAa,WACX7xB,EAAKC,MAAMvD,QAAQmC,kBAAiB,IAnDpCmB,EAAKpB,MAAQ,CACX4zB,kBAAkB,EAClBL,gBAAiB,UACjBG,cAAe,UACfL,UAAW,EAAC,GAAM,GAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GACrGI,QAAS,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAK,GACnGI,YAAa,CACL,UAAU,UAAU,UAAU,UAC9B,UAAU,UAAU,UAAU,UAC9B,UAAU,UAAU,UAAU,UAC9B,UAAU,UAAU,UAAU,YAZxBzyB,qHAwDT,IAAAqE,EAAAnE,KAEP,OACEE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,eAAeC,QAASd,KAAK2xB,YAC3CzxB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAEfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,4BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACZb,KAAKtB,MAAM6zB,YAAY7vB,IAAI,SAACC,EAAKiI,GAAN,OAC1B1K,EAAAC,EAAAC,cAAA,OAAK0C,IAAK8H,EAAO/J,UAAU,eAAe2xB,aAAY5nB,EAAO9J,QAASqD,EAAK2tB,aAAczL,MAAO,CAAEhoB,gBAAiBsE,GAAQ8vB,WAAY9vB,GACpIwB,EAAKzF,MAAMqzB,UAAUnnB,GACpB1K,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAA8B,UAM3DX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0BACbX,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACZb,KAAKtB,MAAM6zB,YAAY7vB,IAAI,SAACC,EAAKiI,GAAN,OAC1B1K,EAAAC,EAAAC,cAAA,OAAK0C,IAAK8H,EAAO/J,UAAU,eAAe2xB,aAAY5nB,EAAO9J,QAASqD,EAAK+tB,WAAY7L,MAAO,CAAEhoB,gBAAiBsE,GAAQ8vB,WAAY9vB,GAClIwB,EAAKzF,MAAMyzB,QAAQvnB,GAClB1K,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGS,UAAU,kBAChB,WAOfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wBAAwBwlB,MAAO,CAAEhoB,gBAAiB2B,KAAKtB,MAAM0zB,gBAC1ElyB,EAAAC,EAAAC,cAAA,QAAMimB,MAAO,CAAEG,MAAOxmB,KAAKtB,MAAMuzB,kBAAjC,iBAEF/xB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKqyB,oBAA9B,mEAhGe1wB,aAgHVC,mBATf,SAAyBlD,GACvB,MAAO,CAAEmD,MAAOnD,EAAM+rB,eAGxB,SAA4B1oB,GAC1B,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAIjCH,CAA6CiwB,ICjHtDa,eAEJ,SAAAA,EAAY3yB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA0yB,IAChB5yB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAwwB,GAAApwB,KAAAtC,KAAMD,KAWR4yB,iBAAmB,WACjB7yB,EAAKC,MAAMvD,QAAQoC,mBAAkB,IAXrCkB,EAAKpB,MAAQ,GAFGoB,mFAQhBmE,QAAQC,IAAIlE,KAAKD,MAAMzC,uCAShB,IAAAs1B,EACP,OACE1yB,EAAAC,EAAAC,cAAA,OAAKS,UAAY,uBACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,qBACbX,EAAAC,EAAAC,cAAA,OAAAwyB,EAAA,CAAKlyB,IAAI,uBAATwB,OAAAyM,EAAA,EAAAzM,CAAA0wB,EAAA,MAAsC5yB,KAAKD,MAAMzC,KAAKqD,OAAtDuB,OAAAyM,EAAA,EAAAzM,CAAA0wB,EAAA,MAAiE,IAAjEA,KAEF1yB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2BACbX,EAAAC,EAAAC,cAAA,KAAGS,UAAU,qBAAqBb,KAAKD,MAAMzC,KAAK4D,KAAlD,MAA2DlB,KAAKD,MAAMzC,KAAK8D,aAC3ElB,EAAAC,EAAAC,cAAA,KAAGS,UAAU,uBAAuBb,KAAKD,MAAMzC,KAAKu1B,YACpD3yB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAK2yB,kBAA9B,wDA7BYhxB,aA6CTC,mBARf,SAAyBlD,GACvB,MAAO,CAAEmD,MAAOnD,EAAMoD,UAGxB,SAA4BC,GAC1B,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAGjCH,CAA6C8wB,ICvCtDI,eACJ,SAAAA,EAAY/yB,GAAM,IAAAD,EAAA,OAAAoC,OAAAC,EAAA,EAAAD,CAAAlC,KAAA8yB,IAChBhzB,EAAAoC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAA4wB,GAAAxwB,KAAAtC,KAAMD,KAiDRgzB,eAAiB,WAOf,IANA,IAAIhwB,EAAOjD,EAAKpB,MAAMqE,KAClBiwB,EAAQ,GAAI9rB,EAAQ,GAAI+rB,EAAc,GACtC7zB,EAAQ,KAAOU,EAAKC,MAAM8B,MAAM9D,WAChCm1B,EAAallB,KAAKmlB,KAAKpwB,EAAK+H,OAAS1L,GACrCg0B,EAAa,EACbC,EAAa,GACRzwB,EAAI,EAAGA,EAAIswB,EAAYtwB,IAAK,CACnC,IAAI0wB,EAAMvwB,EAAKY,MAAMyvB,EAAYC,GACjC,GAAmB,IAAfD,EAAmB,CAErB,IADA,IAAIG,EAAS,GACJ/iB,EAAI,EAAGA,EAAI8iB,EAAIxoB,OAAQ0F,IAAK,CACnC,IAAIgjB,EAAc,GAClBA,EAAY3wB,KAAKywB,EAAI9iB,GAAGkH,MAAM,MAC9B6b,EAAO1wB,KAAK2wB,GAEdtsB,EAAMrE,KAAK0wB,GAEbP,EAAMnwB,KAAKywB,GACXF,GAA0B,GAC1BC,GAA0B,GAE5B,IAAK,IAAIzwB,EAAI,EAAGA,EAAIswB,EAAYtwB,IAC9BqwB,EAAYpwB,KAAKD,GAEnB9C,EAAKmD,SAAS,CAAE+vB,QACAC,cACApK,YAAamK,EAAM,GACnBS,aAAcvsB,EACd2L,QAAQ,KA/ER/S,EAkFhB4zB,WAAa,WACX,IAAIC,EAAgB7zB,EAAKpB,MAAMi1B,cAE5BA,EAAgB,GACjBA,IAKF,IAHA,IAAI9K,EAJQ/oB,EAAKpB,MAAMs0B,MAICW,GAEpBJ,EAAS,GAAQrsB,EAAQ,GACpBtE,EAAI,EAAGA,EAAIimB,EAAY/d,OAAQlI,IAAK,CAC3C,IAAI4wB,EAAc,GAClBA,EAAY3wB,KAAKgmB,EAAYjmB,GAAG8U,MAAM,MACtC6b,EAAO1wB,KAAK2wB,GAEdtsB,EAAMrE,KAAK0wB,GACXzzB,EAAKmD,SAAS,CACVwwB,aAAcvsB,EACdysB,gBACA9K,eACD,kBAAM/oB,EAAKooB,iBArGApoB,EAwGhB8zB,WAAa,WACX,IAAID,EAAgB7zB,EAAKpB,MAAMi1B,cAC3BX,EAAQlzB,EAAKpB,MAAMs0B,MAAMrvB,QAC1BgwB,EAAgBX,EAAMloB,OAAS,GAChC6oB,IAIF,IAFA,IAAI9K,EAAcmK,EAAMW,GACpBJ,EAAS,GAAQrsB,EAAQ,GACpBtE,EAAI,EAAGA,EAAIimB,EAAY/d,OAAQlI,IAAK,CAC3C,IAAI4wB,EAAc,GAClBA,EAAY3wB,KAAKgmB,EAAYjmB,GAAG8U,MAAM,MACtC6b,EAAO1wB,KAAK2wB,GAEdtsB,EAAMrE,KAAK0wB,GACXzzB,EAAKmD,SAAS,CACVwwB,aAAcvsB,EACdysB,gBACA9K,eACD,kBAAM/oB,EAAKooB,iBA1HApoB,EA6HhBooB,YAAc,WACZC,OAAOC,SAAS,EAAGtoB,EAAKuoB,MAAMC,YA9HhBxoB,EAiIlB+zB,WAAa,SAACvwB,GACV,IAAIqwB,EAAgB7C,OAAOxtB,EAAEmC,OAAOrG,OAEhCypB,EADQ/oB,EAAKpB,MAAMs0B,MACCW,GACxB7zB,EAAKmD,SAAS,CACV0wB,gBAAe9K,iBAtIL/oB,EA0IlBg0B,eAAiB,WACfh0B,EAAKmD,SAAS,CAAE8wB,iBAAkBj0B,EAAKpB,MAAMq1B,mBA3I7Bj0B,EA8IlBk0B,cAAgB,SAACrxB,EAAMW,GACrB,OAAQA,EAAE2wB,QACR,KAAK,EACH,MACF,KAAK,EACH,IAAI/sB,EAAQpH,EAAKpB,MAAMwI,MAAMvD,QACzBuwB,EAAUvxB,EAAKyH,cAAc2X,QAAQ,+BAA+B,IACpEoS,EAAQjtB,EAAMiG,KAAK,SAAAC,GAAC,OAAIA,EAAElM,OAASgzB,IACnCC,EACFr0B,EAAKmD,SAAS,CACZkxB,SACC,kBAAMr0B,EAAKs0B,qBAEdt0B,EAAKmD,SAAS,CACZwiB,SAAUyO,GACT,kBAAMp0B,EAAKu0B,qBAEhB,MACF,QACE,SAjKYv0B,EAqKlBs0B,iBAAmB,WACjBt0B,EAAKC,MAAMvD,QAAQoC,mBAAkB,IAtKrBkB,EAyKlBu0B,iBAAmB,WACjBv0B,EAAKmD,SAAS,CACZqxB,kBAAmBx0B,EAAKpB,MAAM41B,oBA3KhBx0B,EAiLlBy0B,WAAa,WACXz0B,EAAKC,MAAMvD,QAAQiC,iBAAgB,IAlLnBqB,EAqLlB4mB,YAAc,WACZ5mB,EAAKC,MAAMvD,QAAQmC,kBAAiB,IAtLpBmB,EAyLlB6yB,iBAAmB,WACjB7yB,EAAKC,MAAMvD,QAAQoC,mBAAkB,IA1LrBkB,EA6LlB00B,gBAAkB,WAChB10B,EAAKmD,SAAS,CACZqxB,kBAAkB,KA7LpBx0B,EAAK20B,aAAe5b,IAAMC,YAC1BhZ,EAAKuoB,MAAQxP,IAAMC,YACnBhZ,EAAKpB,MAAQ,CACXqE,KAAM,KACNkwB,YAAa,GACbU,cAAe,EACf9gB,QAAQ,EACRmgB,MAAO,EACPe,iBAAiB,EACjBW,QAAS,GACTxtB,MAAO,GACPue,SAAU,GACVkP,kBAAkB,EAClBL,kBAAkB,EAClB9Q,SAAU,IAhBI1jB,mFAoBC,IAAAqE,EAAAnE,KAEb2C,EADc3C,KAAKD,MAAM8B,MAAMgvB,cACZ1jB,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,KAAO4F,EAAKpE,MAAMsN,MAAMC,OAAO/O,KAC9DoE,GACF3C,KAAKiD,SAAS,CACZugB,SAAU7gB,EAAK6gB,WAGnB,IAAIoR,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAe,6BAChC,IAAMC,EAAO/0B,KACboE,IAAM6hB,IAAI,CACR7hB,IAAMC,IAAI,iBACVD,IAAMC,IAAI,wBAEXC,KAAKF,IAAM8hB,OAAO,SAAC8O,EAAMC,GACxB,IAAI3N,EAAQ0N,EAAKxwB,KACb0C,EAAQ+tB,EAAKzwB,KACb0wB,EAAe5N,EAAMna,KAAK,SAAAC,GAAC,OAAIA,EAAE7O,IAAM4F,EAAKpE,MAAMsN,MAAMC,OAAO/O,KACnE42B,MAAMD,EAAaxY,KAAMkY,GACtBtwB,KAAK,SAAAwoB,GAAQ,OAAIA,EAASsI,gBAC1B9wB,KAAK,SAAU+wB,GAGZ,OAFgB,IAAIC,YAAY,cACbC,OAAOF,GAAQ3d,MAAM,QAG3CpT,KAAK,SAACvB,GAAD,OAAUgyB,EAAK9xB,SAAS,CAACiE,QAAOnE,QAAQ,kBAAMgyB,EAAKhC,yDAqJtD,IAAA5oB,EAAAnK,KACP,OACEE,EAAAC,EAAAC,cAACG,EAAA,SAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACbX,EAAAC,EAAAC,cAACoK,EAAD,MACCxK,KAAKD,MAAM8B,MAAM2zB,kBAChBt1B,EAAAC,EAAAC,cAACq1B,GAAD,CAAWn4B,KAAQ0C,KAAKtB,MAAMy1B,QAC9B,KACDn0B,KAAKtB,MAAM41B,iBACVp0B,EAAAC,EAAAC,cAAA,OAAKS,UAAY,uBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sBACZX,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQ8G,SAAO,EAACvH,QAASd,KAAKw0B,iBAA9B,gDAGP,KAEDx0B,KAAKD,MAAM8B,MAAM6zB,gBAChBx1B,EAAAC,EAAAC,cAACu1B,GAAD,MACA,KACD31B,KAAKD,MAAM8B,MAAMywB,iBAChBpyB,EAAAC,EAAAC,cAACw1B,GAAD,MACA,KACD51B,KAAKtB,MAAMmU,OACV3S,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,uBACbX,EAAAC,EAAAC,cAAA,SACEzD,KAAK,QACLyC,MAAOY,KAAKtB,MAAMi1B,cAClBtD,IAAKrwB,KAAKtB,MAAMs0B,MAAMloB,OAAS,EAC/BslB,IAAI,IACJlrB,SAAUlF,KAAK6zB,cAEnB3zB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBAAkBb,KAAKtB,MAAMi1B,cAAgB,EAA5D,MAAkE3zB,KAAKtB,MAAMs0B,MAAMloB,QACnF5K,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACbX,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK0zB,WAAY7yB,UAAU,yBAAyBY,MAAM,kCAAQvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,aAAamJ,KAAK,UAA9G,KACAnK,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK4zB,WAAY/yB,UAAU,yBAAyBY,MAAM,wCAASvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,cAAcmJ,KAAK,UAAhH,KACAnK,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAKu0B,WAAY1zB,UAAU,yBAAyBY,MAAM,+FAAmBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,OAAOmJ,KAAK,UAAnH,KACAnK,EAAAC,EAAAC,cAAA,QAAMU,QAASd,KAAK0mB,YAAa7lB,UAAU,yBAAyBY,MAAM,yFAAkBvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMR,KAAK,OAAOmJ,KAAK,UAAnH,OAGJ,KACDrK,KAAKtB,MAAMmU,OACV3S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6jB,SAAA,KACE9jB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBAAgBwlB,MAAO,CAAEhoB,gBAAiB2B,KAAKD,MAAM8B,MAAMxD,gBAAiBmoB,MAAOxmB,KAAKD,MAAM8B,MAAM2kB,QACnHtmB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,sCAAsCwlB,MACxB,CAAEtoB,WAAYiC,KAAKD,MAAM8B,MAAM9D,WAAa,KAC1CE,WAAY+B,KAAKD,MAAM8B,MAAM5D,WAC7BN,SAAYqC,KAAKD,MAAM8B,MAAMlE,SAAW,KACxCE,WAAYmC,KAAKD,MAAM8B,MAAMhE,aACvDmC,KAAKtB,MAAM+0B,aAAa/wB,IAAI,SAACmzB,EAAMC,GAAP,OAC3B51B,EAAAC,EAAAC,cAACG,EAAA,SAAD,CAAUuC,IAAKgzB,GACZD,EAAKnzB,IAAI,SAAC8pB,EAAUuJ,GAAX,OACR71B,EAAAC,EAAAC,cAACG,EAAA,SAAD,CAAUuC,IAAKizB,GACZvJ,EAAS9pB,IAAI,SAACpF,EAAM04B,GAAP,OACZ91B,EAAAC,EAAAC,cAAA,KAAG0C,IAAKkzB,GACL14B,EAAKoF,IAAI,SAACC,EAAMszB,GAAP,OACR/1B,EAAAC,EAAAC,cAAA,QAAMS,UAAU,cAAciC,IAAKmzB,EAAQn1B,QAASqJ,EAAK6pB,cAAcjzB,KAAKoJ,EAAMxH,IAAlF,GAAAkJ,OAA6FlJ,EAA7F,mBAUlBzC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,6BACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oBACZb,KAAKtB,MAAM8kB,SAAS1Y,OACnB5K,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6jB,SAAA,KACA9jB,EAAAC,EAAAC,cAAA,QAAMS,UAAU,4BAAhB,6EAA0Db,KAAKtB,MAAM8kB,SAAS1Y,QAC9E5K,EAAAC,EAAAC,cAAA,QAAMS,UAAU,0BAA0BC,QAASd,KAAK8zB,gBAAiB9zB,KAAKtB,MAAMq1B,gBAAkB,0GAAsB,wHAE5H,MAEH/zB,KAAKtB,MAAMq1B,iBAAmB/zB,KAAKtB,MAAM8kB,SACxCtjB,EAAAC,EAAAC,cAAC81B,GAAD,CAAU33B,GAAIyB,KAAKD,MAAMsN,MAAMC,OAAO/O,KACtC,OAGN2B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACfX,EAAAC,EAAAC,cAAA,OAAKM,IAAM,mBAAmB6J,IAAI,MAEpCrK,EAAAC,EAAAC,cAAA,wBAxRiBuB,aAwSZC,mBARf,SAAyBlD,GACvB,MAAO,CAAEmD,MAAOnD,EAAM+rB,eAGxB,SAA4B1oB,GAC1B,MAAO,CAAEvF,QAASwF,YAAmBxF,EAASuF,KAGjCH,CAA6CkxB,iCCpTxDqD,GAAe,CAClB5D,YAAe,KACfpF,YAAe,MAqBDiJ,GAhBO,WAAkC,IAAjC13B,EAAiC23B,UAAAvrB,OAAA,QAAAwrB,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,GAAchiB,EAAWkiB,UAAAvrB,OAAA,EAAAurB,UAAA,QAAAC,EACvD,OAAOniB,EAAOxX,MACb,IAAK,sBACJ,OAAOuF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC6zB,YAAape,EAAOvX,UAEtB,IAAK,sBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECyuB,YAAahZ,EAAOvX,UAEnB,QAAS,OAAO8B,aCnBjBy3B,GAAe,CAClBnkB,UAAa,CACZG,cACC,CACC,CACC5T,GAAM,IACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,IAIZ0V,cACC,CACC,CACC7T,GAAM,IACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,IAIZ6V,WACC,CACC,CACChU,GAAM,IACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,IAIZ4V,eACC,CACC,CACC/T,GAAM,IACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAC1ChS,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,IAIZ8V,iBACC,CACC,CACCjU,GAAM,IACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,IAAK,IAC9BhS,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACRkH,aAAgB,CAAC,GAAI,GAAI,KACzBhS,MAAS,IAIZ2V,UACC,CACC,CACC9T,GAAM,IACNiJ,KAAQ,8KACR9K,MAAS,EACTgS,aAAgB,CAAC,GAAI,GAAI,MAE1B,CACCnQ,GAAM,GACNiJ,KAAQ,8KACR9K,MAAS,EACTgS,aAAgB,CAAC,GAAI,GAAI,IAAK,GAAI,MAIrC6G,YACC,CACC,CACChX,GAAM,IACNiJ,KAAQ,8KACR9K,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACR9K,MAAS,IAIZ8Y,iBACC,CACC,CACCjX,GAAM,IACNiJ,KAAQ,8KACR9K,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACR9K,MAAS,IAIZgZ,YACC,CACC,CACCnX,GAAM,IACNiJ,KAAQ,8KACR9K,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACR9K,MAAS,IAIZ+Y,YACC,CACC,CACClX,GAAM,IACNiJ,KAAQ,8KACR9K,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACR9K,MAAS,IAIZiZ,cACC,CACC,CACCpX,GAAM,IACNiJ,KAAQ,8KACR9K,MAAS,GAEV,CACC6B,GAAM,GACNiJ,KAAQ,8KACR9K,MAAS,MAwECwZ,GA/DQ,WAA4C,IAA3CxX,EAA2C23B,UAAAvrB,OAAA,QAAAwrB,IAAAD,UAAA,GAAAA,UAAA,GAAnCF,GAAankB,UAAWmC,EAAWkiB,UAAAvrB,OAAA,EAAAurB,UAAA,QAAAC,EAClE,OAAOniB,EAAOxX,MACb,IAAK,oBACJ,IAAIuK,EAAKhF,OAAAs0B,GAAA,EAAAt0B,CAAOxD,EAAMyT,eAEtB,OADAjL,EAAMrE,KAAKsR,EAAOvX,SACXsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECyT,cAAejL,IAEjB,IAAK,oBACJ,OAAOhF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC0T,cAAa,GAAAvG,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM0T,eAAZ,CAA2B+B,EAAOvX,YAEjD,IAAK,qBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC6T,WAAU,GAAA1G,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM6T,YAAZ,CAAwB4B,EAAOvX,YAE3C,IAAK,yBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC4T,eAAc,GAAAzG,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM4T,gBAAZ,CAA4B6B,EAAOvX,YAEnD,IAAK,uBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC8T,iBAAgB,GAAA3G,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM8T,kBAAZ,CAA8B2B,EAAOvX,YAEvD,IAAK,oBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC2T,UAAS,GAAAxG,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM2T,WAAZ,CAAuB8B,EAAOvX,YAEzC,IAAK,sBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC6W,YAAW,GAAA1J,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAOxD,EAAM6W,aAAb,CAA0BpB,EAAOvX,YAE9C,IAAK,2BACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC8W,iBAAgB,GAAA3J,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM8W,kBAAZ,CAA8BrB,EAAOvX,YAEvD,IAAK,uBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC+W,YAAW,GAAA5J,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM+W,aAAZ,CAAyBtB,EAAOvX,YAE7C,IAAK,sBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECgX,YAAW,GAAA7J,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAMgX,aAAZ,CAAyBvB,EAAOvX,YAE7C,IAAK,wBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECiX,cAAa,GAAA9J,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAMiX,eAAZ,CAA2BxB,EAAOvX,YAEjD,QAAS,OAAO8B,ICrOdy3B,GAAe,CAClBjB,aAJkB,GAKlBrE,cAAiB,CAChB,CACCtyB,GAAM,EACNilB,SAAY,CACX,CACCiT,UAAa,EACbjvB,KAAQ,gCACRsc,OAAU,WACV/gB,KAAQ,scAET,CACC0zB,UAAa,EACbjvB,KAAQ,gCACRsc,OAAU,YACV/gB,KAAQ,wcAIX,CACCxE,GAAM,EACNilB,SAAY,CACX,CACCiT,UAAa,GACbjvB,KAAQ,gCACRsc,OAAU,WACV/gB,KAAQ,scAET,CACC0zB,UAAa,GACbjvB,KAAQ,gCACRsc,OAAU,YACV/gB,KAAQ,wcAIX,CACCxE,GAAM,GACNilB,SAAY,CACX,CACCiT,UAAa,GACbjvB,KAAQ,gCACRsc,OAAU,WACV/gB,KAAQ,scAET,CACC0zB,UAAa,GACbjvB,KAAQ,gCACRsc,OAAU,YACV/gB,KAAQ,ycAKZyjB,MAAO,UACPnoB,gBAAiB,UACjBV,SAAU,GACVE,WAAY,gCACZE,WAAY,GACZE,WAAY,IACZy3B,iBAAiB,EACjBpD,kBAAkB,EAClBkD,mBAAmB,GA6DL/K,GAxDI,WAAkC,IAAjC/rB,EAAiC23B,UAAAvrB,OAAA,QAAAwrB,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,GAAchiB,EAAWkiB,UAAAvrB,OAAA,EAAAurB,UAAA,QAAAC,EACpD,OAAOniB,EAAOxX,MACb,IAAK,cACJ,OAAOuF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECw2B,aAAc/gB,EAAOvX,UAEvB,IAAK,oBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECg3B,gBAAiBvhB,EAAOvX,UAE1B,IAAK,qBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC4zB,iBAAkBne,EAAOvX,UAE3B,IAAK,sBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC82B,kBAAmBrhB,EAAOvX,UAE5B,IAAK,qBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECb,WAAYsW,EAAOvX,UAErB,IAAK,sBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECX,WAAYoW,EAAOvX,UAErB,IAAK,qBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECT,WAAYkW,EAAOvX,UAErB,IAAK,mBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECf,SAAUwW,EAAOvX,UAEnB,IAAK,oBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECP,UAAWgW,EAAOvX,UAEpB,IAAK,kBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECL,gBAAiB8V,EAAOvX,UAEvB,QAAS,OAAO8B,IC1HjBy3B,GAAe,CAClBrsB,gBAAkB,EAClBQ,kBAAqB,KACrBioB,YAAe,KACfpF,YAAe,MA0BDpiB,GArBS,WAAkC,IAAjCrM,EAAiC23B,UAAAvrB,OAAA,QAAAwrB,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,GAAchiB,EAAWkiB,UAAAvrB,OAAA,EAAAurB,UAAA,QAAAC,EACzD,OAAOniB,EAAOxX,MACb,IAAK,qBACJ,OAAOuF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECoL,eAAgBqK,EAAOvX,UAEzB,IAAK,oBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC4L,kBAAmB6J,EAAOvX,UAE5B,IAAK,mBACJ,OAAOsF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECg4B,UAAWviB,EAAOvX,UAEjB,QAAS,OAAO8B,IC3BjBy3B,GAAe,CAClB7nB,MAAS,CACR,CACC5R,MAAS,GACT8K,KAAQ,8KACR6G,WAAc,MAEf,CACC3R,MAAS,GACT8K,KAAQ,8KACR6G,WAAc,QAkBF8H,GAXI,WAAkC,IAAjCzX,EAAiC23B,UAAAvrB,OAAA,QAAAwrB,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,GAAchiB,EAAWkiB,UAAAvrB,OAAA,EAAAurB,UAAA,QAAAC,EACpD,OAAOniB,EAAOxX,MACb,IAAK,eACJ,OAAOuF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC4P,MAAK,GAAAzC,OAAA3J,OAAAs0B,GAAA,EAAAt0B,CAAMxD,EAAM4P,OAAZ,CAAmB6F,EAAOvX,YAEjC,QAAS,OAAO8B,ICxBdy3B,GAAe,CAClB9gB,WAAc,IACdF,kBAAqB,GACrBC,cAAiB,GA4BHgB,GAvBM,WAAkC,IAAjC1X,EAAiC23B,UAAAvrB,OAAA,QAAAwrB,IAAAD,UAAA,GAAAA,UAAA,GAAzBF,GAAchiB,EAAWkiB,UAAAvrB,OAAA,EAAAurB,UAAA,QAAAC,EACtD,OAAOniB,EAAOxX,MACb,IAAK,qBACJ,OAAOuF,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC2W,WAAY3W,EAAM2W,WAAalB,EAAOvX,UAExC,IAAK,4BAGJ,OAFAqH,QAAQC,IAAIxF,EAAMyW,mBAEXjT,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAECyW,oBAAqBzW,EAAMyW,oBAE7B,IAAK,wBACJ,OAAOjT,OAAAq0B,GAAA,EAAAr0B,CAAA,GACHxD,EADJ,CAEC0W,gBAAiB1W,EAAM0W,gBAEzB,QAAS,OAAO1W,ICVHi4B,GATS,kBAAMC,YAAgB,CAC7C1gB,iBAAkBA,GAClBkgB,gBAAiBA,GACjB3L,aAAcA,GACd1f,kBAAmBA,GACnBoL,aAAcA,GACdC,eAAgBA,MCXb+f,GAAe,GC+BnB,IACIt0B,GD7BSg1B,YAAYF,KAAqBR,IC+B9CW,IAASC,OACR72B,EAAAC,EAAAC,cAAC42B,EAAA,EAAD,CAAUn1B,MAAOA,IAChB3B,EAAAC,EAAAC,cAAC62B,GAAA,EAAD,CAAQC,SAAUC,uBACjBj3B,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACdX,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjhB,IACjCpW,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,gBAAgBC,UAAWzE,KACvC5yB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,YAAYC,UAAW9Q,KACnCvmB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,cAAcC,UAAW3uB,IACrC1I,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,WAAWD,OAAK,EAACE,UAAWvsB,IACxC9K,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWzrB,IACtC5L,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,aAAaC,UAAW7M,KACpCxqB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,cAAcC,UAAW3pB,IACrC1N,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWlhB,IACnCnW,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,SAASC,UAAW1c,KAChC3a,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,eAAeC,UAAW1K,KACtC3sB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,iBAAiBC,UAAWhhB,IACxCrW,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWje,KACnCpZ,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,SAASC,UAAWlc,KAChCnb,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,gBAAgBC,UAAWtY,KACvC/e,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,qBAAqBC,UAAWxW,KAC5C7gB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,gBAAgBC,UAAW5V,KACvCzhB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,oBAAoBC,UAAWxb,KAC3C7b,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,oBAAoBC,UAAWlb,KAC3Cnc,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,eAAeC,UAAW3a,KACtC1c,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,SAASC,UAAW3S,KAChC1kB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,UAAUD,OAAK,EAACE,UAAWjb,KACvCpc,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,cAAcC,UAAWvU,KACrC9iB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,SAASC,UAAW/S,KAChCtkB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,SAASD,OAAK,EAACE,UAAWxQ,KACtC7mB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWzE,KACpC5yB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,SAASC,UAAW5M,KAChCzqB,EAAAC,EAAAC,cAACg3B,GAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWxK,QAG5BlV,SAAS2f,eAAe","file":"static/js/main.63805f9c.chunk.js","sourcesContent":["let actions = {\r\n\t//resultsReducer\r\n\tupdateTotalScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TOTAL_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\r\n\t},\r\n\tupdateExerciseComplete: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_EXERCISES_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateTestsComplete: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\t//testsReducer\r\n\tupdateTests: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\t//settingsReducer\r\n\tchangeColorScheme: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_COLOR_SCHEME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tchangeSoundVolume: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_SOUND_VOLUME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\t//vocabularyReducer\r\n\ttoggleVocabModal: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_VOCAB_MODAL',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tselectVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\r\n\t},\r\n\tvoiceVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'VOICE_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\t//booksReducer\r\n\tselectBook: function(book) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BOOK',\r\n\t\t\tpayload: book\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSize: function(fontSize) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SIZE',\r\n\t\t\tpayload: fontSize\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontFamily: function(fontFamily) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_FAMILY',\r\n\t\t\tpayload: fontFamily\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSpacing: function(lineHeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SPACING',\r\n\t\t\tpayload: lineHeight\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontWeight: function(fontWeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_WEIGHT',\r\n\t\t\tpayload: fontWeight\r\n\t\t}\t\t\r\n\t},\t\t\t\t\r\n\tselectFontColor: function(fontColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_COLOR',\r\n\t\t\tpayload: fontColor\r\n\t\t}\t\t\r\n\t},\r\n\tselectBgColor: function(backgroundColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BG_COLOR',\r\n\t\t\tpayload: backgroundColor\r\n\t\t}\t\t\r\n\t},\r\n\taddCommentToBook: function(id, comment) {\r\n\t\treturn {\r\n\t\t\ttype: 'ADD_COMMENT_TO_BOOK',\r\n\t\t\tpayload: {id, comment}\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleFontModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_FONT_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleColorModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_COLOR_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleSearchModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_SEARCH_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\t//exercisesReducer\r\n\tupdateEngToRus: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_ENG_TO_RUS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateRusToEng: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_RUS_TO_ENG',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateConstructedWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_CONSTRUCT_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateAudioWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_AUDIO_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateCardWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_CARD_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateTrueOrFalse: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TRUE_OR_FALSE',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateRecreateTxt: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_RECREATE_TXT',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateRecreateAudioTxt: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_RECREATE_AUDIOTXT',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateFillTheGaps: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_FILL_THE_GAPS',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdatePlaceSpaces: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_PLACE_SPACES',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\t\r\n\r\n\tupdateCommonPhrases: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_COMMON_PHRASES',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n}\r\n\r\nexport default actions;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Icon, Image } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass VocabWord extends Component {\r\n\r\n  delete(id){\r\n    this.props.delete(id);\r\n  }\r\n\r\n  voiceWord = (word) =>{\r\n    speech.say(word);\r\n  }\r\n\r\n  openWord = (word) => {\r\n    this.props.actions.selectVocabWord(word);\r\n    this.props.actions.toggleVocabModal(true);\r\n  }\r\n\r\n  render() {\r\n    var descriptionVisible = true;\r\n    return (\r\n      <List.Item >\r\n        <Fragment>\r\n          <Image avatar src={this.props.image} />\r\n          <List.Content className=\"word-content\" onClick={this.openWord.bind(this, this.props.word)}>\r\n            <List.Header as='a'>{this.props.name} - {this.props.transcription} - {this.props.translation}</List.Header>\r\n            {descriptionVisible ?         \r\n              <List.Description className=\"word-meaning\">\r\n                  <b>{this.props.meaning}</b>\r\n              </List.Description> :null\r\n            }\r\n          </List.Content>\r\n        </Fragment>  \r\n      <List.Content>\r\n            <Button.Group>\r\n              <span onClick={this.voiceWord.bind(this, this.props.name)} className=\"word-icon-wrapper\" title=\"Озвучить\">\r\n                 <Icon name = 'right microphone'/>\r\n              </span>\r\n              <span onClick={this.delete.bind(this, this.props.id)} className=\"word-icon-wrapper\" title=\"Удалить\">\r\n                  <Icon name='right trash alternate outline' />\r\n              </span>\r\n            </Button.Group>              \r\n      </List.Content>\r\n    </List.Item>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VocabWord);","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {  Dropdown} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass VocabSideMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       items: [],\r\n       options: [],\r\n       value: null\r\n    }\r\n  }\r\n\r\n  \tUNSAFE_componentWillMount() {   \r\n\t    axios.get('./working.json')\r\n\t      .then(res => {\r\n\t        const items = res.data;\r\n\t        this.setState({ items }, () => this.consoleParams() );\r\n\t      }) \r\n\t  }\r\n\r\n\t  consoleParams = () =>{\r\n\t  \tlet newItems = [];\r\n\t  \tthis.state.items.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.category, \r\n                        value: item.category \r\n                     }))\r\n\t  \tthis.setState({\r\n\t  \t\toptions: newItems\r\n\t  \t}, () => this.getUnique())\r\n\t  }\r\n\r\n\t  getUnique = () => {\r\n\t  \tvar arr = this.state.options;\r\n\t  \tvar comp = 'text';\r\n  \t\t\tconst unique = arr\r\n       \t\t.map(e => e[comp])\r\n   \t\t\t\t.map((e, i, final) => final.indexOf(e) === i && i)\r\n    \t\t\t.filter(e => arr[e]).map(e => arr[e]);\r\n\t   \tthis.setState({\r\n\t   \t\toptions: unique\r\n\t   \t})\t\t\r\n\t\t}\r\n\r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var value = this.state.value;\r\n      var newObj = {};\r\n      newObj['value'] = value;\r\n      newObj['options'] = options;\r\n      this.props.callbackFromParent(newObj);\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )\r\n\r\n    consoleProps = () =>{\r\n      console.log(this.props);\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical className=\"side-menu\">\r\n        <Menu.Item name='inbox' active >\r\n          <Dropdown placeholder='Выберите категорию'\r\n                    fluid\r\n                    clearable\r\n                    value={this.state.value} \r\n                    search\r\n                    key={this.state.options.id}\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} />\r\n        </Menu.Item>\r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabSideMenu;","import React, { Component } from 'react';\r\nimport {Menu} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      inputLogin: '',\r\n      inputPassword: '',\r\n      doublePassword: '',\r\n      inputMail: ''\r\n    }\r\n  }\r\n\r\n  showModal = () =>{\r\n      let state = this.state.isModalVisible;\r\n      this.setState({\r\n        isModalVisible: !state\r\n      },() => console.log(this.state.isModalVisible) )\r\n  }\r\n\r\n    changeLogin = (event) =>{\r\n      this.setState({\r\n        inputLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    changePassword = (event) =>{\r\n      this.setState({\r\n        inputPassword: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMail = (event) =>{\r\n      this.setState({\r\n        inputMail: event.target.value\r\n      })\r\n    }\r\n\r\n    changeDoublePassword = (event) =>{\r\n      this.setState({\r\n        doublePassword: event.target.value\r\n      })\r\n    }    \r\n\r\n  render() {\r\n    return (\r\n        <Menu className=\"top-menu\">\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/\">Главная</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/vocabulary\">Словарь</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/grammar\">Грамматика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/training\">Тренировки</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/tests\">Тесты</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/materials\">Материалы</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/books\">Книги</Link>\r\n          </Menu.Item>           \r\n            <Menu.Item className=\"item-link item-menu__link\">\r\n              <Link to=\"/statistics\">Статистика</Link>\r\n            </Menu.Item>\r\n            {/*\r\n            <Menu.Menu position='right'>\r\n              <Menu.Item className=\"login-item\">\r\n                <Modal className=\"modal-form login-modal\" trigger={<Button className=\"login-button\">Войти</Button>} closeIcon>\r\n                  <Form className=\"input-form login-form\">\r\n                    <Form.Field>\r\n                      <label>Введите логин</label>\r\n                      <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите пароль</label>\r\n                      <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Button primary onClick={this.finishLogin}>Войти</Button>\r\n                  </Form>         \r\n                </Modal>              \r\n              </Menu.Item>\r\n              <Menu.Item className=\"login-item\">\r\n                <Modal className=\"modal-form login-modal\" trigger={<Button className=\"login-button\">Регистрация</Button>} closeIcon>\r\n                  <Form className=\"input-form login-form\">\r\n                    <Form.Field>\r\n                      <label>Введите логин</label>\r\n                      <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите e-mail</label>\r\n                      <input value={this.state.inputMail} onChange={this.changeMail} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите пароль</label>\r\n                      <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                    </Form.Field>                   \r\n                    <Form.Field>\r\n                      <label>Повторите пароль</label>\r\n                      <input value={this.state.doublePassword} onChange={this.changeDoublePassword} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Button primary onClick={this.finishRegistration}>Зарегистрироваться</Button>\r\n                  </Form>         \r\n                </Modal>              \r\n              </Menu.Item> \r\n              <Menu.Item className=\"menu-image\" >\r\n                {this.state.isModalVisible ?\r\n                  <div className=\"user-modal\">\r\n                    <div className=\"user-modal-pic\">\r\n                      <Image src=\"/icons/member.png\" />              \r\n                      <div className=\"user-modal-name\">\r\n                        <h5> User</h5>\r\n                        <h6>blabla@mail.com</h6>\r\n                      </div>                \r\n                    </div>\r\n                    <p><Link to=\"/statistics\"> <Icon name='chart bar outline' size='' />Статистика</Link></p>\r\n                    <p><Link to=\"/statistics\"> <Icon name='log out' size=''  />Выйти</Link></p>\r\n                  </div> : null\r\n                }\r\n                <Image className=\"user-avatar\" onClick={this.showModal} src=\"/icons/member.png\" />\r\n              </Menu.Item>                \r\n            </Menu.Menu>\r\n            */}                                                                     \r\n        </Menu>\r\n \t);\r\n  }\r\n}\r\n\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport { Button, Menu, Modal, Form } from 'semantic-ui-react'\r\nimport { Input} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass VocabTopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      search: '',\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: '',\r\n      categories: [],\r\n      categoryValue: 'all'  \r\n    };\r\n    this.delete = this.delete;\r\n    this.voiceWord = this.voiceWord;\r\n    this.voiceWordFromModal = this.voiceWordFromModal;\r\n    this.sortByName = this.sortByName;\r\n    this.sortByTranslation = this.sortByTranslation;\r\n    this.sortByDate = this.sortByDate;\r\n    this.newFunction = this.newFunction;  \r\n    \r\n  }\r\n\r\n  consoleProps = () =>{\r\n    console.log(this.props)\r\n  }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({search: event.target.value.substr(0,20)}, ()=> this.searchFunction() );\r\n    } \r\n\r\n//загрузка слова\r\n    changeNameValue = (event) =>{\r\n      this.setState({\r\n        inputName: event.target.value\r\n      })\r\n    }\r\n\r\n    changeTranslationValue = (event) =>{\r\n      this.setState({\r\n        inputTranslation: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMeaningValue = (event) =>{\r\n      this.setState({\r\n        inputMeaning: event.target.value\r\n      })\r\n    }    \r\n\r\n    changeCategoryValue = (event) =>{\r\n      this.setState({\r\n        inputCategory: event.target.value\r\n      })\r\n    } \r\n\r\n    changeImageValue = (event) =>{\r\n      this.setState({\r\n        inputImage: event.target.value\r\n      })\r\n    }\r\n\r\n    submitForm = (e) =>{\r\n    var newWords = this.props.words.slice();\r\n    const inputName = this.state.inputName;\r\n    const inputTranslation = this.state.inputTranslation;\r\n    const inputMeaning = this.state.inputMeaning;\r\n    const inputCategory = this.state.inputCategory;\r\n    const inputStringDate = new Date().toUTCString();\r\n    console.log(inputStringDate);\r\n    const inputDate = new Date(inputStringDate);\r\n    const inputImage = this.state.inputImage;\r\n    const inputId = 30;\r\n    const obj ={'id': inputId,\r\n          'name': inputName, \r\n          'translation': inputTranslation, \r\n          'meaning': inputMeaning,\r\n          'image': inputImage, \r\n          'date': inputDate,\r\n          'category': inputCategory\r\n          } \r\n\r\n    newWords.unshift(obj); \r\n  \r\n      this.setState({ words: newWords}, () => console.log(this.state.words) );\r\n      this.setState({\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: ''\r\n      }, () => this.newFunc() )\r\n    }    \r\n\r\n    newFunc = () =>{\r\n      var words = this.state.words;\r\n      this.props.callbackFromApp(words);\r\n    }\r\n\r\n    searchFunction = () =>{\r\n      var search = this.state.search;\r\n      this.props.searchFromApp(search);\r\n    }    \r\n\r\n  render() {\r\n\r\n   return (\r\n      <Menu text className=\"vocab-top-menu-wrapper vocab-top-menu-wrapper-color\">\r\n        <Menu.Item>\r\n          <Modal className=\"modal-form\" trigger={<Button primary>Добавить слово</Button>} closeIcon>\r\n            <Form className=\"input-form\">\r\n              <Form.Field>\r\n                <label>Введите слово</label>\r\n                <input value={this.state.inputName} onChange={this.changeNameValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите перевод</label>\r\n                <input value={this.state.inputTranslation} onChange={this.changeTranslationValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите категорию</label>\r\n                <input value={this.state.inputCategory} onChange={this.changeCategoryValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Выберите изображение</label>\r\n                <input value={this.state.inputImage} onChange={this.changeImageValue} type=\"file\" accept=\"image/png, image/jpeg\" />\r\n              </Form.Field>                   \r\n              <Button primary onClick={this.submitForm}>Добавить</Button>\r\n            </Form>         \r\n          </Modal>\r\n        </Menu.Item>\r\n        <Menu.Item name='removeWords'> \r\n          <Button primary >\r\n            Удалить\r\n          </Button>\r\n        </Menu.Item>        \r\n        <Menu.Item name='byName'> \r\n          <Button primary onClick = {this.props.sortByName}>\r\n            по имени\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byTranslation'> \r\n          <Button primary onClick = {this.props.sortByTranslation}>\r\n            по переводу\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byMeaning'> \r\n          <Button primary onClick = {this.props.sortByDate}>\r\n            по дате\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n         <Input icon='search' placeholder='Search...' onChange={this.updateSearch}/>\r\n        </Menu.Item> \r\n   \r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabTopMenu;","import React, { Component, Fragment } from 'react';\r\nimport { List, Button, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport VocabWord from'./VocabWord'\r\nimport VocabSideMenu from'./VocabSideMenu'\r\nimport TopMenu from './TopMenu'\r\nimport VocabTopMenu from './VocabTopMenu'\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Vocabulary extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twords: [],\r\n\t\t\tfilteredWords: [],\r\n\t\t\tisOldestFirst: true,\r\n\t\t\tvisible: 15,\r\n\t\t\tquery: '',\r\n\t\t\tsearchString: [],\r\n\t\t\tsearch: '',\r\n\t\t\tcategories: [],\r\n\t\t\tcategoryValue: 'all'\t\r\n\t\t};\r\n\t\tthis.delete = this.delete;\r\n\t\tthis.handler = this.handler.bind(this);\t\r\n\t\tthis.sortByName = this.sortByName;\r\n\t\tthis.sortByTranslation = this.sortByTranslation;\r\n\t\tthis.sortByDate = this.sortByDate;\r\n\t\r\n\t}\r\n\r\n handler() {\r\n    this.setState({\r\n     words: []\r\n    })\r\n  }\r\n\r\n//подгрузка слов\r\n\tloadMore = () => {\r\n\t    this.setState((prev) => {\r\n\t      return {visible: prev.visible + 15};\r\n\t    });\r\n\t  }\r\n\r\n//сортировка по дате\r\n\tsortByDate = () => {\r\n    const words = this.state.filteredWords.slice();\r\n    let newWords = [];\r\n    if(this.state.isOldestFirst){\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(b.date) - new Date(a.date);\r\n      });\r\n    }\r\n    else{\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(a.date) - new Date(b.date);\r\n      });      \r\n    }\r\n    this.setState({\r\n      isOldestFirst: !this.state.isOldestFirst,\r\n      filteredWords: newWords\r\n    })\r\n\t} \r\n\r\n//сортировка по имени\r\n\tsortByName = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name) /*console.log('a,b ', a,b) */ );\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name) /*console.log('b,a ', b,a) */ );\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n//сортировка по переводу\r\n\tsortByTranslation = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\t    axios.get('./working.json')\r\n\t      .then(res => {\r\n\t        const words = res.data;\r\n\t        this.setState({ words, filteredWords: words });\r\n\t      })\r\n\t  }\r\n\r\n   delete = (id) =>{\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t})\r\n   }\r\n\r\n   deleteWord = (id) => {\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t}, () => this.toggleModal());\r\n   }\r\n\r\n   myCallback = (dataFromChild) =>{\r\n\t   \tlet words = this.state.words.slice();\r\n\t   \tlet filteredWords;\r\n\t   \tif (dataFromChild.value !== '') {\r\n\t   \t\tfilteredWords = words.filter(item => item.category === dataFromChild.value); \r\n\t   \t} else {\r\n\t   \t\tfilteredWords = words;\r\n\t   \t} \t\r\n   \t\tthis.setState({\r\n   \t\t\tfilteredWords,\r\n   \t\t\tcategoryValue: dataFromChild.value,\r\n   \t\t\toptions: dataFromChild.options\r\n   \t\t}) \r\n   }\r\n\r\n   topMenuCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\twords: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   searchCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tsearch: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   consoleState = () => {\r\n   \tconsole.log(this.state.categoryValue);\r\n   }\r\n\r\n   toggleModal = () => {\r\n   \tlet value = this.props.store.vocabModalOpen;\r\n   \tthis.props.actions.toggleVocabModal(!value);\r\n   }\r\n\r\n\r\n\r\n  render() {  \t\r\n  \tlet filteredWords = this.state.filteredWords.slice().filter(\r\n  \t\t(word) =>{\r\n  \t\t\treturn word.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n  \t\t}\r\n  \t);  \t\r\n    return (\r\n    \t<Fragment>\r\n    \t\t{this.props.store.vocabModalOpen ?\r\n\t    \t\t<div className=\"modal-container\">\r\n\t    \t\t\t<div className=\"modal-word\">\r\n\t    \t\t\t\t<span title=\"Закрыть\" onClick={this.toggleModal} className=\"modal-word__icon modal-word__icon--close\"><Icon name = 'close' size=\"large\" /></span>\r\n\t    \t\t\t\t<div className=\"modal-word__image\">\r\n\t    \t\t\t\t\t<img src = {this.props.store.selectedVocabWord.image} alt=\"\"/>\r\n\t    \t\t\t\t</div>\r\n\t    \t\t\t\t<p className=\"modal-word__title\">{this.props.store.selectedVocabWord.name} - <span className=\"modal-word__translation\">{this.props.store.selectedVocabWord.translation}</span></p>\r\n\t    \t\t\t\t<span onClick={this.deleteWord.bind(this, this.props.store.selectedVocabWord.id)} title=\"Удалить\" className=\"modal-word__icon modal-word__icon--delete\"><Icon size=\"large\" name = 'trash alternate outline'/></span>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n    \t\t: null}\r\n\t    \t<div className=\"content-wrapper\">\r\n\t    \t\t<TopMenu></TopMenu>\r\n\t    \t\t<div className=\"vocab-side-menu\">\r\n\t    \t\t\t<VocabSideMenu callbackFromParent={this.myCallback} items={this.state.words} ></VocabSideMenu>\r\n\t    \t\t\t<div className=\"vocab-top-menu\">\r\n\t    \t\t\t\t<VocabTopMenu \r\n\t    \t\t\t\t\thandler = {this.handler}\r\n\t    \t\t\t\t\tsortByName={this.sortByName}\r\n\t    \t\t\t\t\tsortByTranslation={this.sortByTranslation}\r\n\t    \t\t\t\t\tsortByDate ={this.sortByDate}\r\n\t     \t\t\t\t\tcallbackFromApp={this.topMenuCallback}\r\n\t    \t\t\t\t\tsearchFromApp={this.searchCallback} \r\n\t    \t\t\t\t\t>\r\n\t\t\t\t\t\t</VocabTopMenu>\r\n\t\t\t \t\t\t<List className=\"vocab-list\" relaxed='very'>\r\n\t\t\t\t\t\t\t{filteredWords.slice(0, this.state.visible).map((word,index) => \r\n\t\t\t\t\t\t\t\t(this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === word.category) && \r\n\t\t\t\t\t\t\t\t<VocabWord\r\n\t\t\t\t\t\t\t\t\tword = {word}\r\n\t\t\t\t\t\t\t\t\tdelete={this.delete}\r\n\t\t\t\t\t\t\t\t\tid={word.id}\r\n\t\t\t\t\t\t\t\t\tkey={word.id} \r\n\t\t\t\t\t\t\t\t\tname={word.name}\r\n\t\t\t\t\t\t\t\t\ttranscription = {word.transcription} \r\n\t\t\t\t\t\t\t\t\ttranslation={word.translation} \r\n\t\t\t\t\t\t\t\t\tmeaning={word.meaning}\r\n\t\t\t\t\t\t\t\t\timage={word.image} \r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t</VocabWord>\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t  \t\t\t</List>\r\n\t\t\t  \t\t\t<div className=\"load-more-button\">\r\n\t\t\t\t\t\t\t{this.state.visible < this.state.words.length &&\r\n\t\t\t\t            \t<Button onClick={this.loadMore} primary>Загрузить ещё</Button>\r\n\t\t\t\t          \t}\t\t\t\t  \t\t\t\t\r\n\t\t\t  \t\t\t</div>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    \t<footer></footer>\r\n\t    </Fragment>\t\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.vocabularyReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vocabulary);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Table} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass GrammarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      grammar: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('./grammar2.json')\r\n      .then(res => {\r\n        const grammar = res.data;\r\n        this.setState({ grammar });\r\n      })\r\n  } \r\n\r\n  render() {\r\n\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {(this.state.grammar.length) ?\r\n          <Table celled fixed className=\"grammar-list\">\r\n            <Table.Header>\r\n              <Table.Row columns={1} >\r\n                <Table.HeaderCell>Грамматические правила</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>        \r\n            {this.state.grammar[0].rules.map((item,index) =>\r\n              <Table.Body key={index}>\r\n                <Table.Row columns={3}>\r\n                  <Table.Cell className=\"grammar-title\">\r\n                    {item.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-description\">\r\n                    {item.description}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-button\">\r\n                    <div className=\"link-wrapper\">\r\n                      <Link to={{ pathname: `/grammar/${item.id}`,  query: { item } }}>Начать</Link>\r\n                    </div>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            )}\r\n          </Table>: null }        \r\n          </div>\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GrammarList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass SelectedGrammar extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n    axios.get('../grammar2.json')\r\n      .then(res => {\r\n        console.log(res.data);\r\n        let selectedGrammar = res.data[0].rules.find(x => x.id == this.props.match.params.id);\r\n        console.log(selectedGrammar);\r\n        let main_points = selectedGrammar.main_points;\r\n        let fullData = selectedGrammar.steps;\r\n        let currentTitle = fullData[stepId].title;\r\n        let currentDescription = fullData[stepId].description;\r\n        let currentExamples = fullData[stepId].examples;\r\n        this.setState({ \r\n          fullData,\r\n          currentTitle,\r\n          currentDescription,\r\n          currentExamples,\r\n          main_points\r\n        });\r\n      })\r\n  }\r\n\r\n  startTraining = () =>{\r\n    this.setState({\r\n      isButtonVisible: false,\r\n      isCardVisible: true\r\n    })\r\n  }\r\n\r\n  goBack = () =>{\r\n    let fullData = this.state.fullData.slice();\r\n    let length = fullData.length;\r\n    let newId = this.state.stepId;\r\n    newId  = newId - 1;\r\n    console.log(newId);\r\n    if( (newId < length) && (newId > 0) ){\r\n        let currentTitle = fullData[newId].title;\r\n        let currentDescription = fullData[newId].description;\r\n        let currentExamples = fullData[newId].examples;\r\n        this.setState({\r\n          stepId: newId,\r\n          currentTitle,\r\n          currentDescription,\r\n          currentExamples            \r\n        })       \r\n    }\r\n\r\n    else if(newId === 0){\r\n      let currentTitle = fullData[newId].title;\r\n      let currentDescription = fullData[newId].description;\r\n      let currentExamples = fullData[newId].examples;        \r\n      this.setState({\r\n        isBackButtonVisible: false,\r\n        stepId: newId,\r\n        currentTitle,\r\n        currentDescription,\r\n        currentExamples            \r\n      })         \r\n    }\r\n\r\n    else if(newId < 0 ) {\r\n      this.setState({\r\n        isBackButtonVisible: false         \r\n      })\r\n    }\r\n  }\r\n\r\n  continueTraining = () => {\r\n    let fullData = this.state.fullData.slice();\r\n    let length = fullData.length;\r\n    let newId = this.state.stepId;\r\n    newId  = newId + 1;\r\n    if(newId < length){\r\n        let currentTitle = fullData[newId].title;\r\n        let currentDescription = fullData[newId].description;\r\n        let currentExamples = fullData[newId].examples;\r\n        this.setState({\r\n          isBackButtonVisible: true,\r\n          stepId: newId,\r\n          currentTitle,\r\n          currentDescription,\r\n          currentExamples            \r\n        })       \r\n    }\r\n\r\n    else{\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isCardVisible: false          \r\n      })\r\n    }\r\n  }\r\n\r\n  voiceWord = () => {\r\n    speech.say(this.state.currentName);\r\n  }  \r\n\r\n\r\n  consoleFunction = () => {\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link className=\"grammar-link\" to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default SelectedGrammar;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Statistics extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      loaded: false,\r\n      testsLoaded: false,\r\n      wordsLoaded: false,\r\n      words: [],\r\n      testsScore: 0,\r\n      testsPercentage: 0,\r\n      contentArray: [],\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n      isModalOpen: false,\r\n      exerciseMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"exercise\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"exercise\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"exercise\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"exercise\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ],\r\n      wordMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"word\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"word\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"word\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"word\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ],\r\n      testMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"test\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"test\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"test\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"test\", \"all\"],\r\n          \"active\": true         \r\n        }        \r\n      ],\r\n      generalMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"general\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"general\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"general\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"general\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let exercises = this.props.store;\r\n    let prop;\r\n    for (prop in exercises) {\r\n      let val = exercises[prop];\r\n      this.setState({\r\n        [prop]: val\r\n      })\r\n    } \r\n    let learnedWords = {}      \r\n    learnedWords.engToRusWords = this.props.store.engToRusWords;\r\n    learnedWords.rusToEngWords = this.props.store.rusToEngWords;\r\n    learnedWords.cardWords = this.props.store.cardWords;\r\n    learnedWords.constructWords = this.props.store.constructWords;\r\n    learnedWords.audioWords = this.props.store.audioWords;\r\n    learnedWords.trueOrFalseWords = this.props.store.trueOrFalseWords;\r\n    for (prop in learnedWords) {\r\n      let val = learnedWords[prop];\r\n      this.countWords(val, prop + \"Total\")\r\n    } \r\n    this.setState({\r\n      learnedWords,\r\n      tests: this.props.testsStore,    \r\n      loaded: true\r\n    }, () => { this.countTests(this.state.tests); \r\n               this.setState({ wordsLoaded: true})               \r\n             })\r\n    axios.get('./words_full.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n        this.setState({ \r\n          words\r\n        }, () => this.splitIntoArrays());\r\n      })        \r\n  }   \r\n\r\n  countTests = (params) => {\r\n    let testsPercentage, testsScore;\r\n    if (params.length > 1) {\r\n      testsPercentage = Math.round(params.reduce(( sum , cur ) => sum + cur.percentage, 0) / this.state.tests.length * 10) / 10;\r\n      testsScore = params.reduce(( sum , cur ) => sum + cur.score , 0);\r\n    } else if (params.length === 1){\r\n      testsPercentage = params[0].testsPercentage;\r\n      testsScore = params[0].score;\r\n    } else {\r\n      testsPercentage = 0;\r\n      testsScore = 0;\r\n    }\r\n    this.setState({\r\n      testsPercentage, testsScore, testsLoaded: true\r\n    }) \r\n  }\r\n\r\n  countWords = (params, name) => {\r\n    let total = 0;\r\n    if (params.length > 1) {\r\n      for (var i = 0; i < params.length; i++) {\r\n        total += params[i].wordsTrained.length;\r\n      }\r\n      //total = params.reduce((a, b) => a.wordsTrained.length + b.wordsTrained.length);\r\n    } else if (params.length === 1) {\r\n      total = params[0].wordsTrained.length;\r\n    } else {\r\n      total = 0;\r\n    }\r\n    this.setState({\r\n      [name]: total\r\n    })\r\n  }\r\n\r\n  splitIntoArrays = () =>{\r\n    var nameArrays = Object.create(null);\r\n    let words = this.state.words.slice();\r\n    words.forEach(function(word) {\r\n      var nameArray = nameArrays[word.category];\r\n      if (!nameArray) {\r\n        nameArray = nameArrays[word.category] = [];\r\n      }\r\n      nameArray.push(word);\r\n    });\r\n  \tlet names = Object.keys(nameArrays);\r\n\r\n  \tlet values = Object.values(nameArrays);\r\n  \tlet finalData = [];\r\n  \tfor (var i = 0; i < names.length; i++) {\r\n  \t\tlet tmp = {};\r\n  \t\tlet lng = values[i].length;\r\n  \t\tlet fin = Math.floor(lng/3);\r\n      \ttmp['Всего слов'] = lng;\r\n      \ttmp['Изучено слов'] = fin;\r\n      \ttmp['name'] = names[i];\r\n      \tfinalData.push(tmp);\r\n  \t}\r\n\r\n  \tthis.setState({\r\n  \t\tnameArrays,\r\n  \t\tbarChartData: finalData\r\n  \t}, () => this.getYesterdaysDate())     \r\n\r\n  }\r\n\r\n\tgetYesterdaysDate = () => {\r\n\r\n    let data = this.state.barChartData.slice(0,7);\r\n    //let params = this.state.barChartData.slice(0,7);\r\n    const sorter = {\r\n      \"monday\": 1,\r\n      \"tuesday\": 2,\r\n      \"wednesday\": 3,\r\n      \"thursday\": 4,\r\n      \"friday\": 5,\r\n      \"saturday\": 6,\r\n      \"sunday\": 7\r\n    }\r\n\r\n/*\r\n    let newParams = params.sort((a, b) => {\r\n      let item1 = a.name.toLowerCase();\r\n      let item2 = b.name.toLowerCase();\r\n      return sorter[item1] - sorter[item2];\r\n    });  \r\n*/\r\n\t\tvar days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    let dateArray = [];\t\t\r\n    var date = new Date();\r\n    let i = 0;\r\n    while ( i < 7) {\r\n\t\t  date.setDate(date.getDate() - 1);\r\n      //date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\t    dateArray.push(days[date.getDay()]); \r\n\t    i++;  \t\r\n    }\r\n    for (var j = 0; j < data.length; j++) {\r\n      data[j][\"name\"] = dateArray[j]\r\n    }\r\n    data.sort((a, b) => {\r\n      let item1 = a.name.toLowerCase();\r\n      let item2 = b.name.toLowerCase();\r\n      return sorter[item1] - sorter[item2];\r\n    });      \r\n\r\n    this.setState({\r\n      lineChartData: data\r\n    })\r\n\t}\r\n\r\n  inDayRange = (option) => {\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let today = new Date(`${year}-${month + 1}-${day}`);\r\n\r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return (date.getTime() <= today.getTime() + 86400000 && date.getTime() >= today.getTime())\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)    \r\n  }\r\n\r\n  inWeekRange = (option) => {\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let weekDay = current.getDay();\r\n    //let weekDays = 7;\r\n    let start = new Date(`${year}-${month + 1}-${day}`);\r\n    \r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return ( \r\n        date.getTime() <= (start.getTime() + (86400000 * (7 - weekDay))) && date.getTime() >= (start.getTime() - (86400000 * weekDay))\r\n      )\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)\r\n  }\r\n\r\n  inMonthRange = (option) => {\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    //let day = current.getDate();\r\n    let totalDays = daysInMonth(month, year);\r\n    let start = new Date(`${year}-${month + 1}-${1}`);\r\n\r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return (date.getTime() <= start.getTime() + (86400000 * totalDays) && date.getTime() >= start.getTime())\r\n    }\r\n\r\n    function daysInMonth (month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option);\r\n  }\r\n\r\n  inAllRange = (option) => {\r\n\r\n    function ifInRange(item) {\r\n      return item;\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)\r\n  }  \r\n\r\n  applyFunction = (func, option) => {\r\n    let exercises = this.props.store;\r\n    let tests = this.props.testsStore;\r\n    let prop;\r\n\r\n    if (option === 'exercise') {\r\n      for (prop in exercises) {\r\n        let val = exercises[prop].filter(func)\r\n        this.setState({\r\n          [prop]: val\r\n        })\r\n      }\r\n    } else if (option === 'test') {\r\n        tests = tests.filter(func);\r\n        this.setState({\r\n          tests\r\n        }, () => this.countTests(this.state.tests))\r\n    } else if (option === 'word') {\r\n        let learnedWords = {}\r\n        learnedWords.engToRusWords = this.props.store.engToRusWords;\r\n        learnedWords.rusToEngWords = this.props.store.rusToEngWords;\r\n        learnedWords.cardWords = this.props.store.cardWords;\r\n        learnedWords.constructWords = this.props.store.constructWords;\r\n        learnedWords.audioWords = this.props.store.audioWords;\r\n        learnedWords.trueOrFalseWords = this.props.store.trueOrFalseWords;\r\n        for (prop in learnedWords) {\r\n          learnedWords[prop] = learnedWords[prop].filter(func);\r\n          this.countWords(learnedWords[prop], prop + \"Total\");\r\n        }\r\n    }\r\n  }\r\n\r\n  switchTab = (tab, id) => {\r\n    this.selectMenuItem(tab[0], id);\r\n    if (tab[1] === 'today') {\r\n      this.inDayRange(tab[0]);\r\n    } else if (tab[1] === 'week') {\r\n      this.inWeekRange(tab[0]);\r\n    } else if (tab[1] === 'month') {\r\n      this.inMonthRange(tab[0]);\r\n    } else {\r\n      this.inAllRange(tab[0]);\r\n    }\r\n  }\r\n\r\n  selectMenuItem = (category, id) => {\r\n    let val = category + \"Menu\";\r\n    let menu = this.state[val].slice();\r\n    for (var i = 0; i < menu.length; i++) {\r\n      if (menu[i].id === id) {\r\n        menu[i].active = true;\r\n      } else {\r\n        menu[i].active = false;\r\n      }\r\n    }\r\n    this.setState({ [val]: menu });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          {this.state.isModalOpen ?\r\n            <div className=\"statistics-overlay\">\r\n              <div className=\"statistics-modal\">\r\n                  <BarChart\r\n                    width={600}\r\n                    height={350}\r\n                    data={this.state.barChartData}\r\n                    margin={{\r\n                      top: 20, right: 20, left: 20, bottom: 20,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n                  </BarChart>                \r\n              </div>\r\n            </div>\r\n          : null}\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              <Card.Group className=\"texts-cards statistics-wrapper\" itemsPerRow={1} >\r\n            {/*\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Графики</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n    \t\t              <BarChart\r\n    \t\t                width={1200}\r\n    \t\t                height={450}\r\n    \t\t                data={this.state.barChartData}\r\n    \t\t                margin={{\r\n    \t\t                  top: 20, right: 30, left: 20, bottom: 5,\r\n    \t\t                }}\r\n    \t\t              >\r\n    \t\t                <CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t\t                <XAxis dataKey=\"name\" />\r\n    \t\t                <YAxis />\r\n    \t\t                <Tooltip />\r\n    \t\t                <Legend />\r\n    \t\t                <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n    \t\t                <Bar dataKey=\"Изучено слов\" fill=\"#444444\" />\r\n    \t\t              </BarChart>\r\n                    </Card.Description>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <LineChart\r\n                        width={800}\r\n                        height={450}\r\n                        data={this.state.lineChartData}\r\n                        margin={{\r\n                          top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"Всего слов\" stroke=\"#3281F0\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"Изучено слов\" stroke=\"#444444\" />\r\n                      </LineChart>\r\n                    </Card.Description>                    \r\n                  </Card.Content>\r\n                </Card> */}\r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Общая статистика</Card.Header>\r\n                    {(this.state.testsLoaded && this.state.wordsLoaded && this.state.loaded) ?\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\">\r\n                            <span>\r\n                              <Icon name = 'plus square outline'/>\r\n                            </span>\r\n                            <h1>{this.state.words.length}</h1>\r\n                            <p>Слов в словаре</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'file text'/></span>\r\n                            <h1>{this.props.resultsStore.exercisesComplete}</h1>\r\n                            <p>Тренировок пройдено</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'gem outline'/></span>\r\n                            <h1>{this.props.resultsStore.testsComplete}</h1>\r\n                            <p>Тестов выполнено</p>\r\n                          </div>                        \r\n                      </div>\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.props.resultsStore.totalScore}</h1>\r\n                            <p>Баллов набрано</p>\r\n                          </div>\r\n                      </div>\r\n                    </Card.Description> : null } \r\n                  </Card.Content>\r\n                </Card>                \r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Упражнений выполнено</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.exerciseMenu.map((item, index) => \r\n                        <span key={item.id} onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</span>\r\n                      )}\r\n                    </div>\r\n                    {this.state.loaded ?\r\n                      <Card.Description className=\"statistics-inner-wrapper\">\r\n                        <div className=\"statistics-container\">\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span>\r\n                                <Icon name = 'plus square outline'/>\r\n                              </span>\r\n                              <h1>{this.state.engToRusWords.length}</h1>\r\n                              <p>Перевод с английского</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'file text'/></span>\r\n                              <h1>{this.state.rusToEngWords.length}</h1>\r\n                              <p>Перевод с русского</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'gem outline'/></span>\r\n                              <h1>{this.state.audioWords.length}</h1>\r\n                              <p>Аудиотренировка</p>\r\n                            </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\" onClick={this.openModal}>\r\n                            <div className=\"statistics-item\">\r\n                              <span><Icon name = 'book'/></span>\r\n                              <h1>{this.state.cardWords.length}</h1>\r\n                              <p>Словарные карточки</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'question circle outline'/></span>\r\n                              <h1>{this.state.trueOrFalseWords.length}</h1>\r\n                              <p>Верно - неверно</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'check circle outline'/></span>\r\n                              <h1>{this.state.constructWords.length}</h1>\r\n                              <p>Конструктор слов</p>\r\n                            </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.recreateTxt.length}</h1>\r\n                            <p>Воспроизведи текст</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'check circle outline'/></span>\r\n                            <h1>{this.state.recreateAudioTxt.length}</h1>\r\n                            <p>Воспроизведи аудиотекст</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.fillTheGaps.length}</h1>\r\n                            <p>Заполни пробелы</p>\r\n                          </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.placeSpaces.length}</h1>\r\n                            <p>Расставь пробелы</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.commonPhrases.length}</h1>\r\n                            <p>Крылатые фразы</p>\r\n                          </div>\r\n                        </div>                                              \r\n                      </Card.Description>\r\n                    : null}\r\n                  </Card.Content>\r\n                </Card>\r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Слов изучено</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.wordMenu.map((item, index) => \r\n                        <span key={item.id} onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</span>\r\n                      )}\r\n                    </div>\r\n                    {this.state.wordsLoaded ?\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span>\r\n                              <Icon name = 'plus square outline'/>\r\n                            </span>\r\n                            <h1>{this.state.engToRusWordsTotal}</h1>\r\n                            <p>Перевод с английского</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'file text'/></span>\r\n                            <h1>{this.state.rusToEngWordsTotal}</h1>\r\n                            <p>Перевод с русского</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'gem outline'/></span>\r\n                            <h1>{this.state.audioWordsTotal}</h1>\r\n                            <p>Аудиотренировка</p>\r\n                          </div>                        \r\n                      </div>\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.cardWordsTotal}</h1>\r\n                            <p>Словарные карточки</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.trueOrFalseWordsTotal}</h1>\r\n                            <p>Верно - неверно</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'check circle outline'/></span>\r\n                            <h1>{this.state.constructWordsTotal}</h1>\r\n                            <p>Конструктор слов</p>\r\n                          </div>                        \r\n                      </div>             \r\n                    </Card.Description>\r\n                    : null}\r\n                  </Card.Content>\r\n                </Card>                \r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Тесты</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.testMenu.map((item, index) => \r\n                        <span key = {item.id} onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</span>\r\n                      )}\r\n                    </div>     \r\n                    {this.state.testsLoaded ?               \r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                        <div className=\"statistics-item\" onClick={this.openModal}>\r\n                          <span><Icon name = 'book'/></span>\r\n                          <h1>{this.state.tests.length}</h1>\r\n                          <p>Тестов выполнено</p>\r\n                        </div>\r\n                        <div className=\"statistics-item\">\r\n                          <span><Icon name = 'check circle outline'/></span>\r\n                          <h1>{this.state.testsPercentage}</h1>\r\n                          <p>Процент выполнения</p>\r\n                        </div>\r\n                        <div className=\"statistics-item\">\r\n                          <span><Icon name = 'question circle outline'/></span>\r\n                          <h1>{this.state.testsScore}</h1>\r\n                          <p>Баллов набрано</p>\r\n                        </div>                        \r\n                      </div>\r\n                    </Card.Description>\r\n                    : null }\r\n                  </Card.Content>\r\n                </Card>                                \r\n              </Card.Group>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.exercisesReducer, testsStore: state.testsReducer.tests, resultsStore: state.resultsReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Training extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper training-cards\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/englishtorussian.jpg' />              \r\n              </div>\r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/englishtorussian\">С английского на русский </Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/russiantoenglish.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/russiantoenglish\">С русского на английский</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/memory.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/cards\">Словарные карточки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/audio.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/audio\">Аудиотренировка</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/construct.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/constructword\">Конструктор слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/fillthegaps.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/fillthegaps\">Заполни пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreatetext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreatetext\">Воспроизведи текст</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreateaudiotext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreateaudiotext\">Воспроизведи аудиоисторию</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/insertspaces.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/insertspaces\">Расставьте пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/truefalse.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/trueorfalse\">Верно-неверно</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/proverbs.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/proverbs\">Пословицы и поговорки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>                                                                                                               \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Training;","import React, { Component, Fragment } from 'react';\r\nimport {Image } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n}\r\n \r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper recommended-wrapper\">\r\n          \t<div className=\"main-section section-1\">\r\n          \t  <div className=\"section-overlay\">\r\n          \t  \t<div className=\"section-header\">\r\n          \t  \t\t<h2>Лучший способ выучить язык</h2>\r\n          \t  \t\t<Link to=\"/training\" className=\"outline-link\">Начать учиться</Link>\r\n          \t  \t</div>\r\n          \t  </div>              \r\n            </div>\r\n          \t<div className=\"advantage-section\">\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/settings.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Простой интерфейс</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notebook.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Удобный словарь</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/user.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разнообразные тренировки</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notepad.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Большое количество обучающих материалов</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/house.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Грамматика и тесты</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/pen.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Полностью бесплатно</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>          \t                \r\n            </div>            \r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image words-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Изучайте слова</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>20 тематических наборов</li>\r\n\t            \t\t\t<li>Более 2000 слов</li>\r\n\t            \t\t\t<li>Словарь с расширенным функционалом</li>            \t\t\t            \t\t\t\r\n\t            \t\t\t<li>Возможность изучать добавленные слова</li>            \t\t\t\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/vocabulary\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Тренируйтесь</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>11 видов тренировок</li>\r\n\t            \t\t\t<li>Тренировка чтения, говорения и понимания на слух</li>\r\n\t            \t\t\t<li>Возможность добавлять на тренировку изучаемые слова</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/training\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image training-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image grammar-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Учите грамматику</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Изучение грамматики английского языка</li>\r\n\t            \t\t\t<li>Наглядные примеры</li>\r\n\t            \t\t\t<li>Тесты на любую тематику</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/grammar\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Улучшайте навыки чтения</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Множество текстов и аудиотекстов различной тематики</li>\r\n\t            \t\t\t<li>Тексты разного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/texts\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image texts-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n          {/*\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image books-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Читайте книги</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Книги на любой вкус</li>\r\n\t            \t\t\t<li>Возможность слушать аудиокниги</li>\r\n\t            \t\t\t<li>Книги различного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/books\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div> \r\n          */}  \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport './style.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ConstructWord extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    \tthis.btn = React.createRef();\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      currentWord: '',\r\n      currentFullWord: null,\r\n      currentTranslation: '',\r\n      currentMeaning: '',\r\n      isStarterVisible: true,\r\n      isCardVisible: false,\r\n      isFinalVisible: false,\r\n      inputValue: null,\r\n      nameArray: [],\r\n      wordNameArray: [],\r\n      nameArrayId: 0,\r\n      currentValue: '',\r\n      search: '',\r\n      currentImage: null,\r\n      areButtonsVisible: true,\r\n      isImageVisible: false,\r\n      wordId: 0,\r\n      mistakeCount: 0,\r\n      animationState: false,\r\n      fade: false        \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/vocabulary2.json')\r\n    .then(res => {\r\n      const words = res.data;\r\n      const currentFullWord = words[id];\r\n      const currentWord = words[id].name;\r\n      const currentTranslation = words[id].translation;\r\n      const currentImage = words[id].image;\r\n      const currentMeaning = words[id].meaning;\r\n      const nameArray = currentWord.split('');\r\n      const randomNameArray = currentWord.split('');\r\n      for (let i = randomNameArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n      }\r\n      const wordNameArray = [];\r\n      for (var i = 0; i < nameArray.length; i++) {\r\n        wordNameArray.push(' ');\r\n      }\r\n      this.setState({ \r\n        words, \r\n        currentWord,\r\n        currentTranslation,\r\n        currentImage,\r\n        currentMeaning,\r\n        randomNameArray,\r\n        nameArray,\r\n        wordNameArray,\r\n        currentFullWord\r\n        });\r\n    })\r\n    document.body.addEventListener(\"keydown\", this.myHandler);\r\n  }\r\n \r\n  myHandler = (e) =>{\r\n    let mistakeCount = this.state.mistakeCount;\r\n    let currentValue = this.state.currentValue;\r\n    let currentWord = this.state.currentWord;      \r\n    let id = this.state.nameArrayId;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let tempParam;\r\n    if ((e.key=== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        currentValue = currentValue + e.key;\r\n        let wordNameArray = this.state.wordNameArray.slice();\r\n        wordNameArray[id] = e.key;\r\n        for (var i = 0; i < randomNameArray.length; i++) {\r\n          if (randomNameArray[i] === e.key) {\r\n            tempParam = i;\r\n            break;\r\n          }\r\n        }\r\n        randomNameArray.splice(tempParam,1);       \r\n        ++id;\r\n        this.setState({\r\n          wordNameArray,\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: e.key,\r\n          randomNameArray\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((e.key !== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        mistakeCount++;\r\n        this.setState({\r\n          mistakeCount,\r\n          fade: true\r\n        })\r\n      }\r\n      else if((e.keyCode === '13') && (this.state.isCardVisible) ){\r\n        this.continueTraining();\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false\r\n        })        \r\n      }\r\n  }   \r\n\r\n  startTraining = () => {\r\n    this.setState({\r\n      isStarterVisible: false,\r\n      isCardVisible: true\r\n    })\r\n  }\r\n\r\n  continueTraining = () => {\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let currentFullWord = this.state.currentFullWord;\r\n\t  let negativeWords = this.state.negativeWords.slice();\r\n\t  let positiveWords = this.state.positiveWords.slice();\r\n\t  let currentValue = this.state.currentValue;\r\n\t  let currentWord = this.state.currentWord;\t  \r\n\t\tif (mistakeCount > 2){\r\n\t\t\tnegativeWords.push(currentFullWord);\r\n\t\t}\r\n\r\n\t\telse if(currentWord !== currentValue){\r\n\t  \tnegativeWords.push(currentFullWord);\r\n\t  \tthis.setState({\r\n\t  \t\tnegativeWords\r\n\t  \t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpositiveWords.push(currentFullWord)\r\n\t\t} \r\n    let id = this.state.id;\r\n    let wordsLength = this.state.words.length;\r\n    let words = this.state.words; \r\n    id = id + 1;\r\n    if (id < wordsLength) {\r\n      const currentFullWord = words[id];\r\n      const currentWord = words[id].name;\r\n  \t\tconst currentTranslation = words[id].translation;\r\n  \t\tconst currentImage = words[id].image;\r\n  \t\tconst currentMeaning = words[id].meaning;        \r\n  \t\tconst nameArray = currentWord.split('');\r\n  \t\tconst randomNameArray = currentWord.split('');\r\n  \t\tfor (let i = randomNameArray.length - 1; i > 0; i--) {\r\n  \t\t    const j = Math.floor(Math.random() * (i + 1));\r\n  \t\t    [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n  \t\t}\r\n  \t\tconst wordNameArray = [];\r\n  \t\tfor (let i = 0; i < nameArray.length; i++) {\r\n  \t\t\twordNameArray.push(' ');\r\n  \t\t}\r\n      this.setState({\r\n          id,\r\n          words, \r\n          currentWord,\r\n          currentFullWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          isImageVisible: false,\r\n          areButtonsVisible: true,\r\n          currentValue: '',\r\n          nameArrayId: 0,\r\n          mistakeCount: 0,\r\n          positiveWords,\r\n          negativeWords\r\n      })\r\n    }\r\n    else {\r\n      let words = this.state.positiveWords.slice();\r\n      let exercise = {}, wordsTrained = [];\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.positiveWords.length;\r\n      for (let i = 0; i < words.length; i++) {\r\n        wordsTrained.push(words[i].id)\r\n      }\r\n      exercise.wordsTrained = wordsTrained;\r\n      this.props.actions.updateConstructWord(exercise); \r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(exercise.score);\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isCardVisible: false,\r\n        isStarterVisible: false,\r\n        positiveWords,\r\n    \t  negativeWords           \r\n      })\r\n    }\r\n  }\r\n  \r\n  voiceWord = () => {\r\n    speech.say(this.state.currentName);\r\n  }  \r\n\r\n  checkValue = () => {\r\n    if(this.state.currentWord.length === this.state.currentValue.length){\r\n    \tthis.setState({\r\n    \t\tareButtonsVisible: false,\r\n    \t\tisImageVisible: true\r\n    \t})\r\n    }   \t\r\n  }\r\n\r\n  compareWord = (e) => {\r\n    let id = this.state.nameArrayId;\r\n    let currentWord = this.state.currentWord;\r\n    let nameArray = this.state.nameArray;\r\n    let currentValue = this.state.currentValue;\r\n    let currentLetter = e.target.textContent.slice(0,1);\r\n    let mistakeCount = this.state.mistakeCount;\r\n    if( (currentLetter === nameArray[id]) && (currentValue.length < currentWord.length) ){\r\n      e.target.className = \"hidden\";\r\n      currentValue = currentValue + currentLetter;\r\n      let wordNameArray = this.state.wordNameArray.slice();\r\n      wordNameArray[id] = currentLetter;\r\n      ++id;\r\n      this.setState({\r\n        wordNameArray,\r\n        currentValue,\r\n        nameArrayId: id,\r\n        inputValue: currentLetter\r\n      }, () => this.checkValue() )\r\n    }\r\n    else if((currentLetter !== nameArray[id]) && (currentValue.length < currentWord.length)) {\r\n      mistakeCount++;\r\n      this.setState({\r\n      \tmistakeCount,\r\n        fade: true\r\n      })\r\n    }\r\n    else {\r\n    \tthis.setState({\r\n    \t\tisFinalVisible: true,\r\n    \t\tisCardVisible: false\r\n    \t})      \t\r\n    }\r\n  } \r\n\r\n  render() {\r\n    const fade = this.state.fade;\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/construct.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n            <Container \r\n                onAnimationEnd={() => this.setState({ fade: false })}\r\n                className={fade ? 'fade construct-word-container' : 'construct-word-container'}>\r\n              <ul>\r\n              {this.state.wordNameArray.map((name,index) =>\r\n                <input key={index}  readOnly value={name} maxLength=\"1\" />\r\n               )}\r\n              </ul>\r\n              {this.state.areButtonsVisible ? \r\n\t              <ul>\r\n\t              {this.state.randomNameArray.map((name,index) =>\r\n\t                <li key={index} \r\n                      onClick={this.compareWord}\r\n                  > \r\n                      {name} \r\n                  </li>\r\n\t               )}\r\n\t              </ul>: null \r\n              }\r\n            {this.state.isImageVisible ?\r\n            \t<Fragment>\r\n            \t\t<p>{this.state.currentMeaning}</p>\r\n                   <div className=\"texts-image-wrapper\">\r\n                    <Image src={this.state.currentImage} ></Image>\r\n                  </div>\r\n            \t</Fragment> \r\n            \t : null\r\n            }\r\n            </Container>\r\n            <Button primary onClick={this.continueTraining} >Продолжить</Button>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConstructWord);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Proverbs extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n\r\n  startTraining = () =>{\r\n    this.setState({\r\n        isStarterVisible: false,\r\n        isCardVisible: true\r\n    })\r\n  }\r\n\r\n  shuffleArray = () =>{\r\n    let currentArray = this.state.currentArray.slice();\r\n    for (let i = currentArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n    }\r\n  }\r\n\r\n  continueTraining = () =>{\r\n\t  let negativeProverbs = this.state.negativeProverbs.slice();\r\n\t  let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let id = this.state.id;\r\n    let proverbs = this.state.proverbs;\r\n    id = id + 1;\r\n    if (id < 2) {\r\n      const currentProverbName = proverbs[id].proverb;\r\n      const currentTranslation = proverbs[id].translation;\r\n      let currentArray = currentProverbName.split(\" \");\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }        \r\n      this.setState({\r\n        id,\r\n        proverbs, \r\n        currentProverbName,\r\n        currentTranslation,\r\n        currentArray,\r\n        constructedProverb: [],\r\n        positiveProverbs,\r\n        negativeProverbs,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: true,\r\n        isContinueButtonVisible: false,\r\n        isResultWrong: false,\r\n        nameClass: ''\r\n      })\r\n    }\r\n    else {\r\n      let exercise = {};\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.positiveProverbs.length; \r\n      this.props.actions.updateCommonPhrases(exercise); \r\n      this.props.actions.updateTotalExercises(1);\r\n      this.props.actions.updateTotalScore(exercise.score);      \r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isCardVisible: false,\r\n        isStarterVisible: false,\r\n        positiveProverbs,\r\n        negativeProverbs           \r\n      })\r\n    }\r\n  }\r\n\r\n  setValue = (e) => {\r\n    let target = e.target;\r\n    let indexTarget = 0;\r\n    while ( (target = target.previousElementSibling) ) {\r\n      indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    currentArray.splice(indexTarget,1);\r\n    constructedProverb.push(e.target.textContent);\r\n    this.setState({\r\n      constructedProverb\r\n    })\r\n    if(currentArray.length === 0){\r\n      this.setState({\r\n        isCheckButtonVisible: true,\r\n        isDKButtonVisible: false\r\n      })\r\n    }\r\n  } \r\n\r\n  removeValue = (e) =>{\r\n    let target = e.target;\r\n    var indexTarget = 0;\r\n    while ( (target = target.previousElementSibling) ) {\r\n      indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    constructedProverb.splice(indexTarget,1);\r\n    currentArray.push(e.target.textContent);\r\n    this.setState({\r\n      currentArray\r\n    })\r\n    if(currentArray.length > 0){\r\n      this.setState({\r\n        isCheckButtonVisible: false\r\n      })\r\n    }\r\n  }\r\n\r\n  dontKnow = (e) =>{\r\n    let negativeProverbs = this.state.negativeProverbs;    \r\n    let currentProverbName = this.state.currentProverbName;\r\n    let currentArray = currentProverbName.split(\" \");\r\n    let constructedProverb = [];\r\n    for (var i = 0; i < currentArray.length; i++) {\r\n      constructedProverb.push(currentArray[i])\r\n    }\r\n    negativeProverbs.push(currentProverbName);\r\n    this.setState({\r\n      currentArray: [],\r\n      isDKButtonVisible: false,\r\n      isContinueButtonVisible: true,\r\n      isCheckButtonVisible: false,\r\n      constructedProverb\r\n    })\r\n  }\r\n\r\n  checkProverb = (e) =>{\r\n    let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let negativeProverbs = this.state.negativeProverbs.slice();\r\n    var sentence = this.state.constructedProverb.slice().join(' ');\r\n    if(sentence === this.state.currentProverbName){\r\n      positiveProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        nameClass: 'audio-name-green',\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        positiveProverbs\r\n      })      \r\n    }\r\n    else {\r\n      negativeProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        nameClass: 'audio-name-red',\r\n        isResultWrong: true,\r\n        negativeProverbs\r\n      })      \r\n    }\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      proverbs: [],\r\n      id: 0,\r\n      currentProverbName: '',\r\n      currentTranslation: '',\r\n      mistakeCount: 0,\r\n      positiveProverbs: [],\r\n      negativeProverbs: [],\r\n      currentArray: [],\r\n      isStarterVisible: true,\r\n      isCardVisible: false,\r\n      isFinalVisible: false,\r\n      areButtonsVisible: false,\r\n      isContinueButtonVisible: false,\r\n      isCheckButtonVisible: false,\r\n      isDKButtonVisible: true,\r\n      constructedProverb: [],\r\n      nameClass: '',\r\n      isResultWrong: false      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('./proverbs.json')\r\n      .then(res => {\r\n        const proverbs = res.data;\r\n        let random = [];\r\n        while(random.length < 2) {\r\n          let el = proverbs[Math.floor(Math.random() * proverbs.length)];\r\n          if (random.indexOf(el) === -1) {\r\n            random.push(el)\r\n          };                \r\n        }  \r\n        const currentProverbName = random[id].proverb;\r\n        const currentTranslation = random[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }                    \r\n        this.setState({ \r\n            proverbs: random, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray\r\n          });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/proverbs.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card proverb-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n              <div className={`proverb-result ${this.state.nameClass}`} >\r\n                  {this.state.constructedProverb.map((item,index) =>\r\n                      <span key={index} className=\"proverb-span\" onClick={this.removeValue}>{item}</span>\r\n                  )}\r\n              </div>\r\n              {this.state.isResultWrong ?\r\n                <div className={`proverb-result audio-name-green`}>\r\n                  {this.state.currentProverbName}\r\n                </div> : null\r\n              }\r\n              <div className=\"fragment-variants\">\r\n                {this.state.currentArray.map((item, index) =>\r\n                  <span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"proverb-button-container\">\r\n              {this.state.isCheckButtonVisible ? \r\n                <Button primary onClick={this.checkProverb} >Проверить</Button> : null\r\n              }\r\n              {this.state.isDKButtonVisible ? \r\n                <Button primary onClick={this.dontKnow}>Не знаю</Button> :null\r\n              }\r\n              {this.state.isContinueButtonVisible ? \r\n                <Button primary onClick={this.continueTraining} >Продолжить</Button> : null\r\n              }                \r\n              </div>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeProverbs.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveProverbs.length ? this.state.positiveProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          ) : null}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveProverbs.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {2 - this.state.positiveProverbs.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Proverbs);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Cards extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n      axios.get('./working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              let el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });          \r\n        })\r\n   }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (val) => {\r\n      if (val) {\r\n        let positiveWords = this.state.positiveWords.slice();\r\n        positiveWords.push(this.state.currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n        })        \r\n      } else {\r\n        let negativeWords = this.state.negativeWords.slice();\r\n        negativeWords.push(this.state.currentWord);      \r\n        this.setState({\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true\r\n        })        \r\n      }     \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      let result = this.state.result;\r\n      id = id + 1;\r\n      if (id < result.length){ \r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];       \r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n      }\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let exercise = {}, wordsTrained = [];\r\n        exercise.id = uuidv4();\r\n        exercise.date = new Date();\r\n        exercise.score = this.state.positiveWords.length;\r\n        for (var i = 0; i < words.length; i++) {\r\n          wordsTrained.push(words[i].id)\r\n        }\r\n        exercise.wordsTrained = wordsTrained;\r\n        this.props.actions.updateCardWords(exercise);\r\n        this.props.actions.updateExerciseComplete(1);\r\n        this.props.actions.updateTotalScore(exercise.score);\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n  voiceWord = () =>{\r\n    speech.say(this.state.currentName);\r\n  }    \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Словарные карточки</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent} >Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n           <div className=\"card-image-wrapper recognize-cards\">\r\n             <Image src={this.state.currentWord.image} />\r\n           </div>\r\n              <Card.Content>\r\n                <Card.Header>{this.state.currentWord.name} \r\n                <span onClick={this.voiceWord} className=\"training-card__icon\" title=\"Прослушать\">\r\n                  <Icon name = 'right sound'/> \r\n                </span>\r\n                </Card.Header>\r\n                {this.state.isTranslationVisible ? \r\n                  <Fragment>\r\n                    <Card.Meta>{this.state.currentWord.translation}</Card.Meta>\r\n                    <Card.Description>{}</Card.Description>                  \r\n                  </Fragment>:null\r\n                }\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} primary>Знаю</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} primary>Не знаю</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  { (this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Audio extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false,\r\n        correctNameVisible: false,\r\n        correctName: null,\r\n        correctNameClass: 'audio-name-green',\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        tempSearch: '',\r\n        metaClass: 'blue',\r\n        nameClass: ''         \r\n      }, () => this.initialLoad())\r\n   }\r\n\r\n  initialLoad = () => {\r\n    axios.get('./working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = [];\r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            let el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          result });\r\n      })\r\n  }\r\n\r\n  startTraining = () => {\r\n    this.setState({\r\n      isButtonVisible: false,\r\n      isCardVisible: true\r\n    })\r\n  }\r\n\r\n  updateSearch = (event) => {\r\n    this.setState({\r\n      search: event.target.value.substr(0,20),\r\n      tempSearch: event.target.value.substr(0,20)});\r\n  }  \r\n\r\n  positiveResponse = () => {\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let negativeWords = this.state.negativeWords.slice();\r\n    let currentWord = this.state.currentWord;\r\n    let search = this.state.search;\r\n    if(currentWord.name === search){\r\n      positiveWords.push(currentWord);\r\n      this.setState({\r\n        positiveWords,\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true,\r\n        isInputVisible: false,\r\n        isLinkVisible: false,\r\n        search: '',\r\n        nameClass: 'audio-name-green'\r\n      })\r\n    }\r\n    else if(search === '') {\r\n      negativeWords.push(currentWord);        \r\n      this.setState({\r\n        correctNameVisible: true,\r\n        negativeWords,\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true,\r\n        isInputVisible: false,\r\n        isLinkVisible: false,\r\n        search: '',\r\n        nameClass: 'audio-name-red',\r\n        tempSearch: 'нет ответа'\r\n      }) \r\n    }\r\n\r\n    else {\r\n      negativeWords.push(currentWord);\r\n      this.setState({\r\n        correctNameVisible: true,\r\n        negativeWords,\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true,\r\n        isInputVisible: false,\r\n        isLinkVisible: false,\r\n        search: '',\r\n        nameClass: 'audio-name-red'\r\n      })        \r\n    }\r\n  }\r\n\r\n  continueTraining = () => {\r\n    let id = this.state.id;\r\n    id = id + 1;\r\n    const result = this.state.result;\r\n    if (id < result.length) { \r\n    const currentWord = result[id][Math.floor(Math.random() * result[0].length)];\r\n      this.setState({\r\n        id,\r\n        currentWord,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        correctNameVisible: false        \r\n      })\r\n    } \r\n\r\n    else {\r\n      let words = this.state.positiveWords.slice();\r\n      let exercise = {}, wordsTrained = [];\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.positiveWords.length;\r\n      for (var i = 0; i < words.length; i++) {\r\n        wordsTrained.push(words[i].id)\r\n      }\r\n      exercise.wordsTrained = wordsTrained;\r\n      this.props.actions.updateAudioWords(exercise);   \r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(exercise.score);\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: false,\r\n        showContinueButton: false, \r\n        isCardVisible: false,\r\n        isButtonVisible: false,\r\n        isImageVisible: false,\r\n        isLinkVisible: false,\r\n        isInputVisible: false,\r\n        correctNameVisible: false,\r\n        search: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  voiceWord = () =>{\r\n    speech.say(this.state.currentWord.name);\r\n  }  \r\n\r\n  showImage = () => {\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />\r\n            </div>  \r\n              <Card.Content>\r\n                <Card.Header>Аудирование</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group>:\r\n          null\r\n        }\r\n         {this.state.isCardVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"audio-header-wrapper\" >\r\n             <Card className=\"audio-training\"  >\r\n                <Card.Content>\r\n                  <Card.Header className=\"audio-header\">\r\n                    <Button onClick={this.voiceWord} primary className=\"audio-button\"><Icon size=\"big\" name=\"microphone\"></Icon></Button>\r\n                    {this.state.isInputVisible ?\r\n                      <Input placeholder=\"Введите прослушанное слово\" id=\"audo-input\" onChange={this.updateSearch}/>:null\r\n\r\n                    } \r\n                  </Card.Header>\r\n                  {this.state.isTranslationVisible ? \r\n                    <Fragment>\r\n                    {this.state.correctNameVisible ? <Card.Meta className={this.state.correctNameClass}>{this.state.currentWord.name}</Card.Meta>: null }\r\n                      <Card.Meta className={this.state.nameClass}>{this.state.tempSearch}</Card.Meta>\r\n                      <Card.Meta className={this.state.metaClass}>{this.state.currentWord.translation}</Card.Meta>\r\n                      <Card.Description className=\"audio-description\">{}</Card.Description>                  \r\n                    </Fragment>:null\r\n                  }\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className=\"audio-image-outer-wrapper\">\r\n                  {this.state.isImageVisible ?\r\n                   <div className=\"audio-image-wrapper\">\r\n                     <Image src={this.state.currentWord.image} />\r\n                   </div> :null\r\n                 }\r\n                 {this.state.isLinkVisible ?\r\n                   <div className=\"audio-image-text\">\r\n                       <span onClick={this.showImage}>Show hint</span>\r\n                   </div> : null\r\n                  }                 \r\n                </div>\r\n                  <Button.Group className=\"audio-buttons-wrapper\">\r\n                  {this.state.showNavButtons ?\r\n                  <Fragment>\r\n                    <Button onClick={this.positiveResponse} primary>Проверить</Button>\r\n                  </Fragment>:null\r\n                  }  \r\n                  {this.state.showContinueButton ?\r\n                    <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n\r\n                  }\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group> :\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          </div>\r\n          <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Audio);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EnglishToRussian extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      currentWord: '',\r\n      flagState: false,\r\n      result: [],\r\n      disabled: false        \r\n    }, () => { this.initialLoad() })\r\n  }\r\n\r\n    initialLoad = () => {\r\n      axios.get('./working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              let el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if (id < result.length) {\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({\r\n            id,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            currentWord,\r\n            disabled: false\r\n          })\r\n        }  \r\n\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let exercise = {}, wordsTrained = [];\r\n        exercise.id = uuidv4();\r\n        exercise.date = new Date();\r\n        exercise.score = this.state.positiveWords.length;\r\n        for (var i = 0; i < words.length; i++) {\r\n          wordsTrained.push(words[i].id)\r\n        }\r\n        exercise.wordsTrained = wordsTrained;\r\n        this.props.actions.updateEngToRus(exercise);\r\n        this.props.actions.updateExerciseComplete(1);\r\n        this.props.actions.updateTotalScore(exercise.score);\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          search: ''\r\n        })\r\n      } \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      speech.say(this.state.currentName);\r\n   }  \r\n\r\n   showImage = ()=>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  } \r\n\r\n   dontKnow = () =>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true\r\n    })\r\n   }\r\n\r\n      render() {\r\n        return (\r\n          <Fragment>\r\n            <div className=\"content-wrapper\">\r\n            <TopMenu/>\r\n             {this.state.isButtonVisible ?\r\n              <Card.Group className=\"card-header-wrapper\">\r\n                <Card>\r\n                <div className=\"training-wrapper-image\">\r\n                  <Image src='training/englishtorussian.jpg' />\r\n                </div>  \r\n                  <Card.Content>\r\n                    <Card.Header>Перевод</Card.Header>\r\n                    <Card.Description>\r\n                      <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>          \r\n              </Card.Group> : null }\r\n           {this.state.isCardVisible ?\r\n           \t<Container className=\"list-container\">\r\n           \t\t<Card className=\"training-card\">\r\n    \t       \t\t<Label>\r\n                  {this.state.currentWord.name}\r\n                    <span className=\"training-card__icon\" onClick={this.voiceWord} title=\"Прослушать\">\r\n                      <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n                    </span>\r\n                </Label>\r\n    \t       \t\t<Container className=\"list-inner-wrapper\">\r\n    \t\t\t        <List className=\"training-list\">\r\n    \t\t\t        {this.state.result[this.state.id].map((word, index) =>\r\n    \t\t\t            <List.Item key={index} className=\"training-list-item\">\r\n    \t\t\t              <List.Content>\r\n    \t\t\t                <List.Header as='a'>\r\n                            <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.translation}</Button>\r\n                          </List.Header>\r\n    \t\t\t              </List.Content>\r\n    \t\t\t            </List.Item>\r\n    \t\t\t        )}\r\n                    <List.Item className=\"training-list-item\">\r\n                      <List.Content>\r\n                        <List.Header as='a'>\r\n                          <Button onClick={this.dontKnow} className=\"help\" >Не знаю</Button>\r\n                        </List.Header>\r\n                      </List.Content>\r\n                    </List.Item>              \r\n    \t\t\t        </List>\r\n                  {this.state.isImageVisible ?\r\n                    <div className=\"training-right-wrapper\">\r\n                      <div className=\"training-image-wrapper\">\r\n                        <Image src={this.state.currentWord.image} className=\"training-image\">\r\n                        </Image>                \r\n                      </div>\r\n                    {this.state.flagState && this.state.isImageVisible ?\r\n                      <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n                    }                                     \r\n                    </div>: null               \r\n                   }\r\n    \t       \t\t</Container>\r\n           \t\t</Card>\r\n          \t</Container> :\r\n               null\r\n            }\r\n            {this.state.isFinalVisible ?\r\n             <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n                 <Card className=\"card-training\" >\r\n                    <Card.Content>\r\n                      <Card.Header>Результаты</Card.Header>\r\n                      <Divider/>\r\n                      <Card.Description className=\"audio-list-container\"> \r\n                      {(this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                       <Message>\r\n                          <Message.Header>Поздравляем!</Message.Header>\r\n                          <p>\r\n                            Все задания выполнены правильно\r\n                          </p>\r\n                       </Message> \r\n                      }\r\n                      </Card.Description>\r\n                      <Card.Description className=\"results-wrapper\">\r\n                        <div className=\"positive-results-wrapper\"> \r\n                          <div className=\"positive-results\">\r\n                            {this.state.positiveWords.length}\r\n                          </div>\r\n                          <Label>Верно</Label>                    \r\n                        </div>\r\n                        <div className=\"negative-results-wrapper\"> \r\n                          <div className=\"negative-results\">\r\n                            {this.state.result.length - this.state.positiveWords.length}\r\n                          </div> \r\n                          <Label>Неверно</Label>                   \r\n                        </div>\r\n                      </Card.Description>\r\n                      <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                      </Button.Group>\r\n                    </Card.Content>\r\n                  </Card>          \r\n            </Card.Group>                \r\n               : null\r\n            }\r\n            </div>\r\n            <footer></footer>\r\n        </Fragment>\r\n    \t);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnglishToRussian);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RussianToEnglish extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n    this.state = {\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n  this.setStateOnStart()\r\n}\r\n\r\nsetStateOnStart = () => {\r\n  this.setState({\r\n    words: [],\r\n    negativeWords: [],\r\n    positiveWords: [],\r\n    id: 0,\r\n    isCardVisible: false,\r\n    isButtonVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: true,\r\n    showContinueButton: false,\r\n    isFinalVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: true,\r\n    isInputVisible: true,\r\n    search: '',\r\n    currentWord: '',\r\n    flagState: false,\r\n    result: [],\r\n    disabled: false    \r\n  }, () => this.initialLoad())\r\n}\r\n\r\n  initialLoad = () => {\r\n    axios.get('./working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = [];\r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            let el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          result });\r\n      })\r\n  }\r\n\r\n\r\nstartTraining = () =>{\r\n  this.setState({\r\n    isButtonVisible: false,\r\n    isCardVisible: true\r\n  })\r\n}\r\n\r\ncontinueTraining = () =>{\r\n  let id = this.state.id;\r\n  id = id + 1;\r\n  const result = this.state.result;\r\n  if(id < result.length) {\r\n    const currentWord =  result[id][Math.floor(Math.random() * result[id].length)];\r\n    this.setState({\r\n      id,\r\n      currentWord, \r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      disabled: false\r\n    })\r\n  } \r\n\r\n  else {\r\n    let words = this.state.positiveWords.slice();\r\n    let exercise = {}, wordsTrained = [];\r\n    exercise.id = uuidv4();\r\n    exercise.date = new Date();\r\n    exercise.score = this.state.positiveWords.length;\r\n    for (var i = 0; i < words.length; i++) {\r\n      wordsTrained.push(words[i].id)\r\n    }\r\n    exercise.wordsTrained = wordsTrained;\r\n    \r\n    this.props.actions.updateRusToEng(exercise);\r\n    this.props.actions.updateExerciseComplete(1);\r\n    this.props.actions.updateTotalScore(exercise.score);\r\n    this.setState({\r\n        isFinalVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: false,\r\n        showContinueButton: false, \r\n        isCardVisible: false,\r\n        isButtonVisible: false,\r\n        isImageVisible: false,\r\n        isLinkVisible: false,\r\n        isInputVisible: false,\r\n        search: ''\r\n    })\r\n  }  \r\n}\r\n\r\nvoiceWord = () =>{\r\n  speech.say(this.state.currentName);\r\n}  \r\n\r\nshowImage = ()=>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    isLinkVisible: false\r\n  })\r\n}\r\n\r\n compareWord = (id) =>{\r\n  let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n  let positiveWords = this.state.positiveWords.slice();\r\n  let negativeWords = this.state.negativeWords.slice();    \r\n  if(this.state.currentWord.id === selectedWord.id){\r\n    positiveWords.push(this.state.currentWord);\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true,\r\n      positiveWords,\r\n      negativeWords,\r\n      disabled: true\r\n    })\r\n  }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  }\r\n\r\n\r\ndontKnow = () =>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    flagState: true\r\n  })\r\n}\r\n\r\nvoiceWord = () =>{\r\n  speech.say(this.state.currentWord.name);\r\n} \r\n\r\nrender() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n          {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n            <Image src='training/russiantoenglish.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n            <Card.Header>Перевод</Card.Header>\r\n            <Card.Description>\r\n            <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n            </Card.Description>\r\n            </Card.Content>\r\n            </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n          {this.state.isCardVisible ?\r\n            <Container className=\"list-container\">\r\n            <Card className=\"training-card\">\r\n            <Label>\r\n            {this.state.currentWord.translation}\r\n            <span onClick={this.voiceWord} className=\"training-card__icon\">\r\n            <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n            </span>\r\n            </Label>\r\n            <Container className=\"list-inner-wrapper\">\r\n            <List className=\"training-list\">\r\n            {this.state.result[this.state.id].map((word, index) =>\r\n             <List.Item key={index} className=\"training-list-item\">\r\n             <List.Content>\r\n             <List.Header as='a'>\r\n             <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.name}</Button>\r\n             </List.Header>\r\n             </List.Content>\r\n             </List.Item>\r\n             )}\r\n            <List.Item className=\"training-list-item \">\r\n            <List.Content>\r\n            <List.Header as='a'>\r\n            <Button className=\"dont-know\" onClick={this.dontKnow} >Не знаю</Button>\r\n            </List.Header>\r\n            </List.Content>\r\n            </List.Item>              \r\n            </List>\r\n            {this.state.isImageVisible ?\r\n              <div className=\"training-right-wrapper\">\r\n              <div className=\"training-image-wrapper\">\r\n              <Image src={this.state.currentWord.image} className=\"training-image\">\r\n              </Image>                \r\n              </div>\r\n              {this.state.flagState ?\r\n                <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>: null\r\n              }                                     \r\n              </div>: null               \r\n            }\r\n            </Container>\r\n            </Card>\r\n            </Container> :\r\n            null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n           <Card className=\"card-training\" >\r\n           <Card.Content>\r\n           <Card.Header>Результаты</Card.Header>\r\n           <Divider/>\r\n           <Card.Description className=\"audio-list-container\"> \r\n           {  (this.state.negativeWords.length !== 0 ) ?\r\n            <List className=\"audio-list\">\r\n            {this.state.negativeWords.map((item, index) => \r\n              <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n              )}\r\n            </List>: \r\n            <Message>\r\n            <Message.Header>Поздравляем!</Message.Header>\r\n            <p>\r\n            Все задания выполнены правильно\r\n            </p>\r\n            </Message> \r\n          }\r\n        </Card.Description>\r\n    <Card.Description className=\"results-wrapper\">\r\n    <div className=\"positive-results-wrapper\"> \r\n    <div className=\"positive-results\">\r\n    {this.state.positiveWords.length}\r\n    </div>\r\n    <Label>Верно</Label>                    \r\n    </div>\r\n    <div className=\"negative-results-wrapper\"> \r\n    <div className=\"negative-results\">\r\n    {this.state.result.length - this.state.positiveWords.length}\r\n    </div> \r\n    <Label>Неверно</Label>                   \r\n    </div>\r\n    </Card.Description>\r\n    <Button.Group className=\"card-buttons-wrapper\">\r\n    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n    </Button.Group>\r\n    </Card.Content>\r\n    </Card>          \r\n    </Card.Group>          \r\n    : null\r\n  }\r\n  </div>\r\n  <footer></footer>\r\n  </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RussianToEnglish);","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button,Card,Image} from 'semantic-ui-react';\r\n\r\nclass Videos extends Component {\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      videos: [],\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      channelId: null,\r\n      image: '',\r\n      link: '',\r\n      visible: 8\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('./videos.json')\r\n        .then(res => {\r\n          const videos = res.data;\r\n          const name = videos[id].name;\r\n          const description = videos[id].description;\r\n          const channelId = videos[id].channelId;\r\n          const image = videos[id].image;\r\n          const link = videos[id].link;\r\n           this.setState({ \r\n            videos, \r\n            name, \r\n            description, \r\n            channelId, \r\n            image,\r\n            link });\r\n        })\r\n    }\r\n\r\n    cons = () =>{\r\n      console.log (this.state);\r\n    }\r\n\r\n    loadMore = () => {\r\n      this.setState((prev) => {\r\n        return {visible: prev.visible + 8};\r\n      });\r\n    }    \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Button onClick={this.cons} >console</Button>\r\n          <Card.Group itemsPerRow={4} className=\"videos-container\">\r\n            {this.state.videos.slice(0,this.state.visible).map((video,index) =>\r\n              <Card key={index}>\r\n                <Image src={video.image} />\r\n                <Card.Content className=\"video-wrapper\">\r\n                  <Card.Header>{video.name}</Card.Header>\r\n                  <Card.Description>{video.description}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra className=\"video-extra\">\r\n                  <Link to={{ pathname: `/videos/${video.id}`,  query: { video } }}>{video.name}</Link>\r\n                </Card.Content>\r\n              </Card> \r\n            )}                                                                           \r\n          </Card.Group>\r\n          {this.state.visible < this.state.videos.length &&\r\n            <div className=\"videos-load\">\r\n              <Button primary onClick={this.loadMore}>Load more</Button>\r\n            </div> \r\n          }         \r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n    );\r\n  } \r\n\r\n\r\n}\r\n\r\nexport default Videos;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass FillTheGaps extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isMenuVisible: true,\r\n      isCheckButtonVisible: false,\r\n      isResultVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      currentTempArray: [],\r\n      currentStringArray: [],\r\n      currentRandomWord: '',\r\n      currentFinalArray: [],\r\n      currentRandomArray: [],\r\n      currentOneArray: [],\r\n      activeInput: 0,\r\n      activeArray: [],\r\n      sortedRandomArray: [],\r\n      comparativeRandomArray: [],\r\n      fragmentArrayIndexes: [],\r\n      rightAnswers: 0      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('./texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.setMenuParams());\r\n      })\r\n  }\r\n\r\n  setMenuParams = () =>{\r\n    let options = [];\r\n    this.state.texts.map((item, i) =>\r\n                  options.push({ \r\n                      key: item.id, \r\n                      text: item.difficulty, \r\n                      value: item.difficulty \r\n                   }))\r\n    this.setState({\r\n      options\r\n    }, () => this.getUnique())\r\n  } \r\n\r\n  getUnique = () => {\r\n    let options = this.state.options.slice();\r\n    let comp = 'text';\r\n    const unique = options\r\n      .map(e => e[comp])\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n      .filter(e => options[e]).map(e => options[e]);\r\n    this.setState({ options: unique })    \r\n  }  \r\n\r\n  selectValue = () => {\r\n    let categoryValue = this.state.value;\r\n    this.setState({\r\n      categoryValue\r\n    })\r\n  }\r\n\r\n  handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue() )         \r\n\r\n  startExercise = (id) =>{\r\n    let texts = this.state.texts.slice();\r\n    let title = texts[id].title;\r\n    let content = texts[id].content;\r\n    let image = texts[id].image\r\n    this.setState({\r\n      areTextsVisible: false,\r\n      isSingleTextVisible: true,\r\n      isMenuVisible: false,\r\n      title,\r\n      content,\r\n      image\r\n    }, () => this.builtArray())\r\n  }\r\n\r\n  backToTexts = () =>{\r\n    this.setState({\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isMenuVisible: true,\r\n  \t\tcontentArray: [],\r\n  \t\tcurrentTempArray: [],\r\n  \t\tcurrentStringArray: [],\r\n  \t\tcurrentRandomWord: '',\r\n  \t\tcurrentFinalArray: [],\r\n  \t\tcurrentRandomArray: [],\r\n  \t\tcurrentOneArray: [],\r\n  \t\tactiveInput: 0,\r\n  \t\tactiveArray: [],\r\n  \t\tsortedRandomArray: [],\r\n  \t\tcomparativeRandomArray: [],\r\n  \t\tfragmentArrayIndexes: []        \r\n\r\n    })\r\n  }\r\n\r\n  builtArray = () => {\r\n    let currentOneArray = [];\r\n    let activeTargetContent = this.state.content.slice();\r\n    let currentStringArray = activeTargetContent.split(\". \");\r\n    currentStringArray.pop();\r\n    let currentFullArray = [];\r\n    let i;\r\n    for (i = 0; i < currentStringArray.length; i++) {\r\n    \tcurrentFullArray.push(currentStringArray[i].split(\" \"));\r\n    }\r\n    let currentWordArray = currentStringArray[0].split(\" \");\r\n    let currentRandomArray = [];\r\n    let currentRandomIndexes = [];\r\n    for (i = 0; i < currentFullArray.length; i++) {\r\n    \tlet j = Math.floor(Math.random()*currentFullArray[i].length);\r\n    \tcurrentRandomArray.push(currentFullArray[i][j]);\r\n    \tcurrentRandomIndexes.push(j);\r\n    }\r\n    let random = currentWordArray[Math.floor(Math.random()*currentWordArray.length)];\r\n    let currentFinalArray = [];\r\n  \r\n    for (i = 0; i < currentFullArray.length; i++) {\r\n    \tlet curArr = currentFullArray[i];\r\n      \tfor (var j = 0; j < curArr.length; j++) {\r\n          currentOneArray.push(curArr[j]);\r\n\t      \tif (j !== currentRandomIndexes[i] ) {\r\n\t      \t\tcurrentFinalArray.push(<span className=\"fragment-span\">{curArr[j]}</span>)\r\n\t      \t}\r\n\t      \telse {\r\n\t      \t\tcurrentFinalArray.push(<span onClick={this.resetValue} className=\"fragment-input\"></span>)\r\n\t      \t}\r\n      \t}\r\n      \tcurrentFinalArray.push(<span className=\"fragment-dot\">.</span>);\r\n    }\r\n\r\n    this.setState({\r\n    \tcurrentStringArray,\r\n      currentWordArray,\r\n      currentRandomWord: random,\r\n      currentFinalArray,\r\n      currentRandomIndexes,\r\n      currentRandomArray,\r\n      currentFullArray,\r\n      currentOneArray\r\n    }, () => this.shuffleArray())     \r\n  }\r\n\r\n  setValue = (e) => {\r\n    let activeInput = this.state.activeInput;\r\n    let activeArray = [];\r\n    let currentRandomArray = this.state.currentRandomArray.slice();\r\n    let activeTargetTitle = e.target.textContent;\r\n    let fragmentArray = [];\r\n    let fragmentArrayIndexes = [];\r\n    let i;\r\n    let fragmentDescription = document.getElementsByClassName('fragment-description')[0].children;\r\n    for (i = 0; i < fragmentDescription.length; i++) {\r\n    \tif(fragmentDescription[i].className === \"fragment-input\"){\r\n    \t\tfragmentArrayIndexes.push(i);\r\n    \t\tfragmentArray.push(fragmentDescription[i]);\r\n    \t}\r\n    }\r\n    for (i = 0; i < fragmentArrayIndexes.length; i++) {\r\n    \tactiveArray.push(i);\r\n    }\r\n    for (i = 0; i < fragmentDescription.length; i++) {\r\n    \tif( (fragmentDescription[i].className === \"fragment-input\") && (i === fragmentArrayIndexes[activeInput])){\r\n    \t\tfragmentDescription[i].textContent = activeTargetTitle;\r\n    \t}\r\n    }\r\n\t  fragmentArrayIndexes.splice(activeInput, 1);\r\n    let comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    let sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    let target = e.target;\r\n    comparativeRandomArray.push(target.textContent);\r\n    let indexTarget = 0;\r\n    while ( (target = target.previousElementSibling) ) {\r\n      indexTarget++\r\n    }\r\n\r\n    sortedRandomArray.splice(indexTarget, 1);\r\n    if (sortedRandomArray.length === 0) {\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: true\r\n    \t})\r\n    }\r\n\r\n    activeInput++;\r\n    this.setState({\r\n\t\t\tactiveInput,\r\n\t\t\tactiveArray,\r\n\t\t\tfragmentArrayIndexes,\r\n\t\t\tcurrentRandomArray,\r\n\t\t\tcomparativeRandomArray,\r\n\t\t\tsortedRandomArray\r\n    })    \r\n  }\r\n\r\n\tshuffleArray = () => {\r\n\t\tlet array = this.state.currentRandomArray.slice();\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t    this.setState({\r\n        \tsortedRandomArray: array\t    \t\r\n\t    })\r\n\t}\r\n\r\n  resetValue = (e) =>{\r\n    let sortedRandomArray = this.state.sortedRandomArray.slice(); \r\n    let element = e.target;\r\n    if (e.target.textContent !== \"\") {\r\n  \t  sortedRandomArray.push(e.target.textContent);\r\n  \t  element.innerText = \"\";\r\n      this.setState({\r\n      \tsortedRandomArray: sortedRandomArray\r\n      })\r\n      /*\r\n      let indexTarget = 0;\r\n      while ( (element = element.previousElementSibling) ) {\r\n        indexTarget++\r\n      } */\r\n    }\r\n  }\r\n\r\n  submitText = (e) =>{\r\n  \tlet comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n  \tlet currentSortedArray = this.state.currentRandomArray.slice();\r\n  \tlet sortedRandomArray = this.state.sortedRandomArray.slice();\r\n  \tlet count = 0;\r\n  \tfor (var i = 0; i < currentSortedArray.length; i++) {\r\n  \t\tif (currentSortedArray[i] === comparativeRandomArray[i]) {\r\n  \t\t\tcount++;\r\n  \t\t}\r\n  \t\telse {\r\n  \t\t\tsortedRandomArray.push(comparativeRandomArray[i])\r\n  \t\t}\r\n  \t\t\r\n  \t}\r\n  \tlet rightAnswers = count;\r\n\r\n    let exercise = {};\r\n    exercise.id = uuidv4();\r\n    exercise.date = new Date();\r\n    exercise.score = count;\r\n    this.props.actions.updateFillTheGaps(exercise);\r\n    this.props.actions.updateExerciseComplete(1);\r\n    this.props.actions.updateTotalScore(count);\r\n  \tthis.setState({\r\n  \t\tisCheckButtonVisible: false,\r\n  \t\tisResultVisible: true,\r\n  \t\tisSingleTextVisible: false,\r\n  \t\trightAnswers,\r\n  \t\tsortedRandomArray\r\n  \t})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible && this.state.texts.length ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n            {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.startExercise.bind(this, item.id)}>Открыть</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                \t<div className=\"fragments-close\">\r\n                \t\t<span onClick={this.backToTexts} title = \"Закончить выполнение\">\r\n                \t\t\t<Icon name='close' size='big' />\r\n                \t\t</span>\r\n                \t</div>\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t{this.state.currentFinalArray}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n             \t<div className=\"fragment-variants\">\r\n            \t\t{this.state.sortedRandomArray.map((item, index) =>\r\n            \t\t\t<span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n            \t\t)}\r\n\t            \t{this.state.isCheckButtonVisible ? \r\n\t            \t\t<Button onClick={this.submitText} >Проверить</Button> :null\r\n\t            \t}             \t\t\r\n            \t</div>\r\n                </Card>:null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t<h2>Вы расставили правильно {this.state.rightAnswers} из {this.state.currentRandomArray.length} слов </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary ><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FillTheGaps);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RecreateText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      categoryValue: ''\r\n\t\t}\r\n\t}\r\n\r\n  initialLoad = () => {\r\n    axios.get('./texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.makeTextsVisible());\r\n      })\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '3',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();   \r\n  }   \r\n\r\n  readMore = (id) =>{\r\n    let texts = this.state.texts.slice();\r\n\r\n    let title = texts[id].title;\r\n    let content = texts[id].content;\r\n    let image = texts[id].image\r\n    this.setState({\r\n      areTextsVisible: false,\r\n      isSingleTextVisible: true,\r\n      isMenuVisible: false,\r\n      title,\r\n      content,\r\n      image\r\n    })      \r\n  }\r\n\r\n  makeTextsVisible = () =>{\r\n    this.setState({\r\n      areTextsVisible: true        \r\n    }, () => this.createMenuItems());\r\n  }\r\n\r\n  backToTexts = () =>{\r\n    this.setState({\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isMenuVisible: true,\r\n      contentArray: [],\r\n      currentTempArray: [],\r\n      currentStringArray: [],\r\n      currentRandomWord: '',\r\n      currentFinalArray: [],\r\n      currentRandomArray: [],\r\n      currentOneArray: [],\r\n      activeInput: 0,\r\n      activeArray: [],\r\n      sortedRandomArray: [],\r\n      comparativeRandomArray: [],\r\n      fragmentArrayIndexes: [],\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    })\r\n  }\r\n\r\n  splitText = () =>{\r\n    let wrongIndexes = [];\r\n    let content = this.state.content;\r\n    let currentStringArray = content.split(\". \");\r\n    currentStringArray.pop();\r\n    let reservedSentences = content.split(\". \");\r\n    reservedSentences.pop();   \r\n    for (var i = 0; i < currentStringArray.length; i++) {\r\n         wrongIndexes.push(\"recreate-text-right\");\r\n    }   \r\n    for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n    }             \r\n    this.setState({\r\n      isSingleTextVisible: false,\r\n      splittedSentenceVisible: true,\r\n      spllittedSentences: currentStringArray,\r\n      reservedSentences,\r\n      wrongIndexes\r\n\r\n    }, () => this.startCountDown())\r\n  }  \r\n\r\n  handleChange = (event) => {\r\n   this.setState({\r\n     minutes: event.target.value\r\n   })\r\n  }  \r\n\r\n  tick = () => {\r\n      var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n      var seconds = this.state.secondsRemaining - (minutes * 60);\r\n      this.setState({\r\n        minutes,\r\n        seconds\r\n      })\r\n      if (seconds < 10) {\r\n        this.setState({\r\n          seconds: \"0\" + this.state.seconds,\r\n        })\r\n      }\r\n      if (minutes < 10) {\r\n        this.setState({\r\n          value: \"0\" + minutes,\r\n         })\r\n      }\r\n      if (minutes === 0 & seconds === 0) {\r\n        let time = this.state.totalSecondsSpent;\r\n        let minutesSpent = Math.floor(time / 60);\r\n        let secondsSpent = this.state.totalSecondsSpent - (minutes * 60);\r\n        clearInterval(this.state.intervalHandle);\r\n        this.timeIsOut();\r\n        this.setState({\r\n          minutesSpent,\r\n          secondsSpent\r\n        })\r\n\r\n      }\r\n      this.state.secondsRemaining--;\r\n      this.state.totalSecondsSpent++; \r\n    }\r\n\r\n  startCountDown = () => {\r\n      this.state.intervalHandle = setInterval(this.tick, 1000);\r\n      let time = this.state.minutes;\r\n      this.state.secondsRemaining = time * 60;\r\n  }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.spllittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.spllittedSentences[index];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = this.state.spllittedSentences.filter(item => item !== this.draggedItem);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ spllittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.spllittedSentences;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n      }\r\n    }\r\n    if(wrongCount === 0){\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =()=>{\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n      let exercise = {};\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.rightAnswers;\r\n      this.props.actions.updateRecreateTxt(exercise);\r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(this.state.rightAnswers);      \r\n      clearInterval(this.state.intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent       \r\n      })\r\n  }\r\n\r\n    createMenuItems = () =>{\r\n      let options = [];\r\n      this.state.texts.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    menuChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.menuChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null\r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.splitText}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.spllittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <h2>Время вышло</h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecreateText);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport { Howl } from \"howler\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RecreateAudioText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t      texts: [],\r\n\t      contentArray: [],\r\n\t      areTextsVisible: false,\r\n\t      isMenuVisible: false,\r\n\t      isSingleTextVisible: false,\r\n        options: [],\r\n        categoryValue: '',\r\n\t      isResultVisible: false,\r\n\t      isResultWrong: false,\r\n        title: '',\r\n\t      content: '',\r\n\t      image: null,\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '5',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('./audiotexts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        this.setState({ \r\n          texts,\r\n          areTextsVisible: true         \r\n        }, () => this.createMenuItems());\r\n      })        \r\n  }   \r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n    createTrack = (id) => {\r\n      axios\r\n        .get(\"./tracks.json\")\r\n        .then((res) => {\r\n          let currentTrack = new Howl({\r\n            src: \"tracks/\" + res.data.slice(id - 1, id),\r\n            html5: true,\r\n            volume: 0.5 / 10\r\n          });\r\n          this.setState({\r\n            currentTrack,\r\n            audio: res.data\r\n          }) \r\n        });    \r\n    }\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id - 1].title;\r\n      let content = texts[id - 1].content;\r\n      let image = texts[id - 1].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.createTrack(id))       \r\n    }\r\n\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        categoryValue: '',\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0,\r\n        value: null        \r\n      })\r\n    }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,    \r\n      }) \r\n  }\r\n\r\n  playText = () => {\r\n    let playing = !this.state.playing;\r\n    let currentTrack = this.state.currentTrack;\r\n    if (playing) {\r\n      currentTrack.play();\r\n    } else {\r\n      currentTrack.pause();\r\n    }\r\n    this.setState({\r\n      playing,\r\n      currentTrack\r\n    })\r\n  }\r\n\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        splittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n          let intervalHandle = this.state.intervalHandle;\r\n          clearInterval(intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent,\r\n            intervalHandle\r\n          })\r\n        }\r\n        this.setState({\r\n          secondsRemaining: this.state.secondsRemaining - 1,\r\n          totalSecondsSpent: this.state.totalSecondsSpent + 1\r\n        })\r\n \r\n    }\r\n    startCountDown = () => {\r\n        let intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.setState({\r\n          intervalHandle,\r\n          secondsRemaining: time * 60\r\n        })\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.splittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.splittedSentences[index];\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n    let items = this.state.splittedSentences.filter(item => item !== this.draggedItem);\r\n    items.splice(index, 0, this.draggedItem);\r\n    this.setState({ splittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.splittedSentences;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let rightAnswers = 0;\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n        rightAnswers++;\r\n      }\r\n    }\r\n    if (wrongCount === 0) {\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes,\r\n      rightAnswers\r\n    })\r\n  }\r\n\r\n\r\n  timeIsOut =() => {\r\n    this.checkSentences();\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n    let intervalHandle = this.state.intervalHandle;\r\n    let time = this.state.totalSecondsSpent;\r\n    let minutesSpent = Math.floor(time / 60);\r\n    let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n    let exercise = {};\r\n    exercise.id = uuidv4();\r\n    exercise.date = new Date();\r\n    exercise.score = this.state.rightAnswers;\r\n    this.props.actions.updateRecreateAudioTxt(exercise);\r\n    this.props.actions.updateExerciseComplete(1);\r\n    this.props.actions.updateTotalScore(this.state.rightAnswers);\r\n    clearInterval(intervalHandle);\r\n    this.setState({\r\n      isResultVisible: true,\r\n      splittedSentenceVisible: false,\r\n      minutesSpent,\r\n      secondsSpent,\r\n      intervalHandle        \r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }         \r\n              {(this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text display-none\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    {this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"pause\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    {!this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"play\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    <div className=\"buttons-wrapper\">\r\n\t                    <Button primary onClick={this.splitText}>Я прослушал</Button>\r\n           \t\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.splittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <div>\r\n                        <h2>Время вышло</h2>\r\n                        <h2>Правильно расставлено {this.state.rightAnswers} из {this.state.splittedSentences.length} предложений</h2> \r\n                      </div>                      \r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecreateAudioText);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Input, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass InsertSpaces extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      inputContent: '',\r\n      textContent: '',\r\n      newContent: '',\r\n      image: null,\r\n      options: [],\r\n      textsLoaded: false,\r\n      categoryValue: ''\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('./texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n      }) \r\n  }\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let inputContent = texts[id].content;\r\n      inputContent = inputContent.replace(/\\s/g, '');\r\n      let image = texts[id].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image,\r\n        inputContent\r\n      })      \r\n    }\r\n\r\n\r\n  showFinal = () =>{\r\n    this.setState({\r\n      isResultVisible: true,\r\n      isTaskStarted: false   \r\n    })\r\n  }\r\n\r\nsetCaretPosition = (ctrl, pos) => {\r\n  if (ctrl.setSelectionRange) {\r\n    ctrl.focus();\r\n    ctrl.setSelectionRange(pos, pos);\r\n\r\n  } else if (ctrl.createTextRange) {\r\n    var range = ctrl.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n}\r\n\r\n  updateValue = (event) =>{\r\n  \tlet newContent = this.state.newContent;\r\n  \tlet target = event.target;\r\n    let indexOfSpace = event.target.value.indexOf(\" \") + 1;\r\n    let word = event.target.value.substr(0, indexOfSpace - 1);\r\n    let newstr = event.target.value.substring(indexOfSpace);\r\n    newContent = newContent + (word + ' ');\r\n      this.setState({\r\n      \tnewContent,\r\n        inputContent: newstr\r\n      }, () => this.setCaretPosition(target, 0));\r\n  }\r\n\r\n  startExercise = () => {\r\n    this.setState({\r\n      isTaskStarted: true,\r\n      isSingleTextVisible: false\r\n    })\r\n  }\r\n\r\n  createMenuItems = () =>{\r\n    let options = [];\r\n    this.state.texts.map((item, i) =>\r\n                  options.push({ \r\n                      key: item.id, \r\n                      text: item.difficulty, \r\n                      value: item.difficulty \r\n                   }))\r\n    this.setState({\r\n      options\r\n    }, () => this.getUnique())\r\n  } \r\n\r\n  getUnique = () => {\r\n    var arr = this.state.options;\r\n    var comp = 'text';\r\n    const unique = arr\r\n      .map(e => e[comp])\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n      .filter(e => arr[e]).map(e => arr[e]);\r\n    this.setState({\r\n      options: unique\r\n    })    \r\n  }  \r\n\r\n  selectCategory = () =>{\r\n    var categoryValue = this.state.value;\r\n    this.setState({\r\n      categoryValue\r\n    })\r\n  }\r\n\r\n  handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.startExercise}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }             \r\n             {this.state.isTaskStarted ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <p className=\"single-text-card-description p-wrap fragment-description recreate-text inserted-text\">\r\n                      { this.state.newContent}\r\n                    </p>\r\n                    <Input className=\"insert-spaces-input\" value={this.state.inputContent} onChange={this.updateValue} />\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.showFinal}>Проверить</Button>\r\n                      </Button.Group>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <div className=\"recreate-results\">\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Исходный текст</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.content}</p>\r\n                      </div>\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Результат</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.newContent}</p>\r\n                      </div>                      \r\n                    </div>                                     \r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }    \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InsertSpaces);","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image, Icon, Input} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass SelectedVideo extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.state = {\r\n      videos: [],\r\n      loaded: false,\r\n      items: [],\r\n      currentComment: '',\r\n      likes: 0,\r\n      dislikes: 0,\r\n      maxResults: 120,\r\n      visible: 20,\r\n      comments: [\r\n        {\r\n          author: 'new2341',\r\n          comment: 'Just a typical comment'\r\n        },\r\n        {\r\n          author: 'cauthor',\r\n          comment: 'nice! liked it'\r\n        }\r\n      ]\r\n    }\r\n\t}\r\n\r\n  componentDidMount(){\r\n    let selectedVideo;\r\n    axios.get('./videos.json')\r\n      .then(res => {\r\n        let channels = res.data;\r\n        selectedVideo = channels.find(x => x.id === this.props.match.params.id);\r\n        this.setState({ selectedVideo }, () => this.getItems())\r\n    })\r\n  }\r\n  \r\n  getItems = () => {\r\n    let API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    let url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      this.state.selectedVideo.channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      this.state.maxResults; \r\n      axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos,\r\n            items: videos.items\r\n        })\r\n      })                 \r\n    }\r\n\r\n  updateSearch = (event) =>{\r\n    this.setState({currentComment: event.target.value.substr(0,200)});\r\n  }   \r\n\r\n  addComment = () =>{\r\n    let comments = this.state.comments.slice();\r\n    let currentComment = this.state.currentComment;\r\n    let temp = {};\r\n    temp['author'] = 'blabla';\r\n    temp['comment'] = currentComment;\r\n    comments.unshift(temp);\r\n    this.setState({\r\n      comments: comments,\r\n      currentComment: ''\r\n    })\r\n  }\r\n\r\n  thumbsUp = () => {\r\n    let count = this.state.likes;\r\n    count++;\r\n    this.setState({\r\n      likes: count\r\n    })\r\n  }\r\n\r\n  thumbsDown = () => {\r\n    let count = this.state.dislikes;\r\n    count++;\r\n    this.setState({\r\n      dislikes: count\r\n    })\r\n  }\r\n\r\n  loadMore = () => {\r\n    this.setState((prev) => {\r\n      return {visible: prev.visible + 20};\r\n    });\r\n  }      \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)  ?\r\n          <>\r\n            <Card.Group itemsPerRow = {4} className=\"single-video-wrapper\">\r\n              {this.state.items.slice(0, this.state.visible).map((item, index) => \r\n                <Card key={index} className=\"video-item\">\r\n                  <Modal className=\"video-modal\" closeIcon trigger={<div className=\"video-modal__overlay\"></div>}>\r\n                    <Embed autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                    <Modal.Header className=\"video-header-wrapper\">\r\n                      <div className=\"video-header\">{item.snippet.title}</div> \r\n                      <div className=\"video-likes\">\r\n                        <div className=\"video-likes-item first\">\r\n                          <span className=\"video-likes-icon\" onClick={this.thumbsUp}>\r\n                            <Icon name='thumbs up outline' size='large' />\r\n                          </span>\r\n                          <span>{this.state.likes}</span>\r\n                        </div>\r\n                        <div className=\"video-likes-item second\">\r\n                          <span className=\"video-likes-icon\" onClick={this.thumbsDown}>\r\n                            <Icon name='thumbs down outline' size='large' />\r\n                          </span>\r\n                          <span>{this.state.dislikes}</span>\r\n                        </div>\r\n                      </div> \r\n                    </Modal.Header>\r\n                    <Modal.Content>\r\n                      <Modal.Description>\r\n                        <p>{item.snippet.description}</p>\r\n                      </Modal.Description>\r\n                      <div className=\"comment-section\">\r\n                        <div className=\"comment-section-input\">\r\n                          <Input placeholder='type...' value={this.state.currentComment} onChange={this.updateSearch} /><Button onClick={this.addComment}>Отправить</Button>\r\n                        </div>\r\n                        <div className=\"comment-section-comments\">\r\n                            {this.state.comments.map((item, index) =>\r\n                              <div className=\"single-comment\" key={index}>\r\n                                <h4>{item.author}</h4>\r\n                                <p>{item.comment}</p>                              \r\n                              </div>\r\n                             )}\r\n                        </div>\r\n                      </div>\r\n                    </Modal.Content>\r\n                  </Modal>              \r\n                  <div className=\"single-video-wrapper-image\">\r\n                    <h4>{item.snippet.title}</h4>                 \r\n                    <Image src={item.snippet.thumbnails.high.url} />\r\n                  </div>\r\n                </Card> \r\n                )}\r\n            </Card.Group>\r\n            <div className=\"videos-load\">\r\n              <Button primary onClick = {this.loadMore}>Load more</Button>\r\n            </div>\r\n          </>\r\n          : null\r\n        }\r\n       </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default SelectedVideo;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass TextsList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      textsLoaded: false,\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('./texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content))\r\n        this.setState({ \r\n          texts: texts,\r\n          contentArray: contentArray\r\n        }, () => {\r\n          this.setState({\r\n            textsLoaded: true\r\n          })\r\n          this.createMenuItems()\r\n        });\r\n      })\r\n  }\r\n\r\n  createMenuItems = () =>{\r\n    let newItems = [];\r\n    this.state.texts.map((item, i) =>\r\n                  newItems.push({ \r\n                      key: item.id, \r\n                      text: item.difficulty, \r\n                      value: item.difficulty \r\n                   }))\r\n    this.setState({\r\n      options: newItems\r\n    }, () => this.getUnique())\r\n  } \r\n\r\n  getUnique = () => {\r\n    var arr = this.state.options;\r\n    var comp = 'text';\r\n    const unique = arr\r\n      .map(e => e[comp])\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n      .filter(e => arr[e]).map(e => arr[e]);\r\n    this.setState({\r\n      options: unique\r\n    })    \r\n  }  \r\n\r\n  selectCategory = () =>{\r\n    var categoryValue = this.state.value;\r\n    this.setState({\r\n      categoryValue\r\n    })\r\n  }\r\n\r\n  handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )         \r\n\r\n  readMore = (e) =>{\r\n    let texts = this.state.texts.slice();\r\n    let target = e.target.parentElement;\r\n    var index = 0;\r\n      while ( (target = target.previousElementSibling) ) {\r\n        index++;\r\n    }\r\n    let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n    let activeTargetContent = texts[index].content;\r\n    let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n    this.setState({\r\n      areTextsVisible: false,\r\n      isSingleTextVisible: true,\r\n      title: activeTargetTitle,\r\n      content: activeTargetContent,\r\n      image: activeTargetImage\r\n    })\r\n  }\r\n\r\n  backToTexts = () =>{\r\n    this.setState({\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false        \r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {!this.state.isSingleTextVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }\r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card text-item\">\r\n                  <Card.Content>\r\n                    <Image src={this.state.image} />\r\n                    <Card.Header>{this.state.title}</Card.Header>\r\n                    <Card.Description className=\"single-text-card-description p-wrap\">\r\n                      { /*this.state.content.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase() */ this.state.content}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n                  <Button onClick={this.backToTexts} >Вернуться</Button>\r\n                </Card>:null\r\n              }          \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default TextsList;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n  constructMenu = () =>{\r\n    let options = [];\r\n    this.state.words.map((item, i) =>\r\n                  options.push({ \r\n                      key: item.id, \r\n                      text: item.level, \r\n                      value: item.level\r\n                   }))\r\n    this.setState({\r\n      options\r\n    }, () => this.getUnique())\r\n  } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n      })    \r\n    }  \r\n\r\n    setValue = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.setValue() )  \r\n\r\n    readMore = (id) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let currentColor = colors[Math.floor(Math.random()*colors.length)];\r\n      let activeTargetTitle = this.state.words.find(x => x.id === id).name;\r\n\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(false);          \r\n      \t} \r\n      }\r\n\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords,\r\n        currentColor,\r\n        arrayOfButtons,\r\n        iconsArray,\r\n        disabled      \t\r\n      })\r\n    }\r\n\r\n\r\n    addToList = (id) =>{\r\n      let addedItems = this.state.addedItems.slice();\r\n      let currentWords = this.state.currentWords.slice();\r\n      let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let iconsArray = this.state.iconsArray.slice();\r\n      let selected = currentWords.find(x => x.id === id);      \r\n      arrayOfButtons[id] = \"Добавлено !\";\r\n      iconsArray[id] = false;\r\n      disabled[id] = \"disabled\";\r\n      addedItems.push(selected);\r\n      this.setState({\r\n      \taddedItems,\r\n      \tarrayOfButtons,\r\n      \ticonsArray,\r\n      \tdisabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      let sortedByNameUp = this.state.sortedByNameUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByNameUp: !sortedByNameUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByTranslationUp: !this.state.sortedByTranslationUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n   \tlet addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    arrayOfButtons[id] = \"Добавить\";    \r\n    iconsArray[id] = true;\r\n    disabled[id] = false;\r\n \t  addedItems.splice(addedItems.findIndex(function(item){\r\n        return item.id === id;\r\n    }), 1);\r\n    this.setState({ addedItems, disabled, iconsArray, arrayOfButtons });\r\n   }\r\n\r\n   deleteAll = () => {\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n    let addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    addedItems = [];\r\n    for (var i = 0; i < disabled.length; i++) {\r\n      disabled[i] = false;\r\n      arrayOfButtons[i] = \"Добавить\";\r\n      iconsArray[i] = true;\r\n    }\r\n    this.setState({ addedItems, arrayOfButtons, iconsArray, disabled  })    \r\n   }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"#3281F0\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      contentLoaded: false      \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    axios.all([axios.get('./decks.json'),\r\n               axios.get('./working.json')])\r\n          .then(axios.spread((firstResponse, secondResponse) => { \r\n          let words = firstResponse.data;\r\n          let allWords = secondResponse.data;\r\n          let contentArray = [];\r\n          this.setState({\r\n            allWords,\r\n            words,\r\n            contentArray,\r\n            contentLoaded: true\r\n          }, () => this.constructMenu());\r\n       }))\r\n   }\t\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.contentLoaded ?\r\n            <div className=\"texts-wrapper\">\r\n              <Menu className=\"texts-menu decks-menu\" vertical>\r\n                {this.state.isDropdownVisible ? \r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item> : null\r\n                }\r\n                <Menu.Item className=\"no-top-padding added-title\" style = {{ backgroundColor: this.state.currentColor}} >\r\n                  {this.state.addedItems.length ? \"Добавленные\" : \"Добавленных пока нет\"}\r\n                </Menu.Item>\r\n                {(this.state.addedItems.length) ? \r\n                <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                  <ul className=\"decks-added-wrapper\">\r\n                    {this.state.addedItems.map((item,index)=> \r\n                      <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                        <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem.bind(this, item.id)} ><Icon name='trash alternate' /></span></li>\r\n                    )}\r\n                  </ul>\r\n                </Menu.Item> : null }\r\n                { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n                <Menu.Item className=\"decks-button-wrapper\" >\r\n                   <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Изучить <Icon name='book' className=\"nav-icon-left\" /> </Button>\r\n                   <Button onClick={this.deleteAll} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Удалить <Icon name='trash alternate' className=\"nav-icon-left\" /> </Button>\r\n                </Menu.Item> : null\r\n                }           \r\n              </Menu>           \r\n                {(this.state.words.length && this.state.areTextsVisible) ? \r\n                <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n                  {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                    <Card key={index} className=\"decks-single-card\">\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"decks-description\">\r\n                              <h2>{item.name}</h2>\r\n                              <h3>{item.number} слов</h3>\r\n                              <Button onClick={this.readMore.bind(this, item.id)} primary className=\"decks-button\" >Открыть</Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  )}\r\n                </Card.Group> : null\r\n               }\r\n               {this.state.isSingleTextVisible ?\r\n                <div className=\"decks-outer-wrapper\">\r\n                <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                  <Menu.Item name='byName'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                      по имени \r\n                      {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item name='byTranslation'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                      по переводу \r\n                      {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item style={{float: \"right\"}} name='close'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.setStateOnStart} title=\"Назад\">\r\n                      <Icon name='window close outline' className=\"nav-icon-left\" size=\"\" /> \r\n                    </Button>\r\n                  </Menu.Item>  \r\n                </Menu>\r\n                  <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                    {this.state.currentWords.map((item, index) => \r\n                      <Card key={index}>\r\n                        <Card.Content>\r\n                          <div className=\"texts-image-wrapper decks-image\">\r\n                            <Image src={item.image} />\r\n                            <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                                <h3>{item.name}</h3>\r\n                                <h4>{item.translation}</h4>\r\n                                <Button className=\"decks-button-add\" onClick={this.addToList.bind(this, item.id)} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                  {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                  } \r\n                                  {this.state.arrayOfButtons[index]}\r\n                                </Button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Card>\r\n                     )}\r\n                  </Card.Group> \r\n                </div> : null}       \r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport { Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      email: \"user1233\",\r\n      password: 69691231,\r\n      colorValue: \"#3281F0\",\r\n      colorOptions: [{ key: 1, value: \"#3281F0\", text: \"#3281F0\"}, { key: 2, value: \"red\", text: \"red\"}]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      \r\n  }   \r\n\r\n  changeColor = (e, { value }) => {\r\n    console.log(e);\r\n    this.setState({ colorValue: value })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"settings-wrapper\">\r\n            <div className=\"settings-container\">\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Цветовая схема</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Громкость звука</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button, Card, Menu, Dropdown, Icon, Rating } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      books: [],\r\n      allBoooks: [],\r\n      options: [],\r\n      currentGenre: '',\r\n      currentLength: '',\r\n      value: null,\r\n      rating: '',\r\n      size: '',      \r\n      areBooksVisible: true,\r\n      isMenuVisible: true,\r\n      isPreviewVisible: false,\r\n      isSingleBookVisible: false,\r\n      isBookNavPanelVisible: false,\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n      description: null,\r\n      image: null,\r\n      currentBook: '',\r\n      currentPage: '',\r\n      currentPageIndex: 0,\r\n      currentArrayBooks: [],\r\n      currentIndexArray: [],\r\n      bookHTML: '',\r\n      parsedBook: null,\r\n      bookPages: [],\r\n      bookValue: null,\r\n      bookVal: '',\r\n      currentComment: '',\r\n      currentName: '',\r\n      currentEmail: '',\r\n      likes: 0,\r\n      errors: {},\r\n      checkedItems: new Map(),\r\n      checked: false,\r\n      audiobooks: [],\r\n      currentAudio: null,\r\n      newAudio: null,\r\n      playState: false,\r\n      currentAudioId: 0,\r\n      scrollForwardState: true,\r\n      scrollBackwardState: false,\r\n      currentVolume: 50,\r\n      currentRange: 0,\r\n      currentDuration: null,\r\n      minutes: 0,\r\n      hours: 0,\r\n      seconds: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('books.json')\r\n      .then(res => {\r\n        let books = res.data;\r\n        this.setState({ \r\n          books, allBooks: res.data\r\n        }, () => this.createMenu() );\r\n      })\r\n    }\r\n\r\n    createMenu = () =>{\r\n\r\n      let options = [], age = [], genres = {}, sizes = [], ageTemp = [], sizesTemp = {}, i;\r\n      for (i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].genre;\r\n        for (var j = 0; j < item.length; j++) {\r\n          if (!genres.hasOwnProperty(item[j])) {\r\n            genres[item[j]] = [];\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          } else {\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const item in genres) {\r\n        options.push({\r\n          key: item,\r\n          text: item,\r\n          value: genres[item]\r\n        })\r\n      }\r\n\r\n      for (i = 0; i < this.state.books.length; i++) {\r\n        if (ageTemp.indexOf(this.state.books[i].age_restriction) === -1) {\r\n          ageTemp.push(this.state.books[i].age_restriction);\r\n        }\r\n      }\r\n\r\n      for (i = 0; i < ageTemp.length; i++) {\r\n        age.push({\r\n          key: ageTemp[i],\r\n          text: ageTemp[i],\r\n          value: ageTemp[i]\r\n        })\r\n      }\r\n\r\n      sizesTemp[\"Менее 10000\"] = [];\r\n      sizesTemp[\"От 10000 до 50000\"] = [];\r\n      sizesTemp[\"Более 50000\"] = [];\r\n\r\n      for (i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].length;\r\n        if (item <= 10000) {\r\n          sizesTemp[\"Менее 10000\"].push(this.state.books[i].id);\r\n        } else if(item > 10000 && item < 50000) {\r\n          sizesTemp[\"От 10000 до 50000\"].push(this.state.books[i].id);\r\n        } else {\r\n          sizesTemp[\"Более 50000\"].push(this.state.books[i].id);\r\n        }\r\n      }\r\n\r\n      for (const item in sizesTemp) {\r\n        sizes.push({\r\n          key: item,\r\n          text: item,\r\n          value: sizesTemp[item]\r\n        })\r\n      }\r\n\r\n      this.setState({\r\n        options, age, sizes\r\n      })\r\n    } \r\n\r\n    selectValue = () =>{\r\n      var bookVal = this.state.bookValue;\r\n      this.setState({\r\n        bookVal\r\n      })  \r\n    }\r\n\r\n    handleGenreChange = (e, { value }) => {\r\n      this.setState({ currentGenre: value })\r\n    }        \r\n\r\n    handleRatingChange = (e, { value }) => {\r\n      this.setState({ rating: value })\r\n    }  \r\n\r\n    handleLengthChange = (e, { value }) => {\r\n      this.setState({ currentLength: value })\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    } \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu></TopMenu>\r\n        <div className=\"texts-wrapper\">\r\n        {this.state.isMenuVisible ?\r\n          <Menu className=\"texts-menu\" vertical>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите жанр'\r\n                fluid\r\n                value={this.state.currentGenre} \r\n                key={this.state.options.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleGenreChange}\r\n                options={this.state.options} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите размер'\r\n                fluid\r\n                value={this.state.currentLength} \r\n                //key={this.state.length.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleLengthChange}\r\n                options={this.state.sizes} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите рейтинг'\r\n                fluid\r\n                value={this.state.rating} \r\n                //key={this.state.age.key}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleRatingChange}\r\n                options={this.state.age} \r\n              />\r\n            </Menu.Item>                        \r\n          </Menu>:null\r\n        }\r\n            {(this.state.books.length && this.state.areBooksVisible) ? \r\n            <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n            {this.state.books.map((item, index) => ( \r\n              (this.state.currentGenre === 'all'|| this.state.currentGenre === '' || this.state.currentGenre.indexOf(item.id) !== -1) && \r\n              (this.state.rating === 'all'|| this.state.rating === '' || this.state.rating === item.age_restriction) &&\r\n              (this.state.currentLength === 'all' || this.state.currentLength === '' || this.state.currentLength.indexOf(item.id) !== -1)) &&\r\n              <Card key={index} className=\"single-book\">\r\n                <Card.Content>\r\n                  <div className=\"texts-image-wrapper books-image-wrapper\">\r\n                    <Image src={item.image} />\r\n                  </div>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-author\">{item.author}</span></Card.Header>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-title\">{item.title}</span> {/*<span className=\"books-genre\">{item.genre.map((genre, ind) => <span>{`#${genre}`}</span>)}</span>*/}</Card.Header>\r\n                  <div className=\"books-information\">\r\n                    <div className=\"books-views\">\r\n                      <span><Icon name='eye' size='large' /> </span>\r\n                      <span>{item.views}</span>\r\n                    </div>\r\n                    <div className=\"books-favourites\">\r\n                      <span><Icon name='heart' size='' /></span> \r\n                      <span>{item.likes}</span>\r\n                    </div>\r\n                    <Rating icon='star' defaultRating={item.rating} className = \"books-rating\" maxRating={5} disabled/>\r\n                  </div>\r\n                  <Card.Description>\r\n                    {item.content.substr(0,250) + ' ...'}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button primary>\r\n                  <Link className=\"training-link books-link\"  to={{ pathname: `/books/${item.id}`,  query: { item } }}>Читать</Link>\r\n                  </Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n           }\r\n        </div>\r\n      </div>\r\n    <footer></footer>\r\n    </Fragment>\r\n   );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.booksReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Materials extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/video.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/videos\">Видео</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card> \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/words.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/decks\">Наборы слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/texts.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/texts\">Обучающие тексты</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>             \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/books.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/books\">Книги</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n                                                                                                                                                             \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Materials;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Card, Menu, Dropdown, Icon, Form, Divider, Label } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Tests extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      categoryArray: [],\r\n      areTestsVisible: true,\r\n      isSingleTestVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      value: '',\r\n      currentValue: '',\r\n      currentTest: [],\r\n      activeTest: null,\r\n      curIndexTest: 0,\r\n      curIndexCheckbox: 0,\r\n      correctResults: [],\r\n      correctAnswers: [],\r\n      incorrectAnswers: [],\r\n      isMenuVisible: true,\r\n      isTooltipVisible: false,\r\n      currentColor: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('./tests.json')\r\n        .then(res => {\r\n          let tests = res.data;\r\n          this.setState({ \r\n            tests: tests\r\n          }, () => this.getMenuParams());\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (prevState.currentTest !== this.state.currentTest) {\r\n        \r\n      }\r\n    }\r\n\r\n    getMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.tests.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.title, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n    testChange = (e) =>{\r\n      let parentid = e.target.getAttribute(\"parentid\");   \r\n      let id = e.target.getAttribute(\"id\");\r\n      let currentTest = this.state.currentTest.slice();\r\n      const arr = new Array(3).fill(false);\r\n      arr[id] = true;\r\n      currentTest[parentid] = arr;\r\n      this.setState({\r\n        currentTest\r\n      })\r\n    }\r\n\r\n    selectTest = (testId) =>{\r\n      let tests = this.state.tests.slice();\r\n      let activeTest = tests.find(x => x.id === testId);\r\n\r\n      let currentTest = [];\r\n      let testItem = [];\r\n      let correctResults = [];\r\n\r\n      activeTest.tasks.map((item, index) => correctResults.push(item.correct_answer));      \r\n      for (let i = 0; i < 3; i++) {\r\n        testItem.push(false);\r\n      }\r\n      for (let x = 0; x < activeTest.tasks.length; x++) {\r\n        currentTest.push(testItem);\r\n      }\r\n\r\n      this.setState({\r\n        activeTest,\r\n        currentTest,\r\n        correctResults\r\n      }, () => this.setState({\r\n          areTestsVisible: false,\r\n          isSingleTestVisible: true,\r\n      }));\r\n    }\r\n\r\n    backToTests = () =>{\r\n      this.setState({\r\n        areTestsVisible: true,\r\n        isSingleTestVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n    \t\tcurrentTest: [],\r\n    \t\tcurIndexTest: 0,\r\n    \t\tcurIndexCheckbox: 0,\r\n    \t\tcorrectResults: [],\r\n    \t\tcorrectAnswers: [],\r\n    \t\tincorrectAnswers: [],\r\n      })\r\n    }\r\n\r\n    checkResults = () =>{\r\n    \tlet resultsArray = this.state.currentTest.slice();\r\n    \tlet correctResults = this.state.correctResults.slice();\r\n    \tlet finalResults = [];\r\n    \tlet correctAnswers = [];\r\n    \tlet incorrectAnswers = [];\r\n      let i;\r\n    \tfor (i = 0; i < resultsArray.length; i++) {\r\n    \t\tlet item = resultsArray[i];\r\n    \t\tfor (var j = 0; j < item.length; j++) {\r\n    \t\t\tif (item[j]) {\r\n    \t\t\t\tfinalResults.push(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n      if(finalResults.length === this.state.activeTest.tasks.length) {\r\n        for (i = 0; i < finalResults.length; i++) {\r\n          if(correctResults[i] === finalResults[i]){\r\n            correctAnswers.push(i)\r\n          }\r\n          else{\r\n            incorrectAnswers.push(i)\r\n          }\r\n        }\r\n        let test = {};\r\n        test.score = correctAnswers.length;\r\n        test.date = new Date();\r\n        test.percentage = Math.round(test.score / this.state.activeTest.tasks.length * 1000) / 10;\r\n        this.props.actions.updateTestsComplete();\r\n        this.props.actions.updateTests(test);\r\n        this.setState({\r\n          isResultVisible: true,\r\n          isSingleTestVisible: false,\r\n          correctAnswers,\r\n          incorrectAnswers,\r\n          isMenuVisible: false,\r\n          isTooltipVisible: false\r\n        })                \r\n      }\r\n      else{\r\n        this.setState({\r\n          isTooltipVisible: true\r\n        })\r\n      }\r\n \t\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {this.state.areTestsVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n                <Menu.Item name='inbox'>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n          {(this.state.tests.length && this.state.areTestsVisible) ? \r\n            <Card.Group className=\"texts-cards tests-cards\" itemsPerRow={3} >\r\n              {this.state.tests.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&            \r\n              <Card key={index} className=\"test-card test-item\" style = {{boxShadow: `0 1px 3px 0 ${item.color}, 0 0 0 1px ${item.color}` }} >\r\n                <Card.Content>\r\n                  <Card.Header className=\"tests-card-title\" style = {{backgroundColor: item.color}} >\r\n                  \t<h3>{item.difficulty}</h3>\r\n                  \t<span>{item.title}</span>\r\n                  </Card.Header>\r\n                  <Card.Description className=\"tests-card-description\">\r\n                     <p className=\"tests-card-description-line\">Количество заданий - <span className=\"tests-card-description-txt\">{item.number}</span></p>\r\n                     <p className=\"tests-card-description-line\">Максимальное кол-во баллов - <span className=\"tests-card-description-txt\">{item.totalScore}</span></p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={ () => {this.selectTest(item.id)} /*this.selectTest.bind(this, item.id) */} style = {{backgroundColor: item.color }} >Начать тест</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n          }\r\n         {this.state.isSingleTestVisible ? \r\n            <Card className=\"single-text-card tests-wrapper\">\r\n              <h1>\r\n              \t{this.state.activeTest.title}\r\n              \t<span onClick={this.backToTests} title=\"Назад к тестам\" ><Icon name='window close outline'/></span>\r\n              </h1>\r\n              <Card.Content>\r\n                {this.state.activeTest.tasks.slice().map((item, index) =>\r\n                    <Card.Description key={item.id} id={index} className=\"single-text-card-description\">\r\n                    <h3 >{item.sentence}</h3>\r\n                    <Form className=\"single-test-form\" >\r\n                      {item.variants.map((param, ind) => \r\n                        <label className=\"test-label\" key={ind}>\r\n                          <input type=\"checkbox\" \r\n                            id={ind}\r\n                            parentid={item.id}\r\n                            label={param}\r\n                            name='checkboxRadioGroup'\r\n                            value={item}\r\n                            checked={this.state.currentTest[item.id][ind]}\r\n                            onChange={this.testChange}/>\r\n                            {param}                          \r\n                        </label>\r\n                      )}                                             \r\n                    </Form>                      \r\n                  </Card.Description>\r\n                )}\r\n              </Card.Content>\r\n              {this.state.isTooltipVisible ?\r\n                <div className=\"tests-tooltip\">\r\n                    <h4>Заполните все поля!</h4>               \r\n                </div> : null\r\n              }\r\n              <div className=\"tests-button-wrapper decks-button-wrapper\">\r\n              \t<Button onClick={this.checkResults} >Принять</Button>                  \t\r\n              </div>\r\n            </Card>:null\r\n          }\r\n          {this.state.isResultVisible ? \r\n            <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper test-final\" >\r\n             <Card className=\"card-training test-result-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n    \t\t\t\t\t\t  <div className=\"grades-results-wrapper\">\r\n    \t\t\t\t\t\t\t  <h3>Количество правильных ответов - <span>{this.state.correctAnswers.length}</span> из <span>{this.state.activeTest.tasks.length}</span> </h3>\r\n                    <h3>Ваша оценка - <span>{this.state.correctAnswers.length} </span> баллов </h3>\r\n    \t\t\t\t\t\t  </div>\t\t                  \r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.correctAnswers.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.incorrectAnswers.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.backToTests}>Назад к тестам</Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group> : null \r\n          }       \r\n          </div>\r\n        </div>  \r\n        <footer></footer>\r\n      </Fragment>\r\n   );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.testsReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tests);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, List, Message, Label} from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass TrueOrFalse extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isImageVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false         \r\n    }, () => this.initialLoad())\r\n  } \r\n\r\n  initialLoad = () => {\r\n    axios.get('./working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = []; \r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            let el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }  \r\n\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n            \r\n        this.setState({ \r\n          words, \r\n          result,\r\n          currentWord });\r\n      })\r\n  }\r\n\r\n  renderComponent = () =>{\r\n    this.setState({\r\n      isButtonVisible: false,\r\n      isCardVisible: true\r\n    })\r\n  }\r\n\r\n  checkResponse = (response) => {\r\n    if (response) {\r\n      let positiveWords = this.state.positiveWords.slice();        \r\n      positiveWords.push(this.state.currentWord); \r\n      this.setState({ positiveWords })       \r\n    } else {\r\n        let negativeWords = this.state.negativeWords.slice();          \r\n        negativeWords.push(this.state.currentWord);\r\n        this.setState({ negativeWords })          \r\n    }\r\n    this.setState({\r\n      isTranslationVisible: true,\r\n      showNavButtons: false,\r\n      showContinueButton: true,\r\n      isImageVisible: true\r\n    })      \r\n  }\r\n\r\n  continueTraining = () =>{\r\n    let id =this.state.id;\r\n    id = id + 1;\r\n    const result = this.state.result;\r\n    if(id < this.state.result.length){\r\n      const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];     \r\n      this.setState({\r\n        id,\r\n        currentWord, \r\n        isImageVisible: false,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false        \r\n      })\r\n\r\n    }\r\n    else {\r\n      let words = this.state.positiveWords.slice();\r\n      let exercise = {}, wordsTrained = [];\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.positiveWords.length;\r\n      for (var i = 0; i < words.length; i++) {\r\n        wordsTrained.push(words[i].id)\r\n      }\r\n      exercise.wordsTrained = wordsTrained;\r\n      this.props.actions.updateTrueOrFalse(exercise);\r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(exercise.score);\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: false,\r\n        showContinueButton: false, \r\n        isCardVisible: false,\r\n        isButtonVisible: false\r\n      })                \r\n    }\r\n  }\r\n\r\n  voiceWord = () =>{\r\n    speech.say(this.state.currentName);\r\n  }   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Верно-неверно</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent}>Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"rightwrong-timer\"> \r\n                </Card.Header>\r\n                <Card.Header className=\"rightwrong-header\">{this.state.currentWord.name} \r\n                </Card.Header>                \r\n                <Card.Header>{this.state.currentWord.translation} \r\n                </Card.Header>\r\n                <div className=\"rightwrong-image-wrapper\">\r\n                {this.state.isImageVisible ?\r\n                  <Image src={this.state.currentWord.image} className=\"rightwrong-image\"></Image> : null               \r\n                }\r\n                </div>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} className=\"red false-button\" primary>Неверно</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} className=\"green true-button\" primary>Верно</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n       </Card.Group> :\r\n         null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n        <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n          <Card className=\"card-training\" >\r\n            <Card.Content>\r\n              <Card.Header>Результаты</Card.Header>\r\n              <Divider/>\r\n              <Card.Description className=\"audio-list-container\"> \r\n              {(this.state.negativeWords.length !== 0 ) ?\r\n                <div className=\"answers-wrapper\">\r\n                  <List className=\"audio-list\">\r\n                  <h2>Верные ответы</h2>\r\n                  {this.state.positiveWords.map((item, index) => \r\n                      <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                    )}\r\n                 </List>\r\n                  <List className=\"audio-list\">\r\n                  <h2>Неверные ответы</h2>\r\n                  {this.state.negativeWords.map((item, index) => \r\n                      <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                    )}\r\n                 </List>\r\n               </div> : \r\n               <Message>\r\n                  <Message.Header>Поздравляем!</Message.Header>\r\n                  <p>\r\n                    Все задания выполнены правильно\r\n                  </p>\r\n               </Message> \r\n              }\r\n\r\n              </Card.Description>\r\n              <Card.Description className=\"results-wrapper\">\r\n                <div className=\"positive-results-wrapper\"> \r\n                  <div className=\"positive-results\">\r\n                    {this.state.positiveWords.length}\r\n                  </div>\r\n                  <Label>Верно</Label>                    \r\n                </div>\r\n                <div className=\"negative-results-wrapper\"> \r\n                  <div className=\"negative-results\">\r\n                    {this.state.result.length - this.state.positiveWords.length}\r\n                  </div> \r\n                  <Label>Неверно</Label>                   \r\n                </div>\r\n              </Card.Description>\r\n              <Button.Group className=\"card-buttons-wrapper\">\r\n                <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n              </Button.Group>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrueOrFalse);","import React,{Component} from 'react';\r\n//import './audioplayer.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\nimport jsmediatags from \"jsmediatags\";\r\nimport { Howl } from \"howler\";\r\nimport axios from 'axios';\r\n\r\n//import {bindActionCreators} from 'redux';\r\n//import actions from './actions/index';\r\n\r\n//import {connect} from 'react-redux';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: [],\r\n      soundVolume: 5,\r\n      playing: false,\r\n      muted: false,\r\n      currentTrack: null,\r\n      currentTrackLength: null,\r\n      currentTrackInfo: null,\r\n      currentTrackPicture: null,\r\n      currentId: 4,\r\n      order: \"consecutive\",\r\n      duration: 0,\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n      currentDuration: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\",\r\n      tracksVisible: true,\r\n      interval: null,\r\n      progress: 0,\r\n      decodingFinished: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      currentId: 1\r\n    }, () => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) =>\r\n          this.setState({ audio: res.data })\r\n        );       \r\n    }) \r\n  }\r\n\r\n/*\r\n  componentDidUpdate(prevProps){\r\n    let currentTrack = this.state.currentTrack;\r\n    if(prevProps.store.playing !== this.state.playing) { \r\n      this.setState({playing: this.state.playing})\r\n      if (this.state.playing === false) {\r\n        currentTrack.pause();\r\n      } else {\r\n        let interval = this.state.interval;\r\n        currentTrack.play();\r\n        interval = setInterval(() => this.startCycle(), 1000);\r\n        this.setState({ interval });\r\n      }\r\n    }    \r\n\r\n    if(prevProps.store.currentId !== this.state.currentId) { \r\n      if (currentTrack) {\r\n        currentTrack.pause();\r\n      }   \r\n      this.setState({\r\n        currentTrack\r\n      }, () => this.callFunctions(this.state.currentId));\r\n    }\r\n  }\r\n*/\r\n  callFunctions = () => {\r\n    let id = this.state.currentId;\r\n    let currentTrack = new Howl({\r\n      src: \"tracks/\" + this.state.audio.slice(id, id + 1),\r\n      html5: true,\r\n      volume: this.state.soundVolume / 10\r\n    });\r\n    var duration, minutes, seconds, currentMinutes, currentSeconds;\r\n    currentTrack.on(\"load\", () => {\r\n      duration = currentTrack.duration();\r\n      minutes = Math.floor(duration / 60);\r\n      seconds = Math.floor(duration - minutes * 60);\r\n      minutes = (\"0\" + minutes).slice(-2);\r\n      seconds = (\"0\" + seconds).slice(-2);\r\n      currentMinutes = \"00\";\r\n      currentSeconds = \"00\";\r\n      this.setState({ minutes, seconds, duration, currentTrack }, () => {\r\n        this.setState({ decodingFinished: true });        \r\n        if (this.state.playing) {\r\n          this.continuePlay();\r\n        } \r\n      });\r\n    });\r\n    this.readTags(id);\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      progress: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\"\r\n    })\r\n  }\r\n\r\n  readTags = (id) => {\r\n    let track = this.state.audio[id];\r\n    jsmediatags.read(\r\n      \"http://localhost:3000/tracks/\" + `${this.state.audio[id]}`,\r\n      {\r\n        onSuccess: (tag) => {\r\n          this.setState({ currentTrackInfo: tag }, () => {\r\n            this.decodeTrackInfo();\r\n          });\r\n        },\r\n        onError: (error) => {\r\n          console.log(\":(\", error.type, error.info);\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  decodeTrackInfo = () => {\r\n    let title = this.state.currentTrackInfo.tags.title;\r\n    let artist = this.state.currentTrackInfo.tags.artist;\r\n    let currentTrackPicture;\r\n    if (this.state.currentTrackInfo.tags.picture) {\r\n      const { data, type } = this.state.currentTrackInfo.tags.picture;\r\n      const byteArray = new Uint8Array(data);\r\n      const blob = new Blob([byteArray], { type });\r\n      currentTrackPicture = URL.createObjectURL(blob);\r\n    }\r\n    this.setState({\r\n      currentTrackPicture,\r\n      currentTrackTitle: title,\r\n      currentTrackArtist: artist\r\n    })\r\n  };\r\n\r\n  playMusic = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let interval = this.state.interval;\r\n    if (this.state.playing) {\r\n      currentTrack.pause();\r\n      //this.props.actions.changePlayingState(false);\r\n      clearInterval(interval);\r\n      this.setState({ interval });\r\n    } else {\r\n      currentTrack.volume(this.state.soundVolume / 10);\r\n      currentTrack.play();\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n      this.setState({ interval });\r\n      //this.props.actions.changePlayingState(true);\r\n    }\r\n    //this.props.actions.changePlayingState(!this.state.playing);\r\n    this.setState({currentTrack});\r\n  };\r\n\r\n  continuePlay = () =>{\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.playing) {\r\n      currentTrack.stop();\r\n    }\r\n    let interval = this.state.interval;\r\n    clearInterval(interval);\r\n    currentTrack.play();\r\n    if (this.state.playing) {\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n    }    \r\n    this.setState({ interval });    \r\n  }\r\n\r\n  changeVolume = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(e.target.value / 10);\r\n    this.setState({ soundVolume: e.target.value, currentTrack });\r\n  };\r\n\r\n  nextTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    console.log(\"currentTrack\", currentTrack);\r\n    currentTrack.stop();\r\n    if (this.state.currentId < this.state.audio.length - 1) {\r\n      //this.props.actions.selectTrack(this.state.currentId + 1);\r\n    } else {\r\n       //this.props.actions.selectTrack(0);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  prevTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    currentTrack.stop();\r\n    if (this.state.currentId > 0) {\r\n      //this.props.actions.selectTrack(this.state.currentId - 1);\r\n    } else {\r\n      //this.props.actions.selectTrack(this.state.audio.length - 1);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  muteSound = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.muted) {\r\n      currentTrack.mute(false);\r\n    } else {\r\n      currentTrack.mute(true);\r\n    }\r\n    this.setState({\r\n      muted: !this.state.muted,\r\n      currentTrack,\r\n    });\r\n  };\r\n\r\n  startCycle = () => {\r\n    this.incTime();\r\n    this.updateProgress();\r\n  };\r\n\r\n  updateProgress = () => {\r\n    let time = Math.round(this.state.currentTrack.seek());\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let progress = ((time / duration) * 100).toFixed(2);\r\n    this.setState({ progress });\r\n    //this.props.actions.changeProgressState(progress);\r\n  };\r\n\r\n  incTime = () => {\r\n    let currentDuration = Math.round(this.state.currentTrack.seek());\r\n    let currentMinutes = Math.floor(currentDuration / 60);\r\n    let currentSeconds = Math.floor(currentDuration - currentMinutes * 60);\r\n    currentMinutes = (\"0\" + currentMinutes).slice(-2);\r\n    currentSeconds = (\"0\" + currentSeconds).slice(-2);\r\n    this.setState({ currentSeconds, currentMinutes, currentDuration });\r\n    if (currentDuration === this.state.currentTrack.duration()) {\r\n      let currentTrack = this.state.currentTrack;\r\n      currentTrack.stop();      \r\n      if (this.state.currentId < this.state.audio.length - 1) {\r\n        //this.props.actions.selectTrack(this.state.currentId + 1);\r\n      } else {\r\n        //this.props.actions.selectTrack(0);\r\n      }\r\n      this.setState({ currentTrack, decodingFinished: false }, () => {\r\n        this.resetState();\r\n        this.callFunctions(this.state.currentId);\r\n      });      \r\n    }\r\n  };\r\n\r\n  setSeek = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let seek = (e.target.value * duration) / 100;\r\n    currentTrack.seek(seek);\r\n    console.log(\"seek\", Math.round(seek));\r\n    this.setState({ currentTrack, progress: e.target.value }, () => {\r\n      this.incTime();\r\n      //this.props.actions.changeProgressState(Math.round(seek));\r\n      console.log(this.state.progress);\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"player__visualizer player-visualizer\">\r\n          <div className=\"player-visualizer__waveform\" id=\"waveform\"></div>\r\n        </div>\r\n        <div className=\"player__top player-top\">\r\n          <span className=\"player-top__time\">{this.state.currentMinutes}.{this.state.currentSeconds}</span>\r\n          <div className=\"player-top__progress player-progress\">\r\n              <input\r\n                className=\"player-progress__input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                type=\"range\"\r\n                value={this.state.progress}\r\n                onChange={this.setSeek}\r\n              />\r\n          </div>\r\n          <span className=\"player-top__time\">{this.state.minutes}.{this.state.seconds}</span>\r\n        </div>\r\n        <div className=\"player-main\">\r\n          <div className=\"player-left\">\r\n            <div className=\"player-info player__info\">\r\n              <div className=\"player-info__icon player-icon\">\r\n                  {this.state.currentTrackPicture ? (\r\n                    <img src={this.state.currentTrackPicture} className=\"player-icon__picture\" alt=\"\" />\r\n                  ) : null}              \r\n              </div>\r\n              <div className=\"player-info__description player-description\">\r\n                <p className=\"player-description__name\">{this.state.currentTrackTitle}</p>\r\n                <p className=\"player-description__artist\">{this.state.currentTrackArtist}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"player__controls player-controls\">\r\n              <div className=\"player-controls__navigation\">\r\n                <div className=\"player-controls__item player-controls__left\" onClick={this.prevTrack}><i className=\"fas fa-backward\"></i></div>\r\n                {!this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-play\"></i></div> : null}\r\n                {this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-pause\"></i></div> : null}\r\n                <div className=\"player-controls__item player-controls__right\" onClick={this.nextTrack}><i className=\"fas fa-forward\"></i></div>         \r\n              </div>\r\n            </div>        \r\n          </div>\r\n          <div className=\"player-controls__volume player-volume\">\r\n            <div className=\"player-controls__item player-volume__item\"><i className=\"fas fa-volume-up\"></i></div>\r\n                      <input\r\n                        className=\"player-controls__audio\"\r\n                        value={this.state.soundVolume}\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        onChange={this.changeVolume}\r\n                        type=\"range\"\r\n                      />        \r\n          </div>      \r\n        </div>\r\n      </div>        \r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n*/\r\nexport default AudioPlayer;","import React, { Component } from 'react';\r\nimport {Button, TextArea, Form, Input } from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Comments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      loaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id === Number(this.props.id));\r\n    if (item) {\r\n      for (var i = 0; i < item.comments.length; i++) {\r\n        let date = new Date(item.comments[i].date);\r\n        let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n          date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);\r\n        item.comments[i].date = datestring;\r\n      }\r\n      this.setState({\r\n        comments: item.comments,\r\n        loaded: true\r\n      })      \r\n    } else {\r\n      this.setState({\r\n        noComments: true,\r\n        loaded: true\r\n      })\r\n    }\r\n    \r\n  } \r\n\r\n  addComment = () => {\r\n    let errors = this.state.errors;\r\n    let currentComment = this.state.currentComment;\r\n    let currentName = this.state.currentName;\r\n    let currentEmail = this.state.currentEmail;\r\n    let temp = {};\r\n\r\n    if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n      let date = new Date();\r\n      let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n      date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);        \r\n      temp['commentId'] = uuidv4();\r\n      temp['author'] = currentName;\r\n      temp['text'] = currentComment;        \r\n      temp['date'] = datestring;\r\n      let id = this.props.id;\r\n      this.props.actions.addCommentToBook(id, temp);        \r\n      this.setState({\r\n        currentName: '',\r\n        currentComment: '',\r\n        currentEmail: ''\r\n      })\r\n    }\r\n\r\n    else if (currentName === ''){\r\n      errors['name'] = \"Заполните поле имени!\";\r\n      this.setState({\r\n        errors\r\n      })\r\n    }\r\n\r\n    else if(currentComment === ''){\r\n      errors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n      this.setState({\r\n        errors\r\n      })        \r\n    }\r\n\r\n    else if(currentEmail === ''){\r\n      errors['email'] = \"Заполните поле почты\";\r\n      this.setState({\r\n        errors\r\n      })        \r\n    }\r\n\r\n  }\r\n\r\n  updateComment = (event) =>{\r\n    this.setState({currentComment: event.target.value.substr(0,500)});\r\n  }\r\n\r\n  updateName = (event) =>{\r\n    this.setState({currentName: event.target.value.substr(0,500)});\r\n  }\r\n\r\n  updateEmail = (event) =>{\r\n    this.setState({currentEmail: event.target.value.substr(0,500)});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (     \r\n      <>\r\n        <div className=\"single-text-card-form\">\r\n          <Form>\r\n            <Form.Field>\r\n              <Input value={this.state.currentName || ''} onChange={this.updateName} focus placeholder='Имя'/>\r\n              <span>{this.state.errors['name']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input value={this.state.currentEmail || ''} onChange={this.updateEmail} focus placeholder='Email'/>\r\n              <span>{this.state.errors['email']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <TextArea value={this.state.currentComment || ''} onChange={this.updateComment} maxLength=\"50\" placeholder='Ваш комментарий' />\r\n              <span>{this.state.errors['comment']}</span>\r\n            </Form.Field>                           \r\n            <Button onClick={this.addComment} type='submit'>Отправить</Button>\r\n          </Form>         \r\n        </div>\r\n        {this.state.loaded && this.state.comments ?\r\n          <div className=\"single-text-card-comments\">\r\n            {this.state.comments.map((item, index) =>\r\n              <div className=\"single-text-card-comment\" key={index}>\r\n                <h3>{item.author}<span className=\"single-text-card-date\">{item.date}</span></h3>\r\n                <p>{item.text}</p>                              \r\n              </div>\r\n             )}                       \r\n          </div>\r\n        : null}\r\n      </> \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","import React, { Component } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalFont extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      fontSizeTemp: 16,\r\n      lineHeightTemp: 32,\r\n      fontFamilyTemp: \"'Times New Roman', sans-serif\",\r\n      fontWeightTemp: 400,      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n changeValue = (e) =>{\r\n    this.setState({fontSizeTemp: e.target.value})\r\n  }\r\n\r\n  changeFontFamily = (e) =>{\r\n    this.setState({fontFamilyTemp: e.target.value})\r\n  }\r\n\r\n  changeFontWeight = (e) =>{\r\n    this.setState({fontWeightTemp: e.target.value})\r\n  }\r\n\r\n  changeLineHeight = (e) =>{\r\n    this.setState({lineHeightTemp: e.target.value})\r\n  } \r\n\r\n  applyFontSettings = () => {\r\n    this.props.actions.selectFontSize(this.state.fontSizeTemp);\r\n    this.props.actions.selectFontFamily(this.state.fontFamilyTemp);\r\n    this.props.actions.selectFontWeight(this.state.fontWeightTemp);\r\n    this.props.actions.selectFontSpacing(this.state.lineHeightTemp);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleFontModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper select-font-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-font\">\r\n            <div className=\"select-font-block\">\r\n              <span>Размер</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeValue} type=\"range\" min=\"8\" max=\"24\" value={this.state.fontSizeTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontSizeTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Интервал</span>         \r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeLineHeight} type=\"range\" min=\"16\" max=\"72\" value={this.state.lineHeightTemp} name=\"\"/>                \r\n                <span className=\"select-font-value\">{this.state.lineHeightTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Жирность</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeFontWeight} type=\"range\" min=\"200\" max=\"900\" step=\"100\" value={this.state.fontWeightTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontWeightTemp}</span>\r\n              </div>  \r\n            </div>\r\n          </div>\r\n          <select className=\"select-font-family\" onChange={this.changeFontFamily} value={this.state.fontFamily}>\r\n            <option value =\"'Times New Roman', sans-serif\">Times New Roman</option>\r\n            <option value =\"'Arial', sans-serif\">Arial</option>\r\n            <option value =\"'Verdana', sans-serif\">Verdana</option>\r\n            <option value =\"'Lucida Console', sans-serif\">Lucida Console</option>\r\n            <option value =\"'Georgia', serif\">Georgia</option>\r\n            <option value =\"'Courier New', monospace\">Gourier New</option>\r\n          </select>\r\n          <p className=\"select-font-example\" style={{ \r\n                                fontSize: this.state.fontSizeTemp + \"px\", \r\n                                fontFamily: this.state.fontFamilyTemp,\r\n                                lineHeight: this.state.lineHeightTemp + \"px\",\r\n                                fontWeight: this.state.fontWeightTemp }} >Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet</p>                  \r\n          <Button primary className=\"normal-button\" onClick={this.applyFontSettings} >Применить</Button>\r\n        </div>    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalFont);","import React, { Component } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalColor extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isColorModalOpen: false,\r\n      activeFontColor: '#222222',\r\n      activeBgColor: '#f6f6f6',\r\n      fontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\r\n      bgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\r\n      colorScheme: [  \r\n              '#000000','#111111','#222222','#333333',\r\n              '#444444','#555555','#666666','#777777',\r\n              '#888888','#999999','#a7a7a7','#b8b8b8',\r\n              '#d0d0d0','#dcdcdc','#f6f6f6','#ffffff'   ]      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n  setFontColor = (e) =>{\r\n    let fontState = this.state.fontState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < fontState.length; i++) {\r\n      fontState[i] = false;\r\n    }\r\n    fontState[index] = true;\r\n    this.setState({\r\n      activeFontColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      fontState\r\n    })\r\n\r\n  }\r\n\r\n  setBgColor = (e) =>{\r\n    let bgState = this.state.bgState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < bgState.length; i++) {\r\n      bgState[i] = false\r\n    }\r\n    bgState[index] = true;\r\n    this.setState({\r\n      activeBgColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      bgState\r\n    })\r\n  }\r\n\r\n  applyColorSettings = () =>{\r\n    this.props.actions.selectBgColor(this.state.activeBgColor);\r\n    this.props.actions.selectFontColor(this.state.activeFontColor);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleColorModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal} >\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-palette-container\">\r\n            <div className=\"palette-container-item\">\r\n              <p>Шрифт</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setFontColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.fontState[index] ? \r\n                      <span><i className=\"fas fa-check\"></i></span>  : null\r\n                    }\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"palette-container-item\">\r\n              <p>Фон</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setBgColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.bgState[index] ?\r\n                      <span><i className=\"fas fa-check\"></i></span> \r\n                       : null\r\n                    }\r\n                  </div>\r\n                )}          \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"palette-item-selected\" style={{ backgroundColor: this.state.activeBgColor }} >\r\n            <span style={{ color: this.state.activeFontColor  }} >Lorem ipsum </span>\r\n          </div> \r\n          <Button primary onClick={this.applyColorSettings}>Применить</Button>\r\n        </div>              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalColor);","import React, { Component } from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass WordFound extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.word)\r\n  } \r\n\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (     \r\n      <div className = \"word-modal__overlay\">\r\n        <div className=\"word-modal\">\r\n          <div className=\"word-modal__image\">\r\n            <img src=\"word-modal__picture\" src = {this.props.word.image} alt=\"\" />\r\n          </div>\r\n          <div className=\"word-modal__description\">\r\n            <p className=\"word-modal__title\">{this.props.word.name} - {this.props.word.translation}</p>\r\n            <p className=\"word-modal__meaning\">{this.props.word.definition}</p>   \r\n            <Button primary onClick={this.closeSearchModal}>Закрыть</Button>              \r\n          </div>\r\n        </div>              \r\n      </div>        \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordFound);","import React, { Component, Fragment } from 'react';\r\nimport {Button, Icon } from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu';\r\nimport Comments from './Comments';\r\nimport ModalFont from './ModalFont';\r\nimport ModalColor from './ModalColor';\r\nimport WordFound from './WordFound';\r\nimport axios from 'axios';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SelectedBook extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.fileInputRef = React.createRef();    \r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      text: null,\r\n      pageIndexes: [],\r\n      currentPageId: 0,\r\n      loaded: false,\r\n      pages: 0,      \r\n      commentsVisible: false,\r\n      wordsEl: [],\r\n      words: [],\r\n      selected: '',\r\n      isModalFoundOpen: false,\r\n      isModalInputOpen: false,\r\n      comments: []               \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id === this.props.match.params.id);\r\n    if (item) {\r\n      this.setState({\r\n        comments: item.comments\r\n      })\r\n    }\r\n    var myHeaders = new Headers();\r\n    myHeaders.append('Content-Type','text/plain; charset=UTF-8');  \r\n    const that = this;\r\n    axios.all([\r\n      axios.get('../books.json'), \r\n      axios.get('../words_full.json')\r\n    ])   \r\n    .then(axios.spread((obj1, obj2) => {\r\n      let books = obj1.data; \r\n      let words = obj2.data;\r\n      let selectedBook = books.find(x => x.id == this.props.match.params.id);\r\n      fetch(selectedBook.link, myHeaders)\r\n        .then(response => response.arrayBuffer())\r\n        .then(function (buffer) {\r\n            const decoder = new TextDecoder('iso-8859-1');\r\n            let text = decoder.decode(buffer).split(\"\\n\");\r\n            return text\r\n        })\r\n        .then((text) => that.setState({words, text }, () => that.splitIntoPages() ))\r\n    }))\r\n  } \r\n\r\n  splitIntoPages = () => {\r\n    let text = this.state.text;\r\n    let pages = [], words = [], pageIndexes = [];\r\n    let value = 1600 / this.props.store.lineHeight;\r\n    let pagesCount = Math.ceil(text.length / value);\r\n    let currentMin = 0;\r\n    let currentMax = 50;\r\n    for (let i = 0; i < pagesCount; i++) {\r\n      let txt = text.slice(currentMin, currentMax);\r\n      if (currentMin === 0 ) {\r\n        let newTxt = [];\r\n        for (var j = 0; j < txt.length; j++) {\r\n          let newSentence = [];\r\n          newSentence.push(txt[j].split(' '));\r\n          newTxt.push(newSentence);\r\n        }\r\n        words.push(newTxt);\r\n      }\r\n      pages.push(txt);\r\n      currentMin = currentMin + 50;\r\n      currentMax = currentMax + 50;\r\n    }\r\n    for (let i = 0; i < pagesCount; i++) {\r\n      pageIndexes.push(i);\r\n    }\r\n    this.setState({ pages, \r\n                    pageIndexes, \r\n                    currentPage: pages[0],\r\n                    splittedPage: words,\r\n                    loaded: true });\r\n  }  \r\n\r\n    prevButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages;\r\n      if(currentPageId > 0){\r\n        currentPageId--;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    }\r\n\r\n    nextButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages.slice();\r\n      if(currentPageId < pages.length - 1){\r\n        currentPageId++;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    }  \r\n\r\n  changePage = (e) =>{\r\n      let currentPageId = Number(e.target.value);\r\n      let pages = this.state.pages;\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId, currentPage\r\n      })  \r\n  }\r\n\r\n  toggleComments = () => {\r\n    this.setState({ commentsVisible: !this.state.commentsVisible })\r\n  }\r\n\r\n  searchForWord = (item, e) => {\r\n    switch (e.detail) {\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        let words = this.state.words.slice();\r\n        let newItem = item.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n        let found = words.find(x => x.name === newItem);\r\n        if (found) {\r\n          this.setState({\r\n            found\r\n          }, () => this.toggleFoundModal())\r\n        } else {\r\n          this.setState({\r\n            selected: newItem\r\n          }, () => this.toggleInputModal())\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }    \r\n  } \r\n\r\n  toggleFoundModal = () => {\r\n    this.props.actions.toggleSearchModal(true);\r\n  }\r\n\r\n  toggleInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: !this.state.isModalInputOpen\r\n    })\r\n  }\r\n\r\n\r\n\r\n  changeFont = () => {\r\n    this.props.actions.toggleFontModal(true);\r\n  }\r\n\r\n  changeColor = () => {\r\n    this.props.actions.toggleColorModal(true);\r\n  }\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n  closeInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: false\r\n    });\r\n  }  \r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.props.store.isSearchModalOpen ?\r\n            <WordFound word = {this.state.found} />\r\n          : null}\r\n          {this.state.isModalInputOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n                <div className=\"word-modal__reject\">\r\n                   <p>Sorry, cannot find selected word is our vocabulary</p>\r\n                   <Button primary onClick={this.closeInputModal}>Закрыть</Button>\r\n                </div>\r\n            </div>\r\n          : null}        \r\n     \r\n          {this.props.store.isFontModalOpen ?\r\n            <ModalFont />\r\n          : null}\r\n          {this.props.store.isColorModalOpen ?\r\n            <ModalColor />\r\n          : null}\r\n          {this.state.loaded ?\r\n            <div className=\"navigation-panel\">\r\n              <div className=\"navigation-progress\"> \r\n                <input  \r\n                  type=\"range\" \r\n                  value={this.state.currentPageId} \r\n                  max={this.state.pages.length - 1} \r\n                  min=\"0\"\r\n                  onChange={this.changePage} />\r\n              </div>\r\n              <div className=\"nav-pagination\">{this.state.currentPageId + 1} / {this.state.pages.length}</div>            \r\n              <div className=\"navigation-links\">\r\n                <span onClick={this.prevButton} className=\"navigation-links__item\" title=\"Назад\"><Icon name='arrow left' size='large' /> </span>\r\n                <span onClick={this.nextButton} className=\"navigation-links__item\" title=\"Вперед\"><Icon name='arrow right' size='large' /> </span>\r\n                <span onClick={this.changeFont} className=\"navigation-links__item\" title=\"Настройки шрифта\"><Icon name='font' size='large' /> </span>\r\n                <span onClick={this.changeColor} className=\"navigation-links__item\" title=\"Настройки цвета\"><Icon name='tint' size='large' /> </span>\r\n              </div>\r\n            </div>\r\n          : null}\r\n          {this.state.loaded ?\r\n            <>\r\n              <div className=\"selected-book\" style={{ backgroundColor: this.props.store.backgroundColor, color: this.props.store.color}}>\r\n              <div className=\"selected-book__content book-content\" style= \r\n                                          {{ lineHeight: this.props.store.lineHeight + \"px\",\r\n                                             fontWeight: this.props.store.fontWeight, \r\n                                             fontSize:   this.props.store.fontSize + \"px\", \r\n                                             fontFamily: this.props.store.fontFamily }}>\r\n                  {this.state.splittedPage.map((page, index1) => \r\n                    <Fragment key={index1}>\r\n                      {page.map((sentence, index2) => \r\n                        <Fragment key={index2}>\r\n                          {sentence.map((word, index3) => \r\n                            <p key={index3}> \r\n                              {word.map((item, index4) => \r\n                                <span className=\"single-word\" key={index4} onClick={this.searchForWord.bind(this, item)}>{`${item} `}</span>\r\n                              )}\r\n                            </p>\r\n                          )}\r\n                        </Fragment>\r\n                      )}\r\n                    </Fragment> \r\n                  )}\r\n              </div>\r\n              </div>          \r\n              <div className=\"single-text-form__wrapper\">\r\n                <div className=\"comments__header\">\r\n                  {this.state.comments.length ?\r\n                    <>\r\n                    <span className=\"comments-header__counter\">Комментариев: {this.state.comments.length}</span>\r\n                    <span className=\"comments-header__button\" onClick={this.toggleComments}>{this.state.commentsVisible ? 'Скрыть комментарии': 'Показать комментарии'}</span>\r\n                    </>\r\n                  : null}\r\n                </div>\r\n                {this.state.commentsVisible && this.state.comments?\r\n                  <Comments id={this.props.match.params.id} />\r\n                : null}           \r\n              </div>              \r\n            </>\r\n          : <div className=\"preloader\">\r\n            <img src = \"../preloader.gif\" alt=\"\" />\r\n          </div> }\r\n          <footer></footer> \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedBook);","let initialState = {\r\n\t\"colorScheme\": null,\r\n\t\"soundVolume\": null\r\n};\r\n\r\n\r\n\r\nlet settingsReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'CHANGE_COLOR_SCHEME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorScheme: action.payload }\r\n\r\n\t\tcase 'CHANGE_SOUND_VOLUME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsoundVolume: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default settingsReducer;","let initialState = {\r\n\t\"exercises\": {\r\n\t\t\"engToRusWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"rusToEngWords\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"audioWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"constructWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 15, 16, 19, 20],\r\n\t\t\t\t\t\"score\": 7\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"trueOrFalseWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 14],\r\n\t\t\t\t\t\"score\": 4\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"cardWords\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 3,\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 3,\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 43, 89]\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t],\r\n\r\n\t\t\"recreateTxt\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"recreateAudioTxt\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"placeSpaces\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 6\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 7\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t \r\n\t\t\"fillTheGaps\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"commonPhrases\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\t\t\t \t\t \t\t\t\t\t\t\t\t\t\t\t\t\r\n\t}\r\n};\r\n\r\n\r\n\r\nlet exercisesReducer = (state = initialState.exercises, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_ENG_TO_RUS':\r\n\t\t\tlet words = [...state.engToRusWords];\r\n\t\t\twords.push(action.payload);\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tengToRusWords: words }\r\n\r\n\t\tcase 'UPDATE_RUS_TO_ENG':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trusToEngWords: [...state.rusToEngWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_AUDIO_WORDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taudioWords: [...state.audioWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_CONSTRUCT_WORDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tconstructWords: [...state.constructWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_TRUE_OR_FALSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttrueOrFalseWords: [...state.trueOrFalseWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_CARD_WORDS':\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcardWords: [...state.cardWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_RECREATE_TXT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trecreateTxt : [...state.recreateTxt, action.payload] }\r\n\r\n\t\tcase 'UPDATE_RECREATE_AUDIOTXT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trecreateAudioTxt: [...state.recreateAudioTxt, action.payload] }\r\n\r\n\t\tcase 'UPDATE_FILL_THE_GAPS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfillTheGaps: [...state.fillTheGaps, action.payload] }\r\n\r\n\t\tcase 'UPDATE_PLACE_SPACES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tplaceSpaces: [...state.placeSpaces, action.payload] }\r\n\r\n\t\tcase 'UPDATE_COMMON_PHRASES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcommonPhrases: [...state.commonPhrases, action.payload] }\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default exercisesReducer;","let selectedBook = {}\r\n\r\n\r\nlet initialState = {\r\n\t\"selectedBook\": selectedBook,\r\n\t\"booksComments\": [\r\n\t\t{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 1,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 2,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 11,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 12,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 40,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 34,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 35,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\t\t\t\t\r\n\t],\r\n\tcolor: '#222222',\r\n\tbackgroundColor: '#f6f6f6',\r\n\tfontSize: 16,\r\n\tfontFamily: \"'Times New Roman', sans-serif\",\r\n\tlineHeight: 32,\r\n\tfontWeight: 400,\r\n\tisFontModalOpen: false,\r\n\tisColorModalOpen: false,\r\n\tisSearchModalOpen: false\r\n};\r\n\r\n\r\n\r\nlet booksReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'SELECT_BOOK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedBook: action.payload }\r\n\r\n\t\tcase 'TOGGLE_FONT_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFontModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_COLOR_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisColorModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_SEARCH_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_FAMILY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontFamily: action.payload }\t\r\n\r\n\t\tcase 'SELECT_FONT_SPACING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlineHeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_WEIGHT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontWeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_SIZE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontSize: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontColor: action.payload }\t\r\n\r\n\t\tcase 'SELECT_BG_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbackgroundColor: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default booksReducer;","\r\nlet initialState = {\r\n\t\"vocabModalOpen\": false,\r\n\t\"selectedVocabWord\": null,\r\n\t\"colorScheme\": null,\r\n\t\"soundVolume\": null\r\n};\r\n\r\n\r\n\r\nlet vocabularyReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'TOGGLE_VOCAB_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedVocabWord: action.payload }\t\t\r\n\r\n\t\tcase 'VOICE_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabWord: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default vocabularyReducer;","let initialState = {\r\n\t\"tests\": [\r\n\t\t{\r\n\t\t\t\"score\": 35,\r\n\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\"percentage\": 82.5\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"score\": 38,\r\n\t\t\t\"date\": \"Sun Jul 20 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\"percentage\": 34.5\r\n\t\t}\r\n\t]\r\n};\r\n\r\n\r\n\r\nlet testsReducer = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'UPDATE_TESTS':\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttests: [...state.tests, action.payload] }\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default testsReducer;","let initialState = {\r\n\t\"totalScore\": 187,\r\n\t\"exercisesComplete\": 22,\r\n\t\"testsComplete\": 2\r\n};\r\n\r\n\r\n\r\nlet resultsReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_TOTAL_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalScore: state.totalScore + action.payload }\r\n\r\n\t\tcase 'UPDATE_EXERCISES_COMPLETE':\r\n\t\t\tconsole.log(state.exercisesComplete);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texercisesComplete: ++state.exercisesComplete }\r\n\r\n\t\tcase 'UPDATE_TESTS_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttestsComplete: ++state.testsComplete }\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default resultsReducer;","import {combineReducers} from 'redux';\r\nimport settingsReducer from './settingsReducer';\r\nimport exercisesReducer from './exercisesReducer';\r\nimport booksReducer from './booksReducer';\r\nimport vocabularyReducer from './vocabularyReducer';\r\nimport testsReducer from './testsReducer';\r\nimport resultsReducer from './resultsReducer';\r\n\r\nlet createRootReducer = () => combineReducers({\r\n\texercisesReducer: exercisesReducer, \r\n\tsettingsReducer: settingsReducer, \r\n\tbooksReducer: booksReducer,\r\n\tvocabularyReducer: vocabularyReducer,\r\n\ttestsReducer: testsReducer,\r\n\tresultsReducer: resultsReducer\t\t\r\n})\r\n\r\nexport default createRootReducer;","import {createStore} from 'redux';\r\nimport createRootReducer from '../reducers/rootReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default function configureStore(){\r\n\tlet store = createStore(createRootReducer(), initialState);\r\n\treturn store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Vocabulary from './Vocabulary';\r\nimport GrammarList from './GrammarList'\r\nimport SelectedGrammar from './SelectedGrammar'\r\nimport Statistics from './Statistics'\r\nimport Training from './Training'\r\nimport Main from './Main'\r\nimport ConstructWord from './ConstructWord'\r\nimport Proverbs from './Proverbs'\r\nimport Cards from './Cards'\r\nimport Audio from './Audio'\r\nimport EnglishToRussian from './EnglishToRussian'\r\nimport RussianToEnglish from './RussianToEnglish'\r\nimport Videos from './Videos'\r\nimport FillTheGaps from './FillTheGaps'\r\nimport RecreateText from './RecreateText'\r\nimport RecreateAudioText from './RecreateAudioText'\r\nimport InsertSpaces from './InsertSpaces'\r\nimport SelectedVideo from './SelectedVideo'\r\nimport TextsList from './TextsList'\r\nimport Decks from './Decks'\r\nimport Settings from './Settings'\r\nimport BookList from './BookList'\r\nimport Materials from './Materials'\r\nimport Tests from './Tests'\r\nimport TrueOrFalse from './TrueOrFalse'\r\nimport AudioPlayer from './AudioPlayer'\r\nimport SelectedBook from './SelectedBook'\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport configureStore from \"./store/index\";\r\n\r\nlet initialState = [];\r\nlet store = configureStore(initialState);\r\n\r\nReactDOM.render(  \r\n\t<Provider store={store}>\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<div className=\"router-wrapper\">\r\n\t\t\t\t<Route exact path=\"/\" component={Main} />\r\n\t\t\t\t<Route path=\"/selectedbook\" component={SelectedBook} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t\t<Route path=\"/vocabulary\" component={Vocabulary} />\t\t\t\t\r\n\t\t\t\t<Route path=\"/grammar\" exact component={GrammarList} />\r\n\t\t\t\t<Route path=\"/grammar/:id\" component={SelectedGrammar} />\r\n\t\t\t\t<Route path=\"/materials\" component={Materials} />\r\n\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\r\n\t\t\t\t<Route path=\"/training\" component={Training} />\t\t  \r\n\t\t\t\t<Route path=\"/cards\" component={Cards} />\r\n\t\t\t\t<Route path=\"/trueorfalse\" component={TrueOrFalse} />\t\t\r\n\t\t\t\t<Route path=\"/constructword\" component={ConstructWord} />\r\n\t\t\t\t<Route path=\"/proverbs\" component={Proverbs}/>\r\n\t\t\t\t<Route path=\"/audio\" component={Audio} />\r\n\t\t\t\t<Route path=\"/recreatetext\" component={RecreateText} />\r\n\t\t\t\t<Route path=\"/recreateaudiotext\" component={RecreateAudioText} />\r\n\t\t\t\t<Route path=\"/insertspaces\" component={InsertSpaces} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/englishtorussian\" component={EnglishToRussian} />\r\n\t\t\t\t<Route path=\"/russiantoenglish\" component={RussianToEnglish} />\r\n\t\t\t\t<Route path=\"/fillthegaps\" component={FillTheGaps} />\r\n\t\t\t\t<Route path=\"/decks\" component={Decks} />\t\t\r\n\t\t\t\t<Route path=\"/videos\" exact component={Videos} />\r\n\t\t\t\t<Route path=\"/videos/:id\" component={SelectedVideo} />\r\n\t\t\t\t<Route path=\"/texts\" component={TextsList} />\r\n\t\t\t\t<Route path=\"/books\" exact component={BookList} />\r\n\t\t\t\t<Route path=\"/books/:id\" component={SelectedBook} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/tests\" component={Tests} />\r\n\t\t\t\t<Route path=\"/audioplayer\" component={AudioPlayer} />\r\n\t\t\t</div>\r\n\t\t</Router>\t\r\n\t</Provider>, document.getElementById('root'));\r\n\r\n/*\r\n\tconst routes = [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\tcomponent: App\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/grammar',\r\n\t\t\tcomponent: GrammarList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/courses',\r\n\t\t\tcomponent: CoursesList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursessimple',\r\n\t\t\tcomponent: CoursesSimple\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/training',\r\n\t\t\tcomponent: Training\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/constructword',\r\n\t\t\tcomponent: ConstructWord\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/cards',\r\n\t\t\tcomponent: Cards\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/audio',\r\n\t\t\tcomponent: Audio\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/pronunciation',\r\n\t\t\tcomponent: Pronunciation\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/englishtorussian',\r\n\t\t\tcomponent: EnglishToRussian\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/russiantoenglish',\r\n\t\t\tcomponent: RussianToEnglish\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/videos', \r\n\t\t\tcomponent: Videos\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ted', \r\n\t\t\tcomponent: TED\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/engvid', \r\n\t\t\tcomponent: EngVid\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/britishcouncil', \r\n\t\t\tcomponent: BritishCouncil\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/khan', \r\n\t\t\tcomponent: Khan\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/conanobrien', \r\n\t\t\tcomponent: ConanOBrien\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmyfallon', \r\n\t\t\tcomponent: JimmyFallon\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmykimmel', \r\n\t\t\tcomponent: JimmyKimmel\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursera',\r\n\t\t\tcomponent: Coursera\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ellen',\r\n\t\t\tcomponent: Ellen\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/stephencolbert',\r\n\t\t\tcomponent: StephenColbert\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jamescorden',\r\n\t\t\tcomponent: JamesCorden\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/sethmeyers',\r\n\t\t\tcomponent: SethMeyers\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/texts',\r\n\t\t\tcomponent: TextsList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/tests',\r\n\t\t\tcomponent: Example\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t]\r\n\t*/\r\n/*\r\nReactDOM.render(  \r\n  <Router>\r\n\t  <div className=\"router-wrapper\">\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n\t  </div>\r\n  </Router>, document.getElementById('root'));\r\n*/"],"sourceRoot":""}