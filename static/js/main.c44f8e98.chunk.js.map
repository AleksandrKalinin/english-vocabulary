{"version":3,"sources":["ModalWord.js","actions/index.js","VocabWord.js","VocabSideMenu.js","TopMenu.js","VocabTopMenu.js","Vocabulary.js","SplittedWords.js","GrammarList.js","Statistics.js","Training.js","Main.js","ConstructWord.js","Proverbs.js","Cards.js","Audio.js","EnglishToRussian.js","RussianToEnglish.js","Videos.js","Fragments.js","Pronunciation.js","RecreateText.js","RecreateAudioText.js","InsertSpaces.js","videos/TED.js","videos/EngVid.js","videos/BritishCouncil.js","videos/Khan.js","videos/Coursera.js","videos/JimmyFallon.js","videos/JimmyKimmel.js","videos/ConanOBrien.js","videos/Ellen.js","videos/JamesCorden.js","videos/SethMeyers.js","videos/StephenColbert.js","TextsList.js","Decks.js","AudioList.js","Settings.js","BookList.js","Materials.js","Example.js","Rightwrong.js","grammar/GrammarPresentSimple.js","grammar/GrammarItem.js","grammar/GrammarPastSimple.js","grammar/GrammarFutureSimple.js","grammar/GrammarPresentContinuous.js","grammar/GrammarPastContinuous.js","grammar/GrammarFutureContinuous.js","grammar/GrammarPresentPerfect.js","grammar/GrammarFuturePerfect.js","grammar/GrammarPastPerfect.js","grammar/GrammarPresentPerfectContinuous.js","grammar/GrammarPastPerfectContinuous.js","grammar/GrammarFuturePerfectContinuous.js","AudioPlayer.js","Comments.js","ModalFont.js","ModalColor.js","WordFound.js","SelectedBook.js","reducers/commonReducer.js","reducers/exercisesReducer.js","reducers/booksReducer.js","reducers/vocabularyReducer.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["Component","actions","updateTotalScore","score","type","payload","updateTodayScore","updateExerciseScore","number","updateTestsScore","updateWordsTotal","updateWordsRemaining","updateWordsStudied","changeColorScheme","val","changeSoundVolume","toggleVocabModal","selectVocabWord","word","voiceVocabWord","selectBook","book","selectFontSize","fontSize","selectFontFamily","fontFamily","selectFontSpacing","lineHeight","selectFontWeight","fontWeight","selectFontColor","fontColor","selectBgColor","backgroundColor","addCommentToBook","id","comment","toggleFontModal","state","toggleColorModal","toggleSearchModal","updateEngToRus","console","log","updateRusToEng","updateConstructedWords","updateAudioWords","updateCardWords","updateTrueOrFalse","VocabWord","voiceWord","speech","say","openWord","_this","props","this","delete","react_default","a","createElement","List","Item","react","Image","avatar","src","image","Content","className","onClick","bind","Header","as","name","transcription","translation","Button","Group","title","Icon","connect","store","reducer","dispatch","bindActionCreators","VocabSideMenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","consoleParams","newItems","items","map","item","i","push","key","text","category","value","setState","options","getUnique","arr","unique","e","final","indexOf","filter","newFunc","slice","newObj","callbackFromParent","handleChange","_ref","consoleProps","_this2","axios","get","then","res","data","Menu","vertical","active","Dropdown","placeholder","fluid","clearable","search","selection","onChange","TopMenu","showModal","isModalVisible","changeLogin","event","inputLogin","target","changePassword","inputPassword","changeMail","inputMail","changeDoublePassword","doublePassword","Link","to","position","Modal","trigger","closeIcon","Form","Field","primary","finishLogin","finishRegistration","size","VocabTopMenu","updateSearch","substr","searchFunction","changeNameValue","inputName","changeTranslationValue","inputTranslation","changeMeaningValue","inputMeaning","changeCategoryValue","inputCategory","changeImageValue","inputImage","submitForm","newWords","words","inputStringDate","Date","toUTCString","inputDate","obj","meaning","date","unshift","callbackFromApp","searchFromApp","categories","categoryValue","voiceWordFromModal","sortByName","sortByTranslation","sortByDate","newFunction","accept","Input","icon","Vocabulary","loadMore","prev","visible","filteredWords","isOldestFirst","sort","b","localeCompare","splice","findIndex","deleteWord","toggleModal","myCallback","dataFromChild","topMenuCallback","searchCallback","consoleState","vocabModalOpen","query","searchString","handler","assertThisInitialized","_this3","toLowerCase","selectedVocabWord","src_TopMenu","src_VocabSideMenu","src_VocabTopMenu","relaxed","index","src_VocabWord","length","vocabularyReducer","SplittedWords","searchForWord","detail","newItem","replace","found","find","x","toggleFoundModal","selected","toggleInputModal","isModalFoundOpen","isModalInputOpen","changeFile","filePath","changeTranslation","changeDefinition","definition","addToWords","transription","fileInputRef","React","createRef","wordsEl","loaded","sentence","splitted","split","defineProperty","content","labelPosition","current","click","ref","hidden","concat","GrammarList","grammar","Table","celled","fixed","Row","columns","HeaderCell","rules","Body","Cell","description","link","Statistics","countTests","params","percentage","mark","reduce","tests","testsLoaded","countWords","total","wordsTrained","splitIntoArrays","nameArrays","create","forEach","nameArray","names","keys","values","finalData","tmp","lng","fin","Math","floor","barChartData","getYesterdaysDate","sorter","monday","tuesday","wednesday","thursday","friday","saturday","sunday","days","item1","item2","dateArray","setDate","getDate","getDay","j","lineChartData","openModal","inDayRange","option","year","getFullYear","month","getMonth","day","today","applyFunction","getTime","inWeekRange","weekDay","start","inMonthRange","totalDays","daysInMonth","inAllRange","func","exercises","prop","learnedWords","engToRusWords","rusToEngWords","cardWords","constructWords","audioWords","trueOrFalseWords","switchTab","tab","selectMenuItem","menu","wordsLoaded","contentArray","isMenuVisible","isSingleTextVisible","isResultVisible","isResultWrong","negativeWords","positiveWords","spllittedSentences","reservedSentences","seconds","minutes","secondsRemaining","intervalHandle","wrongIndexes","totalSecondsSpent","secondsSpent","minutesSpent","isModalOpen","exerciseMenu","action","wordMenu","testMenu","generalMenu","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Card","itemsPerRow","Description","exercisesComplete","testsComplete","totalScore","recreateTxt","recreateAudioTxt","fillTheGaps","placeSpaces","commonPhrases","engToRusWordsTotal","rusToEngWordsTotal","audioWordsTotal","cardWordsTotal","trueOrFalseWordsTotal","constructWordsTotal","exercisesReducer","Training","Main","ConstructWord","setStateOnStart","currentWord","currentFullWord","currentTranslation","currentMeaning","isStarterVisible","isCardVisible","isFinalVisible","inputValue","wordNameArray","nameArrayId","currentValue","currentImage","areButtonsVisible","isImageVisible","wordId","mistakeCount","animationState","fade","initialLoad","randomNameArray","random","document","body","addEventListener","myHandler","tempParam","checkValue","keyCode","continueTraining","startTraining","wordsLength","_ref2","el","updateConstructWords","newWord","currentName","compareWord","currentLetter","textContent","btn","Container","Label","onAnimationEnd","readOnly","maxLength","Divider","Message","Proverbs","shuffleArray","currentArray","negativeProverbs","positiveProverbs","proverbs","currentProverbName","proverb","constructedProverb","isCheckButtonVisible","isDKButtonVisible","isContinueButtonVisible","nameClass","setValue","indexTarget","parentElement","children","previousElementSibling","removeValue","dontKnow","checkProverb","join","_ref3","Cards","isButtonVisible","isTranslationVisible","showNavButtons","showContinueButton","result","renderComponent","checkResponse","Meta","extra","Audio","tempSearch","positiveResponse","isInputVisible","isLinkVisible","correctNameVisible","showImage","correctName","correctNameClass","metaClass","EnglishToRussian","flagState","disabled","selectedWord","currentButtonColor","RussianToEnglish","Videos","cons","videos","channelId","video","Fragments","texts","areTextsVisible","currentTempArray","currentStringArray","currentRandomWord","currentFinalArray","currentRandomArray","currentOneArray","activeInput","activeArray","sortedRandomArray","comparativeRandomArray","fragmentArrayIndexes","rightAnswers","livesArray","setMenuParams","difficulty","selectValue","readMore","buildLives","builtArray","backToTexts","pop","currentFullArray","currentWordArray","currentRandomIndexes","curArr","resetValue","activeTargetTitle","fragmentArray","fragmentDescription","getElementsByClassName","array","element","innerText","submitText","currentSortedArray","count","tryAgain","lives","livesCount","Pronunciation","startListening","submitResponse","objectTranscription","getElementById","positiveSentences","negativeSentences","currentSentence","currentSentenceContent","splittedText","newId","stopListening","callSubmit","resetTranscript","clearTranscription","transcript","newTranscript","substring","currentText","currentTextContent","showSubmitButtons","autostart","browserSupportsSpeechRecognition","recognition","isDeleteVisible","all","spread","textsRes","lang","SpeechRecognition","RecreateText","makeTextsVisible","createMenuItems","splitText","splittedSentenceVisible","startCountDown","tick","time","clearInterval","timeIsOut","setInterval","onDragStart","draggedItem","dataTransfer","effectAllowed","setData","setDragImage","onDragOver","draggedOverItem","onDragEnd","draggedIdx","checkSentences","splittedSentences","wrongCount","showFinal","selectCategory","menuChange","idx","draggable","RecreateAudioText","createTrack","currentTrack","Howl","html5","volume","audio","playing","playText","play","pause","InsertSpaces","inputContent","newContent","textsLoaded","isTaskStarted","setCaretPosition","ctrl","pos","setSelectionRange","focus","createTextRange","range","collapse","moveEnd","moveStart","select","updateValue","indexOfSpace","newstr","startExercise","TED","handleClick","currentPage","Number","Embed","autoplay","videoId","snippet","thumbnails","high","url","source","EngVid","BritishCouncil","Khan","currentComment","addComment","comments","temp","thumbsUp","likes","thumbsDown","dislikes","author","Coursera","JimmyFallon","JimmyKimmel","ConanOBrien","Ellen","JamesCorden","SethMeyers","StephenColbert","TextsList","activeTargetContent","activeTargetImage","Decks","constructMenu","level","arrayOfButtons","iconsArray","colors","arrayOfColors","allWords","currentWords","currentColor","isDropdownVisible","addToList","addedItems","addedFirst","sortedByTranslationUp","addedUp","sortedByNameUp","deleteItem","deleteAll","contentLoaded","firstResponse","secondResponse","style","sendWords","float","color","AudioList","categoryArray","startPlayer","currentState","playState","playAudio","currentAudio","backToDecks","Settings","changeColor","colorValue","email","password","colorOptions","BookList","createMenu","age","genres","sizes","ageTemp","sizesTemp","books","genre","hasOwnProperty","age_restriction","bookVal","bookValue","handleGenreChange","currentGenre","handleRatingChange","rating","handleLengthChange","currentLength","scrollToTop","window","scrollTo","myRef","offsetTop","allBoooks","areBooksVisible","isPreviewVisible","isSingleBookVisible","isBookNavPanelVisible","currentBook","currentPageIndex","currentArrayBooks","currentIndexArray","bookHTML","parsedBook","bookPages","currentEmail","errors","checkedItems","Map","checked","audiobooks","newAudio","currentAudioId","scrollForwardState","scrollBackwardState","currentVolume","currentRange","currentDuration","hours","allBooks","views","Rating","defaultRating","maxRating","pathname","booksReducer","Materials","Example","_this$state","getMenuParams","testChange","parentid","getAttribute","currentTest","Array","selectTest","testId","activeTest","testItem","correctResults","tasks","correct_answer","areTestsVisible","isSingleTestVisible","backToTests","curIndexTest","curIndexCheckbox","correctAnswers","incorrectAnswers","checkResults","resultsArray","finalResults","isTooltipVisible","prevState","boxShadow","variants","param","ind","label","Rightwrong","response","GrammarPresentSimple","goBack","fullData","stepId","currentTitle","currentDescription","currentExamples","examples","isBackButtonVisible","newfullData","consoleFunction","main_points","steps","exampleName","exampleTranslation","GrammarPastSimple","GrammarFutureSimple","GrammarPresentContinuos","GrammarPastContinuos","GrammarFutureContinuos","GrammarPresentPerfect","GrammarFuturePerfect","GrammarPastPerfect","GrammarPresentPerfectContinuous","GrammarPastPerfectContinuous","GrammarFuturePerfectContinuous","AudioPlayer","callFunctions","duration","currentId","soundVolume","on","decodingFinished","continuePlay","readTags","resetState","progress","currentMinutes","currentSeconds","jsmediatags","read","onSuccess","tag","currentTrackInfo","decodeTrackInfo","onError","error","info","currentTrackPicture","tags","artist","picture","_this$state$currentTr","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","currentTrackTitle","currentTrackArtist","playMusic","interval","startCycle","stop","changeVolume","nextTrack","prevTrack","muteSound","muted","mute","incTime","updateProgress","round","seek","toFixed","setSeek","currentTrackLength","order","tracksVisible","min","max","alt","Comments","datestring","getHours","getMinutes","uuidv4","updateComment","updateName","updateEmail","booksComments","noComments","Fragment","TextArea","ModalFont","changeValue","fontSizeTemp","changeFontFamily","fontFamilyTemp","changeFontWeight","fontWeightTemp","changeLineHeight","lineHeightTemp","applyFontSettings","closeModal","step","ModalColor","setFontColor","fontState","currentTarget","activeFontColor","setBgColor","bgState","activeBgColor","applyColorSettings","isColorModalOpen","colorScheme","data-index","colorvalue","WordFound","closeSearchModal","SelectedBook","splitIntoPages","pages","pageIndexes","pagesCount","ceil","currentMin","currentMax","txt","newTxt","newSentence","splittedPage","prevButton","currentPageId","nextButton","changePage","toggleComments","commentsVisible","changeFont","closeInputModal","match","myHeaders","Headers","append","that","obj1","obj2","selectedBook","fetch","arrayBuffer","buffer","TextDecoder","decode","isSearchModalOpen","src_WordFound","isFontModalOpen","src_ModalFont","src_ModalColor","page","index1","index2","index3","index4","src_Comments","initialState","commonReducer","arguments","undefined","objectSpread","toConsumableArray","commentId","vocabWord","createRootReducer","combineReducers","createStore","ReactDOM","render","es","BrowserRouter","basename","process","Route","exact","path","component","GrammarPresentContinuous","GrammarPastContinuous","GrammarFutureContinuous"],"mappings":"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","file":"static/js/main.c44f8e98.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon, Image, Modal,Header } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass ModalWord extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Modal className=\"modal-word\" trigger = {\r\n          <List.Content >\r\n            <span className=\"word-icon-wrapper\">\r\n               <Icon name='right eye' />\r\n            </span>\r\n          </List.Content>\r\n            } closeIcon>\r\n            <Modal.Content image>\r\n              <Image wrapped size='medium' src={this.props.image} />\r\n              <Modal.Description className=\"modal-word-description\">\r\n\r\n                <Header><h4><span onClick={this.props.voiceWordFromModal.bind(this)} ></span>{this.props.name} - {this.props.translation}                   <span>\r\n                    <Icon name = 'right microphone'/>\r\n                  </span> </h4></Header>\r\n                <div className=\"modal-icon-wrapper-delete\">\r\n                  <span>\r\n                    <Icon name = 'right trash alternate outline'/>\r\n                  </span>\r\n                </div>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n        </Modal>\r\n  );\r\n  }\r\n}\r\n\r\nexport default ModalWord;","let actions = {\r\n\tupdateTotalScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TOTAL_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\r\n\t},\r\n\tupdateTodayScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TODAY_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\t\t\r\n\t},\r\n\tupdateExerciseScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_EXERCISES_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateTestsScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsTotal: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_TOTAL',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsRemaining: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_REMAINING',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsStudied: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_STUDIED',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tchangeColorScheme: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_COLOR_SCHEME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tchangeSoundVolume: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_SOUND_VOLUME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleVocabModal: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_VOCAB_MODAL',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tselectVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\r\n\t},\r\n\tvoiceVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'VOICE_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tselectBook: function(book) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BOOK',\r\n\t\t\tpayload: book\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSize: function(fontSize) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SIZE',\r\n\t\t\tpayload: fontSize\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontFamily: function(fontFamily) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_FAMILY',\r\n\t\t\tpayload: fontFamily\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSpacing: function(lineHeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SPACING',\r\n\t\t\tpayload: lineHeight\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontWeight: function(fontWeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_WEIGHT',\r\n\t\t\tpayload: fontWeight\r\n\t\t}\t\t\r\n\t},\t\t\t\t\r\n\tselectFontColor: function(fontColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_COLOR',\r\n\t\t\tpayload: fontColor\r\n\t\t}\t\t\r\n\t},\r\n\tselectBgColor: function(backgroundColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BG_COLOR',\r\n\t\t\tpayload: backgroundColor\r\n\t\t}\t\t\r\n\t},\r\n\taddCommentToBook: function(id, comment) {\r\n\t\treturn {\r\n\t\t\ttype: 'ADD_COMMENT_TO_BOOK',\r\n\t\t\tpayload: {id, comment}\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleFontModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_FONT_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleColorModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_COLOR_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleSearchModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_SEARCH_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\tupdateEngToRus: function(word) {\r\n\t\tconsole.log(\"fired\")\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_ENG_TO_RUS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateRusToEng: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_RUS_TO_ENG',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateConstructedWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_CONSTRUCT_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateAudioWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_AUDIO_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateCardWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_CARD_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateTrueOrFalse: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TRUE_OR_FALSE',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n}\r\n\r\nexport default actions;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Icon, Image } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport ModalWord from './ModalWord';\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass VocabWord extends Component {\r\n\r\n\r\n  delete(id){\r\n    this.props.delete(id);\r\n  }\r\n\r\n\r\n   voiceWord = (word) =>{\r\n      speech.say(word);\r\n   }\r\n\r\n   openWord = (word) => {\r\n    console.log(word);\r\n    this.props.actions.selectVocabWord(word);\r\n    this.props.actions.toggleVocabModal(true);\r\n   }\r\n\r\n  render() {\r\n    var descriptionVisible = false;\r\n    return (\r\n      <List.Item >\r\n        <Fragment>\r\n          <Image avatar src={this.props.image} />\r\n          <List.Content className=\"word-content\" onClick={this.openWord.bind(this, this.props.word)}>\r\n            <List.Header as='a'>{this.props.name} - {this.props.transcription} - {this.props.translation}</List.Header>\r\n            {descriptionVisible ?         \r\n              <List.Description className=\"word-meaning\">\r\n                  <b>{this.props.meaning}</b>\r\n              </List.Description> :null\r\n            }\r\n          </List.Content>\r\n        </Fragment>  \r\n      <List.Content>\r\n            <Button.Group>\r\n              <span onClick={this.voiceWord.bind(this, this.props.name)} className=\"word-icon-wrapper\" title=\"Озвучить\">\r\n                 <Icon name = 'right microphone'/>\r\n              </span>\r\n              <span onClick={this.delete.bind(this, this.props.id)} className=\"word-icon-wrapper\" title=\"Удалить\">\r\n                  <Icon name='right trash alternate outline' />\r\n              </span>\r\n            </Button.Group>              \r\n      </List.Content>\r\n    </List.Item>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VocabWord);","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {  Dropdown} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass VocabSideMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       items: [],\r\n       options: [],\r\n       value: null\r\n\r\n    }\r\n  }\r\n\r\n  \tUNSAFE_componentWillMount() {\r\n   \r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const items = res.data;\r\n\t        this.setState({ items }, () => this.consoleParams() );\r\n\t      }) \r\n\t  }\r\n\r\n\t  consoleParams = () =>{\r\n\t  \tlet newItems = [];\r\n\t  \tthis.state.items.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.category, \r\n                        value: item.category \r\n                     }))\r\n\t  \tthis.setState({\r\n\t  \t\toptions: newItems\r\n\t  \t}, () => this.getUnique())\r\n\t  }\r\n\r\n\t  getUnique = () => {\r\n\t  \tvar arr = this.state.options;\r\n\t  \tvar comp = 'text';\r\n  \t\t\tconst unique = arr\r\n       \t\t.map(e => e[comp])\r\n   \t\t\t\t.map((e, i, final) => final.indexOf(e) === i && i)\r\n    \t\t\t.filter(e => arr[e]).map(e => arr[e]);\r\n\t   \tthis.setState({\r\n\t   \t\toptions: unique\r\n\t   \t})\t\t\r\n\t\t}\r\n\r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var value = this.state.value;\r\n      var newObj = {};\r\n      newObj['value'] = value;\r\n      newObj['options'] = options;\r\n      this.props.callbackFromParent(newObj);\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )\r\n\r\n    consoleProps = () =>{\r\n      console.log(this.props);\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical className=\"side-menu\">\r\n        <Menu.Item name='inbox' active >\r\n          <Dropdown placeholder='Выберите категорию'\r\n                    fluid\r\n                    clearable\r\n                    value={this.state.value} \r\n                    search\r\n                    key={this.state.options.id}\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} />\r\n        </Menu.Item>\r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabSideMenu;","import React, { Component } from 'react';\r\nimport {Menu, Image, Icon, Modal, Form, Button} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      inputLogin: '',\r\n      inputPassword: '',\r\n      doublePassword: '',\r\n      inputMail: ''\r\n    }\r\n  }\r\n\r\n  showModal = () =>{\r\n      let state = this.state.isModalVisible;\r\n      this.setState({\r\n        isModalVisible: !state\r\n      },() => console.log(this.state.isModalVisible) )\r\n  }\r\n\r\n    changeLogin = (event) =>{\r\n      this.setState({\r\n        inputLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    changePassword = (event) =>{\r\n      this.setState({\r\n        inputPassword: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMail = (event) =>{\r\n      this.setState({\r\n        inputMail: event.target.value\r\n      })\r\n    }\r\n\r\n    changeDoublePassword = (event) =>{\r\n      this.setState({\r\n        doublePassword: event.target.value\r\n      })\r\n    }    \r\n\r\n  render() {\r\n    return (\r\n        <Menu className=\"top-menu\">\r\n          <Menu.Item className=\"item-link\">\r\n            <Link to=\"/\">Главная</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link\">\r\n            <Link to=\"/vocabulary\">Словарь</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item className=\"item-link\">\r\n            <Link to=\"/grammar\">Грамматика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link\">\r\n            <Link to=\"/training\">Тренировки</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link\">\r\n            <Link to=\"/tests\">Тесты</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link\">\r\n            <Link to=\"/materials\">Материалы</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link\">\r\n            <Link to=\"/books\">Книги</Link>\r\n          </Menu.Item>           \r\n            <Menu.Item className=\"item-link\">\r\n              <Link to=\"/statistics\">Статистика</Link>\r\n            </Menu.Item>\r\n            <Menu.Menu position='right'>\r\n              <Menu.Item className=\"login-item\">\r\n                <Modal className=\"modal-form login-modal\" trigger={<Button className=\"login-button\">Войти</Button>} closeIcon>\r\n                  <Form className=\"input-form login-form\">\r\n                    <Form.Field>\r\n                      <label>Введите логин</label>\r\n                      <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите пароль</label>\r\n                      <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Button primary onClick={this.finishLogin}>Войти</Button>\r\n                  </Form>         \r\n                </Modal>              \r\n              </Menu.Item>\r\n              <Menu.Item className=\"login-item\">\r\n                <Modal className=\"modal-form login-modal\" trigger={<Button className=\"login-button\">Регистрация</Button>} closeIcon>\r\n                  <Form className=\"input-form login-form\">\r\n                    <Form.Field>\r\n                      <label>Введите логин</label>\r\n                      <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите e-mail</label>\r\n                      <input value={this.state.inputMail} onChange={this.changeMail} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите пароль</label>\r\n                      <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                    </Form.Field>                   \r\n                    <Form.Field>\r\n                      <label>Повторите пароль</label>\r\n                      <input value={this.state.doublePassword} onChange={this.changeDoublePassword} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Button primary onClick={this.finishRegistration}>Зарегистрироваться</Button>\r\n                  </Form>         \r\n                </Modal>              \r\n              </Menu.Item> \r\n              <Menu.Item className=\"menu-image\" >\r\n                {this.state.isModalVisible ?\r\n                  <div className=\"user-modal\">\r\n                    <div className=\"user-modal-pic\">\r\n                      <Image src=\"/icons/member.png\" />              \r\n                      <div className=\"user-modal-name\">\r\n                        <h5> User</h5>\r\n                        <h6>blabla@mail.com</h6>\r\n                      </div>                \r\n                    </div>\r\n                    <p><Link to=\"/statistics\"> <Icon name='chart bar outline' size='' />Статистика</Link></p>\r\n                    <p><Link to=\"/settings\"> <Icon name='setting' size=''  />Настройки</Link></p>\r\n                    <p><Link to=\"/statistics\"> <Icon name='log out' size=''  />Выйти</Link></p>\r\n                  </div> : null\r\n                }\r\n                <Image className=\"user-avatar\" onClick={this.showModal} src=\"/icons/member.png\" />\r\n              </Menu.Item>                \r\n            </Menu.Menu>                                                                     \r\n        </Menu>\r\n \t);\r\n  }\r\n}\r\n\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport { Button, Menu, Modal, Form } from 'semantic-ui-react'\r\nimport { Input} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass VocabTopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      search: '',\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: '',\r\n      categories: [],\r\n      categoryValue: 'all'  \r\n    };\r\n    this.delete = this.delete;\r\n    this.voiceWord = this.voiceWord;\r\n    this.voiceWordFromModal = this.voiceWordFromModal;\r\n    this.sortByName = this.sortByName;\r\n    this.sortByTranslation = this.sortByTranslation;\r\n    this.sortByDate = this.sortByDate;\r\n    this.newFunction = this.newFunction;  \r\n    \r\n  }\r\n\r\n  consoleProps = () =>{\r\n    console.log(this.props)\r\n  }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({search: event.target.value.substr(0,20)}, ()=> this.searchFunction() );\r\n    } \r\n\r\n//загрузка слова\r\n    changeNameValue = (event) =>{\r\n      this.setState({\r\n        inputName: event.target.value\r\n      })\r\n    }\r\n\r\n    changeTranslationValue = (event) =>{\r\n      this.setState({\r\n        inputTranslation: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMeaningValue = (event) =>{\r\n      this.setState({\r\n        inputMeaning: event.target.value\r\n      })\r\n    }    \r\n\r\n    changeCategoryValue = (event) =>{\r\n      this.setState({\r\n        inputCategory: event.target.value\r\n      })\r\n    } \r\n\r\n    changeImageValue = (event) =>{\r\n      this.setState({\r\n        inputImage: event.target.value\r\n      })\r\n    }\r\n\r\n    submitForm = (e) =>{\r\n    var newWords = this.props.words.slice();\r\n    const inputName = this.state.inputName;\r\n    const inputTranslation = this.state.inputTranslation;\r\n    const inputMeaning = this.state.inputMeaning;\r\n    const inputCategory = this.state.inputCategory;\r\n    const inputStringDate = new Date().toUTCString();\r\n    console.log(inputStringDate);\r\n    const inputDate = new Date(inputStringDate);\r\n    const inputImage = this.state.inputImage;\r\n    const inputId = 30;\r\n    const obj ={'id': inputId,\r\n          'name': inputName, \r\n          'translation': inputTranslation, \r\n          'meaning': inputMeaning,\r\n          'image': inputImage, \r\n          'date': inputDate,\r\n          'category': inputCategory\r\n          } \r\n\r\n    newWords.unshift(obj); \r\n  \r\n      this.setState({ words: newWords}, () => console.log(this.state.words) );\r\n      this.setState({\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: ''\r\n      }, () => this.newFunc() )\r\n    }    \r\n\r\n    newFunc = () =>{\r\n      var words = this.state.words;\r\n      this.props.callbackFromApp(words);\r\n    }\r\n\r\n    searchFunction = () =>{\r\n      var search = this.state.search;\r\n      this.props.searchFromApp(search);\r\n    }    \r\n\r\n  render() {\r\n\r\n   return (\r\n      <Menu text className=\"vocab-top-menu-wrapper vocab-top-menu-wrapper-color\">\r\n        <Menu.Item>\r\n          <Modal className=\"modal-form\" trigger={<Button primary>Добавить слово</Button>} closeIcon>\r\n            <Form className=\"input-form\">\r\n              <Form.Field>\r\n                <label>Введите слово</label>\r\n                <input value={this.state.inputName} onChange={this.changeNameValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите перевод</label>\r\n                <input value={this.state.inputTranslation} onChange={this.changeTranslationValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите категорию</label>\r\n                <input value={this.state.inputCategory} onChange={this.changeCategoryValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Выберите изображение</label>\r\n                <input value={this.state.inputImage} onChange={this.changeImageValue} type=\"file\" accept=\"image/png, image/jpeg\" />\r\n              </Form.Field>                   \r\n              <Button primary onClick={this.submitForm}>Добавить</Button>\r\n            </Form>         \r\n          </Modal>\r\n        </Menu.Item>\r\n        <Menu.Item name='removeWords'> \r\n          <Button primary >\r\n            Удалить\r\n          </Button>\r\n        </Menu.Item>        \r\n        <Menu.Item name='byName'> \r\n          <Button primary onClick = {this.props.sortByName}>\r\n            по имени\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byTranslation'> \r\n          <Button primary onClick = {this.props.sortByTranslation}>\r\n            по переводу\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byMeaning'> \r\n          <Button primary onClick = {this.props.sortByDate}>\r\n            по дате\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n         <Input icon='search' placeholder='Search...' onChange={this.updateSearch}/>\r\n        </Menu.Item> \r\n   \r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabTopMenu;","import React, { Component, Fragment } from 'react';\r\nimport { List, Button, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport VocabWord from'./VocabWord'\r\nimport VocabSideMenu from'./VocabSideMenu'\r\nimport TopMenu from './TopMenu'\r\nimport VocabTopMenu from './VocabTopMenu'\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Vocabulary extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twords: [],\r\n\t\t\tfilteredWords: [],\r\n\t\t\tisOldestFirst: true,\r\n\t\t\tvisible: 15,\r\n\t\t\tquery: '',\r\n\t\t\tsearchString: [],\r\n\t\t\tsearch: '',\r\n\t\t\tcategories: [],\r\n\t\t\tcategoryValue: 'all'\t\r\n\t\t};\r\n\t\tthis.delete = this.delete;\r\n\t\tthis.handler = this.handler.bind(this);\t\r\n\t\tthis.sortByName = this.sortByName;\r\n\t\tthis.sortByTranslation = this.sortByTranslation;\r\n\t\tthis.sortByDate = this.sortByDate;\r\n\t\r\n\t}\r\n\r\n handler() {\r\n    this.setState({\r\n     words: []\r\n    })\r\n  }\r\n\r\n//подгрузка слов\r\n\tloadMore = () => {\r\n\t    this.setState((prev) => {\r\n\t      return {visible: prev.visible + 15};\r\n\t    });\r\n\t  }\r\n\r\n//сортировка по дате\r\n\tsortByDate = () => {\r\n    const words = this.state.filteredWords.slice();\r\n    let newWords = [];\r\n    if(this.state.isOldestFirst){\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(b.date) - new Date(a.date);\r\n      });\r\n    }\r\n    else{\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(a.date) - new Date(b.date);\r\n      });      \r\n    }\r\n    this.setState({\r\n      isOldestFirst: !this.state.isOldestFirst,\r\n      filteredWords: newWords\r\n    })\r\n\t} \r\n\r\n//сортировка по имени\r\n\tsortByName = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name) /*console.log('a,b ', a,b) */ );\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name) /*console.log('b,a ', b,a) */ );\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n//сортировка по переводу\r\n\tsortByTranslation = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\t    axios.get('./working.json')\r\n\t      .then(res => {\r\n\t        const words = res.data;\r\n\t        this.setState({ words, filteredWords: words });\r\n\t      })\r\n\t  }\r\n\r\n   delete = (id) =>{\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t})\r\n   }\r\n\r\n   deleteWord = (id) => {\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t}, () => this.toggleModal());\r\n   }\r\n\r\n   myCallback = (dataFromChild) =>{\r\n\t   \tlet words = this.state.words.slice();\r\n\t   \tlet filteredWords;\r\n\t   \tif (dataFromChild.value !== '') {\r\n\t   \t\tfilteredWords = words.filter(item => item.category == dataFromChild.value); \r\n\t   \t} else {\r\n\t   \t\tfilteredWords = words;\r\n\t   \t} \t\r\n   \t\tthis.setState({\r\n   \t\t\tfilteredWords,\r\n   \t\t\tcategoryValue: dataFromChild.value,\r\n   \t\t\toptions: dataFromChild.options\r\n   \t\t}) \r\n   }\r\n\r\n   topMenuCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\twords: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   searchCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tsearch: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   consoleState = () => {\r\n   \tconsole.log(this.state.categoryValue);\r\n   }\r\n\r\n   toggleModal = () => {\r\n   \tlet value = this.props.store.vocabModalOpen;\r\n   \tthis.props.actions.toggleVocabModal(!value);\r\n   }\r\n\r\n\r\n\r\n  render() {  \t\r\n  \tlet filteredWords = this.state.filteredWords.slice().filter(\r\n  \t\t(word) =>{\r\n  \t\t\treturn word.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n  \t\t}\r\n  \t);  \t\r\n    return (\r\n    \t<Fragment>\r\n    \t\t{this.props.store.vocabModalOpen ?\r\n\t    \t\t<div className=\"modal-container\">\r\n\t    \t\t\t<div className=\"modal-word\">\r\n\t    \t\t\t\t<span title=\"Закрыть\" onClick={this.toggleModal} className=\"modal-word__icon modal-word__icon--close\"><Icon name = 'close' size=\"large\" /></span>\r\n\t    \t\t\t\t<div className=\"modal-word__image\">\r\n\t    \t\t\t\t\t<img src = {this.props.store.selectedVocabWord.image} />\r\n\t    \t\t\t\t</div>\r\n\t    \t\t\t\t<p className=\"modal-word__title\">{this.props.store.selectedVocabWord.name} - <span className=\"modal-word__translation\">{this.props.store.selectedVocabWord.translation}</span></p>\r\n\t    \t\t\t\t<span onClick={this.deleteWord.bind(this, this.props.store.selectedVocabWord.id)} title=\"Удалить\" className=\"modal-word__icon modal-word__icon--delete\"><Icon size=\"large\" name = 'trash alternate outline'/></span>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n    \t\t: null}\r\n\t    \t<div className=\"content-wrapper\">\r\n\t    \t\t<TopMenu></TopMenu>\r\n\t    \t\t<div className=\"vocab-side-menu\">\r\n\t    \t\t\t<VocabSideMenu callbackFromParent={this.myCallback} items={this.state.words} ></VocabSideMenu>\r\n\t    \t\t\t<div className=\"vocab-top-menu\">\r\n\t    \t\t\t\t<VocabTopMenu \r\n\t    \t\t\t\t\thandler = {this.handler}\r\n\t    \t\t\t\t\tsortByName={this.sortByName}\r\n\t    \t\t\t\t\tsortByTranslation={this.sortByTranslation}\r\n\t    \t\t\t\t\tsortByDate ={this.sortByDate}\r\n\t     \t\t\t\t\tcallbackFromApp={this.topMenuCallback}\r\n\t    \t\t\t\t\tsearchFromApp={this.searchCallback} \r\n\t    \t\t\t\t\t>\r\n\t\t\t\t\t\t</VocabTopMenu>\r\n\t\t\t \t\t\t<List className=\"vocab-list\" relaxed='very'>\r\n\t\t\t\t\t\t\t{filteredWords.slice(0, this.state.visible).map((word,index) => \r\n\t\t\t\t\t\t\t\t(this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === word.category) && \r\n\t\t\t\t\t\t\t\t<VocabWord\r\n\t\t\t\t\t\t\t\t\tword = {word}\r\n\t\t\t\t\t\t\t\t\tdelete={this.delete}\r\n\t\t\t\t\t\t\t\t\tid={word.id}\r\n\t\t\t\t\t\t\t\t\tkey={word.id} \r\n\t\t\t\t\t\t\t\t\tname={word.name}\r\n\t\t\t\t\t\t\t\t\ttranscription = {word.transcription} \r\n\t\t\t\t\t\t\t\t\ttranslation={word.translation} \r\n\t\t\t\t\t\t\t\t\tmeaning={word.meaning}\r\n\t\t\t\t\t\t\t\t\timage={word.image} \r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t</VocabWord>\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t  \t\t\t</List>\r\n\t\t\t  \t\t\t<div className=\"load-more-button\">\r\n\t\t\t\t\t\t\t{this.state.visible < this.state.words.length &&\r\n\t\t\t\t            \t<Button onClick={this.loadMore} primary>Загрузить ещё</Button>\r\n\t\t\t\t          \t}\t\t\t\t  \t\t\t\t\r\n\t\t\t  \t\t\t</div>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    \t<footer></footer>\r\n\t    </Fragment>\t\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.vocabularyReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vocabulary);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n//import { pronounce } from \"node-pronounce\";\r\n\r\nclass SplittedWords extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.fileInputRef = React.createRef();\r\n    this.state = {\r\n      wordsEl: [],\r\n      words: [],\r\n      selected: '',\r\n      loaded: false,\r\n      isModalFoundOpen: false,\r\n      isModalInputOpen: false,\r\n      sentence: \"arched owl Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('/words_full.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let splitted = this.state.sentence.split(\" \");\r\n        this.setState({ \r\n          words, splitted, loaded: true\r\n      })    \r\n    })\r\n  } \r\n\r\n  searchForWord = (item, e) => {\r\n    switch (e.detail) {\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        let words = this.state.words.slice();\r\n        let newItem = item.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n        let found = words.find(x => x.name === newItem);\r\n        if (found) {\r\n          this.setState({\r\n            found\r\n          }, () => this.toggleFoundModal())\r\n        } else {\r\n          this.setState({\r\n            selected: newItem\r\n          }, () => this.toggleInputModal())\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }    \r\n  } \r\n\r\n  toggleFoundModal = () => {\r\n    this.setState({\r\n      isModalFoundOpen: !this.state.isModalFoundOpen\r\n    })\r\n  }\r\n\r\n  toggleInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: !this.state.isModalInputOpen\r\n    })\r\n  }\r\n\r\n  changeFile = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      filePath: e.target.value\r\n    })\r\n  }\r\n\r\n  changeTranslation = (e) => {\r\n    this.setState({\r\n      translation: e.target.value\r\n    })\r\n  }\r\n\r\n  changeDefinition = (e) => {\r\n    this.setState({\r\n      definition: e.target.value\r\n    })\r\n  }\r\n\r\n  addToWords = () => {\r\n    let word = {};\r\n    word.name = this.state.selected;\r\n    word.transription = this.state.transcription;\r\n    word.translation = this.state.translation;\r\n    word.category = \"common\";\r\n    word.id = 1;\r\n    word.date = new Date();\r\n    word.definition = this.state.definition;\r\n    word.image = this.state.filePath;\r\n  }\r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.isModalFoundOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n              <div className=\"word-modal\">\r\n                <div className=\"word-modal__image\">\r\n                  <img src=\"word-modal__picture\" src = {this.state.found.image}/>\r\n                </div>\r\n                <div className=\"word-modal__description\">\r\n                  <p className=\"word-modal__title\">{this.state.found.name} - {this.state.found.translation}</p>\r\n                  <p className=\"word-modal__meaning\">{this.state.found.definition}</p>   \r\n                  <Button primary onClick={this.toggleFoundModal}>Закрыть</Button>              \r\n                </div>\r\n              </div>              \r\n            </div>\r\n          : null}\r\n          {this.state.isModalInputOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n              <div className=\"word-modal\">\r\n                <div className=\"word-modal__description\">\r\n                  <p className=\"word-modal__title\">{this.state.selected}</p>\r\n                  <textarea value = {this.state.translation} onChange = {this.changeTranslation} type = \"text\" className=\"word-modal__textarea\" placeholder=\"Добавить перевод\" />\r\n                  <textarea value = {this.state.definition} onChange = {this.changeDefinition} type = \"text\" className=\"word-modal__textarea\" placeholder=\"Добавить значение\" />   \r\n                  <Button\r\n                      primary\r\n                      content=\"Выбрать картинку\"\r\n                      labelPosition=\"left\"\r\n                      icon=\"file\"\r\n                      onClick={() => this.fileInputRef.current.click()}\r\n                      className=\"word-modal__file\"\r\n                  />\r\n                  <input ref={this.fileInputRef}\r\n                         type=\"file\"\r\n                         hidden\r\n                         onChange={this.changeFile} />\r\n                  <div className=\"word-modal__buttons\">\r\n                    <Button primary onClick={this.addToWords}>Добавить</Button>\r\n                    <Button primary onClick={this.toggleInputModal}>Закрыть</Button>                      \r\n                  </div>\r\n                </div>\r\n              </div>              \r\n            </div>\r\n          : null}\r\n          {this.state.loaded ?\r\n            <div className=\"splitted-wrapper\">\r\n              {this.state.splitted.map((item, index) => \r\n                <span onClick={this.searchForWord.bind(this, item)}>{`${item} `}</span>\r\n              )}\r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SplittedWords;","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass GrammarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      grammar: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          const grammar = res.data;\r\n          this.setState({ grammar });\r\n        })\r\n    } \r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {(this.state.grammar.length) ?\r\n          <Table celled fixed className=\"grammar-list\">\r\n            <Table.Header>\r\n              <Table.Row columns={1} >\r\n                <Table.HeaderCell>Грамматические правила</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>        \r\n            {this.state.grammar[0].rules.map((item,index) =>\r\n              <Table.Body key={index}>\r\n                <Table.Row columns={3}>\r\n                  <Table.Cell className=\"grammar-title\">\r\n                    {item.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-description\">\r\n                    {item.description}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-button\">\r\n                    <div className=\"link-wrapper\">\r\n                      <Link to={item.link}>Начать</Link>\r\n                    </div>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            )}\r\n          </Table>: null }        \r\n          </div>\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GrammarList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Statistics extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      loaded: false,\r\n      testsLoaded: false,\r\n      wordsLoaded: false,\r\n      words: [],\r\n      contentArray: [],\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n      isModalOpen: false,\r\n      exerciseMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"exercise\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"exercise\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"exercise\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"exercise\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ],\r\n      wordMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"word\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"word\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"word\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"word\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ],\r\n      testMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"test\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"test\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"test\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"test\", \"all\"],\r\n          \"active\": true         \r\n        }        \r\n      ],\r\n      generalMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"general\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"general\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"general\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"general\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let exercises = this.props.store.exercises;\r\n      for (var prop in exercises) {\r\n        let val = exercises[prop];\r\n        this.setState({\r\n          [prop]: val\r\n        })\r\n      } \r\n      let learnedWords = {}      \r\n      learnedWords.engToRusWords = this.props.store.exercises.engToRusWords;\r\n      learnedWords.rusToEngWords = this.props.store.exercises.rusToEngWords;\r\n      learnedWords.cardWords = this.props.store.exercises.cardWords;\r\n      learnedWords.constructWords = this.props.store.exercises.constructWords;\r\n      learnedWords.audioWords = this.props.store.exercises.audioWords;\r\n      learnedWords.trueOrFalseWords = this.props.store.exercises.trueOrFalseWords;\r\n      for (var prop in learnedWords) {\r\n        let val = learnedWords[prop];\r\n        this.countWords(val, prop + \"Total\")\r\n      } \r\n    this.setState({\r\n      learnedWords,\r\n      tests: this.props.store.tests,    \r\n      loaded: true\r\n    }, () => { this.countTests(this.state.tests); \r\n               this.setState({ wordsLoaded: true})               \r\n             })\r\n\r\n\r\n    axios.get('/words_full.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n        this.setState({ \r\n          words\r\n        }, () => this.splitIntoArrays());\r\n      })        \r\n  }   \r\n\r\n  countTests = (params) => {\r\n    let percentage, mark;\r\n    if (params.length > 1) {\r\n      percentage = params.reduce((a, b) => a.percentage + b.percentage) / this.state.tests.length;\r\n      mark = params.reduce((a, b) => a.score + b.score);\r\n    } else if (params.length === 1){\r\n      percentage = params[0].percentage;\r\n      mark = params[0].score;\r\n    } else {\r\n      percentage = 0;\r\n      mark = 0;\r\n    }\r\n    this.setState({\r\n      percentage, mark, testsLoaded: true\r\n    }) \r\n  }\r\n\r\n  countWords = (params, name) => {\r\n    let total;\r\n    if (params.length > 1) {\r\n      total = params.reduce((a, b) => a.wordsTrained.length + b.wordsTrained.length);\r\n    } else if (params.length === 1) {\r\n      total = params[0].wordsTrained.length;\r\n    } else {\r\n      total = 0;\r\n    }    \r\n    this.setState({\r\n      [name]: total\r\n    })\r\n  }\r\n\r\n  splitIntoArrays = () =>{\r\n    var nameArrays = Object.create(null);\r\n    let words = this.state.words.slice();\r\n    words.forEach(function(word) {\r\n      var nameArray = nameArrays[word.category];\r\n      if (!nameArray) {\r\n        nameArray = nameArrays[word.category] = [];\r\n      }\r\n      nameArray.push(word);\r\n    });\r\n  \tlet names = Object.keys(nameArrays);\r\n\r\n  \tlet values = Object.values(nameArrays);\r\n  \tlet finalData = [];\r\n  \tfor (var i = 0; i < names.length; i++) {\r\n  \t\tlet tmp = {};\r\n  \t\tlet lng = values[i].length;\r\n  \t\tlet fin = Math.floor(lng/3);\r\n      \ttmp['Всего слов'] = lng;\r\n      \ttmp['Изучено слов'] = fin;\r\n      \ttmp['name'] = names[i];\r\n      \tfinalData.push(tmp);\r\n  \t}\r\n\r\n  \tthis.setState({\r\n  \t\tnameArrays,\r\n  \t\tbarChartData: finalData\r\n  \t}, () => this.getYesterdaysDate())     \r\n\r\n  }\r\n\r\n\tgetYesterdaysDate = () => {\r\n\r\n    let data = this.state.barChartData.slice(0,7);\r\n    let params = this.state.barChartData.slice(0,7);\r\n    const sorter = {\r\n      \"monday\": 1,\r\n      \"tuesday\": 2,\r\n      \"wednesday\": 3,\r\n      \"thursday\": 4,\r\n      \"friday\": 5,\r\n      \"saturday\": 6,\r\n      \"sunday\": 7\r\n    }\r\n\r\n    let newParams = params.sort((a, b) => {\r\n      let item1 = a.name.toLowerCase();\r\n      let item2 = b.name.toLowerCase();\r\n      return sorter[item1] - sorter[item2];\r\n    });  \r\n\r\n\r\n\t\tvar days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    let dateArray = [];\t\t\r\n    var date = new Date();\r\n    let i = 0;\r\n    while ( i < 7) {\r\n\t\t  date.setDate(date.getDate() - 1);\r\n      //date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\t    dateArray.push(days[date.getDay()]); \r\n\t    i++;  \t\r\n    }\r\n    for (var j = 0; j < data.length; j++) {\r\n      data[j][\"name\"] = dateArray[j]\r\n    }\r\n    data.sort((a, b) => {\r\n      let item1 = a.name.toLowerCase();\r\n      let item2 = b.name.toLowerCase();\r\n      return sorter[item1] - sorter[item2];\r\n    });      \r\n\r\n    this.setState({\r\n      lineChartData: data\r\n    })\r\n\t}\r\n\r\n  consoleState = () =>{\r\n    console.log(this.state);\r\n  }\r\n\r\n  openModal = () => {\r\n    /*\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    }) */\r\n  }\r\n\r\n  inDayRange = (option) => {\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let today = new Date(`${year}-${month + 1}-${day}`);\r\n\r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return (date.getTime() <= today.getTime() + 86400000 && date.getTime() >= today.getTime())\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)    \r\n\r\n  }\r\n\r\n  inWeekRange = (option) => {\r\n\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let weekDay = current.getDay();\r\n    let weekDays = 7;\r\n    let start = new Date(`${year}-${month + 1}-${day}`);\r\n    \r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return ( \r\n        date.getTime() <= (start.getTime() + (86400000 * (7 - weekDay))) && date.getTime() >= (start.getTime() - (86400000 * weekDay))\r\n      )\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)\r\n  }\r\n\r\n  inMonthRange = (option) => {\r\n\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let totalDays = daysInMonth(month, year);\r\n    let start = new Date(`${year}-${month + 1}-${1}`);\r\n\r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return (date.getTime() <= start.getTime() + (86400000 * totalDays) && date.getTime() >= start.getTime())\r\n    }\r\n\r\n    function daysInMonth (month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option);\r\n\r\n  }\r\n\r\n  inAllRange = (option) => {\r\n\r\n    function ifInRange(item) {\r\n      return item;\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)\r\n  }  \r\n\r\n  applyFunction = (func, option) => {\r\n    let exercises = this.props.store.exercises;\r\n    let tests = this.props.store.tests;\r\n\r\n    if (option === 'exercise') {\r\n      for (var prop in exercises) {\r\n        let val = exercises[prop].filter(func)\r\n        this.setState({\r\n          [prop]: val\r\n        })\r\n      } \r\n\r\n    } else if (option === 'test') {\r\n        tests = tests.filter(func);\r\n        this.setState({\r\n          tests\r\n        }, () => this.countTests(this.state.tests))\r\n    } else if (option === 'word') {\r\n        let learnedWords = {}\r\n        learnedWords.engToRusWords = this.props.store.exercises.engToRusWords;\r\n        learnedWords.rusToEngWords = this.props.store.exercises.rusToEngWords;\r\n        learnedWords.cardWords = this.props.store.exercises.cardWords;\r\n        learnedWords.constructWords = this.props.store.exercises.constructWords;\r\n        learnedWords.audioWords = this.props.store.exercises.audioWords;\r\n        learnedWords.trueOrFalseWords = this.props.store.exercises.trueOrFalseWords;\r\n        for (var prop in learnedWords) {\r\n          learnedWords[prop] = learnedWords[prop].filter(func);\r\n          this.countWords(learnedWords[prop], prop + \"Total\");\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n  switchTab = (tab, id) => {\r\n    this.selectMenuItem(tab[0], id);\r\n    if (tab[1] === 'today') {\r\n      this.inDayRange(tab[0]);\r\n    } else if (tab[1] === 'week') {\r\n      this.inWeekRange(tab[0]);\r\n    } else if (tab[1] === 'month') {\r\n      this.inMonthRange(tab[0]);\r\n    } else {\r\n      this.inAllRange(tab[0]);\r\n    }\r\n  }\r\n\r\n  selectMenuItem = (category, id) => {\r\n    let val = category + \"Menu\";\r\n    let menu = this.state[val].slice();\r\n    for (var i = 0; i < menu.length; i++) {\r\n      if (menu[i].id === id) {\r\n        menu[i].active = true;\r\n      } else {\r\n        menu[i].active = false;\r\n      }\r\n    }\r\n    this.setState({ [val]: menu });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          {this.state.isModalOpen ?\r\n            <div className=\"statistics-overlay\">\r\n              <div className=\"statistics-modal\">\r\n                  <BarChart\r\n                    width={600}\r\n                    height={350}\r\n                    data={this.state.barChartData}\r\n                    margin={{\r\n                      top: 20, right: 20, left: 20, bottom: 20,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n                  </BarChart>                \r\n              </div>\r\n            </div>\r\n          : null}\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              <Card.Group className=\"texts-cards statistics-wrapper\" itemsPerRow={1} >\r\n            {/*\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Графики</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n    \t\t              <BarChart\r\n    \t\t                width={1200}\r\n    \t\t                height={450}\r\n    \t\t                data={this.state.barChartData}\r\n    \t\t                margin={{\r\n    \t\t                  top: 20, right: 30, left: 20, bottom: 5,\r\n    \t\t                }}\r\n    \t\t              >\r\n    \t\t                <CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t\t                <XAxis dataKey=\"name\" />\r\n    \t\t                <YAxis />\r\n    \t\t                <Tooltip />\r\n    \t\t                <Legend />\r\n    \t\t                <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n    \t\t                <Bar dataKey=\"Изучено слов\" fill=\"#444444\" />\r\n    \t\t              </BarChart>\r\n                    </Card.Description>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <LineChart\r\n                        width={800}\r\n                        height={450}\r\n                        data={this.state.lineChartData}\r\n                        margin={{\r\n                          top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"Всего слов\" stroke=\"#3281F0\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"Изучено слов\" stroke=\"#444444\" />\r\n                      </LineChart>\r\n                    </Card.Description>                    \r\n                  </Card.Content>\r\n                </Card> */}\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Общая статистика</Card.Header>\r\n                    {(this.state.testsLoaded && this.state.wordsLoaded && this.state.loaded) ?\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\">\r\n                            <span>\r\n                              <Icon name = 'plus square outline'/>\r\n                            </span>\r\n                            <h1>{this.state.words.length}</h1>\r\n                            <p>Слов в словаре</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'file text'/></span>\r\n                            <h1>{this.props.store.exercisesComplete}</h1>\r\n                            <p>Тренировок пройдено</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'gem outline'/></span>\r\n                            <h1>{this.props.store.testsComplete}</h1>\r\n                            <p>Тестов выполнено</p>\r\n                          </div>                        \r\n                      </div>\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.props.store.totalScore}</h1>\r\n                            <p>Баллов набрано</p>\r\n                          </div>\r\n                      </div>\r\n                    </Card.Description> : null } \r\n                  </Card.Content>\r\n                </Card>                \r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Упражнений выполнено</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.exerciseMenu.map((item, index) => \r\n                        <a onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</a>\r\n                      )}\r\n                    </div>\r\n                    {this.state.loaded ?\r\n                      <Card.Description className=\"statistics-inner-wrapper\">\r\n                        <div className=\"statistics-container\">\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span>\r\n                                <Icon name = 'plus square outline'/>\r\n                              </span>\r\n                              <h1>{this.state.engToRusWords.length}</h1>\r\n                              <p>Перевод с английского</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'file text'/></span>\r\n                              <h1>{this.state.rusToEngWords.length}</h1>\r\n                              <p>Перевод с русского</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'gem outline'/></span>\r\n                              <h1>{this.state.audioWords.length}</h1>\r\n                              <p>Аудиотренировка</p>\r\n                            </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\" onClick={this.openModal}>\r\n                            <div className=\"statistics-item\">\r\n                              <span><Icon name = 'book'/></span>\r\n                              <h1>{this.state.cardWords.length}</h1>\r\n                              <p>Словарные карточки</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'question circle outline'/></span>\r\n                              <h1>{this.state.trueOrFalseWords.length}</h1>\r\n                              <p>Верно - неверно</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'check circle outline'/></span>\r\n                              <h1>{this.state.constructWords.length}</h1>\r\n                              <p>Конструктор слов</p>\r\n                            </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.recreateTxt.length}</h1>\r\n                            <p>Воспроизведи текст</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'check circle outline'/></span>\r\n                            <h1>{this.state.recreateAudioTxt.length}</h1>\r\n                            <p>Воспроизведи аудиотекст</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.fillTheGaps.length}</h1>\r\n                            <p>Заполни пробелы</p>\r\n                          </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.placeSpaces.length}</h1>\r\n                            <p>Расставь пробелы</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.commonPhrases.length}</h1>\r\n                            <p>Крылатые фразы</p>\r\n                          </div>\r\n                        </div>                                              \r\n                      </Card.Description>\r\n                    : null}\r\n                  </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Слов изучено</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.wordMenu.map((item, index) => \r\n                        <a onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</a>\r\n                      )}\r\n                    </div>\r\n                    {this.state.wordsLoaded ?\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span>\r\n                              <Icon name = 'plus square outline'/>\r\n                            </span>\r\n                            <h1>{this.state.engToRusWordsTotal}</h1>\r\n                            <p>Перевод с английского</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'file text'/></span>\r\n                            <h1>{this.state.rusToEngWordsTotal}</h1>\r\n                            <p>Перевод с русского</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'gem outline'/></span>\r\n                            <h1>{this.state.audioWordsTotal}</h1>\r\n                            <p>Аудиотренировка</p>\r\n                          </div>                        \r\n                      </div>\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.cardWordsTotal}</h1>\r\n                            <p>Словарные карточки</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.trueOrFalseWordsTotal}</h1>\r\n                            <p>Верно - неверно</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'check circle outline'/></span>\r\n                            <h1>{this.state.constructWordsTotal}</h1>\r\n                            <p>Конструктор слов</p>\r\n                          </div>                        \r\n                      </div>             \r\n                    </Card.Description>\r\n                    : null}\r\n                  </Card.Content>\r\n                </Card>                \r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Тесты</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.testMenu.map((item, index) => \r\n                        <a onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</a>\r\n                      )}\r\n                    </div>     \r\n                    {this.state.testsLoaded ?               \r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                        <div className=\"statistics-item\" onClick={this.openModal}>\r\n                          <span><Icon name = 'book'/></span>\r\n                          <h1>{this.state.tests.length}</h1>\r\n                          <p>Тестов выполнено</p>\r\n                        </div>\r\n                        <div className=\"statistics-item\">\r\n                          <span><Icon name = 'check circle outline'/></span>\r\n                          <h1>{this.state.percentage}</h1>\r\n                          <p>Процент выполнения</p>\r\n                        </div>\r\n                        <div className=\"statistics-item\">\r\n                          <span><Icon name = 'question circle outline'/></span>\r\n                          <h1>{this.state.mark}</h1>\r\n                          <p>Баллов набрано</p>\r\n                        </div>                        \r\n                      </div>\r\n                    </Card.Description>\r\n                    : null }\r\n                  </Card.Content>\r\n                </Card>                                \r\n              </Card.Group>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.exercisesReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Training extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper training-cards\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/englishtorussian.jpg' />              \r\n              </div>\r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/englishtorussian\">С английского на русский </Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/russiantoenglish.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/russiantoenglish\">С русского на английский</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/memory.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/cards\">Словарные карточки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/audio.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/audio\">Аудиотренировка</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/construct.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/constructword\">Конструктор слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n          {/*\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/pronunciation.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/pronunciation\">Произношение</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>  \r\n          */}\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/fillthegaps.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/fragments\">Заполни пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreatetext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreatetext\">Воспроизведи текст</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreateaudiotext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreateaudiotext\">Воспроизведи аудиоисторию</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/insertspaces.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/insertspaces\">Расставьте пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/truefalse.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/rightwrong\">Верно-неверно</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/proverbs.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/proverbs\">Пословицы и поговорки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>                                                                                                               \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Training;","import React, { Component, Fragment } from 'react';\r\nimport {Image } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n}\r\n \r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper recommended-wrapper\">\r\n          \t<div className=\"main-section section-1\">\r\n          \t  <div className=\"section-overlay\">\r\n          \t  \t<div className=\"section-header\">\r\n          \t  \t\t<h2>Лучший способ выучить язык</h2>\r\n          \t  \t\t<Link to=\"/training\" className=\"outline-link\">Начать учиться</Link>\r\n          \t  \t</div>\r\n          \t  </div>              \r\n            </div>\r\n          \t<div className=\"advantage-section\">\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/settings.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Простой интерфейс</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notebook.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Удобный словарь</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/user.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разнообразные тренировки</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notepad.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Большое количество обучающих материалов</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/house.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Грамматика и тесты</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/pen.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Полностью бесплатно</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>          \t                \r\n            </div>            \r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image words-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Изучайте слова</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>20 тематических наборов</li>\r\n\t            \t\t\t<li>Более 2000 слов</li>\r\n\t            \t\t\t<li>Словарь с расширенным функционалом</li>            \t\t\t            \t\t\t\r\n\t            \t\t\t<li>Возможность изучать добавленные слова</li>            \t\t\t\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/vocabulary\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Тренируйтесь</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>11 видов тренировок</li>\r\n\t            \t\t\t<li>Тренировка чтения, говорения и понимания на слух</li>\r\n\t            \t\t\t<li>Возможность добавлять на тренировку изучаемые слова</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/training\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image training-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image grammar-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Учите грамматику</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Изучение грамматики английского языка</li>\r\n\t            \t\t\t<li>Наглядные примеры</li>\r\n\t            \t\t\t<li>Тесты на любую тематику</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/grammar\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Улучшайте навыки чтения</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Множество текстов и аудиотекстов различной тематики</li>\r\n\t            \t\t\t<li>Тексты разного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/texts\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image texts-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n          {/*\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image books-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Читайте книги</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Книги на любой вкус</li>\r\n\t            \t\t\t<li>Возможность слушать аудиокниги</li>\r\n\t            \t\t\t<li>Книги различного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/books\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div> \r\n          */}  \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message, TextArea} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport './style.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ConstructWord extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    \tthis.btn = React.createRef();\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentWord: '',\r\n        currentFullWord: null,\r\n        currentTranslation: '',\r\n        currentMeaning: '',\r\n        isStarterVisible: true,\r\n        isCardVisible: false,\r\n        isFinalVisible: false,\r\n        inputValue: null,\r\n        nameArray: [],\r\n        wordNameArray: [],\r\n        nameArrayId: 0,\r\n        currentValue: '',\r\n        search: '',\r\n        currentImage: null,\r\n        areButtonsVisible: true,\r\n        isImageVisible: false,\r\n        wordId: 0,\r\n        mistakeCount: 0,\r\n        animationState: false,\r\n        fade: false        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/vocabulary2.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        const currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n        const currentTranslation = words[id].translation;\r\n        const currentImage = words[id].image;\r\n        const currentMeaning = words[id].meaning;\r\n        const nameArray = currentWord.split('');\r\n        const randomNameArray = currentWord.split('');\r\n        for (let i = randomNameArray.length - 1; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n        }\r\n        const wordNameArray = [];\r\n        for (var i = 0; i < nameArray.length; i++) {\r\n          wordNameArray.push(' ');\r\n        }\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          currentFullWord\r\n          });\r\n      })\r\n      document.body.addEventListener(\"keydown\", this.myHandler);\r\n    }\r\n \r\n  myHandler = (e) =>{\r\n    const fade = this.state.fade;\r\n    let mistakeCount = this.state.mistakeCount;\r\n    let currentFullWord = this.state.currentFullWord;\r\n    let negativeWords = this.state.negativeWords.slice();\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let currentValue = this.state.currentValue;\r\n    let currentWord = this.state.currentWord;      \r\n    let id = this.state.nameArrayId;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let tempParam;\r\n    if ((e.key=== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        currentValue = currentValue + e.key;\r\n        this.state.wordNameArray[id] = e.key;\r\n        for (var i = 0; i < randomNameArray.length; i++) {\r\n          if (randomNameArray[i] === e.key) {\r\n            tempParam = i;\r\n            break;\r\n          }\r\n        }\r\n        randomNameArray.splice(tempParam,1);       \r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: e.key,\r\n          randomNameArray\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((e.key !== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        mistakeCount++;\r\n        this.setState({\r\n          mistakeCount,\r\n          fade: true\r\n        })\r\n      }\r\n      else if((e.keyCode == '13') && (this.state.isCardVisible) ){\r\n        this.continueTraining();\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false\r\n        })        \r\n      }\r\n  }   \r\n\r\n  startTraining = () =>{\r\n    this.setState({\r\n        isStarterVisible: false,\r\n        isCardVisible: true\r\n    })\r\n  }\r\n\r\n\r\n    continueTraining = () =>{\r\n  \t  let mistakeCount = this.state.mistakeCount;\r\n  \t  let currentFullWord = this.state.currentFullWord;\r\n  \t  let negativeWords = this.state.negativeWords.slice();\r\n  \t  let positiveWords = this.state.positiveWords.slice();\r\n  \t  let currentValue = this.state.currentValue;\r\n  \t  let currentWord = this.state.currentWord;\t  \r\n  \t\tif (mistakeCount > 2){\r\n  \t\t\tnegativeWords.push(currentFullWord);\r\n  \t\t}\r\n\r\n  \t\telse if(currentWord !== currentValue){\r\n  \t\t  \tnegativeWords.push(currentFullWord);\r\n  \t\t  \tthis.setState({\r\n  \t\t  \t\tnegativeWords\r\n  \t\t  \t})\r\n  \t\t}\r\n  \t\telse{\r\n  \t\t\tpositiveWords.push(currentFullWord)\r\n  \t\t} \r\n      let id = this.state.id;\r\n      let wordsLength = this.state.words.length;\r\n      let words = this.state.words; \r\n\r\n      id = id + 1;\r\n      if(id < wordsLength) {\r\n      const currentFullWord = words[id];\r\n      const currentWord = words[id].name;\r\n  \t\tconst currentTranslation = words[id].translation;\r\n  \t\tconst currentImage = words[id].image;\r\n  \t\tconst currentMeaning = words[id].meaning;        \r\n  \t\tconst nameArray = currentWord.split('');\r\n  \t\tconst randomNameArray = currentWord.split('');\r\n  \t\tfor (let i = randomNameArray.length - 1; i > 0; i--) {\r\n  \t\t    const j = Math.floor(Math.random() * (i + 1));\r\n  \t\t    [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n  \t\t}\r\n  \t\tconst wordNameArray = [];\r\n  \t\tfor (var i = 0; i < nameArray.length; i++) {\r\n  \t\t\twordNameArray.push(' ');\r\n  \t\t}\r\n        this.setState({\r\n            id,\r\n            words, \r\n            currentWord,\r\n            currentFullWord,\r\n            currentTranslation,\r\n            currentImage,\r\n            currentMeaning,\r\n            randomNameArray,\r\n            nameArray,\r\n            wordNameArray,\r\n            isImageVisible: false,\r\n            areButtonsVisible: true,\r\n            currentValue: '',\r\n            nameArrayId: 0,\r\n            mistakeCount: 0,\r\n            positiveWords,\r\n            negativeWords\r\n        })\r\n      }\r\n        else {\r\n          let words = this.state.positiveWords.slice();\r\n          let constructWords = this.props.store.constructWords.slice();\r\n          for (var i = 0; i < words.length; i++) {\r\n            if (!(constructWords.find(el => el.id === words[i].id))) {\r\n              words[i][\"learnedDate\"] = new Date();\r\n              this.props.actions.updateConstructWords(words[i])\r\n            }\r\n          } \r\n          this.setState({\r\n           isFinalVisible: true,\r\n           isCardVisible: false,\r\n           isStarterVisible: false,\r\n      \t\t\tpositiveWords,\r\n      \t\t\tnegativeWords           \r\n          })\r\n        }\r\n    }\r\n  \r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }  \r\n\r\n   checkValue = () =>{\r\n   \tvar currentWord = this.state.currentWord;\r\n    var currentValue = this.state.currentValue;\r\n    if(currentWord.length === currentValue.length){\r\n    \tthis.setState({\r\n    \t\tareButtonsVisible: false,\r\n    \t\tisImageVisible: true\r\n    \t})\r\n    }   \t\r\n   }\r\n\r\n   compareWord = (e) =>{\r\n    var id = this.state.nameArrayId;\r\n    var currentWord = this.state.currentWord;\r\n    var nameArray = this.state.nameArray;\r\n    var randomNameArray = this.state.randomNameArray;\r\n    var currentValue = this.state.currentValue;\r\n    var currentLetter = e.target.textContent.slice(0,1);\r\n    var mistakeCount = this.state.mistakeCount;\r\n      if( (currentLetter === nameArray[id]) && (currentValue.length < currentWord.length) ){\r\n        e.target.className = \"hidden\";\r\n        currentValue = currentValue + currentLetter;\r\n        this.state.wordNameArray[id] = currentLetter;\r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: currentLetter\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((currentLetter !== nameArray[id]) && (currentValue.length < currentWord.length)) {\r\n\t      mistakeCount++;\r\n\t      this.setState({\r\n\t      \tmistakeCount,\r\n          fade: true\r\n\t      })\r\n      }\r\n      else {\r\n      \tthis.setState({\r\n      \t\tisFinalVisible: true,\r\n      \t\tisCardVisible: false\r\n      \t})      \t\r\n      }\r\n} \r\n\r\n\r\n\r\n  render() {\r\n    const fade = this.state.fade;\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/construct.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n            <Container \r\n                onAnimationEnd={() => this.setState({ fade: false })}\r\n                className={fade ? 'fade construct-word-container' : 'construct-word-container'}>\r\n              <ul>\r\n              {this.state.wordNameArray.map((name,index) =>\r\n                <input key={index}  readOnly value={name} maxLength=\"1\" />\r\n               )}\r\n              </ul>\r\n              {this.state.areButtonsVisible ? \r\n\t              <ul>\r\n\t              {this.state.randomNameArray.map((name,index) =>\r\n\t                <li key={index} \r\n                      onClick={this.compareWord}\r\n                  > \r\n                      {name} \r\n                  </li>\r\n\t               )}\r\n\t              </ul>: null \r\n              }\r\n            {this.state.isImageVisible ?\r\n            \t<Fragment>\r\n            \t\t<p>{this.state.currentMeaning}</p>\r\n                   <div className=\"texts-image-wrapper\">\r\n                    <Image src={this.state.currentImage} ></Image>\r\n                  </div>\r\n            \t</Fragment> \r\n            \t : null\r\n            }\r\n            </Container>\r\n            <Button primary onClick={this.continueTraining} >Продолжить</Button>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConstructWord);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Proverbs extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n    shuffleArray = () =>{\r\n      let currentArray = this.state.currentArray.slice();\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n  \t  let mistakeCount = this.state.mistakeCount;\r\n  \t  let negativeProverbs = this.state.negativeProverbs.slice();\r\n  \t  let positiveProverbs = this.state.positiveProverbs.slice();\r\n      let id = this.state.id;\r\n      let proverbs = this.state.proverbs;\r\n      id = id + 1;\r\n      if (id < 2) {\r\n        const currentProverb = proverbs[id];\r\n        const currentProverbName = proverbs[id].proverb;\r\n        const currentTranslation = proverbs[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }        \r\n        this.setState({\r\n            id,\r\n            proverbs, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray,\r\n            constructedProverb: [],\r\n            positiveProverbs,\r\n            negativeProverbs,\r\n            isCheckButtonVisible: false,\r\n            isDKButtonVisible: true,\r\n            isContinueButtonVisible: false,\r\n            isResultWrong: false,\r\n            nameClass: ''\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false,\r\n          isStarterVisible: false,\r\n          positiveProverbs,\r\n          negativeProverbs           \r\n        })\r\n      }\r\n  }\r\n\r\n   setValue = (e) =>{\r\n    let target = e.target;\r\n    let parent = e.target.parentElement.children;\r\n    var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    currentArray.splice(indexTarget,1);\r\n    constructedProverb.push(e.target.textContent);\r\n\r\n    this.setState({\r\n      constructedProverb: constructedProverb\r\n    })\r\n    if(currentArray.length == 0){\r\n      this.setState({\r\n        isCheckButtonVisible: true,\r\n        isDKButtonVisible: false\r\n      })\r\n    }\r\n  } \r\n\r\n    removeValue = (e) =>{\r\n      let target = e.target;\r\n      let parent = e.target.parentElement.children;\r\n      var indexTarget = 0;\r\n          while ( (target = target.previousElementSibling) ) {\r\n            indexTarget++\r\n      }\r\n      let constructedProverb = this.state.constructedProverb;\r\n      let currentArray = this.state.currentArray;\r\n      constructedProverb.splice(indexTarget,1);\r\n      currentArray.push(e.target.textContent);\r\n      this.setState({\r\n        currentArray\r\n      })\r\n      if(currentArray.length > 0){\r\n        this.setState({\r\n          isCheckButtonVisible: false\r\n        })\r\n      }\r\n  }\r\n\r\n  dontKnow = (e) =>{\r\n    let negativeProverbs = this.state.negativeProverbs;    \r\n    let currentProverbName = this.state.currentProverbName;\r\n    let currentArray = currentProverbName.split(\" \");\r\n    let constructedProverb = [];\r\n    for (var i = 0; i < currentArray.length; i++) {\r\n      constructedProverb.push(currentArray[i])\r\n    }\r\n    negativeProverbs.push(currentProverbName);\r\n    this.setState({\r\n      currentArray: [],\r\n      isDKButtonVisible: false,\r\n      isContinueButtonVisible: true,\r\n      isCheckButtonVisible: false,\r\n      constructedProverb\r\n    })\r\n  }\r\n\r\n  checkProverb = (e) =>{\r\n    let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let negativeProverbs = this.state.negativeProverbs.slice();\r\n    var sentence = this.state.constructedProverb.slice().join(' ');\r\n    if(sentence === this.state.currentProverbName){\r\n      positiveProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        nameClass: 'audio-name-green',\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        positiveProverbs\r\n      })      \r\n    }\r\n    else {\r\n      negativeProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        nameClass: 'audio-name-red',\r\n        isResultWrong: true,\r\n        negativeProverbs\r\n      })      \r\n    }\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      proverbs: [],\r\n      id: 0,\r\n      currentProverbName: '',\r\n      currentTranslation: '',\r\n      mistakeCount: 0,\r\n      positiveProverbs: [],\r\n      negativeProverbs: [],\r\n      currentArray: [],\r\n      isStarterVisible: true,\r\n      isCardVisible: false,\r\n      isFinalVisible: false,\r\n      areButtonsVisible: false,\r\n      isContinueButtonVisible: false,\r\n      isCheckButtonVisible: false,\r\n      isDKButtonVisible: true,\r\n      constructedProverb: [],\r\n      nameClass: '',\r\n      isResultWrong: false      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/proverbs.json')\r\n      .then(res => {\r\n        const proverbs = res.data;\r\n        let random = [];\r\n        while(random.length < 2) {\r\n          var el = proverbs[Math.floor(Math.random() * proverbs.length)];\r\n          if (random.indexOf(el) === -1) {\r\n            random.push(el)\r\n          };                \r\n        }\r\n  \r\n        const currentProverb = random[id];\r\n        const currentProverbName = random[id].proverb;\r\n        const currentTranslation = random[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }                    \r\n        this.setState({ \r\n            proverbs: random, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray\r\n          });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/proverbs.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card proverb-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n              <div className={`proverb-result ${this.state.nameClass}`} >\r\n                  {this.state.constructedProverb.map((item,index) =>\r\n                      <span key={index} className=\"proverb-span\" onClick={this.removeValue}>{item}</span>\r\n                  )}\r\n              </div>\r\n              {this.state.isResultWrong ?\r\n                <div className={`proverb-result audio-name-green`}>\r\n                  {this.state.currentProverbName}\r\n                </div> : null\r\n              }\r\n              <div className=\"fragment-variants\">\r\n                {this.state.currentArray.map((item, index) =>\r\n                  <span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"proverb-button-container\">\r\n              {this.state.isCheckButtonVisible ? \r\n                <Button primary onClick={this.checkProverb} >Проверить</Button> : null\r\n              }\r\n              {this.state.isDKButtonVisible ? \r\n                <Button primary onClick={this.dontKnow}>Не знаю</Button> :null\r\n              }\r\n              {this.state.isContinueButtonVisible ? \r\n                <Button primary onClick={this.continueTraining} >Продолжить</Button> : null\r\n              }                \r\n              </div>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeProverbs.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveProverbs.length ? this.state.positiveProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          ) : null}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveProverbs.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {2 - this.state.positiveProverbs.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Proverbs;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Cards extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });          \r\n        })\r\n   }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (val) => {\r\n      if (val) {\r\n        var positiveWords = this.state.positiveWords.slice();\r\n        positiveWords.push(this.state.currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n        })        \r\n      } else {\r\n        var negativeWords = this.state.negativeWords.slice();\r\n        negativeWords.push(this.state.currentWord);      \r\n        this.setState({\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true\r\n        })        \r\n      }     \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      let result = this.state.result;\r\n      id = id + 1;\r\n      if (id < result.length){ \r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];       \r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let cardWords = this.props.store.cardWords.slice();\r\n        for (var i = 0; i < words.length; i++) {\r\n          if (!(cardWords.find(el => el.id === words[i].id))) {\r\n            words[i][\"learnedDate\"] = new Date();\r\n            this.props.actions.updateCardWords(words[i])\r\n          }\r\n        } \r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }    \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Словарные карточки</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent} >Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n           <div className=\"card-image-wrapper recognize-cards\">\r\n             <Image src={this.state.currentWord.image} />\r\n           </div>\r\n              <Card.Content>\r\n                <Card.Header>{this.state.currentWord.name} \r\n                <span onClick={this.voiceWord} className=\"training-card__icon\" title=\"Прослушать\">\r\n                  <Icon name = 'right sound'/> \r\n                </span>\r\n                </Card.Header>\r\n                {this.state.isTranslationVisible ? \r\n                  <Fragment>\r\n                    <Card.Meta>{this.state.currentWord.translation}</Card.Meta>\r\n                    <Card.Description>{}</Card.Description>                  \r\n                  </Fragment>:null\r\n                }\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} primary>Знаю</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} primary>Не знаю</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  { (this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Audio extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({\r\n        search: event.target.value.substr(0,20),\r\n        tempSearch: event.target.value.substr(0,20)});\r\n    }  \r\n\r\n\r\n    positiveResponse = () =>{\r\n      let positiveWords = this.state.positiveWords.slice();\r\n      let negativeWords = this.state.negativeWords.slice();\r\n      let currentWord = this.state.currentWord;\r\n      let search = this.state.search;\r\n\r\n      if(currentWord.name === search){\r\n        positiveWords.push(currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-green'\r\n        })\r\n      }\r\n      else if(search === ''){\r\n        negativeWords.push(currentWord);        \r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red',\r\n          tempSearch: 'нет ответа'\r\n        }) \r\n      }\r\n\r\n      else {\r\n        negativeWords.push(currentWord);\r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red'\r\n        })        \r\n      }\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < result.length) { \r\n      const currentWord = result[id][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: true,\r\n          isInputVisible: true,\r\n          search: '',\r\n          correctNameVisible: false        \r\n        })\r\n      } \r\n\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let audioWords = this.props.store.audioWords.slice();\r\n        for (var i = 0; i < words.length; i++) {\r\n          if (!(audioWords.find(el => el.id === words[i].id))) {\r\n            words[i][\"learnedDate\"] = new Date();\r\n            this.props.actions.updateAudioWords(words[i])\r\n          }\r\n        }        \r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: false,\r\n            isInputVisible: false,\r\n            correctNameVisible: false,\r\n            search: ''\r\n        })\r\n      }\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var word = this.state.currentWord.name;\r\n      speech.say(word);\r\n   }  \r\n\r\n   showImage = () => {\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false,\r\n        correctNameVisible: false,\r\n        correctName: null,\r\n        correctNameClass: 'audio-name-green',\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        tempSearch: '',\r\n        metaClass: 'blue',\r\n        nameClass: ''         \r\n      }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result }, () => console.log(this.state.result));\r\n        })\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />\r\n            </div>  \r\n              <Card.Content>\r\n                <Card.Header>Аудирование</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group>:\r\n          null\r\n        }\r\n         {this.state.isCardVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"audio-header-wrapper\" >\r\n             <Card className=\"audio-training\"  >\r\n                <Card.Content>\r\n                  <Card.Header className=\"audio-header\">\r\n                    <Button onClick={this.voiceWord} primary><Icon size=\"big\" name=\"microphone\"></Icon></Button>\r\n                    {this.state.isInputVisible ?\r\n                      <Input placeholder=\"Введите прослушанное слово\" id=\"audo-input\" onChange={this.updateSearch}/>:null\r\n\r\n                    } \r\n                  </Card.Header>\r\n                  {this.state.isTranslationVisible ? \r\n                    <Fragment>\r\n                    {this.state.correctNameVisible ? <Card.Meta className={this.state.correctNameClass}>{this.state.currentWord.name}</Card.Meta>: null }\r\n                      <Card.Meta className={this.state.nameClass}>{this.state.tempSearch}</Card.Meta>\r\n                      <Card.Meta className={this.state.metaClass}>{this.state.currentWord.translation}</Card.Meta>\r\n                      <Card.Description className=\"audio-description\">{}</Card.Description>                  \r\n                    </Fragment>:null\r\n                  }\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className=\"audio-image-outer-wrapper\">\r\n                  {this.state.isImageVisible ?\r\n                   <div className=\"audio-image-wrapper\">\r\n                     <Image src={this.state.currentWord.image} />\r\n                   </div> :null\r\n                 }\r\n                 {this.state.isLinkVisible ?\r\n                   <div className=\"audio-image-text\">\r\n                       <a onClick={this.showImage}>Show hint</a>\r\n                   </div> :null\r\n                  }                 \r\n                </div>\r\n                  <Button.Group className=\"audio-buttons-wrapper\">\r\n                  {this.state.showNavButtons ?\r\n                  <Fragment>\r\n                    <Button onClick={this.positiveResponse} primary>Проверить</Button>\r\n                  </Fragment>:null\r\n                  }  \r\n                  {this.state.showContinueButton ?\r\n                    <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n\r\n                  }\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group> :\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          </div>\r\n          <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Audio);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EnglishToRussian extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    console.log(this.props.store.engToRusWords)\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      currentWord: '',\r\n      flagState: false,\r\n      result: [],\r\n      disabled: false        \r\n    }, () => {\r\n      this.initialLoad();\r\n    })\r\n  }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if (id < result.length) {\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({\r\n            id,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            currentWord,\r\n            disabled: false\r\n          })\r\n        }  \r\n\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let engToRusWords = this.props.store.engToRusWords.slice();\r\n        for (var i = 0; i < words.length; i++) {\r\n          if (!(engToRusWords.find(el => el.id === words[i].id))) {\r\n            words[i][\"date\"] = new Date();\r\n            this.props.actions.updateEngToRus(words[i])\r\n          }\r\n        }\r\n        console.log(this.props.store.engToRusWords);\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          search: ''\r\n        })\r\n      } \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var name = this.state.currentName;\r\n      speech.say(name);\r\n   }  \r\n\r\n   showImage = ()=>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  } \r\n\r\n   dontKnow = () =>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true\r\n    })\r\n   }\r\n\r\n      render() {\r\n        return (\r\n          <Fragment>\r\n            <div className=\"content-wrapper\">\r\n            <TopMenu/>\r\n             {this.state.isButtonVisible ?\r\n              <Card.Group className=\"card-header-wrapper\">\r\n                <Card>\r\n                <div className=\"training-wrapper-image\">\r\n                  <Image src='training/englishtorussian.jpg' />\r\n                </div>  \r\n                  <Card.Content>\r\n                    <Card.Header>Перевод</Card.Header>\r\n                    <Card.Description>\r\n                      <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>          \r\n              </Card.Group> : null }\r\n           {this.state.isCardVisible ?\r\n           \t<Container className=\"list-container\">\r\n           \t\t<Card className=\"training-card\">\r\n    \t       \t\t<Label>\r\n                  {this.state.currentWord.name}\r\n                    <span className=\"training-card__icon\" onClick={this.voiceWord} title=\"Прослушать\">\r\n                      <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n                    </span>\r\n                </Label>\r\n    \t       \t\t<Container className=\"list-inner-wrapper\">\r\n    \t\t\t        <List className=\"training-list\">\r\n    \t\t\t        {this.state.result[this.state.id].map((word, index) =>\r\n    \t\t\t            <List.Item key={index} className=\"training-list-item\">\r\n    \t\t\t              <List.Content>\r\n    \t\t\t                <List.Header as='a'>\r\n                            <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.translation}</Button>\r\n                          </List.Header>\r\n    \t\t\t              </List.Content>\r\n    \t\t\t            </List.Item>\r\n    \t\t\t        )}\r\n                    <List.Item className=\"training-list-item\">\r\n                      <List.Content>\r\n                        <List.Header as='a'>\r\n                          <Button onClick={this.dontKnow} className=\"help\" >Не знаю</Button>\r\n                        </List.Header>\r\n                      </List.Content>\r\n                    </List.Item>              \r\n    \t\t\t        </List>\r\n                  {this.state.isImageVisible ?\r\n                    <div className=\"training-right-wrapper\">\r\n                      <div className=\"training-image-wrapper\">\r\n                        <Image src={this.state.currentWord.image} className=\"training-image\">\r\n                        </Image>                \r\n                      </div>\r\n                    {this.state.flagState && this.state.isImageVisible ?\r\n                      <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n                    }                                     \r\n                    </div>: null               \r\n                   }\r\n    \t       \t\t</Container>\r\n           \t\t</Card>\r\n          \t</Container> :\r\n               null\r\n            }\r\n            {this.state.isFinalVisible ?\r\n             <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n                 <Card className=\"card-training\" >\r\n                    <Card.Content>\r\n                      <Card.Header>Результаты</Card.Header>\r\n                      <Divider/>\r\n                      <Card.Description className=\"audio-list-container\"> \r\n                      {(this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                       <Message>\r\n                          <Message.Header>Поздравляем!</Message.Header>\r\n                          <p>\r\n                            Все задания выполнены правильно\r\n                          </p>\r\n                       </Message> \r\n                      }\r\n                      </Card.Description>\r\n                      <Card.Description className=\"results-wrapper\">\r\n                        <div className=\"positive-results-wrapper\"> \r\n                          <div className=\"positive-results\">\r\n                            {this.state.positiveWords.length}\r\n                          </div>\r\n                          <Label>Верно</Label>                    \r\n                        </div>\r\n                        <div className=\"negative-results-wrapper\"> \r\n                          <div className=\"negative-results\">\r\n                            {this.state.result.length - this.state.positiveWords.length}\r\n                          </div> \r\n                          <Label>Неверно</Label>                   \r\n                        </div>\r\n                      </Card.Description>\r\n                      <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                      </Button.Group>\r\n                    </Card.Content>\r\n                  </Card>          \r\n            </Card.Group>                \r\n               : null\r\n            }\r\n            </div>\r\n            <footer></footer>\r\n        </Fragment>\r\n    \t);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnglishToRussian);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport classnames from 'classnames';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RussianToEnglish extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n    this.state = {\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n  this.setStateOnStart()\r\n}\r\n\r\nsetStateOnStart = () => {\r\n  this.setState({\r\n    words: [],\r\n    negativeWords: [],\r\n    positiveWords: [],\r\n    id: 0,\r\n    isCardVisible: false,\r\n    isButtonVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: true,\r\n    showContinueButton: false,\r\n    isFinalVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: true,\r\n    isInputVisible: true,\r\n    search: '',\r\n    currentWord: '',\r\n    flagState: false,\r\n    result: [],\r\n    disabled: false    \r\n  }, () => this.initialLoad())\r\n}\r\n\r\n  initialLoad = () => {\r\n    var id = this.state.id;\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = [];\r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            var el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          result });\r\n      })\r\n  }\r\n\r\n\r\nstartTraining = () =>{\r\n  this.setState({\r\n    isButtonVisible: false,\r\n    isCardVisible: true\r\n  })\r\n}\r\n\r\ncontinueTraining = () =>{\r\n  let id = this.state.id;\r\n  id = id + 1;\r\n  const result = this.state.result;\r\n  if(id < result.length) {\r\n    const currentWord =  result[id][Math.floor(Math.random() * result[id].length)];\r\n    this.setState({\r\n      id,\r\n      currentWord, \r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      disabled: false\r\n    })\r\n  } \r\n\r\n  else {\r\n    let words = this.state.positiveWords.slice();\r\n    let rusToEngWords = this.props.store.rusToEngWords.slice();\r\n    for (var i = 0; i < words.length; i++) {\r\n      if (!(rusToEngWords.find(el => el.id === words[i].id))) {\r\n        words[i][\"learnedDate\"] = new Date();\r\n        this.props.actions.updateRusToEng(words[i])\r\n      }\r\n    }\r\n    this.setState({\r\n        isFinalVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: false,\r\n        showContinueButton: false, \r\n        isCardVisible: false,\r\n        isButtonVisible: false,\r\n        isImageVisible: false,\r\n        isLinkVisible: false,\r\n        isInputVisible: false,\r\n        search: ''\r\n    })\r\n  }  \r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentName;\r\n  speech.say(newWords);\r\n}  \r\n\r\nshowImage = ()=>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    isLinkVisible: false\r\n  })\r\n}\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    var positiveWords = this.state.positiveWords.slice();\r\n    var negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  }\r\n\r\n\r\ndontKnow = () =>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    flagState: true\r\n  })\r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentWord.name;\r\n  speech.say(newWords);\r\n} \r\n\r\nrender() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n          {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n            <Image src='training/russiantoenglish.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n            <Card.Header>Перевод</Card.Header>\r\n            <Card.Description>\r\n            <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n            </Card.Description>\r\n            </Card.Content>\r\n            </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n          {this.state.isCardVisible ?\r\n            <Container className=\"list-container\">\r\n            <Card className=\"training-card\">\r\n            <Label>\r\n            {this.state.currentWord.translation}\r\n            <span onClick={this.voiceWord} className=\"training-card__icon\">\r\n            <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n            </span>\r\n            </Label>\r\n            <Container className=\"list-inner-wrapper\">\r\n            <List className=\"training-list\">\r\n            {this.state.result[this.state.id].map((word, index) =>\r\n             <List.Item key={index} className=\"training-list-item\">\r\n             <List.Content>\r\n             <List.Header as='a'>\r\n             <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.name}</Button>\r\n             </List.Header>\r\n             </List.Content>\r\n             </List.Item>\r\n             )}\r\n            <List.Item className=\"training-list-item \">\r\n            <List.Content>\r\n            <List.Header as='a'>\r\n            <Button className=\"dont-know\" onClick={this.dontKnow} >Не знаю</Button>\r\n            </List.Header>\r\n            </List.Content>\r\n            </List.Item>              \r\n            </List>\r\n            {this.state.isImageVisible ?\r\n              <div className=\"training-right-wrapper\">\r\n              <div className=\"training-image-wrapper\">\r\n              <Image src={this.state.currentWord.image} className=\"training-image\">\r\n              </Image>                \r\n              </div>\r\n              {this.state.flagState ?\r\n                <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n\r\n              }                                     \r\n              </div>: null               \r\n            }\r\n            </Container>\r\n            </Card>\r\n            </Container> :\r\n            null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n           <Card className=\"card-training\" >\r\n           <Card.Content>\r\n           <Card.Header>Результаты</Card.Header>\r\n           <Divider/>\r\n           <Card.Description className=\"audio-list-container\"> \r\n           {  (this.state.negativeWords.length !== 0 ) ?\r\n            <List className=\"audio-list\">\r\n            {this.state.negativeWords.map((item, index) => \r\n              <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n              )}\r\n            </List>: \r\n            <Message>\r\n            <Message.Header>Поздравляем!</Message.Header>\r\n            <p>\r\n            Все задания выполнены правильно\r\n            </p>\r\n            </Message> \r\n          }\r\n        </Card.Description>\r\n    <Card.Description className=\"results-wrapper\">\r\n    <div className=\"positive-results-wrapper\"> \r\n    <div className=\"positive-results\">\r\n    {this.state.positiveWords.length}\r\n    </div>\r\n    <Label>Верно</Label>                    \r\n    </div>\r\n    <div className=\"negative-results-wrapper\"> \r\n    <div className=\"negative-results\">\r\n    {this.state.result.length - this.state.positiveWords.length}\r\n    </div> \r\n    <Label>Неверно</Label>                   \r\n    </div>\r\n    </Card.Description>\r\n    <Button.Group className=\"card-buttons-wrapper\">\r\n    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n    </Button.Group>\r\n    </Card.Content>\r\n    </Card>          \r\n    </Card.Group>          \r\n    : null\r\n  }\r\n  </div>\r\n  <footer></footer>\r\n  </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RussianToEnglish);","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button,Card,Image} from 'semantic-ui-react';\r\n\r\nclass Videos extends Component {\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      videos: [],\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      channelId: null,\r\n      image: '',\r\n      link: '',\r\n      visible: 8\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('/videos.json')\r\n        .then(res => {\r\n          const videos = res.data;\r\n          const name = videos[id].name;\r\n          const description = videos[id].description;\r\n          const channelId = videos[id].channelId;\r\n          const image = videos[id].image;\r\n          const link = videos[id].link;\r\n           this.setState({ \r\n            videos, \r\n            name, \r\n            description, \r\n            channelId, \r\n            image,\r\n            link });\r\n        })\r\n    }\r\n\r\n    cons = () =>{\r\n      console.log(this.state);\r\n    }\r\n\r\n    loadMore = () => {\r\n      this.setState((prev) => {\r\n        return {visible: prev.visible + 4};\r\n      });\r\n    }    \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n        <Button onClick={this.cons} >console</Button>\r\n        <Card.Group itemsPerRow={4} className=\"videos-container\">\r\n          {this.state.videos.slice(0,this.state.visible).map((video,index) =>\r\n            <Card key={index}>\r\n              <Image src={video.image} />\r\n              <Card.Content className=\"video-wrapper\">\r\n                <Card.Header>{video.name}</Card.Header>\r\n                <Card.Description>{video.description}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra className=\"video-extra\">\r\n                 <Link to={video.link}>{video.name}</Link>\r\n              </Card.Content>\r\n            </Card> \r\n          )}                                                                           \r\n        </Card.Group>\r\n           <div className=\"load-more-button\">\r\n            {this.state.visible < this.state.videos.length &&\r\n                    <Button onClick={this.loadMore} primary>Загрузить</Button>\r\n                  }                 \r\n          </div>\r\n          </div>\r\n          <footer></footer>\r\n       </Fragment>\r\n  );\r\n  } \r\n\r\n\r\n}\r\n\r\nexport default Videos;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Fragments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        texts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setStateOnStart();\r\n    }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        texts: [],\r\n        options: [],\r\n        categoryValue: '',\r\n        value: null,\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isResultVisible: false,\r\n        title: '',\r\n        content: '',\r\n        image: null,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        rightAnswers: 0,\r\n        //livesCount: 3,\r\n        livesArray: []        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content) )\r\n          this.setState({ \r\n            texts,\r\n            contentArray\r\n          }, () => this.setMenuParams());\r\n        })\r\n    }\r\n\r\n    setMenuParams = () =>{\r\n      let options = [];\r\n      this.state.texts.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var options = this.state.options.slice();\r\n      var comp = 'text';\r\n      const unique = options\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => options[e]).map(e => options[e]);\r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n\r\n    selectValue = () => {\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue() )         \r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.buildLives();\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.builtArray())\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n    \t\tcontentArray: [],\r\n    \t\tcurrentTempArray: [],\r\n    \t\tcurrentStringArray: [],\r\n    \t\tcurrentRandomWord: '',\r\n    \t\tcurrentFinalArray: [],\r\n    \t\tcurrentRandomArray: [],\r\n    \t\tcurrentOneArray: [],\r\n    \t\tactiveInput: 0,\r\n    \t\tactiveArray: [],\r\n    \t\tsortedRandomArray: [],\r\n    \t\tcomparativeRandomArray: [],\r\n    \t\tfragmentArrayIndexes: []        \r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n    builtArray = () => {\r\n      let currentOneArray = [];\r\n\t    let activeTargetContent = this.state.content.slice();\r\n      let currentStringArray = activeTargetContent.split(\". \");\r\n      currentStringArray.pop();\r\n      let currentFullArray = [];\r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n      \tcurrentFullArray.push(currentStringArray[i].split(\" \"));\r\n      }\r\n      let currentWordArray = currentStringArray[0].split(\" \");\r\n      let currentRandomArray = [];\r\n      let currentRandomIndexes = [];\r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet j = Math.floor(Math.random()*currentFullArray[i].length);\r\n      \tcurrentRandomArray.push(currentFullArray[i][j]);\r\n      \tcurrentRandomIndexes.push(j);\r\n      }\r\n      let random = currentWordArray[Math.floor(Math.random()*currentWordArray.length)];\r\n      let currentFinalArray = [];\r\n    \r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet curArr = currentFullArray[i];\r\n\t      \tfor (var j = 0; j < curArr.length; j++) {\r\n            \tcurrentOneArray.push(curArr[j]);\r\n\t\t      \tif (j !== currentRandomIndexes[i] ) {\r\n\t\t      \t\tcurrentFinalArray.push(<span className=\"fragment-span\">{curArr[j]}</span>)\r\n\t\t      \t}\r\n\t\t      \telse {\r\n\t\t      \t\tcurrentFinalArray.push(<span onClick={this.resetValue} className=\"fragment-input\"></span>)\r\n\t\t      \t}\r\n\t      \t}\r\n\t      \tcurrentFinalArray.push(<span className=\"fragment-dot\">.</span>);\r\n      }\r\n\r\n      this.setState({\r\n      \tcurrentStringArray,\r\n        currentWordArray,\r\n        currentRandomWord: random,\r\n        currentFinalArray,\r\n        currentRandomIndexes,\r\n        currentRandomArray,\r\n        currentFullArray,\r\n        currentOneArray\r\n      }, () => this.shuffleArray())     \r\n    }\r\n\r\n   setValue = (e) => {\r\n      let activeInput = this.state.activeInput;\r\n      let activeArray = [];\r\n      let currentFullArray = this.state.currentFullArray.slice();\r\n      let currentFinalArray = this.state.currentFinalArray.slice();\r\n      let currentRandomArray = this.state.currentRandomArray.slice();\r\n      let currentRandomIndexes = this.state.currentRandomIndexes.slice();\r\n      let activeTargetTitle = e.target.textContent;\r\n      let fragmentArray = [];\r\n      let fragmentArrayIndexes = [];\r\n      let fragmentDescription = document.getElementsByClassName('fragment-description')[0].children;\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif(fragmentDescription[i].className == \"fragment-input\"){\r\n      \t\tfragmentArrayIndexes.push(i);\r\n      \t\tfragmentArray.push(fragmentDescription[i]);\r\n      \t}\r\n      }\r\n      for (var i = 0; i < fragmentArrayIndexes.length; i++) {\r\n      \tactiveArray.push(i);\r\n      }\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif( (fragmentDescription[i].className == \"fragment-input\") && (i == fragmentArrayIndexes[activeInput])){\r\n      \t\tfragmentDescription[i].textContent = activeTargetTitle;\r\n      \t}\r\n      }\r\n\t\t  fragmentArrayIndexes.splice(activeInput, 1);\r\n      let comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n      let sortedRandomArray = this.state.sortedRandomArray.slice();\r\n      let target = e.target;\r\n      comparativeRandomArray.push(target.textContent);\r\n      var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n      }\r\n\r\n      sortedRandomArray.splice(indexTarget, 1);\r\n      if (sortedRandomArray.length === 0) {\r\n      \tthis.setState({\r\n      \t\tisCheckButtonVisible: true\r\n      \t})\r\n      }\r\n\r\n      activeInput++;\r\n      this.setState({\r\n  \t\t\tactiveInput,\r\n  \t\t\tactiveArray,\r\n  \t\t\tfragmentArrayIndexes,\r\n  \t\t\tcurrentRandomArray,\r\n  \t\t\tcomparativeRandomArray,\r\n  \t\t\tsortedRandomArray\r\n\t\t})\r\n    \r\n  }\r\n\r\n\tshuffleArray = () => {\r\n\t\tlet array = this.state.currentRandomArray.slice();\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t    this.setState({\r\n        \tsortedRandomArray: array\t    \t\r\n\t    })\r\n\t}\r\n\r\n    resetValue = (e) =>{\r\n\t    let sortedRandomArray = this.state.sortedRandomArray.slice(); \r\n      let element = e.target;\r\n      if (e.target.textContent !== \"\") {\r\n      \t  sortedRandomArray.push(e.target.textContent);\r\n      \t  element.innerText = \"\";\r\n  \t      this.setState({\r\n  \t      \tsortedRandomArray: sortedRandomArray\r\n  \t      })\r\n\t        var indexTarget = 0;\r\n\t        while ( (element = element.previousElementSibling) ) {\r\n\t          indexTarget++\r\n\t        }\r\n      }\r\n    }\r\n\r\n    submitText = (e) =>{\r\n    \tlet comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    \tlet currentSortedArray = this.state.currentRandomArray.slice();\r\n    \tlet sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    \tlet count = 0;\r\n    \tfor (var i = 0; i < currentSortedArray.length; i++) {\r\n    \t\tif (currentSortedArray[i] === comparativeRandomArray[i]) {\r\n    \t\t\tcount++;\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\tsortedRandomArray.push(comparativeRandomArray[i])\r\n    \t\t}\r\n    \t\t\r\n    \t}\r\n    \tlet rightAnswers = count;\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: false,\r\n    \t\tisResultVisible: true,\r\n    \t\tisSingleTextVisible: false,\r\n    \t\trightAnswers,\r\n    \t\tsortedRandomArray\r\n    \t})\r\n    }\r\n\r\n    tryAgain = () =>{\r\n    \tlet lives = this.state.livesCount;\r\n    \tlives = lives - 1;\r\n    \tthis.setState({\r\n    \t\tisResultVisible: false,\r\n    \t\tisSingleTextVisible: true,\r\n    \t\tlivesCount: lives\r\n    \t}, () => this.buildLives() )\r\n    }\r\n\r\n    buildLives = () =>{\r\n    \tlet livesCount = this.state.livesCount;\r\n    \tlet lives = [];\r\n    \tfor (var i = 0; i < livesCount; i++) {\r\n    \t\tlives.push(<Icon name='like' size='big' />)\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tlivesArray: lives\r\n    \t})\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible && this.state.texts.length ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n            {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                \t<div className=\"fragments-close\">\r\n                \t\t<span onClick={this.backToTexts}>\r\n                \t\t\t<Icon name='close' size='big' />\r\n                \t\t</span>\r\n                \t</div>\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t{this.state.currentFinalArray}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n             \t<div className=\"fragment-variants\">\r\n            \t\t{this.state.sortedRandomArray.map((item, index) =>\r\n            \t\t\t<span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n            \t\t)}\r\n\t            \t{this.state.isCheckButtonVisible ? \r\n\t            \t\t<Button onClick={this.submitText} >Проверить</Button> :null\r\n\t            \t}             \t\t\r\n            \t</div>\r\n                </Card>:null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t<h2>Вы расставили правильно {this.state.rightAnswers} из {this.state.currentRandomArray.length} слов </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                  \t<Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary ><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default Fragments;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Pronunciation extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\ttexts: [],\r\n\t\tnegativeSentences: [],\r\n\t\tpositiveSentences: [],\r\n\t\tid: 0,\r\n\t\tcurrentText: '',\r\n\t\tcurrentTextContent: '',\r\n\t\tcurrentSentence: '',\r\n\t\tisCardVisible: false,\r\n\t\tisButtonVisible: true,\r\n\t\tisTranslationVisible: false,\r\n\t\tshowNavButtons: true,\r\n\t\tshowContinueButton: false,\r\n\t\tisFinalVisible: false,\r\n\t\tshowSubmitButtons: true,\r\n\t\toptions: {\r\n\t\t  autostart: false\r\n\t\t},\r\n\t\ttranscript: '',\r\n\t\tresetTranscript: null,\r\n\t\tbrowserSupportsSpeechRecognition: null,\r\n\t\trecognition: null,\r\n\t\tstartListening: null,\r\n\t\tstopListening: null ,\r\n\t\tsplittedText: [],\r\n\t\tisDeleteVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      var id = this.state.id;\r\n      axios.all([\r\n          axios.get('/texts.json')\r\n        ])\r\n        .then(axios.spread((textsRes) => {\r\n          const texts = textsRes.data;\r\n          const currentText = texts[id].content;\r\n          let splittedText = currentText.split(\". \").slice(0,3);\r\n          let currentSentence = splittedText[id] + '.'; \r\n          let currentSentenceContent = splittedText[id].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();           \r\n          this.setState({\r\n            texts,\r\n            currentSentence,\r\n            splittedText,\r\n            currentText,\r\n            transcript: this.props.transcript,\r\n            resetTranscript: this.props.resetTranscript,\r\n            browserSupportsSpeechRecognition: this.props.browserSupportsSpeechRecognition,\r\n            recognition: this.props.recognition,\r\n            startListening: this.props.startListening,\r\n            stopListening: this.props.stopListening \r\n          }, () => this.state.stopListening() );          \r\n        }));      \r\n    }\r\n\r\n  setStateOnStart = () => {\r\n\r\n  }\r\n\r\n  initialLoad = () => {\r\n\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      }, () => this.state.startListening())\r\n    }\r\n\r\n    submitResponse = () =>{\r\n      var objectTranscription = document.getElementById('transcription').textContent;\r\n      var positiveSentences = this.state.positiveSentences;\r\n      var negativeSentences = this.state.negativeSentences;\r\n      let currentSentence = this.state.currentSentence;\r\n      let currentSentenceContent = this.state.currentSentenceContent;\r\n   \r\n      if(currentSentenceContent === objectTranscription){\r\n        positiveSentences.push(currentSentence);     \r\n      }\r\n\r\n      else {\r\n        negativeSentences.push(currentSentence);\r\n        console.log(negativeSentences);\r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        positiveSentences,\r\n        negativeSentences\r\n\r\n      }, () => this.continueTraining() )        \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let length = this.state.splittedText.length;\r\n      let splittedText = this.state.splittedText;\r\n      let newId = this.state.id;\r\n      newId = newId + 1;\r\n      const texts = this.state.texts;\r\n      if(newId < length){\r\n      \tlet currentSentence = splittedText[newId] + '.';\r\n      \tlet currentSentenceContent = splittedText[newId].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();\r\n \r\n        this.setState({\r\n          id: newId,\r\n          currentSentence,\r\n          currentSentenceContent,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else {\r\n        this.state.stopListening();\r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false\r\n        })\r\n      }  \r\n    }\r\n\r\n    callSubmit = () =>{\r\n      this.state.resetTranscript();\r\n      this.continueTraining();\r\n    }\r\n\r\n    clearTranscription = () =>{\r\n    \tlet transcript = this.props.transcript;\r\n    \tlet newTranscript =\ttranscript.substring(0,transcript.length - 1);\r\n    \tthis.props.transcript = newTranscript;\r\n    }\r\n\r\n  render() {\r\n\r\n    const {transcript} = this.props;\r\n\r\n    if (!this.state.browserSupportsSpeechRecognition) {\r\n      return null\r\n    }\r\n    this.state.recognition.lang = 'en-US';\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/microphone.jpg' />\r\n              </div>  \r\n              <Card.Content>\r\n                <Card.Header>Произношение</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group> : null\r\n         }\r\n         {this.state.isCardVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\"  >\r\n                  <Card.Content>\r\n                    <Card.Header className=\"pronunciation-header\">\r\n                      Произнесите слово в микрофон\r\n                    </Card.Header>\r\n                    <Card.Header className=\"pronunciation-text\">{this.state.currentSentence}\r\n                    </Card.Header>                \r\n                    <Card.Description id=\"transcription\" className=\"pronunciation-transcription\">\r\n                    <span className=\"transcription-text\">\r\n                      {transcript} </span>\r\n                      {this.props.transcript.length ?\r\n                      <div className=\"pronunciation-clear-wrapper\" onClick = {this.clearTranscription}>\r\n    \t                  <span className=\"triangle\"> </span>\r\n    \t                  <span className=\"pronunciation-clear\">\r\n    \t                  \t<Icon name = 'delete'/>\r\n    \t                  </span>                  \t\r\n                      </div> : null\r\n                  }\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                    {this.state.showNavButtons ?\r\n                    <Fragment>\r\n                      <Button onClick={this.submitResponse} primary>Проверить</Button>\r\n                    </Fragment>:null\r\n                    }  \r\n                    {this.state.showContinueButton ?\r\n                      <Button onClick={this.callSubmit} primary>Продолжить</Button>:null\r\n                    }\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\" >\r\n                  <Card.Content>\r\n                    <Card.Header>Результаты</Card.Header>\r\n                    <Divider/>\r\n                    <Card.Description className=\"audio-list-container\"> \r\n                    {  (this.state.negativeSentences.length !== 0 ) ?\r\n                        <div className=\"answers-wrapper\">\r\n                          <List className=\"audio-list\">\r\n                          <h2>Верные ответы</h2>\r\n                          {this.state.positiveSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                          <List className=\"audio-list\">\r\n                          <h2>Неверные ответы</h2>\r\n                          {this.state.negativeSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                       </div> : \r\n                     <Message>\r\n                        <Message.Header>Поздравляем!</Message.Header>\r\n                        <p>\r\n                          Все задания выполнены правильно\r\n                        </p>\r\n                     </Message> \r\n                    }\r\n\r\n                    </Card.Description>\r\n                    <Card.Description className=\"results-wrapper\">\r\n                      <div className=\"positive-results-wrapper\"> \r\n                        <div className=\"positive-results\">\r\n                          {this.state.positiveSentences.length}\r\n                        </div>\r\n                        <Label>Верно</Label>                    \r\n                      </div>\r\n                      <div className=\"negative-results-wrapper\"> \r\n                        <div className=\"negative-results\">\r\n                          {this.state.negativeSentences.length}\r\n                        </div> \r\n                        <Label>Неверно</Label>                   \r\n                      </div>\r\n                    </Card.Description>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                      <Button primary>Продолжить</Button>\r\n                      <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default SpeechRecognition({autostart: false})(Pronunciation);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\n\r\nclass RecreateText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '3',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      categoryValue: ''\r\n\t\t}\r\n\t}\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.makeTextsVisible());\r\n      })\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();   \r\n  }   \r\n\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      })      \r\n    }\r\n\r\n\r\n    makeTextsVisible = () =>{\r\n      this.setState({\r\n        areTextsVisible: true        \r\n      }, () => this.createMenuItems());\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '5',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0\r\n      })\r\n    }\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        spllittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutes * 60);\r\n          clearInterval(this.state.intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent\r\n          })\r\n\r\n        }\r\n        this.state.secondsRemaining--;\r\n        this.state.totalSecondsSpent++;\r\n\r\n   \r\n    }\r\n    startCountDown = () => {\r\n        this.state.intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.state.secondsRemaining = time * 60;\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.spllittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.spllittedSentences[index];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = this.state.spllittedSentences.filter(item => item !== this.draggedItem);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ spllittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.spllittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n      }\r\n    }\r\n    if(wrongCount==0){\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =()=>{\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(this.state.intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent       \r\n      })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '3',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0        \r\n      }) \r\n  }\r\n\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    menuChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.menuChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null\r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.splitText}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.spllittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <h2>Время вышло</h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\nimport Speech from 'speak-tts'\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport { Howl } from \"howler\";\r\n\r\nclass RecreateAudioText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t      texts: [],\r\n\t      contentArray: [],\r\n\t      areTextsVisible: false,\r\n\t      isMenuVisible: false,\r\n\t      isSingleTextVisible: false,\r\n        options: [],\r\n        categoryValue: '',\r\n\t      isResultVisible: false,\r\n\t      isResultWrong: false,\r\n        title: '',\r\n\t      content: '',\r\n\t      image: null,\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('./audiotexts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        this.setState({ \r\n          texts,\r\n          areTextsVisible: true         \r\n        }, () => this.createMenuItems());\r\n      })        \r\n  }   \r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n    createTrack = (id) => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) => {\r\n          let currentTrack = new Howl({\r\n            src: \"tracks/\" + res.data.slice(id - 1, id),\r\n            html5: true,\r\n            volume: 0.5 / 10\r\n          });\r\n          this.setState({\r\n            currentTrack,\r\n            audio: res.data\r\n          }) \r\n        });    \r\n    }\r\n\r\n    readMore = (id) =>{\r\n\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id - 1].title;\r\n      let content = texts[id - 1].content;\r\n      let image = texts[id - 1].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.createTrack(id))       \r\n    }\r\n\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        categoryValue: '',\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0,\r\n        value: null        \r\n      })\r\n    }\r\n\r\n\r\n\r\n  showFinal = () =>{\r\n    this.setState({\r\n      isResultVisible: true  \r\n    })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,    \r\n      }) \r\n  }\r\n\r\n  playText = () => {\r\n    let playing = !this.state.playing;\r\n    let currentTrack = this.state.currentTrack;\r\n    if (playing) {\r\n      currentTrack.play();\r\n    } else {\r\n      currentTrack.pause();\r\n    }\r\n    this.setState({\r\n      playing,\r\n      currentTrack\r\n    })\r\n  }\r\n\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        splittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n          let intervalHandle = this.state.intervalHandle;\r\n          clearInterval(intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent,\r\n            intervalHandle\r\n          })\r\n\r\n        }\r\n        this.setState({\r\n          secondsRemaining: this.state.secondsRemaining - 1,\r\n          totalSecondsSpent: this.state.totalSecondsSpent + 1\r\n        })\r\n \r\n    }\r\n    startCountDown = () => {\r\n        let intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.setState({\r\n          intervalHandle,\r\n          secondsRemaining: time * 60\r\n        })\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.splittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.splittedSentences[index];\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n    let items = this.state.splittedSentences.filter(item => item !== this.draggedItem);\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ splittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.splittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let rightAnswers = 0;\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n        rightAnswers++;\r\n      }\r\n    }\r\n    if (wrongCount == 0) {\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes,\r\n      rightAnswers\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =() => {\r\n    this.checkSentences();\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let intervalHandle = this.state.intervalHandle;\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent,\r\n        intervalHandle        \r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }         \r\n              {(this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text display-none\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    {this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"pause\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    {!this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"play\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    <div className=\"buttons-wrapper\">\r\n\t                    <Button primary onClick={this.splitText}>Я прослушал</Button>\r\n           \t\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.splittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <div>\r\n                        <h2>Время вышло</h2>\r\n                        <h2>Правильно расставлено {this.state.rightAnswers} из {this.state.splittedSentences.length} предложений</h2> \r\n                      </div>                      \r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateAudioText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Input, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass InsertSpaces extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }   \r\n\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      inputContent: '',\r\n      textContent: '',\r\n      newContent: '',\r\n      image: null,\r\n      options: [],\r\n      textsLoaded: false,\r\n      categoryValue: ''\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n      }) \r\n  }\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let inputContent = texts[id].content;\r\n      inputContent = inputContent.replace(/\\s/g, '');\r\n      let image = texts[id].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image,\r\n        inputContent\r\n      })      \r\n    }\r\n\r\n\r\n  showFinal = () =>{\r\n      this.setState({\r\n        isResultVisible: true,\r\n        isTaskStarted: false\r\n   \r\n      })\r\n  }\r\n\r\nsetCaretPosition = (ctrl, pos) => {\r\n\r\n  if (ctrl.setSelectionRange) {\r\n    ctrl.focus();\r\n    ctrl.setSelectionRange(pos, pos);\r\n\r\n  } else if (ctrl.createTextRange) {\r\n    var range = ctrl.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n}\r\n\r\n  updateValue = (event) =>{\r\n  \tlet newContent = this.state.newContent;\r\n  \tlet target = event.target;\r\n    let str = event.target.value;\r\n    let indexOfSpace = event.target.value.indexOf(\" \") + 1;\r\n    let word = event.target.value.substr(0, indexOfSpace - 1);\r\n    let newstr = event.target.value.substring(indexOfSpace);\r\n    newContent = newContent + (word + ' ');\r\n      this.setState({\r\n      \tnewContent,\r\n        inputContent: newstr\r\n      }, () => this.setCaretPosition(target, 0));\r\n  }\r\n\r\n  startExercise = () => {\r\n    this.setState({\r\n      isTaskStarted: true,\r\n      isSingleTextVisible: false\r\n    })\r\n  }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.startExercise}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }             \r\n             {this.state.isTaskStarted ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <p className=\"single-text-card-description p-wrap fragment-description recreate-text inserted-text\">\r\n                      { this.state.newContent}\r\n                    </p>\r\n                    <Input className=\"insert-spaces-input\" value={this.state.inputContent} onChange={this.updateValue} />\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.showFinal}>Проверить</Button>\r\n                      </Button.Group>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <div className=\"recreate-results\">\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Исходный текст</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.content}</p>\r\n                      </div>\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Результат</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.newContent}</p>\r\n                      </div>                      \r\n                    </div>                                     \r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }    \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default InsertSpaces;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card, Embed, Modal,Image, Rating} from 'semantic-ui-react';\r\n//import LazyLoad from 'react-lazy-load';\r\n\r\nclass TED extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      isModalVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCAuUUnT6oDeKwE6v1NGQxug\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n      handleClick = (event) => {\r\n        this.setState({\r\n          currentPage: Number(event.target.id)\r\n        });\r\n      }\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos.items);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  showModal = () =>{\r\n    this.setState({\r\n      isModalVisible: true\r\n    })\r\n  }\r\n\r\n   render() {\r\n     \r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default TED;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass EngVid extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCKRBA9XfgzAtJodE4t8cUeg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default EngVid;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass BritishCouncil extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    let API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    let channelID = \"UCOtnu-KKoAbN47IuYMeDPOg\";\r\n    let maxResults = 36;\r\n    let url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default BritishCouncil;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image, Input, Icon} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Khan extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      currentComment: '',\r\n      likes: 0,\r\n      dislikes: 0,\r\n      comments: [\r\n        {\r\n          author: 'new2341',\r\n          comment: 'Just a typicall comment'\r\n        },\r\n        {\r\n          author: 'cauthor',\r\n          comment: 'nice! liked it'\r\n        }\r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UC4a-Gbdw7vOaccHmFo40b9g\";\r\n    var maxResults = 48;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,200)});\r\n    } \r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  addComment = () =>{\r\n    let comments = this.state.comments.slice();\r\n    let currentComment = this.state.currentComment;\r\n    let temp = {};\r\n    temp['author'] = 'blabla';\r\n    temp['comment'] = currentComment;\r\n    comments.unshift(temp);\r\n    console.log(comments);\r\n    this.setState({\r\n      comments: comments,\r\n      currentComment: ''\r\n    })\r\n  }\r\n\r\n  thumbsUp = () => {\r\n    let count = this.state.likes;\r\n    count++;\r\n    this.setState({\r\n      likes: count\r\n    })\r\n  }\r\n\r\n  thumbsDown = () => {\r\n    let count = this.state.dislikes;\r\n    count++;\r\n    this.setState({\r\n      dislikes: count\r\n    })\r\n  }\r\n\r\n  consoleState = ()=>{\r\n    console.log(this.state)\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Открыть</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header className=\"video-header-wrapper\">\r\n                    <div className=\"video-header\">{item.snippet.title}</div> \r\n                    <div className=\"video-likes\">\r\n                      <div className=\"video-likes-item first\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsUp}>\r\n                          <Icon name='thumbs up' size='large' />\r\n                        </span>\r\n                        <span>{this.state.likes}</span>\r\n                      </div>\r\n                      <div className=\"video-likes-item second\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsDown}>\r\n                          <Icon name='thumbs down' size='large' />\r\n                        </span>\r\n                        <span>{this.state.dislikes}</span>\r\n                      </div>\r\n                    </div> \r\n                  </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                    <div className=\"comment-section\">\r\n                      <div className=\"comment-section-input\">\r\n                        <Input placeholder='type...' value={this.state.currentComment} onChange={this.updateSearch} /><Button onClick={this.addComment}>Отправить</Button>\r\n                      </div>\r\n                      <div className=\"comment-section-comments\">\r\n                          {this.state.comments.map((item, index) =>\r\n                            <div className=\"single-comment\" key={index}>\r\n                              <h4>{item.author}</h4>\r\n                              <p>{item.comment}</p>                              \r\n                            </div>\r\n                           )}\r\n                      </div>\r\n                    </div>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <h4>{item.snippet.title}</h4>                 \r\n                  <Image src={item.snippet.thumbnails.high.url} />\r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Khan;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Coursera extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCZ50rYSkYQG31YDEJm9Di_g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Coursera;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyFallon extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UC8-Th83bH_thdKZDJCrn88g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyFallon;","import React, { Component, Fragment } from 'react';\r\nimport { Embed,Modal,Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyKimmel extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCa6vGFO9ty8v5KZJXQxdhaw\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyKimmel;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass ConanOBrien extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCi7GJNg51C3jgmYTUwqoUXA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n      axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default ConanOBrien;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Ellen extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCp0hYYBW6IMayGgR-WeoCvQ\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Ellen;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JamesCorden extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCJ0uqCI0Vqr2Rrt1HseGirg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JamesCorden;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass SethMeyers extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCVTyTA7-g9nopHeHbeuvpRA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default SethMeyers;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass StephenColbert extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCMtFAi84ehTSYSE9XoHefig\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default StephenColbert;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass TextsList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      textsLoaded: false,\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content))\r\n          this.setState({ \r\n            texts: texts,\r\n            contentArray: contentArray\r\n          }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n        })\r\n    }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )         \r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {!this.state.isSingleTextVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }\r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card text-item\">\r\n                  <Card.Content>\r\n                    <Image src={this.state.image} />\r\n                    <Card.Header>{this.state.title}</Card.Header>\r\n                    <Card.Description className=\"single-text-card-description p-wrap\">\r\n                      { /*this.state.content.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase() */ this.state.content}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n                  <Button onClick={this.backToTexts} >Вернуться</Button>\r\n                </Card>:null\r\n              }          \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default TextsList;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    constructMenu = () =>{\r\n      let options = [];\r\n      this.state.words.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n      })    \r\n    }  \r\n\r\n    setValue = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.setValue() )  \r\n\r\n    readMore = (id) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let currentColor = colors[Math.floor(Math.random()*colors.length)];\r\n      let activeTargetTitle = this.state.words.find(x => x.id === id).name;\r\n\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(false);          \r\n      \t} \r\n      }\r\n\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords,\r\n        currentColor,\r\n        arrayOfButtons,\r\n        iconsArray,\r\n        disabled      \t\r\n      })\r\n    }\r\n\r\n\r\n    addToList = (id) =>{\r\n      let addedItems = this.state.addedItems.slice();\r\n      let currentWords = this.state.currentWords.slice();\r\n      let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let iconsArray = this.state.iconsArray.slice();\r\n      let selected = currentWords.find(x => x.id === id);      \r\n      arrayOfButtons[id] = \"Добавлено !\";\r\n      iconsArray[id] = false;\r\n      disabled[id] = \"disabled\";\r\n      addedItems.push(selected);\r\n      this.setState({\r\n      \taddedItems,\r\n      \tarrayOfButtons,\r\n      \ticonsArray,\r\n      \tdisabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      let sortedByNameUp = this.state.sortedByNameUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByNameUp: !sortedByNameUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByTranslationUp: !this.state.sortedByTranslationUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n   \tlet addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    arrayOfButtons[id] = \"Добавить\";    \r\n    iconsArray[id] = true;\r\n    disabled[id] = false;\r\n \t  addedItems.splice(addedItems.findIndex(function(item){\r\n        return item.id === id;\r\n    }), 1);\r\n    this.setState({ addedItems, disabled, iconsArray, arrayOfButtons });\r\n   }\r\n\r\n   deleteAll = () => {\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n    let addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    addedItems = [];\r\n    for (var i = 0; i < disabled.length; i++) {\r\n      disabled[i] = false;\r\n      arrayOfButtons[i] = \"Добавить\";\r\n      iconsArray[i] = true;\r\n    }\r\n    this.setState({ addedItems, arrayOfButtons, iconsArray, disabled  })    \r\n   }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"#3281F0\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      contentLoaded: false      \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n          .then(axios.spread((firstResponse, secondResponse) => { \r\n          let words = firstResponse.data;\r\n          let allWords = secondResponse.data;\r\n          let contentArray = [];\r\n          this.setState({\r\n            allWords,\r\n            words,\r\n            contentArray,\r\n            contentLoaded: true\r\n          }, () => this.constructMenu());\r\n       }))\r\n   }\r\n\t\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.contentLoaded ?\r\n            <div className=\"texts-wrapper\">\r\n              <Menu className=\"texts-menu decks-menu\" vertical>\r\n                {this.state.isDropdownVisible ? \r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item> : null\r\n                }\r\n                <Menu.Item className=\"no-top-padding added-title\" style = {{ backgroundColor: this.state.currentColor}} >\r\n                  {this.state.addedItems.length ? \"Добавленные\" : \"Добавленных пока нет\"}\r\n                </Menu.Item>\r\n                {(this.state.addedItems.length) ? \r\n                <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                  <ul className=\"decks-added-wrapper\">\r\n                    {this.state.addedItems.map((item,index)=> \r\n                      <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                        <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem.bind(this, item.id)} ><Icon name='trash alternate' /></span></li>\r\n                    )}\r\n                  </ul>\r\n                </Menu.Item> : null }\r\n                { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n                <Menu.Item className=\"decks-button-wrapper\" >\r\n                   <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Изучить <Icon name='book' className=\"nav-icon-left\" /> </Button>\r\n                   <Button onClick={this.deleteAll} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Удалить <Icon name='trash alternate' className=\"nav-icon-left\" /> </Button>\r\n                </Menu.Item> : null\r\n                }           \r\n              </Menu>           \r\n                {(this.state.words.length && this.state.areTextsVisible) ? \r\n                <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n                  {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                    <Card key={index} className=\"decks-single-card\">\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"decks-description\">\r\n                              <h2>{item.name}</h2>\r\n                              <h3>{item.number} слов</h3>\r\n                              <Button onClick={this.readMore.bind(this, item.id)} primary className=\"decks-button\" >Открыть</Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  )}\r\n                </Card.Group> : null\r\n               }\r\n               {this.state.isSingleTextVisible ?\r\n                <div className=\"decks-outer-wrapper\">\r\n                <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                  <Menu.Item name='byName'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                      по имени \r\n                      {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item name='byTranslation'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                      по переводу \r\n                      {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item style={{float: \"right\"}} name='close'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.setStateOnStart} title=\"Назад\">\r\n                      <Icon name='window close outline' className=\"nav-icon-left\" size=\"\" /> \r\n                    </Button>\r\n                  </Menu.Item>  \r\n                </Menu>\r\n                  <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                    {this.state.currentWords.map((item, index) => \r\n                      <Card key={index}>\r\n                        <Card.Content>\r\n                          <div className=\"texts-image-wrapper decks-image\">\r\n                            <Image src={item.image} />\r\n                            <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                                <h3>{item.name}</h3>\r\n                                <h4>{item.translation}</h4>\r\n                                <Button className=\"decks-button-add\" onClick={this.addToList.bind(this, item.id)} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                  {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                  } \r\n                                  {this.state.arrayOfButtons[index]}\r\n                                </Button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Card>\r\n                     )}\r\n                  </Card.Group> \r\n                </div> : null}       \r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass AudioList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      categoryArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"navy\",\"maroon\",\"magenta\",\"green\",\"teal\",\"tomato\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      currentAudio: null,\r\n      playState: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n              .then(axios.spread((firstResponse, secondResponse) => { \r\n              let words = firstResponse.data;\r\n              let allWords = secondResponse.data;\r\n              let contentArray = [];\r\n              let currentAudio = new Audio('audio/Baskervilles1.mp3');\r\n          this.setState({\r\n            allWords: allWords,\r\n            words: words,\r\n            contentArray: contentArray,\r\n            currentAudio: currentAudio\r\n          }, () => this.consoleParams() );\r\n       }))\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.words.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n        const unique = arr\r\n            .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      console.log(categoryValue);\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )  \r\n\r\n    readMore = (e) =>{\r\n      let arrayOfButtons = [];      \r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let target = e.target.parentElement;\r\n      let color = colors[Math.floor(Math.random()*colors.length)];\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].textContent;\r\n      for (var i = 0; i < allWords.length; i++) {\r\n        if(allWords[i][\"category\"] === activeTargetTitle ){\r\n          currentWords.push(allWords[i])\r\n        } \r\n      }\r\n\r\n      for (var i = 0; i < currentWords.length; i++) {\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(\"\");\r\n      }\r\n      \r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords: currentWords,\r\n        currentColor: color,\r\n        arrayOfButtons: arrayOfButtons,\r\n        iconsArray: iconsArray,\r\n        disabled: disabled        \r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n\r\n    addedFirst = () =>{\r\n      console.log(this.state);\r\n      let state = this.state.sortedByTranslationUp;\r\n      this.setState({\r\n        addedUp: !state\r\n      })\r\n    }\r\n\r\n  //сортировка по имени\r\n    sortByName = () =>{\r\n        let state = this.state.sortedByNameUp;\r\n        console.log(\"current words\", this.state.currentWords);\r\n      const words = this.state.currentWords.slice();\r\n      let newWords = words;\r\n      if(this.state.isOldestFirst){\r\n        newWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n      } else {\r\n        newWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n      }\r\n      console.log(\"new words\", newWords);\r\n      this.setState({\r\n        isOldestFirst: !this.state.isOldestFirst,\r\n        currentWords: newWords,\r\n        sortedByNameUp: !state      \r\n      })    \r\n    }\r\n\r\n    startPlayer = () =>{\r\n      let currentState = this.state.playState;\r\n      this.setState({\r\n        playState: !currentState\r\n      }, () => this.playAudio() )\r\n    }\r\n\r\n    playAudio = () =>{\r\n      let audio = this.state.currentAudio;\r\n      if(this.state.playState){\r\n        audio.play();\r\n      }\r\n      else{\r\n        audio.pause();\r\n      }\r\n      this.setState({\r\n        currentAudio: audio\r\n      })\r\n    }\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          <Menu className=\"texts-menu decks-menu\" vertical>\r\n            {this.state.isDropdownVisible ? \r\n                <Menu.Item name='inbox' >\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item> : null\r\n            }\r\n              <Menu.Item>\r\n                <Button onClick={this.startPlayer}>\r\n                {this.state.playState ?\r\n                 <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  }Listen</Button>\r\n\r\n              </Menu.Item>\r\n              <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                {(this.state.addedItems.length) ? \r\n                <ul className=\"decks-added-wrapper\">\r\n                  {this.state.addedItems.map((item,index)=> \r\n                    <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                      <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem} ><Icon name='trash alternate' size='' /></span></li>\r\n                  )}\r\n                </ul> : null\r\n              } \r\n              </Menu.Item>\r\n              { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n              <Menu.Item className=\"decks-button-wrapper\" >\r\n                 <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} >Изучить</Button>\r\n              </Menu.Item> : null\r\n              }           \r\n            </Menu>           \r\n              {(this.state.words.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n              {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper decks-image\">\r\n                      <Image src={item.image} />\r\n                      <div className=\"decks-description\">\r\n                          <h2>{item.name}</h2>\r\n                          <h3><span>{item.number}</span></h3>\r\n                          <Button onClick={this.readMore} primary className=\"decks-button\" >Открыть</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ?\r\n              <div className=\"decks-outer-wrapper\">\r\n              <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                <Menu.Item name='byName'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                    по имени \r\n                    {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item name='byTranslation'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                    по переводу \r\n                    {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item style={{float: \"right\"}} name='close'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.backToDecks}>\r\n                    <Icon name='window close outline' size='small' className=\"nav-icon-left\" /> \r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n                <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                  {this.state.currentWords.map((item, index) => \r\n                    <Card key={index}>\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                              <h3>{item.name}</h3>\r\n                              <h4>{item.translation}</h4>\r\n                              <Button className=\"decks-button-add\" onClick={this.addToList} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                } \r\n                                {this.state.arrayOfButtons[index]}\r\n                              </Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                   )}\r\n                </Card.Group> \r\n              </div> : null}\r\n       \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default AudioList;","import React, { Component, Fragment } from 'react';\r\nimport {  List, Icon, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      email: \"user1233\",\r\n      password: 69691231,\r\n      colorValue: \"#3281F0\",\r\n      colorOptions: [{ key: 1, value: \"#3281F0\", text: \"#3281F0\"}, { key: 2, value: \"red\", text: \"red\"}]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      \r\n  }   \r\n\r\n  changeColor = (e, { value }) => {\r\n    console.log(e);\r\n    this.setState({ colorValue: value })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"settings-wrapper\">\r\n            <div className=\"settings-container\">\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Цветовая схема</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Громкость звука</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input, Dropdown, TextArea, Form, Checkbox ,Icon, Rating, List } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      books: [],\r\n      allBoooks: [],\r\n      options: [],\r\n      currentGenre: '',\r\n      currentLength: '',\r\n      value: null,\r\n      rating: '',\r\n      size: '',      \r\n      areBooksVisible: true,\r\n      isMenuVisible: true,\r\n      isPreviewVisible: false,\r\n      isSingleBookVisible: false,\r\n      isBookNavPanelVisible: false,\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n      description: null,\r\n      image: null,\r\n      currentBook: '',\r\n      currentPage: '',\r\n      currentPageIndex: 0,\r\n      currentArrayBooks: [],\r\n      currentIndexArray: [],\r\n      bookHTML: '',\r\n      parsedBook: null,\r\n      bookPages: [],\r\n      bookValue: null,\r\n      bookVal: '',\r\n      currentComment: '',\r\n      currentName: '',\r\n      currentEmail: '',\r\n      likes: 0,\r\n      errors: {},\r\n      checkedItems: new Map(),\r\n      checked: false,\r\n      audiobooks: [],\r\n      currentAudio: null,\r\n      newAudio: null,\r\n      playState: false,\r\n      currentAudioId: 0,\r\n      scrollForwardState: true,\r\n      scrollBackwardState: false,\r\n      currentVolume: 50,\r\n      currentRange: 0,\r\n      currentDuration: null,\r\n      minutes: 0,\r\n      hours: 0,\r\n      seconds: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/books.json')\r\n        .then(res => {\r\n          let books = res.data;\r\n          this.setState({ \r\n            books, allBooks: res.data\r\n          }, () => this.createMenu() );\r\n        })\r\n    }\r\n\r\n    createMenu = () =>{\r\n\r\n      let options = [], age = [], genres = {}, sizes = [], ageTemp = [], sizesTemp = {};\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].genre;\r\n        for (var j = 0; j < item.length; j++) {\r\n          if (!genres.hasOwnProperty(item[j])) {\r\n            genres[item[j]] = [];\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          } else {\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const item in genres) {\r\n        options.push({\r\n          key: item,\r\n          text: item,\r\n          value: genres[item]\r\n        })\r\n      }\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        if (ageTemp.indexOf(this.state.books[i].age_restriction) === -1) {\r\n          ageTemp.push(this.state.books[i].age_restriction);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < ageTemp.length; i++) {\r\n        age.push({\r\n          key: ageTemp[i],\r\n          text: ageTemp[i],\r\n          value: ageTemp[i]\r\n        })\r\n      }\r\n\r\n      sizesTemp[\"Менее 10000\"] = [];\r\n      sizesTemp[\"От 10000 до 50000\"] = [];\r\n      sizesTemp[\"Более 50000\"] = [];\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].length;\r\n        if (item <= 10000) {\r\n          sizesTemp[\"Менее 10000\"].push(this.state.books[i].id);\r\n        } else if(item > 10000 && item < 50000) {\r\n          sizesTemp[\"От 10000 до 50000\"].push(this.state.books[i].id);\r\n        } else {\r\n          sizesTemp[\"Более 50000\"].push(this.state.books[i].id);\r\n        }\r\n      }\r\n\r\n      for (const item in sizesTemp) {\r\n        sizes.push({\r\n          key: item,\r\n          text: item,\r\n          value: sizesTemp[item]\r\n        })\r\n      }\r\n\r\n      console.log(sizes);\r\n\r\n      this.setState({\r\n        options, age, sizes\r\n      })\r\n    } \r\n/*\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      console.log(arr);\r\n      var comp = 'text';\r\n      const options = arr\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      console.log(options);    \r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n*/\r\n    selectValue = () =>{\r\n      var bookVal = this.state.bookValue;\r\n      this.setState({\r\n        bookVal\r\n      })  \r\n    }\r\n\r\n\r\n    handleGenreChange = (e, { value }) => {\r\n      this.setState({ currentGenre: value })\r\n    }        \r\n\r\n    handleRatingChange = (e, { value }) => {\r\n      this.setState({ rating: value })\r\n    }  \r\n\r\n    handleLengthChange = (e, { value }) => {\r\n      this.setState({ currentLength: value })\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    } \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu></TopMenu>\r\n        <div className=\"texts-wrapper\">\r\n        {this.state.isMenuVisible ?\r\n          <Menu className=\"texts-menu\" vertical>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите жанр'\r\n                fluid\r\n                value={this.state.currentGenre} \r\n                key={this.state.options.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleGenreChange}\r\n                options={this.state.options} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите размер'\r\n                fluid\r\n                value={this.state.currentLength} \r\n                //key={this.state.length.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleLengthChange}\r\n                options={this.state.sizes} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите рейтинг'\r\n                fluid\r\n                value={this.state.rating} \r\n                //key={this.state.age.key}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleRatingChange}\r\n                options={this.state.age} \r\n              />\r\n            </Menu.Item>                        \r\n          </Menu>:null\r\n        }\r\n            {(this.state.books.length && this.state.areBooksVisible) ? \r\n            <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n            {this.state.books.map((item, index) => ( \r\n              (this.state.currentGenre === 'all'|| this.state.currentGenre === '' || this.state.currentGenre.indexOf(item.id) !== -1) && \r\n              (this.state.rating === 'all'|| this.state.rating === '' || this.state.rating === item.age_restriction) &&\r\n              (this.state.currentLength === 'all' || this.state.currentLength === '' || this.state.currentLength.indexOf(item.id) !== -1)) &&\r\n              <Card key={index} className=\"single-book\">\r\n                <Card.Content>\r\n                  <div className=\"texts-image-wrapper books-image-wrapper\">\r\n                    <Image src={item.image} />\r\n                  </div>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-author\">{item.author}</span></Card.Header>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-title\">{item.title}</span> {/*<span className=\"books-genre\">{item.genre.map((genre, ind) => <span>{`#${genre}`}</span>)}</span>*/}</Card.Header>\r\n                  <div className=\"books-information\">\r\n                    <div className=\"books-views\">\r\n                      <span><Icon name='eye' size='large' /> </span>\r\n                      <span>{item.views}</span>\r\n                    </div>\r\n                    <div className=\"books-favourites\">\r\n                      <span><Icon name='heart' size='' /></span> \r\n                      <span>{item.likes}</span>\r\n                    </div>\r\n                    <Rating icon='star' defaultRating={item.rating} className = \"books-rating\" maxRating={5} disabled/>\r\n                  </div>\r\n                  <Card.Description>\r\n                    {item.content.substr(0,250) + ' ...'}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button primary><Link className=\"training-link books-link\"  to={{ pathname: `/books/${item.id}`,  query: { item } }}>Читать</Link></Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n           }\r\n        </div>\r\n      </div>\r\n    <footer></footer>\r\n    </Fragment>\r\n\t );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.booksReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Materials extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/video.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/videos\">Видео</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card> \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/words.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/decks\">Наборы слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/texts.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/texts\">Обучающие тексты</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>             \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/books.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/books\">Книги</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n                                                                                                                                                             \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Materials;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Checkbox,Icon, Form, Divider, Label } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport ReactDOM from 'react-dom';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\n\r\nclass Example extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      categoryArray: [],\r\n      value: null,\r\n      areTestsVisible: true,\r\n      isSingleTestVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      value: '',\r\n      currentValue: '',\r\n      currentTest: [],\r\n      activeTest: null,\r\n      curIndexTest: 0,\r\n      curIndexCheckbox: 0,\r\n      correctResults: [],\r\n      correctAnswers: [],\r\n      incorrectAnswers: [],\r\n      isMenuVisible: true,\r\n      isTooltipVisible: false,\r\n      currentColor: null\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/tests.json')\r\n        .then(res => {\r\n          let tests = res.data;\r\n          this.setState({ \r\n            tests: tests\r\n          }, () => this.getMenuParams());\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (prevState.currentTest !== this.state.currentTest) {\r\n        \r\n      }\r\n    }\r\n\r\n    getMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.tests.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.title, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n    testChange = (e) =>{\r\n      let parentid = e.target.getAttribute(\"parentid\");   \r\n      let id = e.target.getAttribute(\"id\");\r\n      let currentTest = this.state.currentTest.slice();\r\n      let currentState = currentTest[parentid][id];\r\n      const arr = new Array(3).fill(false);\r\n      arr[id] = true;\r\n      currentTest[parentid] = arr;\r\n      this.setState({\r\n        currentTest\r\n      })\r\n    }\r\n\r\n\r\n    selectTest = (testId) =>{\r\n      let tests = this.state.tests.slice();\r\n      let activeTest = tests.find(x => x.id === testId);\r\n\r\n      let currentTest = [];\r\n      let testItem = [];\r\n      let correctResults = [];\r\n\r\n      activeTest.tasks.map((item, index) => correctResults.push(item.correct_answer));      \r\n      for (var i = 0; i < 3; i++) {\r\n        testItem.push(false);\r\n      }\r\n      for (var i = 0; i < activeTest.tasks.length; i++) {\r\n        currentTest.push(testItem);\r\n      }\r\n      this.setState({\r\n        activeTest,\r\n        currentTest,\r\n        correctResults\r\n      }, () => this.setState({\r\n          areTestsVisible: false,\r\n          isSingleTestVisible: true,\r\n      }));\r\n    }\r\n\r\n    backToTests = () =>{\r\n      this.setState({\r\n        areTestsVisible: true,\r\n        isSingleTestVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n    \t\tcurrentTest: [],\r\n    \t\tcurIndexTest: 0,\r\n    \t\tcurIndexCheckbox: 0,\r\n    \t\tcorrectResults: [],\r\n    \t\tcorrectAnswers: [],\r\n    \t\tincorrectAnswers: [],\r\n      })\r\n    }\r\n\r\n    checkResults = () =>{\r\n    \tlet resultsArray = this.state.currentTest.slice();\r\n    \tlet correctResults = this.state.correctResults.slice();\r\n    \tlet finalResults = [];\r\n    \tlet correctAnswers = [];\r\n    \tlet incorrectAnswers = [];\r\n    \tfor (var i = 0; i < resultsArray.length; i++) {\r\n    \t\tlet item = resultsArray[i];\r\n    \t\tfor (var j = 0; j < item.length; j++) {\r\n    \t\t\tif (item[j]) {\r\n    \t\t\t\tfinalResults.push(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n      if(finalResults.length == this.state.activeTest.tasks.length) {\r\n        for (var i = 0; i < finalResults.length; i++) {\r\n          if(correctResults[i] === finalResults[i]){\r\n            correctAnswers.push(i)\r\n          }\r\n          else{\r\n            incorrectAnswers.push(i)\r\n          }\r\n        }\r\n        this.setState({\r\n          isResultVisible: true,\r\n          isSingleTestVisible: false,\r\n          correctAnswers,\r\n          incorrectAnswers,\r\n          isMenuVisible: false,\r\n          isTooltipVisible: false\r\n        })                \r\n      }\r\n      else{\r\n        this.setState({\r\n          isTooltipVisible: true\r\n        })\r\n      }\r\n \t\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {this.state.areTestsVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n                <Menu.Item name='inbox'>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n          {(this.state.tests.length && this.state.areTestsVisible) ? \r\n            <Card.Group className=\"texts-cards tests-cards\" itemsPerRow={3} >\r\n              {this.state.tests.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&            \r\n              <Card key={index} className=\"test-card test-item\" style = {{boxShadow: `0 1px 3px 0 ${item.color}, 0 0 0 1px ${item.color}` }} >\r\n                <Card.Content>\r\n                  <Card.Header className=\"tests-card-title\" style = {{backgroundColor: item.color}} >\r\n                  \t<h3>{item.difficulty}</h3>\r\n                  \t<span>{item.title}</span>\r\n                  </Card.Header>\r\n                  <Card.Description className=\"tests-card-description\">\r\n                     <p className=\"tests-card-description-line\">Количество заданий - <span className=\"tests-card-description-txt\">{item.number}</span></p>\r\n                     <p className=\"tests-card-description-line\">Максимальное кол-во баллов - <span className=\"tests-card-description-txt\">{item.totalScore}</span></p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={ () => {this.selectTest(item.id)} /*this.selectTest.bind(this, item.id) */} style = {{backgroundColor: item.color }} >Начать тест</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n          }\r\n         {this.state.isSingleTestVisible ? \r\n            <Card className=\"single-text-card tests-wrapper\">\r\n              <h1>\r\n              \t{this.state.activeTest.title}\r\n              \t<span onClick={this.backToTests} title=\"Назад к тестам\" ><Icon name='window close outline'/></span>\r\n              </h1>\r\n              <Card.Content>\r\n                {this.state.activeTest.tasks.slice().map((item, index) =>\r\n                    <Card.Description key={item.id} id={index} className=\"single-text-card-description\">\r\n                    <h3 >{item.sentence}</h3>\r\n                    <Form className=\"single-test-form\" >\r\n                      {item.variants.map((param, ind) => \r\n                        <label className=\"test-label\" key={ind}>\r\n                          <input type=\"checkbox\" \r\n                            id={ind}\r\n                            parentid={item.id}\r\n                            label={param}\r\n                            name='checkboxRadioGroup'\r\n                            value={item}\r\n                            checked={this.state.currentTest[item.id][ind]}\r\n                            onChange={this.testChange}/>\r\n                            {param}                          \r\n                        </label>\r\n                      )}                                             \r\n                    </Form>                      \r\n                  </Card.Description>\r\n                )}\r\n              </Card.Content>\r\n              {this.state.isTooltipVisible ?\r\n                <div className=\"tests-tooltip\">\r\n                    <h4>Заполните все поля!</h4>               \r\n                </div> : null\r\n              }\r\n              <div className=\"tests-button-wrapper decks-button-wrapper\">\r\n              \t<Button onClick={this.checkResults} >Принять</Button>                  \t\r\n              </div>\r\n            </Card>:null\r\n          }\r\n          {this.state.isResultVisible ? \r\n            <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper test-final\" >\r\n             <Card className=\"card-training test-result-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n    \t\t\t\t\t\t  <div className=\"grades-results-wrapper\">\r\n    \t\t\t\t\t\t\t  <h3>Количество правильных ответов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n                    <h3>Количество набранных баллов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n    \t\t\t\t\t\t  </div>\t\t                  \r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.correctAnswers.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.incorrectAnswers.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.backToTests}>Назад к тестам</Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group> : null \r\n          }       \r\n          </div>\r\n        </div>  \r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Example;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Rightwrong extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isImageVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false         \r\n      }, () => this.initialLoad())\r\n   } \r\n\r\n   initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n \r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }  \r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          console.log(result);               \r\n          this.setState({ \r\n            words, \r\n            result,\r\n            currentWord });\r\n        })\r\n   }\r\n\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (response) => {\r\n      if (response) {\r\n        let positiveWords = this.state.positiveWords.slice();        \r\n        positiveWords.push(this.state.currentWord); \r\n        this.setState({ positiveWords })       \r\n      } else {\r\n          let negativeWords = this.state.negativeWords.slice();          \r\n          negativeWords.push(this.state.currentWord);\r\n          this.setState({ negativeWords })          \r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true\r\n      })      \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id =this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < this.state.result.length){\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];     \r\n        this.setState({\r\n          id,\r\n          currentWord, \r\n          isImageVisible: false,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let trueOrFalseWords = this.props.store.trueOrFalseWords.slice();\r\n        for (var i = 0; i < words.length; i++) {\r\n          if (!(trueOrFalseWords.find(el => el.id === words[i].id))) {\r\n            words[i][\"learnedDate\"] = new Date();\r\n            this.props.actions.updateTrueOrFalse(words[i])\r\n          }\r\n        } \r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false\r\n        })                \r\n      }\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Верно-неверно</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent}>Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"rightwrong-timer\"> \r\n                </Card.Header>\r\n                <Card.Header className=\"rightwrong-header\">{this.state.currentWord.name} \r\n                </Card.Header>                \r\n                <Card.Header>{this.state.currentWord.translation} \r\n                </Card.Header>\r\n                <div className=\"rightwrong-image-wrapper\">\r\n                {this.state.isImageVisible ?\r\n                  <Image src={this.state.currentWord.image} className=\"rightwrong-image\"></Image> : null               \r\n                }\r\n                </div>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} className=\"red false-button\" primary>Неверно</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} className=\"green true-button\" primary>Верно</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {(this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rightwrong);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[1].main_points;\r\n          const fullData = res.data[0].rules[1].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[2].main_points;\r\n          const fullData = res.data[0].rules[2].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[3].main_points;\r\n          const fullData = res.data[0].rules[3].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[4].main_points;\r\n          const fullData = res.data[0].rules[4].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[5].main_points;\r\n          const fullData = res.data[0].rules[5].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[6].main_points;\r\n          const fullData = res.data[0].rules[6].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFuturePerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[8].main_points;\r\n          const fullData = res.data[0].rules[8].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPastPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[7].main_points;\r\n          const fullData = res.data[0].rules[7].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[9].main_points;\r\n          const fullData = res.data[0].rules[9].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[10].main_points;\r\n          const fullData = res.data[0].rules[10].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass GrammarFuturePerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[11].main_points;\r\n          const fullData = res.data[0].rules[11].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfectContinuous;","import React,{Component} from 'react';\r\n//import './audioplayer.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\nimport jsmediatags from \"jsmediatags\";\r\nimport { Howl } from \"howler\";\r\nimport axios from 'axios';\r\n\r\n//import {bindActionCreators} from 'redux';\r\n//import actions from './actions/index';\r\n\r\n//import {connect} from 'react-redux';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: [],\r\n      soundVolume: 5,\r\n      playing: false,\r\n      muted: false,\r\n      currentTrack: null,\r\n      currentTrackLength: null,\r\n      currentTrackInfo: null,\r\n      currentTrackPicture: null,\r\n      currentId: 4,\r\n      order: \"consecutive\",\r\n      duration: 0,\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n      currentDuration: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\",\r\n      tracksVisible: true,\r\n      interval: null,\r\n      progress: 0,\r\n      decodingFinished: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      currentId: 1\r\n    }, () => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) =>\r\n          this.setState({ audio: res.data })\r\n        );       \r\n    }) \r\n  }\r\n\r\n/*\r\n  componentDidUpdate(prevProps){\r\n    let currentTrack = this.state.currentTrack;\r\n    if(prevProps.store.playing !== this.state.playing) { \r\n      this.setState({playing: this.state.playing})\r\n      if (this.state.playing === false) {\r\n        currentTrack.pause();\r\n      } else {\r\n        let interval = this.state.interval;\r\n        currentTrack.play();\r\n        interval = setInterval(() => this.startCycle(), 1000);\r\n        this.setState({ interval });\r\n      }\r\n    }    \r\n\r\n    if(prevProps.store.currentId !== this.state.currentId) { \r\n      if (currentTrack) {\r\n        currentTrack.pause();\r\n      }   \r\n      this.setState({\r\n        currentTrack\r\n      }, () => this.callFunctions(this.state.currentId));\r\n    }\r\n  }\r\n*/\r\n  callFunctions = () => {\r\n    let id = this.state.currentId;\r\n    let currentTrack = new Howl({\r\n      src: \"tracks/\" + this.state.audio.slice(id, id + 1),\r\n      html5: true,\r\n      volume: this.state.soundVolume / 10\r\n    });\r\n    var duration, minutes, seconds, currentMinutes, currentSeconds;\r\n    currentTrack.on(\"load\", () => {\r\n      duration = currentTrack.duration();\r\n      minutes = Math.floor(duration / 60);\r\n      seconds = Math.floor(duration - minutes * 60);\r\n      minutes = (\"0\" + minutes).slice(-2);\r\n      seconds = (\"0\" + seconds).slice(-2);\r\n      currentMinutes = \"00\";\r\n      currentSeconds = \"00\";\r\n      this.setState({ minutes, seconds, duration, currentTrack }, () => {\r\n        this.setState({ decodingFinished: true });        \r\n        if (this.state.playing) {\r\n          this.continuePlay();\r\n        } \r\n      });\r\n    });\r\n    this.readTags(id);\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      progress: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\"\r\n    })\r\n  }\r\n\r\n  readTags = (id) => {\r\n    let track = this.state.audio[id];\r\n    jsmediatags.read(\r\n      \"http://localhost:3000/tracks/\" + `${this.state.audio[id]}`,\r\n      {\r\n        onSuccess: (tag) => {\r\n          this.setState({ currentTrackInfo: tag }, () => {\r\n            this.decodeTrackInfo();\r\n          });\r\n        },\r\n        onError: (error) => {\r\n          console.log(\":(\", error.type, error.info);\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  decodeTrackInfo = () => {\r\n    let title = this.state.currentTrackInfo.tags.title;\r\n    let artist = this.state.currentTrackInfo.tags.artist;\r\n    let currentTrackPicture;\r\n    if (this.state.currentTrackInfo.tags.picture) {\r\n      const { data, type } = this.state.currentTrackInfo.tags.picture;\r\n      const byteArray = new Uint8Array(data);\r\n      const blob = new Blob([byteArray], { type });\r\n      currentTrackPicture = URL.createObjectURL(blob);\r\n    }\r\n    this.setState({\r\n      currentTrackPicture,\r\n      currentTrackTitle: title,\r\n      currentTrackArtist: artist\r\n    })\r\n  };\r\n\r\n  playMusic = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let interval = this.state.interval;\r\n    if (this.state.playing) {\r\n      currentTrack.pause();\r\n      //this.props.actions.changePlayingState(false);\r\n      clearInterval(interval);\r\n      this.setState({ interval });\r\n    } else {\r\n      currentTrack.volume(this.state.soundVolume / 10);\r\n      currentTrack.play();\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n      this.setState({ interval });\r\n      //this.props.actions.changePlayingState(true);\r\n    }\r\n    //this.props.actions.changePlayingState(!this.state.playing);\r\n    this.setState({currentTrack});\r\n  };\r\n\r\n  continuePlay = () =>{\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.playing) {\r\n      currentTrack.stop();\r\n    }\r\n    let interval = this.state.interval;\r\n    clearInterval(interval);\r\n    currentTrack.play();\r\n    if (this.state.playing) {\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n    }    \r\n    this.setState({ interval });    \r\n  }\r\n\r\n  changeVolume = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(e.target.value / 10);\r\n    this.setState({ soundVolume: e.target.value, currentTrack });\r\n  };\r\n\r\n  nextTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    console.log(\"currentTrack\", currentTrack);\r\n    currentTrack.stop();\r\n    if (this.state.currentId < this.state.audio.length - 1) {\r\n      //this.props.actions.selectTrack(this.state.currentId + 1);\r\n    } else {\r\n       //this.props.actions.selectTrack(0);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  prevTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    currentTrack.stop();\r\n    if (this.state.currentId > 0) {\r\n      //this.props.actions.selectTrack(this.state.currentId - 1);\r\n    } else {\r\n      //this.props.actions.selectTrack(this.state.audio.length - 1);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  muteSound = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.muted) {\r\n      currentTrack.mute(false);\r\n    } else {\r\n      currentTrack.mute(true);\r\n    }\r\n    this.setState({\r\n      muted: !this.state.muted,\r\n      currentTrack,\r\n    });\r\n  };\r\n\r\n  startCycle = () => {\r\n    this.incTime();\r\n    this.updateProgress();\r\n  };\r\n\r\n  updateProgress = () => {\r\n    let time = Math.round(this.state.currentTrack.seek());\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let progress = ((time / duration) * 100).toFixed(2);\r\n    this.setState({ progress });\r\n    //this.props.actions.changeProgressState(progress);\r\n  };\r\n\r\n  incTime = () => {\r\n    let currentDuration = Math.round(this.state.currentTrack.seek());\r\n    let currentMinutes = Math.floor(currentDuration / 60);\r\n    let currentSeconds = Math.floor(currentDuration - currentMinutes * 60);\r\n    currentMinutes = (\"0\" + currentMinutes).slice(-2);\r\n    currentSeconds = (\"0\" + currentSeconds).slice(-2);\r\n    this.setState({ currentSeconds, currentMinutes, currentDuration });\r\n    if (currentDuration === this.state.currentTrack.duration()) {\r\n      let currentTrack = this.state.currentTrack;\r\n      currentTrack.stop();      \r\n      if (this.state.currentId < this.state.audio.length - 1) {\r\n        //this.props.actions.selectTrack(this.state.currentId + 1);\r\n      } else {\r\n        //this.props.actions.selectTrack(0);\r\n      }\r\n      this.setState({ currentTrack, decodingFinished: false }, () => {\r\n        this.resetState();\r\n        this.callFunctions(this.state.currentId);\r\n      });      \r\n    }\r\n  };\r\n\r\n  setSeek = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let seek = (e.target.value * duration) / 100;\r\n    currentTrack.seek(seek);\r\n    console.log(\"seek\", Math.round(seek));\r\n    this.setState({ currentTrack, progress: e.target.value }, () => {\r\n      this.incTime();\r\n      //this.props.actions.changeProgressState(Math.round(seek));\r\n      console.log(this.state.progress);\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"player__visualizer player-visualizer\">\r\n          <div className=\"player-visualizer__waveform\" id=\"waveform\"></div>\r\n        </div>\r\n        <div className=\"player__top player-top\">\r\n          <span className=\"player-top__time\">{this.state.currentMinutes}.{this.state.currentSeconds}</span>\r\n          <div className=\"player-top__progress player-progress\">\r\n              <input\r\n                className=\"player-progress__input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                type=\"range\"\r\n                value={this.state.progress}\r\n                onChange={this.setSeek}\r\n              />\r\n          </div>\r\n          <span className=\"player-top__time\">{this.state.minutes}.{this.state.seconds}</span>\r\n        </div>\r\n        <div className=\"player-main\">\r\n          <div className=\"player-left\">\r\n            <div className=\"player-info player__info\">\r\n              <div className=\"player-info__icon player-icon\">\r\n                  {this.state.currentTrackPicture ? (\r\n                    <img src={this.state.currentTrackPicture} className=\"player-icon__picture\" alt=\"\" />\r\n                  ) : null}              \r\n              </div>\r\n              <div className=\"player-info__description player-description\">\r\n                <p className=\"player-description__name\">{this.state.currentTrackTitle}</p>\r\n                <p className=\"player-description__artist\">{this.state.currentTrackArtist}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"player__controls player-controls\">\r\n              <div className=\"player-controls__navigation\">\r\n                <div className=\"player-controls__item player-controls__left\" onClick={this.prevTrack}><i className=\"fas fa-backward\"></i></div>\r\n                {!this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-play\"></i></div> : null}\r\n                {this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-pause\"></i></div> : null}\r\n                <div className=\"player-controls__item player-controls__right\" onClick={this.nextTrack}><i className=\"fas fa-forward\"></i></div>         \r\n              </div>\r\n            </div>        \r\n          </div>\r\n          <div className=\"player-controls__volume player-volume\">\r\n            <div className=\"player-controls__item player-volume__item\"><i className=\"fas fa-volume-up\"></i></div>\r\n                      <input\r\n                        className=\"player-controls__audio\"\r\n                        value={this.state.soundVolume}\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        onChange={this.changeVolume}\r\n                        type=\"range\"\r\n                      />        \r\n          </div>      \r\n        </div>\r\n      </div>        \r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n*/\r\nexport default AudioPlayer;","import React, { Component } from 'react';\r\nimport {Button, TextArea, Form, Input } from 'semantic-ui-react'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Comments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      loaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id === Number(this.props.id));\r\n    if (item) {\r\n      for (var i = 0; i < item.comments.length; i++) {\r\n        let date = new Date(item.comments[i].date);\r\n        let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n          date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);\r\n        item.comments[i].date = datestring;\r\n      }\r\n      this.setState({\r\n        comments: item.comments,\r\n        loaded: true\r\n      }, () => console.log(this.state))      \r\n    } else {\r\n      this.setState({\r\n        noComments: true,\r\n        loaded: true\r\n      })\r\n    }\r\n    \r\n  } \r\n\r\n    addComment = () =>{\r\n      let comments = this.state.comments.slice();\r\n      let errors = this.state.errors;\r\n      let currentComment = this.state.currentComment;\r\n      let currentName = this.state.currentName;\r\n      let currentEmail = this.state.currentEmail;\r\n      let temp = {};\r\n\r\n      if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n        let date = new Date();\r\n        let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n        date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);        \r\n        temp['commentId'] = uuidv4();\r\n        temp['author'] = currentName;\r\n        temp['text'] = currentComment;        \r\n        temp['date'] = datestring;\r\n        let id = this.props.id;\r\n        this.props.actions.addCommentToBook(id, temp);        \r\n        this.setState({\r\n          currentName: '',\r\n          currentComment: '',\r\n          currentEmail: ''\r\n        })\r\n      }\r\n\r\n      else if (currentName === ''){\r\n        errors['name'] = \"Заполните поле имени!\";\r\n        this.setState({\r\n          errors\r\n        })\r\n      }\r\n\r\n      else if(currentComment === ''){\r\n        errors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n\r\n      else if(currentEmail === ''){\r\n        errors['email'] = \"Заполните поле почты\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n\r\n    }\r\n\r\n    updateComment = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateName = (event) =>{\r\n      this.setState({currentName: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateEmail = (event) =>{\r\n      this.setState({currentEmail: event.target.value.substr(0,500)});\r\n    }\r\n\r\n\r\n  render() {\r\n    return (     \r\n      <>\r\n        <div className=\"single-text-card-form\">\r\n          <Form>\r\n            <Form.Field>\r\n              <Input value={this.state.currentName || ''} onChange={this.updateName} focus placeholder='Имя'/>\r\n              <span>{this.state.errors['name']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input value={this.state.currentEmail || ''} onChange={this.updateEmail} focus placeholder='Email'/>\r\n              <span>{this.state.errors['email']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <TextArea value={this.state.currentComment || ''} onChange={this.updateComment} maxLength=\"50\" placeholder='Ваш комментарий' />\r\n              <span>{this.state.errors['comment']}</span>\r\n            </Form.Field>                           \r\n            <Button onClick={this.addComment} type='submit'>Отправить</Button>\r\n          </Form>         \r\n        </div>\r\n        {this.state.loaded && this.state.comments ?\r\n          <div className=\"single-text-card-comments\">\r\n            {this.state.comments.map((item, index) =>\r\n              <div className=\"single-text-card-comment\" key={index}>\r\n                <h3>{item.author}<span className=\"single-text-card-date\">{item.date}</span></h3>\r\n                <p>{item.text}</p>                              \r\n              </div>\r\n             )}                       \r\n          </div>\r\n        : null}\r\n      </> \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalFont extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      fontSizeTemp: 16,\r\n      lineHeightTemp: 32,\r\n      fontFamilyTemp: \"'Times New Roman', sans-serif\",\r\n      fontWeightTemp: 400,      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n changeValue = (e) =>{\r\n    this.setState({fontSizeTemp: e.target.value})\r\n  }\r\n\r\n  changeFontFamily = (e) =>{\r\n    this.setState({fontFamilyTemp: e.target.value})\r\n  }\r\n\r\n  changeFontWeight = (e) =>{\r\n    this.setState({fontWeightTemp: e.target.value})\r\n  }\r\n\r\n  changeLineHeight = (e) =>{\r\n    this.setState({lineHeightTemp: e.target.value})\r\n  } \r\n\r\n  applyFontSettings = () => {\r\n    this.props.actions.selectFontSize(this.state.fontSizeTemp);\r\n    this.props.actions.selectFontFamily(this.state.fontFamilyTemp);\r\n    this.props.actions.selectFontWeight(this.state.fontWeightTemp);\r\n    this.props.actions.selectFontSpacing(this.state.lineHeightTemp);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleFontModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper select-font-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-font\">\r\n            <div className=\"select-font-block\">\r\n              <span>Размер</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeValue} type=\"range\" min=\"8\" max=\"24\" value={this.state.fontSizeTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontSizeTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Интервал</span>         \r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeLineHeight} type=\"range\" min=\"16\" max=\"72\" value={this.state.lineHeightTemp} name=\"\"/>                \r\n                <span className=\"select-font-value\">{this.state.lineHeightTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Жирность</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeFontWeight} type=\"range\" min=\"200\" max=\"900\" step=\"100\" value={this.state.fontWeightTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontWeightTemp}</span>\r\n              </div>  \r\n            </div>\r\n          </div>\r\n          <select className=\"select-font-family\" onChange={this.changeFontFamily} value={this.state.fontFamily}>\r\n            <option value =\"'Times New Roman', sans-serif\">Times New Roman</option>\r\n            <option value =\"'Arial', sans-serif\">Arial</option>\r\n            <option value =\"'Verdana', sans-serif\">Verdana</option>\r\n            <option value =\"'Lucida Console', sans-serif\">Lucida Console</option>\r\n            <option value =\"'Georgia', serif\">Georgia</option>\r\n            <option value =\"'Courier New', monospace\">Gourier New</option>\r\n          </select>\r\n          <p className=\"select-font-example\" style={{ \r\n                                fontSize: this.state.fontSizeTemp + \"px\", \r\n                                fontFamily: this.state.fontFamilyTemp,\r\n                                lineHeight: this.state.lineHeightTemp + \"px\",\r\n                                fontWeight: this.state.fontWeightTemp }} >Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet</p>                  \r\n          <button className=\"normal-button\" onClick={this.applyFontSettings} >Применить</button>\r\n        </div>    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalFont);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalColor extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isColorModalOpen: false,\r\n      activeFontColor: '#222222',\r\n      activeBgColor: '#f6f6f6',\r\n      fontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\r\n      bgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\r\n      colorScheme: [  \r\n              '#000000','#111111','#222222','#333333',\r\n              '#444444','#555555','#666666','#777777',\r\n              '#888888','#999999','#a7a7a7','#b8b8b8',\r\n              '#d0d0d0','#dcdcdc','#f6f6f6','#ffffff'   ]      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n  setFontColor = (e) =>{\r\n    let fontState = this.state.fontState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < fontState.length; i++) {\r\n      fontState[i] = false;\r\n    }\r\n    fontState[index] = true;\r\n    this.setState({\r\n      activeFontColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      fontState\r\n    })\r\n\r\n  }\r\n\r\n  setBgColor = (e) =>{\r\n    let bgState = this.state.bgState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < bgState.length; i++) {\r\n      bgState[i] = false\r\n    }\r\n    bgState[index] = true;\r\n    this.setState({\r\n      activeBgColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      bgState\r\n    })\r\n  }\r\n\r\n  applyColorSettings = () =>{\r\n    this.props.actions.selectBgColor(this.state.activeBgColor);\r\n    this.props.actions.selectFontColor(this.state.activeFontColor);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleColorModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal} >\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-palette-container\">\r\n            <div className=\"palette-container-item\">\r\n              <p>Шрифт</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setFontColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.fontState[index] ? \r\n                      <span><i className=\"fas fa-check\"></i></span>  : null\r\n                    }\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"palette-container-item\">\r\n              <p>Фон</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setBgColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.bgState[index] ?\r\n                      <span><i className=\"fas fa-check\"></i></span> \r\n                       : null\r\n                    }\r\n                  </div>\r\n                )}          \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"palette-item-selected\" style={{ backgroundColor: this.state.activeBgColor }} >\r\n            <span style={{ color: this.state.activeFontColor  }} >Lorem ipsum </span>\r\n          </div> \r\n          <Button primary onClick={this.applyColorSettings}>Применить</Button>\r\n        </div>              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalColor);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\n\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass WordFound extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className = \"word-modal__overlay\">\r\n        <div className=\"word-modal\">\r\n          <div className=\"word-modal__image\">\r\n            <img src=\"word-modal__picture\" src = {this.props.word.image}/>\r\n          </div>\r\n          <div className=\"word-modal__description\">\r\n            <p className=\"word-modal__title\">{this.props.word.name} - {this.props.word.translation}</p>\r\n            <p className=\"word-modal__meaning\">{this.props.word.definition}</p>   \r\n            <Button primary onClick={this.closeSearchModal}>Закрыть</Button>              \r\n          </div>\r\n        </div>              \r\n      </div>        \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordFound);","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu, Icon, TextArea, Form, Checkbox, Input } from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu';\r\nimport Comments from './Comments';\r\nimport ModalFont from './ModalFont';\r\nimport ModalColor from './ModalColor';\r\nimport WordFound from './WordFound';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport iconv from 'iconv-lite';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass SelectedBook extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.fileInputRef = React.createRef();    \r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      text: null,\r\n      pageIndexes: [],\r\n      currentPageId: 0,\r\n      loaded: false,\r\n      pages: 0,      \r\n      commentsVisible: false,\r\n      wordsEl: [],\r\n      words: [],\r\n      selected: '',\r\n      isModalFoundOpen: false,\r\n      isModalInputOpen: false,\r\n      comments: []               \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id == this.props.match.params.id);\r\n    if (item) {\r\n      this.setState({\r\n        comments: item.comments\r\n      })\r\n    }\r\n    var myHeaders = new Headers();\r\n    myHeaders.append('Content-Type','text/plain; charset=UTF-8');  \r\n    const that = this;\r\n    axios.all([\r\n      axios.get('/books.json'), \r\n      axios.get('/words_full.json')\r\n    ])   \r\n    .then(axios.spread((obj1, obj2) => {\r\n      let books = obj1.data; \r\n      let words = obj2.data;\r\n      let selectedBook = books.find(x => x.id == this.props.match.params.id);\r\n      fetch(selectedBook.link, myHeaders)\r\n        .then(response => response.arrayBuffer())\r\n        .then(function (buffer) {\r\n            const decoder = new TextDecoder('iso-8859-1');\r\n            let text = decoder.decode(buffer).split(\"\\n\");\r\n            return text\r\n        })\r\n        .then((text) => that.setState({words, text }, () => that.splitIntoPages() ))\r\n    })) \r\n\r\n  } \r\n\r\n  splitIntoPages = () => {\r\n    let text = this.state.text;\r\n    let pages = [], words = [], pageIndexes = [];\r\n    let value = 1600 / this.props.store.lineHeight;\r\n    let pagesCount = Math.ceil(text.length / value);\r\n    let currentMin = 0;\r\n    let currentMax = 50;\r\n    for (var i = 0; i < pagesCount; i++) {\r\n      let txt = text.slice(currentMin, currentMax);\r\n      if (currentMin === 0 ) {\r\n        let newTxt = [];\r\n        for (var j = 0; j < txt.length; j++) {\r\n          let newSentence = [];\r\n          newSentence.push(txt[j].split(' '));\r\n          newTxt.push(newSentence);\r\n        }\r\n        words.push(newTxt);\r\n      }\r\n      pages.push(txt);\r\n      currentMin = currentMin + 50;\r\n      currentMax = currentMax + 50;\r\n    }\r\n      for (var i = 0; i < pagesCount; i++) {\r\n        pageIndexes.push(i);\r\n      }\r\n      this.setState({ pages, \r\n                      pageIndexes, \r\n                      currentPage: pages[0],\r\n                      splittedPage: words,\r\n                      loaded: true });\r\n  }  \r\n\r\n    prevButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages;\r\n      if(currentPageId > 0){\r\n        currentPageId--;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    }\r\n\r\n    nextButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages.slice();\r\n      if(currentPageId < pages.length - 1){\r\n        currentPageId++;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    }  \r\n\r\n  changePage = (e) =>{\r\n      let currentPageId = Number(e.target.value);\r\n      let pages = this.state.pages;\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId, currentPage\r\n      })  \r\n  }\r\n\r\n  toggleComments = () => {\r\n    this.setState({ commentsVisible: !this.state.commentsVisible })\r\n  }\r\n\r\n\r\n  searchForWord = (item, e) => {\r\n    switch (e.detail) {\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        let words = this.state.words.slice();\r\n        let newItem = item.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n        let found = words.find(x => x.name === newItem);\r\n        if (found) {\r\n          this.setState({\r\n            found\r\n          }, () => this.toggleFoundModal())\r\n        } else {\r\n          this.setState({\r\n            selected: newItem\r\n          }, () => this.toggleInputModal())\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }    \r\n  } \r\n\r\n  toggleFoundModal = () => {\r\n    this.props.actions.toggleSearchModal(true);\r\n  }\r\n\r\n  toggleInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: !this.state.isModalInputOpen\r\n    })\r\n  }\r\n\r\n\r\n\r\n  changeFont = () => {\r\n    this.props.actions.toggleFontModal(true);\r\n  }\r\n\r\n  changeColor = () => {\r\n    this.props.actions.toggleColorModal(true);\r\n  }\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n  closeInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: false\r\n    });\r\n  }  \r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.props.store.isSearchModalOpen ?\r\n            <WordFound word = {this.state.found} />\r\n          : null}\r\n          {this.state.isModalInputOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n                <div className=\"word-modal__reject\">\r\n                   <p>Sorry, cannot find selected word is our vocabulary</p>\r\n                   <Button primary onClick={this.closeInputModal}>Закрыть</Button>\r\n                </div>\r\n            </div>\r\n          : null}        \r\n     \r\n          {this.props.store.isFontModalOpen ?\r\n            <ModalFont />\r\n          : null}\r\n          {this.props.store.isColorModalOpen ?\r\n            <ModalColor />\r\n          : null}\r\n          {this.state.loaded ?\r\n            <div className=\"navigation-panel\">\r\n              <div className=\"navigation-progress\"> \r\n                <input  \r\n                  type=\"range\" \r\n                  value={this.state.currentPageId} \r\n                  max={this.state.pages.length - 1} \r\n                  min=\"0\"\r\n                  onChange={this.changePage} />\r\n              </div>\r\n              <div className=\"nav-pagination\">{this.state.currentPageId + 1} / {this.state.pages.length}</div>            \r\n              <div className=\"navigation-links\">\r\n                <span onClick={this.prevButton} className=\"navigation-links__item\" title=\"Назад\"><Icon name='arrow left' size='large' /> </span>\r\n                <span onClick={this.nextButton} className=\"navigation-links__item\" title=\"Вперед\"><Icon name='arrow right' size='large' /> </span>\r\n                <span onClick={this.changeFont} className=\"navigation-links__item\" title=\"Настройки шрифта\"><Icon name='font' size='large' /> </span>\r\n                <span onClick={this.changeColor} className=\"navigation-links__item\" title=\"Настройки цвета\"><Icon name='tint' size='large' /> </span>\r\n              </div>\r\n            </div>\r\n          : null}\r\n          {this.state.loaded ?\r\n            <>\r\n              <div className=\"selected-book\" style={{ backgroundColor: this.props.store.backgroundColor, color: this.props.store.color}}>\r\n              <div className=\"selected-book__content book-content\" style= \r\n                                          {{ lineHeight: this.props.store.lineHeight + \"px\",\r\n                                             fontWeight: this.props.store.fontWeight, \r\n                                             fontSize:   this.props.store.fontSize + \"px\", \r\n                                             fontFamily: this.props.store.fontFamily }}>\r\n                  {this.state.splittedPage.map((page, index1) => \r\n                    <Fragment key={index1}>\r\n                      {page.map((sentence, index2) => \r\n                        <Fragment key={index2}>\r\n                          {sentence.map((word, index3) => \r\n                            <p key={index3}> \r\n                              {word.map((item, index4) => \r\n                                <span className=\"single-word\" key={index4} onClick={this.searchForWord.bind(this, item)}>{`${item} `}</span>\r\n                              )}\r\n                            </p>\r\n                          )}\r\n                        </Fragment>\r\n                      )}\r\n                    </Fragment> \r\n                  )}\r\n              </div>\r\n              </div>          \r\n              <div className=\"single-text-form__wrapper\">\r\n                <div className=\"comments__header\">\r\n                  {this.state.comments.length ?\r\n                    <>\r\n                    <span className=\"comments-header__counter\">Комментариев: {this.state.comments.length}</span>\r\n                    <span className=\"comments-header__button\" onClick={this.toggleComments}>{this.state.commentsVisible ? 'Скрыть комментарии': 'Показать комментарии'}</span>\r\n                    </>\r\n                  : null}\r\n                </div>\r\n                {this.state.commentsVisible && this.state.comments?\r\n                  <Comments id={this.props.match.params.id} />\r\n                : null}           \r\n              </div>              \r\n            </>\r\n          : <div className=\"preloader\">\r\n            <img src = \"../preloader.gif\"/>\r\n          </div> }\r\n          <footer></footer> \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedBook);","\r\nlet initialState = {\r\n\t\"colorScheme\": null,\r\n\t\"soundVolume\": null\r\n};\r\n\r\n\r\n\r\nlet commonReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'CHANGE_COLOR_SCHEME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorScheme: action.payload }\r\n\r\n\t\tcase 'CHANGE_SOUND_VOLUME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsoundVolume: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default commonReducer;","let initialState = {\r\n\t\"exercises\": {\r\n\t\t\"engToRusWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\"rusToEngWords\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\"audioWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"constructWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 15, 16, 19, 20],\r\n\t\t\t\t\t\"score\": 7\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"trueOrFalseWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 14],\r\n\t\t\t\t\t\"score\": 4\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"cardWords\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 43, 89],\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t],\r\n\r\n\t\t\"recreateTxt\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"recreateAudioTxt\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"placeSpaces\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 6\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 7\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t \r\n\t\t\"fillTheGaps\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"commonPhrases\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\t\t\t \t\t \t\t\t\t\t\t\t\t\t\t\t\t\r\n\t},\r\n\r\n\t\"tests\": [\r\n\t\t{\r\n\t\t\t\"score\": 35,\r\n\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\"percentage\": 82.5\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"score\": 38,\r\n\t\t\t\"date\": \"Sun Jul 20 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\"percentage\": 34.5\r\n\t\t},\r\n\t],\r\n\r\n\r\n\t\"totalScore\": 187,\r\n\t\"exercisesComplete\": 22,\r\n\t\"testsComplete\": 2\r\n\r\n};\r\n\r\n\r\n\r\nlet exercisesReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_TOTAL_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalScore: action.payload }\r\n\r\n\t\tcase 'UPDATE_EXERCISES_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texercisesComplete: action.payload }\r\n\r\n\t\tcase 'UPDATE_TESTS_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttestsComplete: action.payload }\r\n\r\n\t\tcase 'UPDATE_ENG_TO_RUS':\r\n\t\t\tlet words = [...state.engToRusWords];\r\n\t\t\twords.push(action.payload);\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tengToRusWords: words }\r\n\r\n\t\tcase 'UPDATE_RUS_TO_ENG':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trusToEngWords: [...state.rusToEngWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_AUDIO_WORDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taudioWords: [...state.audioWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_CONSTRUCT_WORDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tconstructWords: [...state.constructWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_TRUE_OR_FALSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttrueOrFalseWords: [...state.trueOrFalseWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_CARD_WORDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcardWords: [...state.trueOrFalseWords, action.payload] }\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default exercisesReducer;","let selectedBook = {}\r\n\r\n\r\nlet initialState = {\r\n\t\"selectedBook\": selectedBook,\r\n\t\"booksComments\": [\r\n\t\t{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 1,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 2,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 11,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 12,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 40,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 34,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 35,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\t\t\t\t\r\n\t],\r\n\tcolor: '#222222',\r\n\tbackgroundColor: '#f6f6f6',\r\n\tfontSize: 16,\r\n\tfontFamily: \"'Times New Roman', sans-serif\",\r\n\tlineHeight: 32,\r\n\tfontWeight: 400,\r\n\tisFontModalOpen: false,\r\n\tisColorModalOpen: false,\r\n\tisSearchModalOpen: false\r\n};\r\n\r\n\r\n\r\nlet booksReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'SELECT_BOOK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedBook: action.payload }\r\n\r\n\t\tcase 'TOGGLE_FONT_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFontModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_COLOR_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisColorModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_SEARCH_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_FAMILY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontFamily: action.payload }\t\r\n\r\n\t\tcase 'SELECT_FONT_SPACING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlineHeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_WEIGHT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontWeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_SIZE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontSize: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontColor: action.payload }\t\r\n\r\n\t\tcase 'SELECT_BG_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbackgroundColor: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default booksReducer;","\r\nlet initialState = {\r\n\t\"vocabModalOpen\": false,\r\n\t\"selectedVocabWord\": null,\r\n\t\"colorScheme\": null,\r\n\t\"soundVolume\": null\r\n};\r\n\r\n\r\n\r\nlet vocabularyReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'TOGGLE_VOCAB_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedVocabWord: action.payload }\t\t\r\n\r\n\t\tcase 'VOICE_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabWord: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default vocabularyReducer;","import {combineReducers} from 'redux';\r\nimport commonReducer from './commonReducer';\r\nimport exercisesReducer from './exercisesReducer';\r\nimport booksReducer from './booksReducer';\r\nimport vocabularyReducer from './vocabularyReducer';\r\n\r\nlet createRootReducer = () => combineReducers({\r\n\texercisesReducer: exercisesReducer, \r\n\tcommonReducer: commonReducer, \r\n\tbooksReducer: booksReducer,\r\n\tvocabularyReducer: vocabularyReducer\t\r\n})\r\n\r\nexport default createRootReducer;","import {createStore} from 'redux';\r\nimport createRootReducer from '../reducers/rootReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default function configureStore(){\r\n\tlet store = createStore(createRootReducer(), initialState);\r\n\treturn store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Vocabulary from './Vocabulary';\r\nimport SplittedWords from './SplittedWords';\r\nimport GrammarList from './GrammarList'\r\nimport Statistics from './Statistics'\r\nimport Training from './Training'\r\nimport Main from './Main'\r\nimport ConstructWord from './ConstructWord'\r\nimport Proverbs from './Proverbs'\r\nimport Cards from './Cards'\r\nimport Audio from './Audio'\r\nimport EnglishToRussian from './EnglishToRussian'\r\nimport RussianToEnglish from './RussianToEnglish'\r\nimport Videos from './Videos'\r\nimport Fragments from './Fragments'\r\nimport Pronunciation from './Pronunciation'\r\nimport RecreateText from './RecreateText'\r\nimport RecreateAudioText from './RecreateAudioText'\r\nimport InsertSpaces from './InsertSpaces'\r\nimport TED from './videos/TED'\r\nimport EngVid from './videos/EngVid'\r\nimport BritishCouncil from './videos/BritishCouncil'\r\nimport Khan from './videos/Khan'\r\nimport Coursera from './videos/Coursera'\r\nimport JimmyFallon from './videos/JimmyFallon'\r\nimport JimmyKimmel from './videos/JimmyKimmel'\r\nimport ConanOBrien from './videos/ConanOBrien'\r\nimport Ellen from './videos/Ellen'\r\nimport JamesCorden from './videos/JamesCorden'\r\nimport SethMeyers from './videos/SethMeyers'\r\nimport StephenColbert from './videos/StephenColbert'\r\nimport TextsList from './TextsList'\r\nimport Decks from './Decks'\r\nimport AudioList from './AudioList'\r\nimport Settings from './Settings'\r\nimport BookList from './BookList'\r\nimport Materials from './Materials'\r\nimport Example from './Example'\r\nimport Rightwrong from './Rightwrong'\r\nimport GrammarItem from './grammar/GrammarItem'\r\nimport GrammarPresentSimple from './grammar/GrammarPresentSimple'\r\nimport GrammarPastSimple from './grammar/GrammarPastSimple'\r\nimport GrammarFutureSimple from './grammar/GrammarFutureSimple'\r\nimport GrammarPresentContinuous from './grammar/GrammarPresentContinuous'\r\nimport GrammarPastContinuous from './grammar/GrammarPastContinuous'\r\nimport GrammarFutureContinuous from './grammar/GrammarFutureContinuous'\r\nimport GrammarPresentPerfect from './grammar/GrammarPresentPerfect'\r\nimport GrammarFuturePerfect from './grammar/GrammarFuturePerfect'\r\nimport GrammarPastPerfect from './grammar/GrammarPastPerfect'\r\nimport GrammarPresentPerfectContinuous from './grammar/GrammarPresentPerfectContinuous'\r\nimport GrammarPastPerfectContinuous from './grammar/GrammarPastPerfectContinuous'\r\nimport GrammarFuturePerfectContinuous from './grammar/GrammarFuturePerfectContinuous'\r\nimport AudioPlayer from './AudioPlayer'\r\nimport SelectedBook from './SelectedBook'\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport configureStore from \"./store/index\";\r\n\r\nlet initialState = [];\r\nlet store = configureStore(initialState);\r\n\r\n\r\nReactDOM.render(  \r\n\t<Provider store={store}>\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<div className=\"router-wrapper\">\r\n\t\t\t\t<Route exact path=\"/\" component={Main} />\r\n\t\t\t\t<Route path=\"/splitted\" component={SplittedWords} />\r\n\t\t\t\t<Route path=\"/selectedbook\" component={SelectedBook} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t\t<Route path=\"/vocabulary\" component={Vocabulary} />\t\t\t\t\r\n\t\t\t\t<Route path=\"/grammar\" component={GrammarList} />\r\n\t\t\t\t<Route path=\"/materials\" component={Materials} />\r\n\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\r\n\t\t\t\t<Route path=\"/training\" component={Training} />\t\t  \r\n\t\t\t\t<Route path=\"/cards\" component={Cards} />\r\n\t\t\t\t<Route path=\"/rightwrong\" component={Rightwrong} />\t\t\r\n\t\t\t\t<Route path=\"/constructword\" component={ConstructWord} />\r\n\t\t\t\t<Route path=\"/proverbs\" component={Proverbs}/>\r\n\t\t\t\t<Route path=\"/audio\" component={Audio} />\r\n\t\t\t\t<Route path=\"/pronunciation\" component={Pronunciation} />\r\n\t\t\t\t<Route path=\"/recreatetext\" component={RecreateText} />\r\n\t\t\t\t<Route path=\"/recreateaudiotext\" component={RecreateAudioText} />\r\n\t\t\t\t<Route path=\"/insertspaces\" component={InsertSpaces} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/englishtorussian\" component={EnglishToRussian} />\r\n\t\t\t\t<Route path=\"/russiantoenglish\" component={RussianToEnglish} />\r\n\t\t\t\t<Route path=\"/videos\" component={Videos} />\r\n\t\t\t\t<Route path=\"/fragments\" component={Fragments} />\r\n\t\t\t\t<Route path=\"/decks\" component={Decks} />\t\t\r\n\t\t\t\t<Route path=\"/ted\" component={TED} />\r\n\t\t\t\t<Route path=\"/engvideo\" component={EngVid} />\r\n\t\t\t\t<Route path=\"/britishcouncil\" component={BritishCouncil} />\r\n\t\t\t\t<Route path=\"/khan\" component={Khan} />\r\n\t\t\t\t<Route path=\"/conanobrien\" component={ConanOBrien} />\r\n\t\t\t\t<Route path=\"/jimmyfallon\" component={JimmyFallon} />\r\n\t\t\t\t<Route path=\"/jimmykimmel\" component={JimmyKimmel} />\r\n\t\t\t\t<Route path=\"/coursera\" component={Coursera} />\r\n\t\t\t\t<Route path=\"/ellen\" component={Ellen} />\r\n\t\t\t\t<Route path=\"/stephencolbert\" component={StephenColbert} />\r\n\t\t\t\t<Route path=\"/jamescorden\" component={JamesCorden} />\r\n\t\t\t\t<Route path=\"/sethmeyers\" component={SethMeyers} />\r\n\t\t\t\t<Route path=\"/texts\" component={TextsList} />\r\n\t\t\t\t<Route path=\"/books\" exact component={BookList} />\r\n\t\t\t\t<Route path=\"/books/:id\" component={SelectedBook} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/tests\" component={Example} />\r\n\t\t\t\t<Route path=\"/audiolist\" component={AudioList} />\r\n\t\t\t\t<Route path=\"/grammarpresentsimple\" component={GrammarPresentSimple} />\r\n\t\t\t\t<Route path=\"/grammarpastsimple\" component={GrammarPastSimple} />\r\n\t\t\t\t<Route path=\"/grammarfuturesimple\" component={GrammarFutureSimple} />\r\n\t\t\t\t<Route path=\"/grammarpresentcontinuous\" component={GrammarPresentContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastcontinuous\" component={GrammarPastContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfuturecontinuous\" component={GrammarFutureContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfect\" component={GrammarPresentPerfect} />\r\n\t\t\t\t<Route path=\"/grammarpastperfect\" component={GrammarPastPerfect} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfect\" component={GrammarFuturePerfect} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfectcontinuous\" component={GrammarPresentPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastperfectcontinuous\" component={GrammarPastPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfectcontinuous\" component={GrammarFuturePerfectContinuous} />\r\n\t\t\t\t<Route path=\"/audioplayer\" component={AudioPlayer} />\r\n\t\t\t</div>\r\n\t\t</Router>\t\r\n\t</Provider>, document.getElementById('root'));\r\n\r\n/*\r\n\tconst routes = [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\tcomponent: App\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/grammar',\r\n\t\t\tcomponent: GrammarList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/courses',\r\n\t\t\tcomponent: CoursesList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursessimple',\r\n\t\t\tcomponent: CoursesSimple\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/training',\r\n\t\t\tcomponent: Training\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/constructword',\r\n\t\t\tcomponent: ConstructWord\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/cards',\r\n\t\t\tcomponent: Cards\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/audio',\r\n\t\t\tcomponent: Audio\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/pronunciation',\r\n\t\t\tcomponent: Pronunciation\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/englishtorussian',\r\n\t\t\tcomponent: EnglishToRussian\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/russiantoenglish',\r\n\t\t\tcomponent: RussianToEnglish\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/videos', \r\n\t\t\tcomponent: Videos\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ted', \r\n\t\t\tcomponent: TED\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/engvid', \r\n\t\t\tcomponent: EngVid\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/britishcouncil', \r\n\t\t\tcomponent: BritishCouncil\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/khan', \r\n\t\t\tcomponent: Khan\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/conanobrien', \r\n\t\t\tcomponent: ConanOBrien\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmyfallon', \r\n\t\t\tcomponent: JimmyFallon\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmykimmel', \r\n\t\t\tcomponent: JimmyKimmel\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursera',\r\n\t\t\tcomponent: Coursera\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ellen',\r\n\t\t\tcomponent: Ellen\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/stephencolbert',\r\n\t\t\tcomponent: StephenColbert\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jamescorden',\r\n\t\t\tcomponent: JamesCorden\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/sethmeyers',\r\n\t\t\tcomponent: SethMeyers\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/texts',\r\n\t\t\tcomponent: TextsList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/tests',\r\n\t\t\tcomponent: Example\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t]\r\n\t*/\r\n/*\r\nReactDOM.render(  \r\n  <Router>\r\n\t  <div className=\"router-wrapper\">\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n\t  </div>\r\n  </Router>, document.getElementById('root'));\r\n*/"],"sourceRoot":""}