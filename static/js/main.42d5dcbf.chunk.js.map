{"version":3,"sources":["ModalWord.js","actions/index.js","VocabWord.js","VocabSideMenu.js","TopMenu.js","VocabTopMenu.js","Vocabulary.js","GrammarList.js","SelectedGrammar.js","Statistics.js","Training.js","Main.js","ConstructWord.js","Proverbs.js","Cards.js","Audio.js","EnglishToRussian.js","RussianToEnglish.js","Videos.js","FillTheGaps.js","RecreateText.js","RecreateAudioText.js","InsertSpaces.js","SelectedVideo.js","TextsList.js","Decks.js","Settings.js","BookList.js","Materials.js","Tests.js","TrueOrFalse.js","AudioPlayer.js","Comments.js","ModalFont.js","ModalColor.js","WordFound.js","SelectedBook.js","reducers/settingsReducer.js","reducers/exercisesReducer.js","reducers/booksReducer.js","reducers/vocabularyReducer.js","reducers/testsReducer.js","reducers/resultsReducer.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["Component","actions","updateTotalScore","score","type","payload","updateExerciseComplete","number","updateTestsComplete","updateTests","val","changeColorScheme","changeSoundVolume","toggleVocabModal","selectVocabWord","word","voiceVocabWord","selectBook","book","selectFontSize","fontSize","selectFontFamily","fontFamily","selectFontSpacing","lineHeight","selectFontWeight","fontWeight","selectFontColor","fontColor","selectBgColor","backgroundColor","addCommentToBook","id","comment","toggleFontModal","state","toggleColorModal","toggleSearchModal","updateEngToRus","updateRusToEng","updateConstructedWords","updateAudioWords","updateCardWords","updateTrueOrFalse","updateRecreateTxt","value","updateRecreateAudioTxt","updateFillTheGaps","updatePlaceSpaces","updateCommonPhrases","VocabWord","voiceWord","speech","say","openWord","console","log","_this","props","this","delete","react_default","a","createElement","List","Item","react","Image","avatar","src","image","Content","className","onClick","bind","Header","as","name","transcription","translation","Description","meaning","Button","Group","title","Icon","connect","store","reducer","dispatch","bindActionCreators","VocabSideMenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","consoleParams","newItems","items","map","item","i","push","key","text","category","setState","options","getUnique","arr","unique","e","final","indexOf","filter","newFunc","slice","newObj","callbackFromParent","handleChange","_ref","consoleProps","_this2","axios","get","then","res","data","Menu","vertical","active","Dropdown","placeholder","fluid","clearable","search","selection","onChange","TopMenu","showModal","isModalVisible","changeLogin","event","inputLogin","target","changePassword","inputPassword","changeMail","inputMail","changeDoublePassword","doublePassword","Link","to","VocabTopMenu","updateSearch","substr","searchFunction","changeNameValue","inputName","changeTranslationValue","inputTranslation","changeMeaningValue","inputMeaning","changeCategoryValue","inputCategory","changeImageValue","inputImage","submitForm","newWords","words","inputStringDate","Date","toUTCString","inputDate","obj","date","unshift","callbackFromApp","searchFromApp","categories","categoryValue","voiceWordFromModal","sortByName","sortByTranslation","sortByDate","newFunction","Modal","trigger","primary","closeIcon","Form","Field","accept","Input","icon","Vocabulary","loadMore","prev","visible","filteredWords","isOldestFirst","sort","b","localeCompare","splice","findIndex","deleteWord","toggleModal","myCallback","dataFromChild","topMenuCallback","searchCallback","consoleState","vocabModalOpen","query","searchString","handler","assertThisInitialized","_this3","toLowerCase","size","selectedVocabWord","src_TopMenu","src_VocabSideMenu","src_VocabTopMenu","relaxed","index","src_VocabWord","length","vocabularyReducer","GrammarList","grammar","Table","celled","fixed","Row","columns","HeaderCell","rules","Body","Cell","description","pathname","concat","SelectedGrammar","startTraining","isButtonVisible","isCardVisible","goBack","fullData","newId","stepId","currentTitle","currentDescription","currentExamples","examples","isBackButtonVisible","continueTraining","isFinalVisible","currentName","consoleFunction","main_points","showContinueButton","array","selectedGrammar","find","x","match","params","steps","Card","itemsPerRow","exampleName","exampleTranslation","Statistics","countTests","testsPercentage","testsScore","Math","round","reduce","sum","cur","percentage","tests","testsLoaded","countWords","total","wordsTrained","defineProperty","splitIntoArrays","nameArrays","create","forEach","nameArray","names","keys","values","finalData","tmp","lng","fin","floor","barChartData","getYesterdaysDate","sorter","monday","tuesday","wednesday","thursday","friday","saturday","sunday","days","item1","item2","dateArray","setDate","getDate","getDay","j","lineChartData","inDayRange","option","current","year","getFullYear","month","getMonth","day","today","applyFunction","getTime","inWeekRange","weekDay","start","inMonthRange","totalDays","daysInMonth","inAllRange","func","exercises","testsStore","prop","learnedWords","engToRusWords","rusToEngWords","cardWords","constructWords","audioWords","trueOrFalseWords","switchTab","tab","selectMenuItem","menu","loaded","wordsLoaded","contentArray","isMenuVisible","isSingleTextVisible","isResultVisible","isResultWrong","negativeWords","positiveWords","content","spllittedSentences","reservedSentences","seconds","minutes","secondsRemaining","intervalHandle","wrongIndexes","totalSecondsSpent","secondsSpent","minutesSpent","isModalOpen","exerciseMenu","action","wordMenu","testMenu","generalMenu","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","resultsStore","exercisesComplete","testsComplete","totalScore","openModal","recreateTxt","recreateAudioTxt","fillTheGaps","placeSpaces","commonPhrases","engToRusWordsTotal","rusToEngWordsTotal","audioWordsTotal","cardWordsTotal","trueOrFalseWordsTotal","constructWordsTotal","exercisesReducer","testsReducer","resultsReducer","Training","Main","ConstructWord","setStateOnStart","currentWord","currentFullWord","currentTranslation","currentMeaning","isStarterVisible","inputValue","wordNameArray","nameArrayId","currentValue","currentImage","areButtonsVisible","isImageVisible","wordId","mistakeCount","animationState","fade","initialLoad","split","randomNameArray","random","document","body","addEventListener","myHandler","tempParam","checkValue","keyCode","wordsLength","_ref2","exercise","uuidv4","updateConstructWord","compareWord","currentLetter","textContent","btn","React","createRef","Container","Label","onAnimationEnd","readOnly","maxLength","Divider","Message","Proverbs","shuffleArray","currentArray","negativeProverbs","positiveProverbs","proverbs","currentProverbName","proverb","constructedProverb","isCheckButtonVisible","isDKButtonVisible","isContinueButtonVisible","nameClass","updateTotalExercises","setValue","indexTarget","parentElement","children","previousElementSibling","removeValue","dontKnow","checkProverb","join","el","_ref3","Cards","isTranslationVisible","showNavButtons","result","renderComponent","checkResponse","Meta","extra","Audio","correctNameVisible","correctName","correctNameClass","isLinkVisible","isInputVisible","tempSearch","metaClass","positiveResponse","showImage","EnglishToRussian","flagState","disabled","selectedWord","ref","currentButtonColor","RussianToEnglish","Videos","cons","videos","channelId","link","video","FillTheGaps","texts","areTextsVisible","currentTempArray","currentStringArray","currentRandomWord","currentFinalArray","currentRandomArray","currentOneArray","activeInput","activeArray","sortedRandomArray","comparativeRandomArray","fragmentArrayIndexes","rightAnswers","setMenuParams","difficulty","selectValue","startExercise","builtArray","backToTexts","pop","currentFullArray","currentWordArray","currentRandomIndexes","curArr","resetValue","activeTargetTitle","fragmentArray","fragmentDescription","getElementsByClassName","element","innerText","submitText","currentSortedArray","count","RecreateText","makeTextsVisible","readMore","createMenuItems","splitText","splittedSentenceVisible","startCountDown","tick","time","clearInterval","timeIsOut","setInterval","onDragStart","draggedItem","dataTransfer","effectAllowed","setData","setDragImage","onDragOver","draggedOverItem","onDragEnd","draggedIdx","checkSentences","splittedSentences","wrongCount","showFinal","selectCategory","menuChange","idx","draggable","RecreateAudioText","createTrack","currentTrack","Howl","html5","volume","audio","playing","tryAgain","playText","play","pause","InsertSpaces","inputContent","newContent","textsLoaded","replace","isTaskStarted","setCaretPosition","ctrl","pos","setSelectionRange","focus","createTextRange","range","collapse","moveEnd","moveStart","select","updateValue","indexOfSpace","newstr","substring","SelectedVideo","getItems","url","selectedVideo","channelID","maxResults","currentComment","addComment","comments","temp","thumbsUp","likes","thumbsDown","dislikes","author","channels","Fragment","Embed","autoplay","videoId","snippet","thumbnails","high","source","TextsList","activeTargetContent","activeTargetImage","Decks","constructMenu","level","arrayOfButtons","iconsArray","colors","arrayOfColors","allWords","currentWords","currentColor","isDropdownVisible","addToList","addedItems","selected","addedFirst","sortedByTranslationUp","addedUp","sortedByNameUp","deleteItem","deleteAll","contentLoaded","all","spread","firstResponse","secondResponse","style","sendWords","float","color","Settings","changeColor","colorValue","email","password","colorOptions","BookList","createMenu","age","genres","sizes","ageTemp","sizesTemp","books","genre","hasOwnProperty","age_restriction","bookVal","bookValue","handleGenreChange","currentGenre","handleRatingChange","rating","handleLengthChange","currentLength","scrollToTop","window","scrollTo","myRef","offsetTop","allBoooks","areBooksVisible","isPreviewVisible","isSingleBookVisible","isBookNavPanelVisible","currentBook","currentPage","currentPageIndex","currentArrayBooks","currentIndexArray","bookHTML","parsedBook","bookPages","currentEmail","errors","checkedItems","Map","checked","audiobooks","currentAudio","newAudio","playState","currentAudioId","scrollForwardState","scrollBackwardState","currentVolume","currentRange","currentDuration","hours","allBooks","views","Rating","defaultRating","maxRating","booksReducer","Materials","Tests","_this$state","getMenuParams","categoryArray","testChange","parentid","getAttribute","currentTest","Array","selectTest","testId","activeTest","testItem","correctResults","tasks","correct_answer","areTestsVisible","isSingleTestVisible","backToTests","curIndexTest","curIndexCheckbox","correctAnswers","incorrectAnswers","checkResults","resultsArray","finalResults","test","isTooltipVisible","prevState","boxShadow","sentence","variants","param","ind","label","TrueOrFalse","response","AudioPlayer","callFunctions","duration","currentId","soundVolume","on","decodingFinished","continuePlay","readTags","resetState","progress","currentMinutes","currentSeconds","jsmediatags","read","onSuccess","tag","currentTrackInfo","decodeTrackInfo","onError","error","info","currentTrackPicture","tags","artist","picture","_this$state$currentTr","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","currentTrackTitle","currentTrackArtist","playMusic","interval","startCycle","stop","changeVolume","nextTrack","prevTrack","muteSound","muted","mute","incTime","updateProgress","seek","toFixed","setSeek","currentTrackLength","order","tracksVisible","min","max","alt","Comments","datestring","getHours","getMinutes","updateComment","updateName","updateEmail","booksComments","Number","noComments","TextArea","ModalFont","changeValue","fontSizeTemp","changeFontFamily","fontFamilyTemp","changeFontWeight","fontWeightTemp","changeLineHeight","lineHeightTemp","applyFontSettings","closeModal","step","ModalColor","setFontColor","fontState","currentTarget","activeFontColor","setBgColor","bgState","activeBgColor","applyColorSettings","isColorModalOpen","colorScheme","data-index","colorvalue","WordFound","closeSearchModal","definition","SelectedBook","splitIntoPages","pages","pageIndexes","pagesCount","ceil","currentMin","currentMax","txt","newTxt","newSentence","splittedPage","prevButton","currentPageId","nextButton","changePage","toggleComments","commentsVisible","searchForWord","detail","newItem","found","toggleFoundModal","toggleInputModal","isModalInputOpen","changeFont","closeInputModal","fileInputRef","wordsEl","isModalFoundOpen","myHeaders","Headers","append","that","obj1","obj2","selectedBook","fetch","arrayBuffer","buffer","TextDecoder","decode","isSearchModalOpen","src_WordFound","isFontModalOpen","src_ModalFont","src_ModalColor","page","index1","index2","index3","index4","src_Comments","initialState","settingsReducer","arguments","undefined","objectSpread","toConsumableArray","commentId","vocabWord","createRootReducer","combineReducers","createStore","ReactDOM","render","es","BrowserRouter","basename","process","Route","exact","path","component","getElementById"],"mappings":"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","file":"static/js/main.42d5dcbf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon, Image, Modal,Header } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass ModalWord extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Modal className=\"modal-word\" trigger = {\r\n          <List.Content >\r\n            <span className=\"word-icon-wrapper\">\r\n               <Icon name='right eye' />\r\n            </span>\r\n          </List.Content>\r\n            } closeIcon>\r\n            <Modal.Content image>\r\n              <Image wrapped size='medium' src={this.props.image} />\r\n              <Modal.Description className=\"modal-word-description\">\r\n                <Header><h4><span onClick={this.props.voiceWordFromModal.bind(this)} ></span>{this.props.name} - {this.props.translation}                   <span>\r\n                    <Icon name = 'right microphone'/>\r\n                  </span> </h4></Header>\r\n                <div className=\"modal-icon-wrapper-delete\">\r\n                  <span>\r\n                    <Icon name = 'right trash alternate outline'/>\r\n                  </span>\r\n                </div>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n        </Modal>\r\n  );\r\n  }\r\n}\r\n\r\nexport default ModalWord;","let actions = {\r\n\t//resultsReducer\r\n\tupdateTotalScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TOTAL_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\r\n\t},\r\n\tupdateExerciseComplete: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_EXERCISES_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateTestsComplete: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\t//testsReducer\r\n\tupdateTests: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\t//settingsReducer\r\n\tchangeColorScheme: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_COLOR_SCHEME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tchangeSoundVolume: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_SOUND_VOLUME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\t//vocabularyReducer\r\n\ttoggleVocabModal: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_VOCAB_MODAL',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tselectVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\r\n\t},\r\n\tvoiceVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'VOICE_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\t//booksReducer\r\n\tselectBook: function(book) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BOOK',\r\n\t\t\tpayload: book\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSize: function(fontSize) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SIZE',\r\n\t\t\tpayload: fontSize\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontFamily: function(fontFamily) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_FAMILY',\r\n\t\t\tpayload: fontFamily\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSpacing: function(lineHeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SPACING',\r\n\t\t\tpayload: lineHeight\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontWeight: function(fontWeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_WEIGHT',\r\n\t\t\tpayload: fontWeight\r\n\t\t}\t\t\r\n\t},\t\t\t\t\r\n\tselectFontColor: function(fontColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_COLOR',\r\n\t\t\tpayload: fontColor\r\n\t\t}\t\t\r\n\t},\r\n\tselectBgColor: function(backgroundColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BG_COLOR',\r\n\t\t\tpayload: backgroundColor\r\n\t\t}\t\t\r\n\t},\r\n\taddCommentToBook: function(id, comment) {\r\n\t\treturn {\r\n\t\t\ttype: 'ADD_COMMENT_TO_BOOK',\r\n\t\t\tpayload: {id, comment}\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleFontModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_FONT_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleColorModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_COLOR_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleSearchModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_SEARCH_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\t//exercisesReducer\r\n\tupdateEngToRus: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_ENG_TO_RUS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateRusToEng: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_RUS_TO_ENG',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateConstructedWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_CONSTRUCT_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tupdateAudioWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_AUDIO_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateCardWords: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_CARD_WORDS',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateTrueOrFalse: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TRUE_OR_FALSE',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateRecreateTxt: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_RECREATE_TXT',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateRecreateAudioTxt: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_RECREATE_AUDIOTXT',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdateFillTheGaps: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_FILL_THE_GAPS',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\r\n\r\n\tupdatePlaceSpaces: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_PLACE_SPACES',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t},\t\r\n\r\n\tupdateCommonPhrases: function(value) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_COMMON_PHRASES',\r\n\t\t\tpayload: value\r\n\t\t}\t\t\r\n\t}\t\r\n\r\n}\r\n\r\nexport default actions;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Icon, Image } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport ModalWord from './ModalWord';\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass VocabWord extends Component {\r\n\r\n\r\n  delete(id){\r\n    this.props.delete(id);\r\n  }\r\n\r\n\r\n   voiceWord = (word) =>{\r\n      speech.say(word);\r\n   }\r\n\r\n   openWord = (word) => {\r\n    console.log(word);\r\n    this.props.actions.selectVocabWord(word);\r\n    this.props.actions.toggleVocabModal(true);\r\n   }\r\n\r\n  render() {\r\n    var descriptionVisible = true;\r\n    return (\r\n      <List.Item >\r\n        <Fragment>\r\n          <Image avatar src={this.props.image} />\r\n          <List.Content className=\"word-content\" onClick={this.openWord.bind(this, this.props.word)}>\r\n            <List.Header as='a'>{this.props.name} - {this.props.transcription} - {this.props.translation}</List.Header>\r\n            {descriptionVisible ?         \r\n              <List.Description className=\"word-meaning\">\r\n                  <b>{this.props.meaning}</b>\r\n              </List.Description> :null\r\n            }\r\n          </List.Content>\r\n        </Fragment>  \r\n      <List.Content>\r\n            <Button.Group>\r\n              <span onClick={this.voiceWord.bind(this, this.props.name)} className=\"word-icon-wrapper\" title=\"Озвучить\">\r\n                 <Icon name = 'right microphone'/>\r\n              </span>\r\n              <span onClick={this.delete.bind(this, this.props.id)} className=\"word-icon-wrapper\" title=\"Удалить\">\r\n                  <Icon name='right trash alternate outline' />\r\n              </span>\r\n            </Button.Group>              \r\n      </List.Content>\r\n    </List.Item>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VocabWord);","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {  Dropdown} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass VocabSideMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       items: [],\r\n       options: [],\r\n       value: null\r\n\r\n    }\r\n  }\r\n\r\n  \tUNSAFE_componentWillMount() {\r\n   \r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const items = res.data;\r\n\t        this.setState({ items }, () => this.consoleParams() );\r\n\t      }) \r\n\t  }\r\n\r\n\t  consoleParams = () =>{\r\n\t  \tlet newItems = [];\r\n\t  \tthis.state.items.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.category, \r\n                        value: item.category \r\n                     }))\r\n\t  \tthis.setState({\r\n\t  \t\toptions: newItems\r\n\t  \t}, () => this.getUnique())\r\n\t  }\r\n\r\n\t  getUnique = () => {\r\n\t  \tvar arr = this.state.options;\r\n\t  \tvar comp = 'text';\r\n  \t\t\tconst unique = arr\r\n       \t\t.map(e => e[comp])\r\n   \t\t\t\t.map((e, i, final) => final.indexOf(e) === i && i)\r\n    \t\t\t.filter(e => arr[e]).map(e => arr[e]);\r\n\t   \tthis.setState({\r\n\t   \t\toptions: unique\r\n\t   \t})\t\t\r\n\t\t}\r\n\r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var value = this.state.value;\r\n      var newObj = {};\r\n      newObj['value'] = value;\r\n      newObj['options'] = options;\r\n      this.props.callbackFromParent(newObj);\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )\r\n\r\n    consoleProps = () =>{\r\n      console.log(this.props);\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical className=\"side-menu\">\r\n        <Menu.Item name='inbox' active >\r\n          <Dropdown placeholder='Выберите категорию'\r\n                    fluid\r\n                    clearable\r\n                    value={this.state.value} \r\n                    search\r\n                    key={this.state.options.id}\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} />\r\n        </Menu.Item>\r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabSideMenu;","import React, { Component } from 'react';\r\nimport {Menu, Image, Icon, Modal, Form, Button} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      inputLogin: '',\r\n      inputPassword: '',\r\n      doublePassword: '',\r\n      inputMail: ''\r\n    }\r\n  }\r\n\r\n  showModal = () =>{\r\n      let state = this.state.isModalVisible;\r\n      this.setState({\r\n        isModalVisible: !state\r\n      },() => console.log(this.state.isModalVisible) )\r\n  }\r\n\r\n    changeLogin = (event) =>{\r\n      this.setState({\r\n        inputLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    changePassword = (event) =>{\r\n      this.setState({\r\n        inputPassword: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMail = (event) =>{\r\n      this.setState({\r\n        inputMail: event.target.value\r\n      })\r\n    }\r\n\r\n    changeDoublePassword = (event) =>{\r\n      this.setState({\r\n        doublePassword: event.target.value\r\n      })\r\n    }    \r\n\r\n  render() {\r\n    return (\r\n        <Menu className=\"top-menu\">\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/\">Главная</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/vocabulary\">Словарь</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/grammar\">Грамматика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/training\">Тренировки</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/tests\">Тесты</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/materials\">Материалы</Link>\r\n          </Menu.Item>\r\n          <Menu.Item className=\"item-link item-menu__link\">\r\n            <Link to=\"/books\">Книги</Link>\r\n          </Menu.Item>           \r\n            <Menu.Item className=\"item-link item-menu__link\">\r\n              <Link to=\"/statistics\">Статистика</Link>\r\n            </Menu.Item>\r\n            {/*\r\n            <Menu.Menu position='right'>\r\n              <Menu.Item className=\"login-item\">\r\n                <Modal className=\"modal-form login-modal\" trigger={<Button className=\"login-button\">Войти</Button>} closeIcon>\r\n                  <Form className=\"input-form login-form\">\r\n                    <Form.Field>\r\n                      <label>Введите логин</label>\r\n                      <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите пароль</label>\r\n                      <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Button primary onClick={this.finishLogin}>Войти</Button>\r\n                  </Form>         \r\n                </Modal>              \r\n              </Menu.Item>\r\n              <Menu.Item className=\"login-item\">\r\n                <Modal className=\"modal-form login-modal\" trigger={<Button className=\"login-button\">Регистрация</Button>} closeIcon>\r\n                  <Form className=\"input-form login-form\">\r\n                    <Form.Field>\r\n                      <label>Введите логин</label>\r\n                      <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите e-mail</label>\r\n                      <input value={this.state.inputMail} onChange={this.changeMail} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <label>Введите пароль</label>\r\n                      <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                    </Form.Field>                   \r\n                    <Form.Field>\r\n                      <label>Повторите пароль</label>\r\n                      <input value={this.state.doublePassword} onChange={this.changeDoublePassword} type=\"text\" />\r\n                    </Form.Field>\r\n                    <Button primary onClick={this.finishRegistration}>Зарегистрироваться</Button>\r\n                  </Form>         \r\n                </Modal>              \r\n              </Menu.Item> \r\n              <Menu.Item className=\"menu-image\" >\r\n                {this.state.isModalVisible ?\r\n                  <div className=\"user-modal\">\r\n                    <div className=\"user-modal-pic\">\r\n                      <Image src=\"/icons/member.png\" />              \r\n                      <div className=\"user-modal-name\">\r\n                        <h5> User</h5>\r\n                        <h6>blabla@mail.com</h6>\r\n                      </div>                \r\n                    </div>\r\n                    <p><Link to=\"/statistics\"> <Icon name='chart bar outline' size='' />Статистика</Link></p>\r\n                    <p><Link to=\"/statistics\"> <Icon name='log out' size=''  />Выйти</Link></p>\r\n                  </div> : null\r\n                }\r\n                <Image className=\"user-avatar\" onClick={this.showModal} src=\"/icons/member.png\" />\r\n              </Menu.Item>                \r\n            </Menu.Menu>\r\n            */}                                                                     \r\n        </Menu>\r\n \t);\r\n  }\r\n}\r\n\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport { Button, Menu, Modal, Form } from 'semantic-ui-react'\r\nimport { Input} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass VocabTopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      search: '',\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: '',\r\n      categories: [],\r\n      categoryValue: 'all'  \r\n    };\r\n    this.delete = this.delete;\r\n    this.voiceWord = this.voiceWord;\r\n    this.voiceWordFromModal = this.voiceWordFromModal;\r\n    this.sortByName = this.sortByName;\r\n    this.sortByTranslation = this.sortByTranslation;\r\n    this.sortByDate = this.sortByDate;\r\n    this.newFunction = this.newFunction;  \r\n    \r\n  }\r\n\r\n  consoleProps = () =>{\r\n    console.log(this.props)\r\n  }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({search: event.target.value.substr(0,20)}, ()=> this.searchFunction() );\r\n    } \r\n\r\n//загрузка слова\r\n    changeNameValue = (event) =>{\r\n      this.setState({\r\n        inputName: event.target.value\r\n      })\r\n    }\r\n\r\n    changeTranslationValue = (event) =>{\r\n      this.setState({\r\n        inputTranslation: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMeaningValue = (event) =>{\r\n      this.setState({\r\n        inputMeaning: event.target.value\r\n      })\r\n    }    \r\n\r\n    changeCategoryValue = (event) =>{\r\n      this.setState({\r\n        inputCategory: event.target.value\r\n      })\r\n    } \r\n\r\n    changeImageValue = (event) =>{\r\n      this.setState({\r\n        inputImage: event.target.value\r\n      })\r\n    }\r\n\r\n    submitForm = (e) =>{\r\n    var newWords = this.props.words.slice();\r\n    const inputName = this.state.inputName;\r\n    const inputTranslation = this.state.inputTranslation;\r\n    const inputMeaning = this.state.inputMeaning;\r\n    const inputCategory = this.state.inputCategory;\r\n    const inputStringDate = new Date().toUTCString();\r\n    console.log(inputStringDate);\r\n    const inputDate = new Date(inputStringDate);\r\n    const inputImage = this.state.inputImage;\r\n    const inputId = 30;\r\n    const obj ={'id': inputId,\r\n          'name': inputName, \r\n          'translation': inputTranslation, \r\n          'meaning': inputMeaning,\r\n          'image': inputImage, \r\n          'date': inputDate,\r\n          'category': inputCategory\r\n          } \r\n\r\n    newWords.unshift(obj); \r\n  \r\n      this.setState({ words: newWords}, () => console.log(this.state.words) );\r\n      this.setState({\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: ''\r\n      }, () => this.newFunc() )\r\n    }    \r\n\r\n    newFunc = () =>{\r\n      var words = this.state.words;\r\n      this.props.callbackFromApp(words);\r\n    }\r\n\r\n    searchFunction = () =>{\r\n      var search = this.state.search;\r\n      this.props.searchFromApp(search);\r\n    }    \r\n\r\n  render() {\r\n\r\n   return (\r\n      <Menu text className=\"vocab-top-menu-wrapper vocab-top-menu-wrapper-color\">\r\n        <Menu.Item>\r\n          <Modal className=\"modal-form\" trigger={<Button primary>Добавить слово</Button>} closeIcon>\r\n            <Form className=\"input-form\">\r\n              <Form.Field>\r\n                <label>Введите слово</label>\r\n                <input value={this.state.inputName} onChange={this.changeNameValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите перевод</label>\r\n                <input value={this.state.inputTranslation} onChange={this.changeTranslationValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите категорию</label>\r\n                <input value={this.state.inputCategory} onChange={this.changeCategoryValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Выберите изображение</label>\r\n                <input value={this.state.inputImage} onChange={this.changeImageValue} type=\"file\" accept=\"image/png, image/jpeg\" />\r\n              </Form.Field>                   \r\n              <Button primary onClick={this.submitForm}>Добавить</Button>\r\n            </Form>         \r\n          </Modal>\r\n        </Menu.Item>\r\n        <Menu.Item name='removeWords'> \r\n          <Button primary >\r\n            Удалить\r\n          </Button>\r\n        </Menu.Item>        \r\n        <Menu.Item name='byName'> \r\n          <Button primary onClick = {this.props.sortByName}>\r\n            по имени\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byTranslation'> \r\n          <Button primary onClick = {this.props.sortByTranslation}>\r\n            по переводу\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byMeaning'> \r\n          <Button primary onClick = {this.props.sortByDate}>\r\n            по дате\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n         <Input icon='search' placeholder='Search...' onChange={this.updateSearch}/>\r\n        </Menu.Item> \r\n   \r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabTopMenu;","import React, { Component, Fragment } from 'react';\r\nimport { List, Button, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport VocabWord from'./VocabWord'\r\nimport VocabSideMenu from'./VocabSideMenu'\r\nimport TopMenu from './TopMenu'\r\nimport VocabTopMenu from './VocabTopMenu'\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Vocabulary extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twords: [],\r\n\t\t\tfilteredWords: [],\r\n\t\t\tisOldestFirst: true,\r\n\t\t\tvisible: 15,\r\n\t\t\tquery: '',\r\n\t\t\tsearchString: [],\r\n\t\t\tsearch: '',\r\n\t\t\tcategories: [],\r\n\t\t\tcategoryValue: 'all'\t\r\n\t\t};\r\n\t\tthis.delete = this.delete;\r\n\t\tthis.handler = this.handler.bind(this);\t\r\n\t\tthis.sortByName = this.sortByName;\r\n\t\tthis.sortByTranslation = this.sortByTranslation;\r\n\t\tthis.sortByDate = this.sortByDate;\r\n\t\r\n\t}\r\n\r\n handler() {\r\n    this.setState({\r\n     words: []\r\n    })\r\n  }\r\n\r\n//подгрузка слов\r\n\tloadMore = () => {\r\n\t    this.setState((prev) => {\r\n\t      return {visible: prev.visible + 15};\r\n\t    });\r\n\t  }\r\n\r\n//сортировка по дате\r\n\tsortByDate = () => {\r\n    const words = this.state.filteredWords.slice();\r\n    let newWords = [];\r\n    if(this.state.isOldestFirst){\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(b.date) - new Date(a.date);\r\n      });\r\n    }\r\n    else{\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(a.date) - new Date(b.date);\r\n      });      \r\n    }\r\n    this.setState({\r\n      isOldestFirst: !this.state.isOldestFirst,\r\n      filteredWords: newWords\r\n    })\r\n\t} \r\n\r\n//сортировка по имени\r\n\tsortByName = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name) /*console.log('a,b ', a,b) */ );\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name) /*console.log('b,a ', b,a) */ );\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n//сортировка по переводу\r\n\tsortByTranslation = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\t    axios.get('./working.json')\r\n\t      .then(res => {\r\n\t        const words = res.data;\r\n\t        this.setState({ words, filteredWords: words });\r\n\t      })\r\n\t  }\r\n\r\n   delete = (id) =>{\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t})\r\n   }\r\n\r\n   deleteWord = (id) => {\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t}, () => this.toggleModal());\r\n   }\r\n\r\n   myCallback = (dataFromChild) =>{\r\n\t   \tlet words = this.state.words.slice();\r\n\t   \tlet filteredWords;\r\n\t   \tif (dataFromChild.value !== '') {\r\n\t   \t\tfilteredWords = words.filter(item => item.category == dataFromChild.value); \r\n\t   \t} else {\r\n\t   \t\tfilteredWords = words;\r\n\t   \t} \t\r\n   \t\tthis.setState({\r\n   \t\t\tfilteredWords,\r\n   \t\t\tcategoryValue: dataFromChild.value,\r\n   \t\t\toptions: dataFromChild.options\r\n   \t\t}) \r\n   }\r\n\r\n   topMenuCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\twords: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   searchCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tsearch: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   consoleState = () => {\r\n   \tconsole.log(this.state.categoryValue);\r\n   }\r\n\r\n   toggleModal = () => {\r\n   \tlet value = this.props.store.vocabModalOpen;\r\n   \tthis.props.actions.toggleVocabModal(!value);\r\n   }\r\n\r\n\r\n\r\n  render() {  \t\r\n  \tlet filteredWords = this.state.filteredWords.slice().filter(\r\n  \t\t(word) =>{\r\n  \t\t\treturn word.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n  \t\t}\r\n  \t);  \t\r\n    return (\r\n    \t<Fragment>\r\n    \t\t{this.props.store.vocabModalOpen ?\r\n\t    \t\t<div className=\"modal-container\">\r\n\t    \t\t\t<div className=\"modal-word\">\r\n\t    \t\t\t\t<span title=\"Закрыть\" onClick={this.toggleModal} className=\"modal-word__icon modal-word__icon--close\"><Icon name = 'close' size=\"large\" /></span>\r\n\t    \t\t\t\t<div className=\"modal-word__image\">\r\n\t    \t\t\t\t\t<img src = {this.props.store.selectedVocabWord.image} />\r\n\t    \t\t\t\t</div>\r\n\t    \t\t\t\t<p className=\"modal-word__title\">{this.props.store.selectedVocabWord.name} - <span className=\"modal-word__translation\">{this.props.store.selectedVocabWord.translation}</span></p>\r\n\t    \t\t\t\t<span onClick={this.deleteWord.bind(this, this.props.store.selectedVocabWord.id)} title=\"Удалить\" className=\"modal-word__icon modal-word__icon--delete\"><Icon size=\"large\" name = 'trash alternate outline'/></span>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n    \t\t: null}\r\n\t    \t<div className=\"content-wrapper\">\r\n\t    \t\t<TopMenu></TopMenu>\r\n\t    \t\t<div className=\"vocab-side-menu\">\r\n\t    \t\t\t<VocabSideMenu callbackFromParent={this.myCallback} items={this.state.words} ></VocabSideMenu>\r\n\t    \t\t\t<div className=\"vocab-top-menu\">\r\n\t    \t\t\t\t<VocabTopMenu \r\n\t    \t\t\t\t\thandler = {this.handler}\r\n\t    \t\t\t\t\tsortByName={this.sortByName}\r\n\t    \t\t\t\t\tsortByTranslation={this.sortByTranslation}\r\n\t    \t\t\t\t\tsortByDate ={this.sortByDate}\r\n\t     \t\t\t\t\tcallbackFromApp={this.topMenuCallback}\r\n\t    \t\t\t\t\tsearchFromApp={this.searchCallback} \r\n\t    \t\t\t\t\t>\r\n\t\t\t\t\t\t</VocabTopMenu>\r\n\t\t\t \t\t\t<List className=\"vocab-list\" relaxed='very'>\r\n\t\t\t\t\t\t\t{filteredWords.slice(0, this.state.visible).map((word,index) => \r\n\t\t\t\t\t\t\t\t(this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === word.category) && \r\n\t\t\t\t\t\t\t\t<VocabWord\r\n\t\t\t\t\t\t\t\t\tword = {word}\r\n\t\t\t\t\t\t\t\t\tdelete={this.delete}\r\n\t\t\t\t\t\t\t\t\tid={word.id}\r\n\t\t\t\t\t\t\t\t\tkey={word.id} \r\n\t\t\t\t\t\t\t\t\tname={word.name}\r\n\t\t\t\t\t\t\t\t\ttranscription = {word.transcription} \r\n\t\t\t\t\t\t\t\t\ttranslation={word.translation} \r\n\t\t\t\t\t\t\t\t\tmeaning={word.meaning}\r\n\t\t\t\t\t\t\t\t\timage={word.image} \r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t</VocabWord>\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t  \t\t\t</List>\r\n\t\t\t  \t\t\t<div className=\"load-more-button\">\r\n\t\t\t\t\t\t\t{this.state.visible < this.state.words.length &&\r\n\t\t\t\t            \t<Button onClick={this.loadMore} primary>Загрузить ещё</Button>\r\n\t\t\t\t          \t}\t\t\t\t  \t\t\t\t\r\n\t\t\t  \t\t\t</div>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    \t<footer></footer>\r\n\t    </Fragment>\t\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.vocabularyReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vocabulary);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass GrammarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      grammar: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('/grammar2.json')\r\n      .then(res => {\r\n        const grammar = res.data;\r\n        console.log(grammar);\r\n        this.setState({ grammar });\r\n      })\r\n  } \r\n\r\n  render() {\r\n\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {(this.state.grammar.length) ?\r\n          <Table celled fixed className=\"grammar-list\">\r\n            <Table.Header>\r\n              <Table.Row columns={1} >\r\n                <Table.HeaderCell>Грамматические правила</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>        \r\n            {this.state.grammar[0].rules.map((item,index) =>\r\n              <Table.Body key={index}>\r\n                <Table.Row columns={3}>\r\n                  <Table.Cell className=\"grammar-title\">\r\n                    {item.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-description\">\r\n                    {item.description}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-button\">\r\n                    <div className=\"link-wrapper\">\r\n                      <Link to={{ pathname: `/grammar/${item.id}`,  query: { item } }}>Начать</Link>\r\n                    </div>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            )}\r\n          </Table>: null }        \r\n          </div>\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GrammarList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass SelectedGrammar extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n    axios.get('/grammar2.json')\r\n      .then(res => {\r\n        let selectedGrammar = res.data[0].rules.find(x => x.id == this.props.match.params.id);\r\n        let main_points = selectedGrammar.main_points;\r\n        let fullData = selectedGrammar.steps;\r\n        let currentTitle = fullData[stepId].title;\r\n        let currentDescription = fullData[stepId].description;\r\n        let currentExamples = fullData[stepId].examples;\r\n        this.setState({ \r\n          fullData,\r\n          currentTitle,\r\n          currentDescription,\r\n          currentExamples,\r\n          main_points\r\n        });\r\n      })\r\n  }\r\n\r\n  startTraining = () =>{\r\n    this.setState({\r\n      isButtonVisible: false,\r\n      isCardVisible: true\r\n    })\r\n  }\r\n\r\n  goBack = () =>{\r\n    let fullData = this.state.fullData.slice();\r\n    let length = fullData.length;\r\n    let newId = this.state.stepId;\r\n    newId  = newId - 1;\r\n    console.log(newId);\r\n    if( (newId < length) && (newId > 0) ){\r\n        let currentTitle = fullData[newId].title;\r\n        let currentDescription = fullData[newId].description;\r\n        let currentExamples = fullData[newId].examples;\r\n        this.setState({\r\n          stepId: newId,\r\n          currentTitle,\r\n          currentDescription,\r\n          currentExamples            \r\n        })       \r\n    }\r\n\r\n    else if(newId == 0){\r\n      let currentTitle = fullData[newId].title;\r\n      let currentDescription = fullData[newId].description;\r\n      let currentExamples = fullData[newId].examples;        \r\n      this.setState({\r\n        isBackButtonVisible: false,\r\n        stepId: newId,\r\n        currentTitle,\r\n        currentDescription,\r\n        currentExamples            \r\n      })         \r\n    }\r\n\r\n    else if(newId < 0 ) {\r\n      this.setState({\r\n        isBackButtonVisible: false         \r\n      })\r\n    }\r\n  }\r\n\r\n  continueTraining = () => {\r\n    let fullData = this.state.fullData.slice();\r\n    let length = fullData.length;\r\n    let newId = this.state.stepId;\r\n    newId  = newId + 1;\r\n    if(newId < length){\r\n        let currentTitle = fullData[newId].title;\r\n        let currentDescription = fullData[newId].description;\r\n        let currentExamples = fullData[newId].examples;\r\n        this.setState({\r\n          isBackButtonVisible: true,\r\n          stepId: newId,\r\n          currentTitle,\r\n          currentDescription,\r\n          currentExamples            \r\n        })       \r\n    }\r\n\r\n    else{\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isCardVisible: false          \r\n      })\r\n    }\r\n  }\r\n\r\n  voiceWord = () => {\r\n    speech.say(this.state.currentName);\r\n  }  \r\n\r\n\r\n  consoleFunction = () => {\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link className=\"grammar-link\" to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default SelectedGrammar;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Statistics extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      loaded: false,\r\n      testsLoaded: false,\r\n      wordsLoaded: false,\r\n      words: [],\r\n      testsScore: 0,\r\n      testsPercentage: 0,\r\n      contentArray: [],\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n      isModalOpen: false,\r\n      exerciseMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"exercise\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"exercise\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"exercise\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"exercise\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ],\r\n      wordMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"word\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"word\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"word\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"word\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ],\r\n      testMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"test\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"test\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"test\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"test\", \"all\"],\r\n          \"active\": true         \r\n        }        \r\n      ],\r\n      generalMenu: [\r\n        {\r\n          \"id\": 1,\r\n          \"name\": \"сегодня\",\r\n          \"action\": [\"general\", \"today\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 2,\r\n          \"name\": \"за неделю\",\r\n          \"action\": [\"general\", \"week\"],\r\n          \"active\": false         \r\n        },\r\n        {\r\n          \"id\": 3,\r\n          \"name\": \"за месяц\",\r\n          \"action\": [\"general\", \"month\"],\r\n          \"active\": false\r\n        },\r\n        {\r\n          \"id\": 4,\r\n          \"name\": \"за все время\",\r\n          \"action\": [\"general\", \"all\"],\r\n          \"active\": true         \r\n        } \r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    let exercises = this.props.store;\r\n    for (var prop in exercises) {\r\n      let val = exercises[prop];\r\n      this.setState({\r\n        [prop]: val\r\n      })\r\n    } \r\n    let learnedWords = {}      \r\n    learnedWords.engToRusWords = this.props.store.engToRusWords;\r\n    learnedWords.rusToEngWords = this.props.store.rusToEngWords;\r\n    learnedWords.cardWords = this.props.store.cardWords;\r\n    learnedWords.constructWords = this.props.store.constructWords;\r\n    learnedWords.audioWords = this.props.store.audioWords;\r\n    learnedWords.trueOrFalseWords = this.props.store.trueOrFalseWords;\r\n    for (var prop in learnedWords) {\r\n      let val = learnedWords[prop];\r\n      this.countWords(val, prop + \"Total\")\r\n    } \r\n    this.setState({\r\n      learnedWords,\r\n      tests: this.props.testsStore,    \r\n      loaded: true\r\n    }, () => { this.countTests(this.state.tests); \r\n               this.setState({ wordsLoaded: true})               \r\n             })\r\n    axios.get('/words_full.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n        this.setState({ \r\n          words\r\n        }, () => this.splitIntoArrays());\r\n      })        \r\n  }   \r\n\r\n  countTests = (params) => {\r\n    let testsPercentage, testsScore;\r\n    if (params.length > 1) {\r\n      testsPercentage = Math.round(params.reduce(( sum , cur ) => sum + cur.percentage, 0) / this.state.tests.length * 10) / 10;\r\n      testsScore = params.reduce(( sum , cur ) => sum + cur.score , 0);\r\n    } else if (params.length === 1){\r\n      testsPercentage = params[0].testsPercentage;\r\n      testsScore = params[0].score;\r\n    } else {\r\n      testsPercentage = 0;\r\n      testsScore = 0;\r\n    }\r\n    this.setState({\r\n      testsPercentage, testsScore, testsLoaded: true\r\n    }) \r\n  }\r\n\r\n  countWords = (params, name) => {\r\n    let total = 0;\r\n    if (params.length > 1) {\r\n      for (var i = 0; i < params.length; i++) {\r\n        total += params[i].wordsTrained.length;\r\n      }\r\n      //total = params.reduce((a, b) => a.wordsTrained.length + b.wordsTrained.length);\r\n    } else if (params.length === 1) {\r\n      total = params[0].wordsTrained.length;\r\n    } else {\r\n      total = 0;\r\n    }\r\n    this.setState({\r\n      [name]: total\r\n    })\r\n  }\r\n\r\n  splitIntoArrays = () =>{\r\n    var nameArrays = Object.create(null);\r\n    let words = this.state.words.slice();\r\n    words.forEach(function(word) {\r\n      var nameArray = nameArrays[word.category];\r\n      if (!nameArray) {\r\n        nameArray = nameArrays[word.category] = [];\r\n      }\r\n      nameArray.push(word);\r\n    });\r\n  \tlet names = Object.keys(nameArrays);\r\n\r\n  \tlet values = Object.values(nameArrays);\r\n  \tlet finalData = [];\r\n  \tfor (var i = 0; i < names.length; i++) {\r\n  \t\tlet tmp = {};\r\n  \t\tlet lng = values[i].length;\r\n  \t\tlet fin = Math.floor(lng/3);\r\n      \ttmp['Всего слов'] = lng;\r\n      \ttmp['Изучено слов'] = fin;\r\n      \ttmp['name'] = names[i];\r\n      \tfinalData.push(tmp);\r\n  \t}\r\n\r\n  \tthis.setState({\r\n  \t\tnameArrays,\r\n  \t\tbarChartData: finalData\r\n  \t}, () => this.getYesterdaysDate())     \r\n\r\n  }\r\n\r\n\tgetYesterdaysDate = () => {\r\n\r\n    let data = this.state.barChartData.slice(0,7);\r\n    let params = this.state.barChartData.slice(0,7);\r\n    const sorter = {\r\n      \"monday\": 1,\r\n      \"tuesday\": 2,\r\n      \"wednesday\": 3,\r\n      \"thursday\": 4,\r\n      \"friday\": 5,\r\n      \"saturday\": 6,\r\n      \"sunday\": 7\r\n    }\r\n\r\n    let newParams = params.sort((a, b) => {\r\n      let item1 = a.name.toLowerCase();\r\n      let item2 = b.name.toLowerCase();\r\n      return sorter[item1] - sorter[item2];\r\n    });  \r\n\r\n\t\tvar days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    let dateArray = [];\t\t\r\n    var date = new Date();\r\n    let i = 0;\r\n    while ( i < 7) {\r\n\t\t  date.setDate(date.getDate() - 1);\r\n      //date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\t    dateArray.push(days[date.getDay()]); \r\n\t    i++;  \t\r\n    }\r\n    for (var j = 0; j < data.length; j++) {\r\n      data[j][\"name\"] = dateArray[j]\r\n    }\r\n    data.sort((a, b) => {\r\n      let item1 = a.name.toLowerCase();\r\n      let item2 = b.name.toLowerCase();\r\n      return sorter[item1] - sorter[item2];\r\n    });      \r\n\r\n    this.setState({\r\n      lineChartData: data\r\n    })\r\n\t}\r\n\r\n  consoleState = () =>{\r\n    console.log(this.state);\r\n  }\r\n\r\n  inDayRange = (option) => {\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let today = new Date(`${year}-${month + 1}-${day}`);\r\n\r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return (date.getTime() <= today.getTime() + 86400000 && date.getTime() >= today.getTime())\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)    \r\n  }\r\n\r\n  inWeekRange = (option) => {\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let weekDay = current.getDay();\r\n    let weekDays = 7;\r\n    let start = new Date(`${year}-${month + 1}-${day}`);\r\n    \r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return ( \r\n        date.getTime() <= (start.getTime() + (86400000 * (7 - weekDay))) && date.getTime() >= (start.getTime() - (86400000 * weekDay))\r\n      )\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)\r\n  }\r\n\r\n  inMonthRange = (option) => {\r\n    let current = new Date();\r\n    let year = current.getFullYear();\r\n    let month = current.getMonth();\r\n    let day = current.getDate();\r\n    let totalDays = daysInMonth(month, year);\r\n    let start = new Date(`${year}-${month + 1}-${1}`);\r\n\r\n    function ifInRange(item) {\r\n      let date = new Date(item.date);\r\n      return (date.getTime() <= start.getTime() + (86400000 * totalDays) && date.getTime() >= start.getTime())\r\n    }\r\n\r\n    function daysInMonth (month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option);\r\n  }\r\n\r\n  inAllRange = (option) => {\r\n\r\n    function ifInRange(item) {\r\n      return item;\r\n    }\r\n\r\n    this.applyFunction(ifInRange, option)\r\n  }  \r\n\r\n  applyFunction = (func, option) => {\r\n    let exercises = this.props.store;\r\n    let tests = this.props.testsStore;\r\n    console.log(tests);\r\n\r\n    if (option === 'exercise') {\r\n      for (var prop in exercises) {\r\n        let val = exercises[prop].filter(func)\r\n        this.setState({\r\n          [prop]: val\r\n        })\r\n      }\r\n    } else if (option === 'test') {\r\n        tests = tests.filter(func);\r\n        this.setState({\r\n          tests\r\n        }, () => this.countTests(this.state.tests))\r\n    } else if (option === 'word') {\r\n        let learnedWords = {}\r\n        learnedWords.engToRusWords = this.props.store.engToRusWords;\r\n        learnedWords.rusToEngWords = this.props.store.rusToEngWords;\r\n        learnedWords.cardWords = this.props.store.cardWords;\r\n        learnedWords.constructWords = this.props.store.constructWords;\r\n        learnedWords.audioWords = this.props.store.audioWords;\r\n        learnedWords.trueOrFalseWords = this.props.store.trueOrFalseWords;\r\n        for (var prop in learnedWords) {\r\n          learnedWords[prop] = learnedWords[prop].filter(func);\r\n          this.countWords(learnedWords[prop], prop + \"Total\");\r\n        }\r\n    }\r\n  }\r\n\r\n  switchTab = (tab, id) => {\r\n    this.selectMenuItem(tab[0], id);\r\n    if (tab[1] === 'today') {\r\n      this.inDayRange(tab[0]);\r\n    } else if (tab[1] === 'week') {\r\n      this.inWeekRange(tab[0]);\r\n    } else if (tab[1] === 'month') {\r\n      this.inMonthRange(tab[0]);\r\n    } else {\r\n      this.inAllRange(tab[0]);\r\n    }\r\n  }\r\n\r\n  selectMenuItem = (category, id) => {\r\n    let val = category + \"Menu\";\r\n    let menu = this.state[val].slice();\r\n    for (var i = 0; i < menu.length; i++) {\r\n      if (menu[i].id === id) {\r\n        menu[i].active = true;\r\n      } else {\r\n        menu[i].active = false;\r\n      }\r\n    }\r\n    this.setState({ [val]: menu });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          {this.state.isModalOpen ?\r\n            <div className=\"statistics-overlay\">\r\n              <div className=\"statistics-modal\">\r\n                  <BarChart\r\n                    width={600}\r\n                    height={350}\r\n                    data={this.state.barChartData}\r\n                    margin={{\r\n                      top: 20, right: 20, left: 20, bottom: 20,\r\n                    }}\r\n                  >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n                  </BarChart>                \r\n              </div>\r\n            </div>\r\n          : null}\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              <Card.Group className=\"texts-cards statistics-wrapper\" itemsPerRow={1} >\r\n            {/*\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Графики</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n    \t\t              <BarChart\r\n    \t\t                width={1200}\r\n    \t\t                height={450}\r\n    \t\t                data={this.state.barChartData}\r\n    \t\t                margin={{\r\n    \t\t                  top: 20, right: 30, left: 20, bottom: 5,\r\n    \t\t                }}\r\n    \t\t              >\r\n    \t\t                <CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t\t                <XAxis dataKey=\"name\" />\r\n    \t\t                <YAxis />\r\n    \t\t                <Tooltip />\r\n    \t\t                <Legend />\r\n    \t\t                <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n    \t\t                <Bar dataKey=\"Изучено слов\" fill=\"#444444\" />\r\n    \t\t              </BarChart>\r\n                    </Card.Description>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <LineChart\r\n                        width={800}\r\n                        height={450}\r\n                        data={this.state.lineChartData}\r\n                        margin={{\r\n                          top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"Всего слов\" stroke=\"#3281F0\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"Изучено слов\" stroke=\"#444444\" />\r\n                      </LineChart>\r\n                    </Card.Description>                    \r\n                  </Card.Content>\r\n                </Card> */}\r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Общая статистика</Card.Header>\r\n                    {(this.state.testsLoaded && this.state.wordsLoaded && this.state.loaded) ?\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\">\r\n                            <span>\r\n                              <Icon name = 'plus square outline'/>\r\n                            </span>\r\n                            <h1>{this.state.words.length}</h1>\r\n                            <p>Слов в словаре</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'file text'/></span>\r\n                            <h1>{this.props.resultsStore.exercisesComplete}</h1>\r\n                            <p>Тренировок пройдено</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'gem outline'/></span>\r\n                            <h1>{this.props.resultsStore.testsComplete}</h1>\r\n                            <p>Тестов выполнено</p>\r\n                          </div>                        \r\n                      </div>\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\">\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.props.resultsStore.totalScore}</h1>\r\n                            <p>Баллов набрано</p>\r\n                          </div>\r\n                      </div>\r\n                    </Card.Description> : null } \r\n                  </Card.Content>\r\n                </Card>                \r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Упражнений выполнено</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.exerciseMenu.map((item, index) => \r\n                        <a key={item.id} onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</a>\r\n                      )}\r\n                    </div>\r\n                    {this.state.loaded ?\r\n                      <Card.Description className=\"statistics-inner-wrapper\">\r\n                        <div className=\"statistics-container\">\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span>\r\n                                <Icon name = 'plus square outline'/>\r\n                              </span>\r\n                              <h1>{this.state.engToRusWords.length}</h1>\r\n                              <p>Перевод с английского</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'file text'/></span>\r\n                              <h1>{this.state.rusToEngWords.length}</h1>\r\n                              <p>Перевод с русского</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'gem outline'/></span>\r\n                              <h1>{this.state.audioWords.length}</h1>\r\n                              <p>Аудиотренировка</p>\r\n                            </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\" onClick={this.openModal}>\r\n                            <div className=\"statistics-item\">\r\n                              <span><Icon name = 'book'/></span>\r\n                              <h1>{this.state.cardWords.length}</h1>\r\n                              <p>Словарные карточки</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'question circle outline'/></span>\r\n                              <h1>{this.state.trueOrFalseWords.length}</h1>\r\n                              <p>Верно - неверно</p>\r\n                            </div>\r\n                            <div className=\"statistics-item\" onClick={this.openModal}>\r\n                              <span><Icon name = 'check circle outline'/></span>\r\n                              <h1>{this.state.constructWords.length}</h1>\r\n                              <p>Конструктор слов</p>\r\n                            </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.recreateTxt.length}</h1>\r\n                            <p>Воспроизведи текст</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'check circle outline'/></span>\r\n                            <h1>{this.state.recreateAudioTxt.length}</h1>\r\n                            <p>Воспроизведи аудиотекст</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.fillTheGaps.length}</h1>\r\n                            <p>Заполни пробелы</p>\r\n                          </div>                        \r\n                        </div>\r\n                        <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.placeSpaces.length}</h1>\r\n                            <p>Расставь пробелы</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.commonPhrases.length}</h1>\r\n                            <p>Крылатые фразы</p>\r\n                          </div>\r\n                        </div>                                              \r\n                      </Card.Description>\r\n                    : null}\r\n                  </Card.Content>\r\n                </Card>\r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Слов изучено</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.wordMenu.map((item, index) => \r\n                        <a key={item.id} onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</a>\r\n                      )}\r\n                    </div>\r\n                    {this.state.wordsLoaded ?\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span>\r\n                              <Icon name = 'plus square outline'/>\r\n                            </span>\r\n                            <h1>{this.state.engToRusWordsTotal}</h1>\r\n                            <p>Перевод с английского</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'file text'/></span>\r\n                            <h1>{this.state.rusToEngWordsTotal}</h1>\r\n                            <p>Перевод с русского</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'gem outline'/></span>\r\n                            <h1>{this.state.audioWordsTotal}</h1>\r\n                            <p>Аудиотренировка</p>\r\n                          </div>                        \r\n                      </div>\r\n                      <div className=\"statistics-container\">\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'book'/></span>\r\n                            <h1>{this.state.cardWordsTotal}</h1>\r\n                            <p>Словарные карточки</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'question circle outline'/></span>\r\n                            <h1>{this.state.trueOrFalseWordsTotal}</h1>\r\n                            <p>Верно - неверно</p>\r\n                          </div>\r\n                          <div className=\"statistics-item\" onClick={this.openModal}>\r\n                            <span><Icon name = 'check circle outline'/></span>\r\n                            <h1>{this.state.constructWordsTotal}</h1>\r\n                            <p>Конструктор слов</p>\r\n                          </div>                        \r\n                      </div>             \r\n                    </Card.Description>\r\n                    : null}\r\n                  </Card.Content>\r\n                </Card>                \r\n                <Card className=\"statistics-section\">\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Тесты</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                      {this.state.testMenu.map((item, index) => \r\n                        <a key = {item.id} onClick={this.switchTab.bind(this, item.action, item.id)} className={item.active ? \"statistics-link_active\" : \"\"}>{item.name}</a>\r\n                      )}\r\n                    </div>     \r\n                    {this.state.testsLoaded ?               \r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <div className=\"statistics-container\">\r\n                        <div className=\"statistics-item\" onClick={this.openModal}>\r\n                          <span><Icon name = 'book'/></span>\r\n                          <h1>{this.state.tests.length}</h1>\r\n                          <p>Тестов выполнено</p>\r\n                        </div>\r\n                        <div className=\"statistics-item\">\r\n                          <span><Icon name = 'check circle outline'/></span>\r\n                          <h1>{this.state.testsPercentage}</h1>\r\n                          <p>Процент выполнения</p>\r\n                        </div>\r\n                        <div className=\"statistics-item\">\r\n                          <span><Icon name = 'question circle outline'/></span>\r\n                          <h1>{this.state.testsScore}</h1>\r\n                          <p>Баллов набрано</p>\r\n                        </div>                        \r\n                      </div>\r\n                    </Card.Description>\r\n                    : null }\r\n                  </Card.Content>\r\n                </Card>                                \r\n              </Card.Group>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.exercisesReducer, testsStore: state.testsReducer.tests, resultsStore: state.resultsReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Training extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper training-cards\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/englishtorussian.jpg' />              \r\n              </div>\r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/englishtorussian\">С английского на русский </Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/russiantoenglish.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/russiantoenglish\">С русского на английский</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/memory.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/cards\">Словарные карточки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/audio.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/audio\">Аудиотренировка</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/construct.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/constructword\">Конструктор слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/fillthegaps.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/fillthegaps\">Заполни пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreatetext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreatetext\">Воспроизведи текст</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreateaudiotext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreateaudiotext\">Воспроизведи аудиоисторию</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/insertspaces.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/insertspaces\">Расставьте пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/truefalse.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/trueorfalse\">Верно-неверно</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/proverbs.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/proverbs\">Пословицы и поговорки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>                                                                                                               \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Training;","import React, { Component, Fragment } from 'react';\r\nimport {Image } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n}\r\n \r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper recommended-wrapper\">\r\n          \t<div className=\"main-section section-1\">\r\n          \t  <div className=\"section-overlay\">\r\n          \t  \t<div className=\"section-header\">\r\n          \t  \t\t<h2>Лучший способ выучить язык</h2>\r\n          \t  \t\t<Link to=\"/training\" className=\"outline-link\">Начать учиться</Link>\r\n          \t  \t</div>\r\n          \t  </div>              \r\n            </div>\r\n          \t<div className=\"advantage-section\">\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/settings.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Простой интерфейс</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notebook.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Удобный словарь</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/user.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разнообразные тренировки</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notepad.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Большое количество обучающих материалов</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/house.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Грамматика и тесты</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/pen.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Полностью бесплатно</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>          \t                \r\n            </div>            \r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image words-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Изучайте слова</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>20 тематических наборов</li>\r\n\t            \t\t\t<li>Более 2000 слов</li>\r\n\t            \t\t\t<li>Словарь с расширенным функционалом</li>            \t\t\t            \t\t\t\r\n\t            \t\t\t<li>Возможность изучать добавленные слова</li>            \t\t\t\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/vocabulary\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Тренируйтесь</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>11 видов тренировок</li>\r\n\t            \t\t\t<li>Тренировка чтения, говорения и понимания на слух</li>\r\n\t            \t\t\t<li>Возможность добавлять на тренировку изучаемые слова</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/training\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image training-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image grammar-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Учите грамматику</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Изучение грамматики английского языка</li>\r\n\t            \t\t\t<li>Наглядные примеры</li>\r\n\t            \t\t\t<li>Тесты на любую тематику</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/grammar\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Улучшайте навыки чтения</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Множество текстов и аудиотекстов различной тематики</li>\r\n\t            \t\t\t<li>Тексты разного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/texts\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image texts-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n          {/*\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image books-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Читайте книги</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Книги на любой вкус</li>\r\n\t            \t\t\t<li>Возможность слушать аудиокниги</li>\r\n\t            \t\t\t<li>Книги различного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/books\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div> \r\n          */}  \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message, TextArea} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport './style.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ConstructWord extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    \tthis.btn = React.createRef();\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentWord: '',\r\n        currentFullWord: null,\r\n        currentTranslation: '',\r\n        currentMeaning: '',\r\n        isStarterVisible: true,\r\n        isCardVisible: false,\r\n        isFinalVisible: false,\r\n        inputValue: null,\r\n        nameArray: [],\r\n        wordNameArray: [],\r\n        nameArrayId: 0,\r\n        currentValue: '',\r\n        search: '',\r\n        currentImage: null,\r\n        areButtonsVisible: true,\r\n        isImageVisible: false,\r\n        wordId: 0,\r\n        mistakeCount: 0,\r\n        animationState: false,\r\n        fade: false        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      let id = this.state.id;\r\n      axios.get('/vocabulary2.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        const currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n        const currentTranslation = words[id].translation;\r\n        const currentImage = words[id].image;\r\n        const currentMeaning = words[id].meaning;\r\n        const nameArray = currentWord.split('');\r\n        const randomNameArray = currentWord.split('');\r\n        for (let i = randomNameArray.length - 1; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n        }\r\n        const wordNameArray = [];\r\n        for (var i = 0; i < nameArray.length; i++) {\r\n          wordNameArray.push(' ');\r\n        }\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          currentFullWord\r\n          });\r\n      })\r\n      document.body.addEventListener(\"keydown\", this.myHandler);\r\n    }\r\n \r\n  myHandler = (e) =>{\r\n    const fade = this.state.fade;\r\n    let mistakeCount = this.state.mistakeCount;\r\n    let currentFullWord = this.state.currentFullWord;\r\n    let negativeWords = this.state.negativeWords.slice();\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let currentValue = this.state.currentValue;\r\n    let currentWord = this.state.currentWord;      \r\n    let id = this.state.nameArrayId;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let tempParam;\r\n    if ((e.key=== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        currentValue = currentValue + e.key;\r\n        this.state.wordNameArray[id] = e.key;\r\n        for (var i = 0; i < randomNameArray.length; i++) {\r\n          if (randomNameArray[i] === e.key) {\r\n            tempParam = i;\r\n            break;\r\n          }\r\n        }\r\n        randomNameArray.splice(tempParam,1);       \r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: e.key,\r\n          randomNameArray\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((e.key !== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        mistakeCount++;\r\n        this.setState({\r\n          mistakeCount,\r\n          fade: true\r\n        })\r\n      }\r\n      else if((e.keyCode == '13') && (this.state.isCardVisible) ){\r\n        this.continueTraining();\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false\r\n        })        \r\n      }\r\n  }   \r\n\r\n  startTraining = () => {\r\n    this.setState({\r\n      isStarterVisible: false,\r\n      isCardVisible: true\r\n    })\r\n  }\r\n\r\n\r\n  continueTraining = () => {\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let currentFullWord = this.state.currentFullWord;\r\n\t  let negativeWords = this.state.negativeWords.slice();\r\n\t  let positiveWords = this.state.positiveWords.slice();\r\n\t  let currentValue = this.state.currentValue;\r\n\t  let currentWord = this.state.currentWord;\t  \r\n\t\tif (mistakeCount > 2){\r\n\t\t\tnegativeWords.push(currentFullWord);\r\n\t\t}\r\n\r\n\t\telse if(currentWord !== currentValue){\r\n\t  \tnegativeWords.push(currentFullWord);\r\n\t  \tthis.setState({\r\n\t  \t\tnegativeWords\r\n\t  \t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpositiveWords.push(currentFullWord)\r\n\t\t} \r\n    let id = this.state.id;\r\n    let wordsLength = this.state.words.length;\r\n    let words = this.state.words; \r\n    id = id + 1;\r\n    if(id < wordsLength) {\r\n      const currentFullWord = words[id];\r\n      const currentWord = words[id].name;\r\n  \t\tconst currentTranslation = words[id].translation;\r\n  \t\tconst currentImage = words[id].image;\r\n  \t\tconst currentMeaning = words[id].meaning;        \r\n  \t\tconst nameArray = currentWord.split('');\r\n  \t\tconst randomNameArray = currentWord.split('');\r\n  \t\tfor (let i = randomNameArray.length - 1; i > 0; i--) {\r\n  \t\t    const j = Math.floor(Math.random() * (i + 1));\r\n  \t\t    [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n  \t\t}\r\n  \t\tconst wordNameArray = [];\r\n  \t\tfor (var i = 0; i < nameArray.length; i++) {\r\n  \t\t\twordNameArray.push(' ');\r\n  \t\t}\r\n      this.setState({\r\n          id,\r\n          words, \r\n          currentWord,\r\n          currentFullWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          isImageVisible: false,\r\n          areButtonsVisible: true,\r\n          currentValue: '',\r\n          nameArrayId: 0,\r\n          mistakeCount: 0,\r\n          positiveWords,\r\n          negativeWords\r\n      })\r\n    }\r\n    else {\r\n      let words = this.state.positiveWords.slice();\r\n      let exercise = {}, wordsTrained = [];\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.positiveWords.length;\r\n      for (var i = 0; i < words.length; i++) {\r\n        wordsTrained.push(words[i].id)\r\n      }\r\n      exercise.wordsTrained = wordsTrained;\r\n      this.props.actions.updateConstructWord(exercise); \r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(exercise.score);\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isCardVisible: false,\r\n        isStarterVisible: false,\r\n        positiveWords,\r\n    \t  negativeWords           \r\n      })\r\n    }\r\n  }\r\n  \r\n  voiceWord = () => {\r\n    speech.say(this.state.currentName);\r\n  }  \r\n\r\n  checkValue = () => {\r\n    if(this.state.currentWord.length === this.state.currentValue.length){\r\n    \tthis.setState({\r\n    \t\tareButtonsVisible: false,\r\n    \t\tisImageVisible: true\r\n    \t})\r\n    }   \t\r\n  }\r\n\r\n  compareWord = (e) => {\r\n    let id = this.state.nameArrayId;\r\n    let currentWord = this.state.currentWord;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let currentValue = this.state.currentValue;\r\n    let currentLetter = e.target.textContent.slice(0,1);\r\n    let mistakeCount = this.state.mistakeCount;\r\n      if( (currentLetter === nameArray[id]) && (currentValue.length < currentWord.length) ){\r\n        e.target.className = \"hidden\";\r\n        currentValue = currentValue + currentLetter;\r\n        this.state.wordNameArray[id] = currentLetter;\r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: currentLetter\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((currentLetter !== nameArray[id]) && (currentValue.length < currentWord.length)) {\r\n\t      mistakeCount++;\r\n\t      this.setState({\r\n\t      \tmistakeCount,\r\n          fade: true\r\n\t      })\r\n      }\r\n      else {\r\n      \tthis.setState({\r\n      \t\tisFinalVisible: true,\r\n      \t\tisCardVisible: false\r\n      \t})      \t\r\n      }\r\n  } \r\n\r\n\r\n\r\n  render() {\r\n    const fade = this.state.fade;\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/construct.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n            <Container \r\n                onAnimationEnd={() => this.setState({ fade: false })}\r\n                className={fade ? 'fade construct-word-container' : 'construct-word-container'}>\r\n              <ul>\r\n              {this.state.wordNameArray.map((name,index) =>\r\n                <input key={index}  readOnly value={name} maxLength=\"1\" />\r\n               )}\r\n              </ul>\r\n              {this.state.areButtonsVisible ? \r\n\t              <ul>\r\n\t              {this.state.randomNameArray.map((name,index) =>\r\n\t                <li key={index} \r\n                      onClick={this.compareWord}\r\n                  > \r\n                      {name} \r\n                  </li>\r\n\t               )}\r\n\t              </ul>: null \r\n              }\r\n            {this.state.isImageVisible ?\r\n            \t<Fragment>\r\n            \t\t<p>{this.state.currentMeaning}</p>\r\n                   <div className=\"texts-image-wrapper\">\r\n                    <Image src={this.state.currentImage} ></Image>\r\n                  </div>\r\n            \t</Fragment> \r\n            \t : null\r\n            }\r\n            </Container>\r\n            <Button primary onClick={this.continueTraining} >Продолжить</Button>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConstructWord);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Proverbs extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n\r\n  startTraining = () =>{\r\n    this.setState({\r\n        isStarterVisible: false,\r\n        isCardVisible: true\r\n    })\r\n  }\r\n\r\n  shuffleArray = () =>{\r\n    let currentArray = this.state.currentArray.slice();\r\n    for (let i = currentArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n    }\r\n  }\r\n\r\n  continueTraining = () =>{\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let negativeProverbs = this.state.negativeProverbs.slice();\r\n\t  let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let id = this.state.id;\r\n    let proverbs = this.state.proverbs;\r\n    id = id + 1;\r\n    if (id < 2) {\r\n      const currentProverb = proverbs[id];\r\n      const currentProverbName = proverbs[id].proverb;\r\n      const currentTranslation = proverbs[id].translation;\r\n      let currentArray = currentProverbName.split(\" \");\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }        \r\n      this.setState({\r\n        id,\r\n        proverbs, \r\n        currentProverbName,\r\n        currentTranslation,\r\n        currentArray,\r\n        constructedProverb: [],\r\n        positiveProverbs,\r\n        negativeProverbs,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: true,\r\n        isContinueButtonVisible: false,\r\n        isResultWrong: false,\r\n        nameClass: ''\r\n      })\r\n    }\r\n    else {\r\n      let exercise = {};\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.positiveProverbs.length; \r\n      this.props.actions.updateCommonPhrases(exercise); \r\n      this.props.actions.updateTotalExercises(1);\r\n      this.props.actions.updateTotalScore(exercise.score);      \r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isCardVisible: false,\r\n        isStarterVisible: false,\r\n        positiveProverbs,\r\n        negativeProverbs           \r\n      })\r\n    }\r\n  }\r\n\r\n  setValue = (e) => {\r\n    let target = e.target;\r\n    let parent = e.target.parentElement.children;\r\n    let indexTarget = 0;\r\n    while ( (target = target.previousElementSibling) ) {\r\n      indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    currentArray.splice(indexTarget,1);\r\n    constructedProverb.push(e.target.textContent);\r\n    this.setState({\r\n      constructedProverb\r\n    })\r\n    if(currentArray.length == 0){\r\n      this.setState({\r\n        isCheckButtonVisible: true,\r\n        isDKButtonVisible: false\r\n      })\r\n    }\r\n  } \r\n\r\n  removeValue = (e) =>{\r\n    let target = e.target;\r\n    let parent = e.target.parentElement.children;\r\n    var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    constructedProverb.splice(indexTarget,1);\r\n    currentArray.push(e.target.textContent);\r\n    this.setState({\r\n      currentArray\r\n    })\r\n    if(currentArray.length > 0){\r\n      this.setState({\r\n        isCheckButtonVisible: false\r\n      })\r\n    }\r\n  }\r\n\r\n  dontKnow = (e) =>{\r\n    let negativeProverbs = this.state.negativeProverbs;    \r\n    let currentProverbName = this.state.currentProverbName;\r\n    let currentArray = currentProverbName.split(\" \");\r\n    let constructedProverb = [];\r\n    for (var i = 0; i < currentArray.length; i++) {\r\n      constructedProverb.push(currentArray[i])\r\n    }\r\n    negativeProverbs.push(currentProverbName);\r\n    this.setState({\r\n      currentArray: [],\r\n      isDKButtonVisible: false,\r\n      isContinueButtonVisible: true,\r\n      isCheckButtonVisible: false,\r\n      constructedProverb\r\n    })\r\n  }\r\n\r\n  checkProverb = (e) =>{\r\n    let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let negativeProverbs = this.state.negativeProverbs.slice();\r\n    var sentence = this.state.constructedProverb.slice().join(' ');\r\n    if(sentence === this.state.currentProverbName){\r\n      positiveProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        nameClass: 'audio-name-green',\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        positiveProverbs\r\n      })      \r\n    }\r\n    else {\r\n      negativeProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        nameClass: 'audio-name-red',\r\n        isResultWrong: true,\r\n        negativeProverbs\r\n      })      \r\n    }\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      proverbs: [],\r\n      id: 0,\r\n      currentProverbName: '',\r\n      currentTranslation: '',\r\n      mistakeCount: 0,\r\n      positiveProverbs: [],\r\n      negativeProverbs: [],\r\n      currentArray: [],\r\n      isStarterVisible: true,\r\n      isCardVisible: false,\r\n      isFinalVisible: false,\r\n      areButtonsVisible: false,\r\n      isContinueButtonVisible: false,\r\n      isCheckButtonVisible: false,\r\n      isDKButtonVisible: true,\r\n      constructedProverb: [],\r\n      nameClass: '',\r\n      isResultWrong: false      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/proverbs.json')\r\n      .then(res => {\r\n        const proverbs = res.data;\r\n        let random = [];\r\n        while(random.length < 2) {\r\n          let el = proverbs[Math.floor(Math.random() * proverbs.length)];\r\n          if (random.indexOf(el) === -1) {\r\n            random.push(el)\r\n          };                \r\n        }  \r\n        const currentProverb = random[id];\r\n        const currentProverbName = random[id].proverb;\r\n        const currentTranslation = random[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }                    \r\n        this.setState({ \r\n            proverbs: random, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray\r\n          });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/proverbs.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card proverb-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n              <div className={`proverb-result ${this.state.nameClass}`} >\r\n                  {this.state.constructedProverb.map((item,index) =>\r\n                      <span key={index} className=\"proverb-span\" onClick={this.removeValue}>{item}</span>\r\n                  )}\r\n              </div>\r\n              {this.state.isResultWrong ?\r\n                <div className={`proverb-result audio-name-green`}>\r\n                  {this.state.currentProverbName}\r\n                </div> : null\r\n              }\r\n              <div className=\"fragment-variants\">\r\n                {this.state.currentArray.map((item, index) =>\r\n                  <span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"proverb-button-container\">\r\n              {this.state.isCheckButtonVisible ? \r\n                <Button primary onClick={this.checkProverb} >Проверить</Button> : null\r\n              }\r\n              {this.state.isDKButtonVisible ? \r\n                <Button primary onClick={this.dontKnow}>Не знаю</Button> :null\r\n              }\r\n              {this.state.isContinueButtonVisible ? \r\n                <Button primary onClick={this.continueTraining} >Продолжить</Button> : null\r\n              }                \r\n              </div>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeProverbs.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveProverbs.length ? this.state.positiveProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          ) : null}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveProverbs.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {2 - this.state.positiveProverbs.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Proverbs);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Cards extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              let el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });          \r\n        })\r\n   }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (val) => {\r\n      if (val) {\r\n        let positiveWords = this.state.positiveWords.slice();\r\n        positiveWords.push(this.state.currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n        })        \r\n      } else {\r\n        let negativeWords = this.state.negativeWords.slice();\r\n        negativeWords.push(this.state.currentWord);      \r\n        this.setState({\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true\r\n        })        \r\n      }     \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      let result = this.state.result;\r\n      id = id + 1;\r\n      if (id < result.length){ \r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];       \r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n      }\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let exercise = {}, wordsTrained = [];\r\n        exercise.id = uuidv4();\r\n        exercise.date = new Date();\r\n        exercise.score = this.state.positiveWords.length;\r\n        for (var i = 0; i < words.length; i++) {\r\n          wordsTrained.push(words[i].id)\r\n        }\r\n        exercise.wordsTrained = wordsTrained;\r\n        this.props.actions.updateCardWords(exercise);\r\n        this.props.actions.updateExerciseComplete(1);\r\n        this.props.actions.updateTotalScore(exercise.score);\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n  voiceWord = () =>{\r\n    speech.say(this.state.currentName);\r\n  }    \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Словарные карточки</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent} >Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n           <div className=\"card-image-wrapper recognize-cards\">\r\n             <Image src={this.state.currentWord.image} />\r\n           </div>\r\n              <Card.Content>\r\n                <Card.Header>{this.state.currentWord.name} \r\n                <span onClick={this.voiceWord} className=\"training-card__icon\" title=\"Прослушать\">\r\n                  <Icon name = 'right sound'/> \r\n                </span>\r\n                </Card.Header>\r\n                {this.state.isTranslationVisible ? \r\n                  <Fragment>\r\n                    <Card.Meta>{this.state.currentWord.translation}</Card.Meta>\r\n                    <Card.Description>{}</Card.Description>                  \r\n                  </Fragment>:null\r\n                }\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} primary>Знаю</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} primary>Не знаю</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  { (this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Audio extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false,\r\n        correctNameVisible: false,\r\n        correctName: null,\r\n        correctNameClass: 'audio-name-green',\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        tempSearch: '',\r\n        metaClass: 'blue',\r\n        nameClass: ''         \r\n      }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    let id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              let el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });\r\n        })\r\n   }\r\n\r\n    startTraining = () => {\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({\r\n        search: event.target.value.substr(0,20),\r\n        tempSearch: event.target.value.substr(0,20)});\r\n    }  \r\n\r\n\r\n    positiveResponse = () => {\r\n      let positiveWords = this.state.positiveWords.slice();\r\n      let negativeWords = this.state.negativeWords.slice();\r\n      let currentWord = this.state.currentWord;\r\n      let search = this.state.search;\r\n      if(currentWord.name === search){\r\n        positiveWords.push(currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-green'\r\n        })\r\n      }\r\n      else if(search === '') {\r\n        negativeWords.push(currentWord);        \r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red',\r\n          tempSearch: 'нет ответа'\r\n        }) \r\n      }\r\n\r\n      else {\r\n        negativeWords.push(currentWord);\r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red'\r\n        })        \r\n      }\r\n    }\r\n\r\n    continueTraining = () => {\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if (id < result.length) { \r\n      const currentWord = result[id][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: true,\r\n          isInputVisible: true,\r\n          search: '',\r\n          correctNameVisible: false        \r\n        })\r\n      } \r\n\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let exercise = {}, wordsTrained = [];\r\n        exercise.id = uuidv4();\r\n        exercise.date = new Date();\r\n        exercise.score = this.state.positiveWords.length;\r\n        for (var i = 0; i < words.length; i++) {\r\n          wordsTrained.push(words[i].id)\r\n        }\r\n        exercise.wordsTrained = wordsTrained;\r\n        this.props.actions.updateAudioWords(exercise);   \r\n        this.props.actions.updateExerciseComplete(1);\r\n        this.props.actions.updateTotalScore(exercise.score);\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          correctNameVisible: false,\r\n          search: ''\r\n        })\r\n      }\r\n    }\r\n\r\n  voiceWord = () =>{\r\n    speech.say(this.state.currentWord.name);\r\n  }  \r\n\r\n  showImage = () => {\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />\r\n            </div>  \r\n              <Card.Content>\r\n                <Card.Header>Аудирование</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group>:\r\n          null\r\n        }\r\n         {this.state.isCardVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"audio-header-wrapper\" >\r\n             <Card className=\"audio-training\"  >\r\n                <Card.Content>\r\n                  <Card.Header className=\"audio-header\">\r\n                    <Button onClick={this.voiceWord} primary className=\"audio-button\"><Icon size=\"big\" name=\"microphone\"></Icon></Button>\r\n                    {this.state.isInputVisible ?\r\n                      <Input placeholder=\"Введите прослушанное слово\" id=\"audo-input\" onChange={this.updateSearch}/>:null\r\n\r\n                    } \r\n                  </Card.Header>\r\n                  {this.state.isTranslationVisible ? \r\n                    <Fragment>\r\n                    {this.state.correctNameVisible ? <Card.Meta className={this.state.correctNameClass}>{this.state.currentWord.name}</Card.Meta>: null }\r\n                      <Card.Meta className={this.state.nameClass}>{this.state.tempSearch}</Card.Meta>\r\n                      <Card.Meta className={this.state.metaClass}>{this.state.currentWord.translation}</Card.Meta>\r\n                      <Card.Description className=\"audio-description\">{}</Card.Description>                  \r\n                    </Fragment>:null\r\n                  }\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className=\"audio-image-outer-wrapper\">\r\n                  {this.state.isImageVisible ?\r\n                   <div className=\"audio-image-wrapper\">\r\n                     <Image src={this.state.currentWord.image} />\r\n                   </div> :null\r\n                 }\r\n                 {this.state.isLinkVisible ?\r\n                   <div className=\"audio-image-text\">\r\n                       <a onClick={this.showImage}>Show hint</a>\r\n                   </div> : null\r\n                  }                 \r\n                </div>\r\n                  <Button.Group className=\"audio-buttons-wrapper\">\r\n                  {this.state.showNavButtons ?\r\n                  <Fragment>\r\n                    <Button onClick={this.positiveResponse} primary>Проверить</Button>\r\n                  </Fragment>:null\r\n                  }  \r\n                  {this.state.showContinueButton ?\r\n                    <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n\r\n                  }\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group> :\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          </div>\r\n          <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Audio);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EnglishToRussian extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      currentWord: '',\r\n      flagState: false,\r\n      result: [],\r\n      disabled: false        \r\n    }, () => { this.initialLoad() })\r\n  }\r\n\r\n    initialLoad = () => {\r\n      let id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              let el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if (id < result.length) {\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({\r\n            id,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            currentWord,\r\n            disabled: false\r\n          })\r\n        }  \r\n\r\n      else {\r\n        let words = this.state.positiveWords.slice();\r\n        let exercise = {}, wordsTrained = [];\r\n        exercise.id = uuidv4();\r\n        exercise.date = new Date();\r\n        exercise.score = this.state.positiveWords.length;\r\n        for (var i = 0; i < words.length; i++) {\r\n          wordsTrained.push(words[i].id)\r\n        }\r\n        exercise.wordsTrained = wordsTrained;\r\n        this.props.actions.updateEngToRus(exercise);\r\n        this.props.actions.updateExerciseComplete(1);\r\n        this.props.actions.updateTotalScore(exercise.score);\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          search: ''\r\n        })\r\n      } \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      speech.say(this.state.currentName);\r\n   }  \r\n\r\n   showImage = ()=>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  } \r\n\r\n   dontKnow = () =>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true\r\n    })\r\n   }\r\n\r\n      render() {\r\n        return (\r\n          <Fragment>\r\n            <div className=\"content-wrapper\">\r\n            <TopMenu/>\r\n             {this.state.isButtonVisible ?\r\n              <Card.Group className=\"card-header-wrapper\">\r\n                <Card>\r\n                <div className=\"training-wrapper-image\">\r\n                  <Image src='training/englishtorussian.jpg' />\r\n                </div>  \r\n                  <Card.Content>\r\n                    <Card.Header>Перевод</Card.Header>\r\n                    <Card.Description>\r\n                      <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>          \r\n              </Card.Group> : null }\r\n           {this.state.isCardVisible ?\r\n           \t<Container className=\"list-container\">\r\n           \t\t<Card className=\"training-card\">\r\n    \t       \t\t<Label>\r\n                  {this.state.currentWord.name}\r\n                    <span className=\"training-card__icon\" onClick={this.voiceWord} title=\"Прослушать\">\r\n                      <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n                    </span>\r\n                </Label>\r\n    \t       \t\t<Container className=\"list-inner-wrapper\">\r\n    \t\t\t        <List className=\"training-list\">\r\n    \t\t\t        {this.state.result[this.state.id].map((word, index) =>\r\n    \t\t\t            <List.Item key={index} className=\"training-list-item\">\r\n    \t\t\t              <List.Content>\r\n    \t\t\t                <List.Header as='a'>\r\n                            <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.translation}</Button>\r\n                          </List.Header>\r\n    \t\t\t              </List.Content>\r\n    \t\t\t            </List.Item>\r\n    \t\t\t        )}\r\n                    <List.Item className=\"training-list-item\">\r\n                      <List.Content>\r\n                        <List.Header as='a'>\r\n                          <Button onClick={this.dontKnow} className=\"help\" >Не знаю</Button>\r\n                        </List.Header>\r\n                      </List.Content>\r\n                    </List.Item>              \r\n    \t\t\t        </List>\r\n                  {this.state.isImageVisible ?\r\n                    <div className=\"training-right-wrapper\">\r\n                      <div className=\"training-image-wrapper\">\r\n                        <Image src={this.state.currentWord.image} className=\"training-image\">\r\n                        </Image>                \r\n                      </div>\r\n                    {this.state.flagState && this.state.isImageVisible ?\r\n                      <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n                    }                                     \r\n                    </div>: null               \r\n                   }\r\n    \t       \t\t</Container>\r\n           \t\t</Card>\r\n          \t</Container> :\r\n               null\r\n            }\r\n            {this.state.isFinalVisible ?\r\n             <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n                 <Card className=\"card-training\" >\r\n                    <Card.Content>\r\n                      <Card.Header>Результаты</Card.Header>\r\n                      <Divider/>\r\n                      <Card.Description className=\"audio-list-container\"> \r\n                      {(this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                       <Message>\r\n                          <Message.Header>Поздравляем!</Message.Header>\r\n                          <p>\r\n                            Все задания выполнены правильно\r\n                          </p>\r\n                       </Message> \r\n                      }\r\n                      </Card.Description>\r\n                      <Card.Description className=\"results-wrapper\">\r\n                        <div className=\"positive-results-wrapper\"> \r\n                          <div className=\"positive-results\">\r\n                            {this.state.positiveWords.length}\r\n                          </div>\r\n                          <Label>Верно</Label>                    \r\n                        </div>\r\n                        <div className=\"negative-results-wrapper\"> \r\n                          <div className=\"negative-results\">\r\n                            {this.state.result.length - this.state.positiveWords.length}\r\n                          </div> \r\n                          <Label>Неверно</Label>                   \r\n                        </div>\r\n                      </Card.Description>\r\n                      <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                      </Button.Group>\r\n                    </Card.Content>\r\n                  </Card>          \r\n            </Card.Group>                \r\n               : null\r\n            }\r\n            </div>\r\n            <footer></footer>\r\n        </Fragment>\r\n    \t);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnglishToRussian);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport classnames from 'classnames';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RussianToEnglish extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n    this.state = {\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n  this.setStateOnStart()\r\n}\r\n\r\nsetStateOnStart = () => {\r\n  this.setState({\r\n    words: [],\r\n    negativeWords: [],\r\n    positiveWords: [],\r\n    id: 0,\r\n    isCardVisible: false,\r\n    isButtonVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: true,\r\n    showContinueButton: false,\r\n    isFinalVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: true,\r\n    isInputVisible: true,\r\n    search: '',\r\n    currentWord: '',\r\n    flagState: false,\r\n    result: [],\r\n    disabled: false    \r\n  }, () => this.initialLoad())\r\n}\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = [];\r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            let el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          result });\r\n      })\r\n  }\r\n\r\n\r\nstartTraining = () =>{\r\n  this.setState({\r\n    isButtonVisible: false,\r\n    isCardVisible: true\r\n  })\r\n}\r\n\r\ncontinueTraining = () =>{\r\n  let id = this.state.id;\r\n  id = id + 1;\r\n  const result = this.state.result;\r\n  if(id < result.length) {\r\n    const currentWord =  result[id][Math.floor(Math.random() * result[id].length)];\r\n    this.setState({\r\n      id,\r\n      currentWord, \r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      disabled: false\r\n    })\r\n  } \r\n\r\n  else {\r\n    let words = this.state.positiveWords.slice();\r\n    let exercise = {}, wordsTrained = [];\r\n    exercise.id = uuidv4();\r\n    exercise.date = new Date();\r\n    exercise.score = this.state.positiveWords.length;\r\n    for (var i = 0; i < words.length; i++) {\r\n      wordsTrained.push(words[i].id)\r\n    }\r\n    exercise.wordsTrained = wordsTrained;\r\n    \r\n    this.props.actions.updateRusToEng(exercise);\r\n    this.props.actions.updateExerciseComplete(1);\r\n    this.props.actions.updateTotalScore(exercise.score);\r\n    this.setState({\r\n        isFinalVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: false,\r\n        showContinueButton: false, \r\n        isCardVisible: false,\r\n        isButtonVisible: false,\r\n        isImageVisible: false,\r\n        isLinkVisible: false,\r\n        isInputVisible: false,\r\n        search: ''\r\n    })\r\n  }  \r\n}\r\n\r\nvoiceWord = () =>{\r\n  speech.say(this.state.currentName);\r\n}  \r\n\r\nshowImage = ()=>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    isLinkVisible: false\r\n  })\r\n}\r\n\r\n compareWord = (id) =>{\r\n  let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n  let positiveWords = this.state.positiveWords.slice();\r\n  let negativeWords = this.state.negativeWords.slice();    \r\n  if(this.state.currentWord.id === selectedWord.id){\r\n    positiveWords.push(this.state.currentWord);\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true,\r\n      positiveWords,\r\n      negativeWords,\r\n      disabled: true\r\n    })\r\n  }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  }\r\n\r\n\r\ndontKnow = () =>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    flagState: true\r\n  })\r\n}\r\n\r\nvoiceWord = () =>{\r\n  speech.say(this.state.currentWord.name);\r\n} \r\n\r\nrender() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n          {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n            <Image src='training/russiantoenglish.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n            <Card.Header>Перевод</Card.Header>\r\n            <Card.Description>\r\n            <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n            </Card.Description>\r\n            </Card.Content>\r\n            </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n          {this.state.isCardVisible ?\r\n            <Container className=\"list-container\">\r\n            <Card className=\"training-card\">\r\n            <Label>\r\n            {this.state.currentWord.translation}\r\n            <span onClick={this.voiceWord} className=\"training-card__icon\">\r\n            <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n            </span>\r\n            </Label>\r\n            <Container className=\"list-inner-wrapper\">\r\n            <List className=\"training-list\">\r\n            {this.state.result[this.state.id].map((word, index) =>\r\n             <List.Item key={index} className=\"training-list-item\">\r\n             <List.Content>\r\n             <List.Header as='a'>\r\n             <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.name}</Button>\r\n             </List.Header>\r\n             </List.Content>\r\n             </List.Item>\r\n             )}\r\n            <List.Item className=\"training-list-item \">\r\n            <List.Content>\r\n            <List.Header as='a'>\r\n            <Button className=\"dont-know\" onClick={this.dontKnow} >Не знаю</Button>\r\n            </List.Header>\r\n            </List.Content>\r\n            </List.Item>              \r\n            </List>\r\n            {this.state.isImageVisible ?\r\n              <div className=\"training-right-wrapper\">\r\n              <div className=\"training-image-wrapper\">\r\n              <Image src={this.state.currentWord.image} className=\"training-image\">\r\n              </Image>                \r\n              </div>\r\n              {this.state.flagState ?\r\n                <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>: null\r\n              }                                     \r\n              </div>: null               \r\n            }\r\n            </Container>\r\n            </Card>\r\n            </Container> :\r\n            null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n           <Card className=\"card-training\" >\r\n           <Card.Content>\r\n           <Card.Header>Результаты</Card.Header>\r\n           <Divider/>\r\n           <Card.Description className=\"audio-list-container\"> \r\n           {  (this.state.negativeWords.length !== 0 ) ?\r\n            <List className=\"audio-list\">\r\n            {this.state.negativeWords.map((item, index) => \r\n              <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n              )}\r\n            </List>: \r\n            <Message>\r\n            <Message.Header>Поздравляем!</Message.Header>\r\n            <p>\r\n            Все задания выполнены правильно\r\n            </p>\r\n            </Message> \r\n          }\r\n        </Card.Description>\r\n    <Card.Description className=\"results-wrapper\">\r\n    <div className=\"positive-results-wrapper\"> \r\n    <div className=\"positive-results\">\r\n    {this.state.positiveWords.length}\r\n    </div>\r\n    <Label>Верно</Label>                    \r\n    </div>\r\n    <div className=\"negative-results-wrapper\"> \r\n    <div className=\"negative-results\">\r\n    {this.state.result.length - this.state.positiveWords.length}\r\n    </div> \r\n    <Label>Неверно</Label>                   \r\n    </div>\r\n    </Card.Description>\r\n    <Button.Group className=\"card-buttons-wrapper\">\r\n    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n    </Button.Group>\r\n    </Card.Content>\r\n    </Card>          \r\n    </Card.Group>          \r\n    : null\r\n  }\r\n  </div>\r\n  <footer></footer>\r\n  </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RussianToEnglish);","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button,Card,Image} from 'semantic-ui-react';\r\n\r\nclass Videos extends Component {\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      videos: [],\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      channelId: null,\r\n      image: '',\r\n      link: '',\r\n      visible: 8\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('/videos.json')\r\n        .then(res => {\r\n          const videos = res.data;\r\n          const name = videos[id].name;\r\n          const description = videos[id].description;\r\n          const channelId = videos[id].channelId;\r\n          const image = videos[id].image;\r\n          const link = videos[id].link;\r\n           this.setState({ \r\n            videos, \r\n            name, \r\n            description, \r\n            channelId, \r\n            image,\r\n            link });\r\n        })\r\n    }\r\n\r\n    cons = () =>{\r\n      console.log (this.state);\r\n    }\r\n\r\n    loadMore = () => {\r\n      this.setState((prev) => {\r\n        return {visible: prev.visible + 8};\r\n      });\r\n    }    \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Button onClick={this.cons} >console</Button>\r\n          <Card.Group itemsPerRow={4} className=\"videos-container\">\r\n            {this.state.videos.slice(0,this.state.visible).map((video,index) =>\r\n              <Card key={index}>\r\n                <Image src={video.image} />\r\n                <Card.Content className=\"video-wrapper\">\r\n                  <Card.Header>{video.name}</Card.Header>\r\n                  <Card.Description>{video.description}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra className=\"video-extra\">\r\n                  <Link to={{ pathname: `/videos/${video.id}`,  query: { video } }}>{video.name}</Link>\r\n                </Card.Content>\r\n              </Card> \r\n            )}                                                                           \r\n          </Card.Group>\r\n          {this.state.visible < this.state.videos.length &&\r\n            <div className=\"videos-load\">\r\n              <Button primary onClick={this.loadMore}>Load more</Button>\r\n            </div> \r\n          }         \r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n    );\r\n  } \r\n\r\n\r\n}\r\n\r\nexport default Videos;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass FillTheGaps extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        texts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isMenuVisible: true,\r\n      isCheckButtonVisible: false,\r\n      isResultVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      currentTempArray: [],\r\n      currentStringArray: [],\r\n      currentRandomWord: '',\r\n      currentFinalArray: [],\r\n      currentRandomArray: [],\r\n      currentOneArray: [],\r\n      activeInput: 0,\r\n      activeArray: [],\r\n      sortedRandomArray: [],\r\n      comparativeRandomArray: [],\r\n      fragmentArrayIndexes: [],\r\n      rightAnswers: 0      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.setMenuParams());\r\n      })\r\n  }\r\n\r\n  setMenuParams = () =>{\r\n    let options = [];\r\n    this.state.texts.map((item, i) =>\r\n                  options.push({ \r\n                      key: item.id, \r\n                      text: item.difficulty, \r\n                      value: item.difficulty \r\n                   }))\r\n    this.setState({\r\n      options\r\n    }, () => this.getUnique())\r\n  } \r\n\r\n  getUnique = () => {\r\n    let options = this.state.options.slice();\r\n    let comp = 'text';\r\n    const unique = options\r\n      .map(e => e[comp])\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n      .filter(e => options[e]).map(e => options[e]);\r\n    this.setState({ options })    \r\n  }  \r\n\r\n  selectValue = () => {\r\n    let categoryValue = this.state.value;\r\n    this.setState({\r\n      categoryValue\r\n    })\r\n  }\r\n\r\n  handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue() )         \r\n\r\n  startExercise = (id) =>{\r\n    let texts = this.state.texts.slice();\r\n    let title = texts[id].title;\r\n    let content = texts[id].content;\r\n    let image = texts[id].image\r\n    this.setState({\r\n      areTextsVisible: false,\r\n      isSingleTextVisible: true,\r\n      isMenuVisible: false,\r\n      title,\r\n      content,\r\n      image\r\n    }, () => this.builtArray())\r\n  }\r\n\r\n  backToTexts = () =>{\r\n    this.setState({\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isMenuVisible: true,\r\n  \t\tcontentArray: [],\r\n  \t\tcurrentTempArray: [],\r\n  \t\tcurrentStringArray: [],\r\n  \t\tcurrentRandomWord: '',\r\n  \t\tcurrentFinalArray: [],\r\n  \t\tcurrentRandomArray: [],\r\n  \t\tcurrentOneArray: [],\r\n  \t\tactiveInput: 0,\r\n  \t\tactiveArray: [],\r\n  \t\tsortedRandomArray: [],\r\n  \t\tcomparativeRandomArray: [],\r\n  \t\tfragmentArrayIndexes: []        \r\n\r\n    })\r\n  }\r\n\r\n  builtArray = () => {\r\n    let currentOneArray = [];\r\n    let activeTargetContent = this.state.content.slice();\r\n    let currentStringArray = activeTargetContent.split(\". \");\r\n    currentStringArray.pop();\r\n    let currentFullArray = [];\r\n    for (var i = 0; i < currentStringArray.length; i++) {\r\n    \tcurrentFullArray.push(currentStringArray[i].split(\" \"));\r\n    }\r\n    let currentWordArray = currentStringArray[0].split(\" \");\r\n    let currentRandomArray = [];\r\n    let currentRandomIndexes = [];\r\n    for (var i = 0; i < currentFullArray.length; i++) {\r\n    \tlet j = Math.floor(Math.random()*currentFullArray[i].length);\r\n    \tcurrentRandomArray.push(currentFullArray[i][j]);\r\n    \tcurrentRandomIndexes.push(j);\r\n    }\r\n    let random = currentWordArray[Math.floor(Math.random()*currentWordArray.length)];\r\n    let currentFinalArray = [];\r\n  \r\n    for (var i = 0; i < currentFullArray.length; i++) {\r\n    \tlet curArr = currentFullArray[i];\r\n      \tfor (var j = 0; j < curArr.length; j++) {\r\n          currentOneArray.push(curArr[j]);\r\n\t      \tif (j !== currentRandomIndexes[i] ) {\r\n\t      \t\tcurrentFinalArray.push(<span className=\"fragment-span\">{curArr[j]}</span>)\r\n\t      \t}\r\n\t      \telse {\r\n\t      \t\tcurrentFinalArray.push(<span onClick={this.resetValue} className=\"fragment-input\"></span>)\r\n\t      \t}\r\n      \t}\r\n      \tcurrentFinalArray.push(<span className=\"fragment-dot\">.</span>);\r\n    }\r\n\r\n    this.setState({\r\n    \tcurrentStringArray,\r\n      currentWordArray,\r\n      currentRandomWord: random,\r\n      currentFinalArray,\r\n      currentRandomIndexes,\r\n      currentRandomArray,\r\n      currentFullArray,\r\n      currentOneArray\r\n    }, () => this.shuffleArray())     \r\n  }\r\n\r\n  setValue = (e) => {\r\n    let activeInput = this.state.activeInput;\r\n    let activeArray = [];\r\n    let currentFullArray = this.state.currentFullArray.slice();\r\n    let currentFinalArray = this.state.currentFinalArray.slice();\r\n    let currentRandomArray = this.state.currentRandomArray.slice();\r\n    let currentRandomIndexes = this.state.currentRandomIndexes.slice();\r\n    let activeTargetTitle = e.target.textContent;\r\n    let fragmentArray = [];\r\n    let fragmentArrayIndexes = [];\r\n    let fragmentDescription = document.getElementsByClassName('fragment-description')[0].children;\r\n    for (var i = 0; i < fragmentDescription.length; i++) {\r\n    \tif(fragmentDescription[i].className == \"fragment-input\"){\r\n    \t\tfragmentArrayIndexes.push(i);\r\n    \t\tfragmentArray.push(fragmentDescription[i]);\r\n    \t}\r\n    }\r\n    for (var i = 0; i < fragmentArrayIndexes.length; i++) {\r\n    \tactiveArray.push(i);\r\n    }\r\n    for (var i = 0; i < fragmentDescription.length; i++) {\r\n    \tif( (fragmentDescription[i].className == \"fragment-input\") && (i == fragmentArrayIndexes[activeInput])){\r\n    \t\tfragmentDescription[i].textContent = activeTargetTitle;\r\n    \t}\r\n    }\r\n\t  fragmentArrayIndexes.splice(activeInput, 1);\r\n    let comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    let sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    let target = e.target;\r\n    comparativeRandomArray.push(target.textContent);\r\n    let indexTarget = 0;\r\n    while ( (target = target.previousElementSibling) ) {\r\n      indexTarget++\r\n    }\r\n\r\n    sortedRandomArray.splice(indexTarget, 1);\r\n    if (sortedRandomArray.length === 0) {\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: true\r\n    \t})\r\n    }\r\n\r\n    activeInput++;\r\n    this.setState({\r\n\t\t\tactiveInput,\r\n\t\t\tactiveArray,\r\n\t\t\tfragmentArrayIndexes,\r\n\t\t\tcurrentRandomArray,\r\n\t\t\tcomparativeRandomArray,\r\n\t\t\tsortedRandomArray\r\n    })    \r\n  }\r\n\r\n\tshuffleArray = () => {\r\n\t\tlet array = this.state.currentRandomArray.slice();\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t    this.setState({\r\n        \tsortedRandomArray: array\t    \t\r\n\t    })\r\n\t}\r\n\r\n    resetValue = (e) =>{\r\n\t    let sortedRandomArray = this.state.sortedRandomArray.slice(); \r\n      let element = e.target;\r\n      if (e.target.textContent !== \"\") {\r\n    \t  sortedRandomArray.push(e.target.textContent);\r\n    \t  element.innerText = \"\";\r\n\t      this.setState({\r\n\t      \tsortedRandomArray: sortedRandomArray\r\n\t      })\r\n        let indexTarget = 0;\r\n        while ( (element = element.previousElementSibling) ) {\r\n          indexTarget++\r\n        }\r\n      }\r\n    }\r\n\r\n    submitText = (e) =>{\r\n    \tlet comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    \tlet currentSortedArray = this.state.currentRandomArray.slice();\r\n    \tlet sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    \tlet count = 0;\r\n    \tfor (var i = 0; i < currentSortedArray.length; i++) {\r\n    \t\tif (currentSortedArray[i] === comparativeRandomArray[i]) {\r\n    \t\t\tcount++;\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\tsortedRandomArray.push(comparativeRandomArray[i])\r\n    \t\t}\r\n    \t\t\r\n    \t}\r\n    \tlet rightAnswers = count;\r\n\r\n      let exercise = {};\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = count;\r\n      this.props.actions.updateFillTheGaps(exercise);\r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(count);\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: false,\r\n    \t\tisResultVisible: true,\r\n    \t\tisSingleTextVisible: false,\r\n    \t\trightAnswers,\r\n    \t\tsortedRandomArray\r\n    \t})\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible && this.state.texts.length ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n            {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.startExercise.bind(this, item.id)}>Открыть</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                \t<div className=\"fragments-close\">\r\n                \t\t<span onClick={this.backToTexts} title = \"Закончить выполнение\">\r\n                \t\t\t<Icon name='close' size='big' />\r\n                \t\t</span>\r\n                \t</div>\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t{this.state.currentFinalArray}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n             \t<div className=\"fragment-variants\">\r\n            \t\t{this.state.sortedRandomArray.map((item, index) =>\r\n            \t\t\t<span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n            \t\t)}\r\n\t            \t{this.state.isCheckButtonVisible ? \r\n\t            \t\t<Button onClick={this.submitText} >Проверить</Button> :null\r\n\t            \t}             \t\t\r\n            \t</div>\r\n                </Card>:null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t<h2>Вы расставили правильно {this.state.rightAnswers} из {this.state.currentRandomArray.length} слов </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary ><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FillTheGaps);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RecreateText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      categoryValue: ''\r\n\t\t}\r\n\t}\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.makeTextsVisible());\r\n      })\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '3',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();   \r\n  }   \r\n\r\n\r\n  readMore = (id) =>{\r\n    let texts = this.state.texts.slice();\r\n\r\n    let title = texts[id].title;\r\n    let content = texts[id].content;\r\n    let image = texts[id].image\r\n    this.setState({\r\n      areTextsVisible: false,\r\n      isSingleTextVisible: true,\r\n      isMenuVisible: false,\r\n      title,\r\n      content,\r\n      image\r\n    })      \r\n  }\r\n\r\n  makeTextsVisible = () =>{\r\n    this.setState({\r\n      areTextsVisible: true        \r\n    }, () => this.createMenuItems());\r\n  }\r\n\r\n  backToTexts = () =>{\r\n    this.setState({\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isMenuVisible: true,\r\n      contentArray: [],\r\n      currentTempArray: [],\r\n      currentStringArray: [],\r\n      currentRandomWord: '',\r\n      currentFinalArray: [],\r\n      currentRandomArray: [],\r\n      currentOneArray: [],\r\n      activeInput: 0,\r\n      activeArray: [],\r\n      sortedRandomArray: [],\r\n      comparativeRandomArray: [],\r\n      fragmentArrayIndexes: [],\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    })\r\n  }\r\n\r\n  splitText = () =>{\r\n    let wrongIndexes = [];\r\n    let content = this.state.content;\r\n    let currentStringArray = content.split(\". \");\r\n    currentStringArray.pop();\r\n    let reservedSentences = content.split(\". \");\r\n    reservedSentences.pop();   \r\n    for (var i = 0; i < currentStringArray.length; i++) {\r\n         wrongIndexes.push(\"recreate-text-right\");\r\n    }   \r\n    for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n    }             \r\n    this.setState({\r\n      isSingleTextVisible: false,\r\n      splittedSentenceVisible: true,\r\n      spllittedSentences: currentStringArray,\r\n      reservedSentences,\r\n      wrongIndexes\r\n\r\n    }, () => this.startCountDown())\r\n  }  \r\n\r\n  handleChange = (event) => {\r\n   this.setState({\r\n     minutes: event.target.value\r\n   })\r\n  }  \r\n\r\n  tick = () => {\r\n      var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n      var seconds = this.state.secondsRemaining - (minutes * 60);\r\n      this.setState({\r\n        minutes,\r\n        seconds\r\n      })\r\n      if (seconds < 10) {\r\n        this.setState({\r\n          seconds: \"0\" + this.state.seconds,\r\n        })\r\n      }\r\n      if (minutes < 10) {\r\n        this.setState({\r\n          value: \"0\" + minutes,\r\n         })\r\n      }\r\n      if (minutes === 0 & seconds === 0) {\r\n        let time = this.state.totalSecondsSpent;\r\n        let minutesSpent = Math.floor(time / 60);\r\n        let secondsSpent = this.state.totalSecondsSpent - (minutes * 60);\r\n        clearInterval(this.state.intervalHandle);\r\n        this.timeIsOut();\r\n        this.setState({\r\n          minutesSpent,\r\n          secondsSpent\r\n        })\r\n\r\n      }\r\n      this.state.secondsRemaining--;\r\n      this.state.totalSecondsSpent++; \r\n    }\r\n\r\n  startCountDown = () => {\r\n      this.state.intervalHandle = setInterval(this.tick, 1000);\r\n      let time = this.state.minutes;\r\n      this.state.secondsRemaining = time * 60;\r\n  }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.spllittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.spllittedSentences[index];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = this.state.spllittedSentences.filter(item => item !== this.draggedItem);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ spllittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.spllittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n      }\r\n    }\r\n    if(wrongCount==0){\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =()=>{\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n      let exercise = {};\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.rightAnswers;\r\n      this.props.actions.updateRecreateTxt(exercise);\r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(this.state.rightAnswers);      \r\n      clearInterval(this.state.intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent       \r\n      })\r\n  }\r\n\r\n    createMenuItems = () =>{\r\n      let options = [];\r\n      this.state.texts.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    menuChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.menuChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null\r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.splitText}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.spllittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <h2>Время вышло</h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecreateText);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport Speech from 'speak-tts';\r\nimport SpeechRecognition from 'react-speech-recognition';\r\nimport { Howl } from \"howler\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass RecreateAudioText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t      texts: [],\r\n\t      contentArray: [],\r\n\t      areTextsVisible: false,\r\n\t      isMenuVisible: false,\r\n\t      isSingleTextVisible: false,\r\n        options: [],\r\n        categoryValue: '',\r\n\t      isResultVisible: false,\r\n\t      isResultWrong: false,\r\n        title: '',\r\n\t      content: '',\r\n\t      image: null,\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '5',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('./audiotexts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        this.setState({ \r\n          texts,\r\n          areTextsVisible: true         \r\n        }, () => this.createMenuItems());\r\n      })        \r\n  }   \r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n    createTrack = (id) => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) => {\r\n          let currentTrack = new Howl({\r\n            src: \"tracks/\" + res.data.slice(id - 1, id),\r\n            html5: true,\r\n            volume: 0.5 / 10\r\n          });\r\n          this.setState({\r\n            currentTrack,\r\n            audio: res.data\r\n          }) \r\n        });    \r\n    }\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id - 1].title;\r\n      let content = texts[id - 1].content;\r\n      let image = texts[id - 1].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.createTrack(id))       \r\n    }\r\n\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        categoryValue: '',\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0,\r\n        value: null        \r\n      })\r\n    }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,    \r\n      }) \r\n  }\r\n\r\n  playText = () => {\r\n    let playing = !this.state.playing;\r\n    let currentTrack = this.state.currentTrack;\r\n    if (playing) {\r\n      currentTrack.play();\r\n    } else {\r\n      currentTrack.pause();\r\n    }\r\n    this.setState({\r\n      playing,\r\n      currentTrack\r\n    })\r\n  }\r\n\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        splittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n          let intervalHandle = this.state.intervalHandle;\r\n          clearInterval(intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent,\r\n            intervalHandle\r\n          })\r\n        }\r\n        this.setState({\r\n          secondsRemaining: this.state.secondsRemaining - 1,\r\n          totalSecondsSpent: this.state.totalSecondsSpent + 1\r\n        })\r\n \r\n    }\r\n    startCountDown = () => {\r\n        let intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.setState({\r\n          intervalHandle,\r\n          secondsRemaining: time * 60\r\n        })\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.splittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.splittedSentences[index];\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n    let items = this.state.splittedSentences.filter(item => item !== this.draggedItem);\r\n    items.splice(index, 0, this.draggedItem);\r\n    this.setState({ splittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.splittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let rightAnswers = 0;\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n        rightAnswers++;\r\n      }\r\n    }\r\n    if (wrongCount == 0) {\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes,\r\n      rightAnswers\r\n    })\r\n  }\r\n\r\n\r\n  timeIsOut =() => {\r\n    this.checkSentences();\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n    let intervalHandle = this.state.intervalHandle;\r\n    let time = this.state.totalSecondsSpent;\r\n    let minutesSpent = Math.floor(time / 60);\r\n    let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n    let exercise = {};\r\n    exercise.id = uuidv4();\r\n    exercise.date = new Date();\r\n    exercise.score = this.state.rightAnswers;\r\n    this.props.actions.updateRecreateAudioTxt(exercise);\r\n    this.props.actions.updateExerciseComplete(1);\r\n    this.props.actions.updateTotalScore(this.state.rightAnswers);\r\n    clearInterval(intervalHandle);\r\n    this.setState({\r\n      isResultVisible: true,\r\n      splittedSentenceVisible: false,\r\n      minutesSpent,\r\n      secondsSpent,\r\n      intervalHandle        \r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }         \r\n              {(this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text display-none\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    {this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"pause\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    {!this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"play\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    <div className=\"buttons-wrapper\">\r\n\t                    <Button primary onClick={this.splitText}>Я прослушал</Button>\r\n           \t\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.splittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <div>\r\n                        <h2>Время вышло</h2>\r\n                        <h2>Правильно расставлено {this.state.rightAnswers} из {this.state.splittedSentences.length} предложений</h2> \r\n                      </div>                      \r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecreateAudioText);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Input, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass InsertSpaces extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      inputContent: '',\r\n      textContent: '',\r\n      newContent: '',\r\n      image: null,\r\n      options: [],\r\n      textsLoaded: false,\r\n      categoryValue: ''\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n      }) \r\n  }\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let inputContent = texts[id].content;\r\n      inputContent = inputContent.replace(/\\s/g, '');\r\n      let image = texts[id].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image,\r\n        inputContent\r\n      })      \r\n    }\r\n\r\n\r\n  showFinal = () =>{\r\n    let val;\r\n    this.setState({\r\n      isResultVisible: true,\r\n      isTaskStarted: false   \r\n    })\r\n  }\r\n\r\nsetCaretPosition = (ctrl, pos) => {\r\n  if (ctrl.setSelectionRange) {\r\n    ctrl.focus();\r\n    ctrl.setSelectionRange(pos, pos);\r\n\r\n  } else if (ctrl.createTextRange) {\r\n    var range = ctrl.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n}\r\n\r\n  updateValue = (event) =>{\r\n  \tlet newContent = this.state.newContent;\r\n  \tlet target = event.target;\r\n    let str = event.target.value;\r\n    let indexOfSpace = event.target.value.indexOf(\" \") + 1;\r\n    let word = event.target.value.substr(0, indexOfSpace - 1);\r\n    let newstr = event.target.value.substring(indexOfSpace);\r\n    newContent = newContent + (word + ' ');\r\n      this.setState({\r\n      \tnewContent,\r\n        inputContent: newstr\r\n      }, () => this.setCaretPosition(target, 0));\r\n  }\r\n\r\n  startExercise = () => {\r\n    this.setState({\r\n      isTaskStarted: true,\r\n      isSingleTextVisible: false\r\n    })\r\n  }\r\n\r\n  createMenuItems = () =>{\r\n    let options = [];\r\n    this.state.texts.map((item, i) =>\r\n                  options.push({ \r\n                      key: item.id, \r\n                      text: item.difficulty, \r\n                      value: item.difficulty \r\n                   }))\r\n    this.setState({\r\n      options\r\n    }, () => this.getUnique())\r\n  } \r\n\r\n  getUnique = () => {\r\n    var arr = this.state.options;\r\n    var comp = 'text';\r\n    const unique = arr\r\n      .map(e => e[comp])\r\n      .map((e, i, final) => final.indexOf(e) === i && i)\r\n      .filter(e => arr[e]).map(e => arr[e]);\r\n    this.setState({\r\n      options: unique\r\n    })    \r\n  }  \r\n\r\n  selectCategory = () =>{\r\n    var categoryValue = this.state.value;\r\n    this.setState({\r\n      categoryValue\r\n    })\r\n  }\r\n\r\n  handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.startExercise}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }             \r\n             {this.state.isTaskStarted ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <p className=\"single-text-card-description p-wrap fragment-description recreate-text inserted-text\">\r\n                      { this.state.newContent}\r\n                    </p>\r\n                    <Input className=\"insert-spaces-input\" value={this.state.inputContent} onChange={this.updateValue} />\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.showFinal}>Проверить</Button>\r\n                      </Button.Group>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <div className=\"recreate-results\">\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Исходный текст</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.content}</p>\r\n                      </div>\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Результат</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.newContent}</p>\r\n                      </div>                      \r\n                    </div>                                     \r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }    \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InsertSpaces);","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image, Icon, Input} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass SelectedVideo extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.state = {\r\n      videos: [],\r\n      loaded: false,\r\n      items: [],\r\n      currentComment: '',\r\n      likes: 0,\r\n      dislikes: 0,\r\n      maxResults: 120,\r\n      visible: 20,\r\n      comments: [\r\n        {\r\n          author: 'new2341',\r\n          comment: 'Just a typical comment'\r\n        },\r\n        {\r\n          author: 'cauthor',\r\n          comment: 'nice! liked it'\r\n        }\r\n      ]\r\n    }\r\n\t}\r\n\r\n  componentDidMount(){\r\n    let selectedVideo;\r\n    axios.get('/videos.json')\r\n      .then(res => {\r\n        let channels = res.data;\r\n        selectedVideo = channels.find(x => x.id == this.props.match.params.id);\r\n        this.setState({ selectedVideo }, () => this.getItems())\r\n    })\r\n  }\r\n  \r\n  getItems = () => {\r\n    let API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    let url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      this.state.selectedVideo.channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      this.state.maxResults; \r\n      axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos,\r\n            items: videos.items\r\n        })\r\n      })                 \r\n    }\r\n\r\n  updateSearch = (event) =>{\r\n    this.setState({currentComment: event.target.value.substr(0,200)});\r\n  }   \r\n\r\n  addComment = () =>{\r\n    let comments = this.state.comments.slice();\r\n    let currentComment = this.state.currentComment;\r\n    let temp = {};\r\n    temp['author'] = 'blabla';\r\n    temp['comment'] = currentComment;\r\n    comments.unshift(temp);\r\n    this.setState({\r\n      comments: comments,\r\n      currentComment: ''\r\n    })\r\n  }\r\n\r\n  thumbsUp = () => {\r\n    let count = this.state.likes;\r\n    count++;\r\n    this.setState({\r\n      likes: count\r\n    })\r\n  }\r\n\r\n  thumbsDown = () => {\r\n    let count = this.state.dislikes;\r\n    count++;\r\n    this.setState({\r\n      dislikes: count\r\n    })\r\n  }\r\n\r\n  loadMore = () => {\r\n    this.setState((prev) => {\r\n      return {visible: prev.visible + 20};\r\n    });\r\n  }      \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)  ?\r\n          <>\r\n            <Card.Group itemsPerRow = {4} className=\"single-video-wrapper\">\r\n              {this.state.items.slice(0, this.state.visible).map((item, index) => \r\n                <Card key={index} className=\"video-item\">\r\n                  <Modal className=\"video-modal\" closeIcon trigger={<div className=\"video-modal__overlay\"></div>}>\r\n                    <Embed autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                    <Modal.Header className=\"video-header-wrapper\">\r\n                      <div className=\"video-header\">{item.snippet.title}</div> \r\n                      <div className=\"video-likes\">\r\n                        <div className=\"video-likes-item first\">\r\n                          <span className=\"video-likes-icon\" onClick={this.thumbsUp}>\r\n                            <Icon name='thumbs up outline' size='large' />\r\n                          </span>\r\n                          <span>{this.state.likes}</span>\r\n                        </div>\r\n                        <div className=\"video-likes-item second\">\r\n                          <span className=\"video-likes-icon\" onClick={this.thumbsDown}>\r\n                            <Icon name='thumbs down outline' size='large' />\r\n                          </span>\r\n                          <span>{this.state.dislikes}</span>\r\n                        </div>\r\n                      </div> \r\n                    </Modal.Header>\r\n                    <Modal.Content>\r\n                      <Modal.Description>\r\n                        <p>{item.snippet.description}</p>\r\n                      </Modal.Description>\r\n                      <div className=\"comment-section\">\r\n                        <div className=\"comment-section-input\">\r\n                          <Input placeholder='type...' value={this.state.currentComment} onChange={this.updateSearch} /><Button onClick={this.addComment}>Отправить</Button>\r\n                        </div>\r\n                        <div className=\"comment-section-comments\">\r\n                            {this.state.comments.map((item, index) =>\r\n                              <div className=\"single-comment\" key={index}>\r\n                                <h4>{item.author}</h4>\r\n                                <p>{item.comment}</p>                              \r\n                              </div>\r\n                             )}\r\n                        </div>\r\n                      </div>\r\n                    </Modal.Content>\r\n                  </Modal>              \r\n                  <div className=\"single-video-wrapper-image\">\r\n                    <h4>{item.snippet.title}</h4>                 \r\n                    <Image src={item.snippet.thumbnails.high.url} />\r\n                  </div>\r\n                </Card> \r\n                )}\r\n            </Card.Group>\r\n            <div className=\"videos-load\">\r\n              <Button primary onClick = {this.loadMore}>Load more</Button>\r\n            </div>\r\n          </>\r\n          : null\r\n        }\r\n       </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default SelectedVideo;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass TextsList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      textsLoaded: false,\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content))\r\n          this.setState({ \r\n            texts: texts,\r\n            contentArray: contentArray\r\n          }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n        })\r\n    }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )         \r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {!this.state.isSingleTextVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }\r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card text-item\">\r\n                  <Card.Content>\r\n                    <Image src={this.state.image} />\r\n                    <Card.Header>{this.state.title}</Card.Header>\r\n                    <Card.Description className=\"single-text-card-description p-wrap\">\r\n                      { /*this.state.content.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase() */ this.state.content}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n                  <Button onClick={this.backToTexts} >Вернуться</Button>\r\n                </Card>:null\r\n              }          \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default TextsList;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    constructMenu = () =>{\r\n      let options = [];\r\n      this.state.words.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n      })    \r\n    }  \r\n\r\n    setValue = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.setValue() )  \r\n\r\n    readMore = (id) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let currentColor = colors[Math.floor(Math.random()*colors.length)];\r\n      let activeTargetTitle = this.state.words.find(x => x.id === id).name;\r\n\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(false);          \r\n      \t} \r\n      }\r\n\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords,\r\n        currentColor,\r\n        arrayOfButtons,\r\n        iconsArray,\r\n        disabled      \t\r\n      })\r\n    }\r\n\r\n\r\n    addToList = (id) =>{\r\n      let addedItems = this.state.addedItems.slice();\r\n      let currentWords = this.state.currentWords.slice();\r\n      let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let iconsArray = this.state.iconsArray.slice();\r\n      let selected = currentWords.find(x => x.id === id);      \r\n      arrayOfButtons[id] = \"Добавлено !\";\r\n      iconsArray[id] = false;\r\n      disabled[id] = \"disabled\";\r\n      addedItems.push(selected);\r\n      this.setState({\r\n      \taddedItems,\r\n      \tarrayOfButtons,\r\n      \ticonsArray,\r\n      \tdisabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      let sortedByNameUp = this.state.sortedByNameUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByNameUp: !sortedByNameUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByTranslationUp: !this.state.sortedByTranslationUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n   \tlet addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    arrayOfButtons[id] = \"Добавить\";    \r\n    iconsArray[id] = true;\r\n    disabled[id] = false;\r\n \t  addedItems.splice(addedItems.findIndex(function(item){\r\n        return item.id === id;\r\n    }), 1);\r\n    this.setState({ addedItems, disabled, iconsArray, arrayOfButtons });\r\n   }\r\n\r\n   deleteAll = () => {\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n    let addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    addedItems = [];\r\n    for (var i = 0; i < disabled.length; i++) {\r\n      disabled[i] = false;\r\n      arrayOfButtons[i] = \"Добавить\";\r\n      iconsArray[i] = true;\r\n    }\r\n    this.setState({ addedItems, arrayOfButtons, iconsArray, disabled  })    \r\n   }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"#3281F0\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      contentLoaded: false      \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n          .then(axios.spread((firstResponse, secondResponse) => { \r\n          let words = firstResponse.data;\r\n          let allWords = secondResponse.data;\r\n          let contentArray = [];\r\n          this.setState({\r\n            allWords,\r\n            words,\r\n            contentArray,\r\n            contentLoaded: true\r\n          }, () => this.constructMenu());\r\n       }))\r\n   }\r\n\t\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.contentLoaded ?\r\n            <div className=\"texts-wrapper\">\r\n              <Menu className=\"texts-menu decks-menu\" vertical>\r\n                {this.state.isDropdownVisible ? \r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item> : null\r\n                }\r\n                <Menu.Item className=\"no-top-padding added-title\" style = {{ backgroundColor: this.state.currentColor}} >\r\n                  {this.state.addedItems.length ? \"Добавленные\" : \"Добавленных пока нет\"}\r\n                </Menu.Item>\r\n                {(this.state.addedItems.length) ? \r\n                <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                  <ul className=\"decks-added-wrapper\">\r\n                    {this.state.addedItems.map((item,index)=> \r\n                      <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                        <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem.bind(this, item.id)} ><Icon name='trash alternate' /></span></li>\r\n                    )}\r\n                  </ul>\r\n                </Menu.Item> : null }\r\n                { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n                <Menu.Item className=\"decks-button-wrapper\" >\r\n                   <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Изучить <Icon name='book' className=\"nav-icon-left\" /> </Button>\r\n                   <Button onClick={this.deleteAll} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Удалить <Icon name='trash alternate' className=\"nav-icon-left\" /> </Button>\r\n                </Menu.Item> : null\r\n                }           \r\n              </Menu>           \r\n                {(this.state.words.length && this.state.areTextsVisible) ? \r\n                <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n                  {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                    <Card key={index} className=\"decks-single-card\">\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"decks-description\">\r\n                              <h2>{item.name}</h2>\r\n                              <h3>{item.number} слов</h3>\r\n                              <Button onClick={this.readMore.bind(this, item.id)} primary className=\"decks-button\" >Открыть</Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  )}\r\n                </Card.Group> : null\r\n               }\r\n               {this.state.isSingleTextVisible ?\r\n                <div className=\"decks-outer-wrapper\">\r\n                <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                  <Menu.Item name='byName'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                      по имени \r\n                      {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item name='byTranslation'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                      по переводу \r\n                      {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item style={{float: \"right\"}} name='close'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.setStateOnStart} title=\"Назад\">\r\n                      <Icon name='window close outline' className=\"nav-icon-left\" size=\"\" /> \r\n                    </Button>\r\n                  </Menu.Item>  \r\n                </Menu>\r\n                  <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                    {this.state.currentWords.map((item, index) => \r\n                      <Card key={index}>\r\n                        <Card.Content>\r\n                          <div className=\"texts-image-wrapper decks-image\">\r\n                            <Image src={item.image} />\r\n                            <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                                <h3>{item.name}</h3>\r\n                                <h4>{item.translation}</h4>\r\n                                <Button className=\"decks-button-add\" onClick={this.addToList.bind(this, item.id)} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                  {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                  } \r\n                                  {this.state.arrayOfButtons[index]}\r\n                                </Button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Card>\r\n                     )}\r\n                  </Card.Group> \r\n                </div> : null}       \r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport {  List, Icon, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      email: \"user1233\",\r\n      password: 69691231,\r\n      colorValue: \"#3281F0\",\r\n      colorOptions: [{ key: 1, value: \"#3281F0\", text: \"#3281F0\"}, { key: 2, value: \"red\", text: \"red\"}]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      \r\n  }   \r\n\r\n  changeColor = (e, { value }) => {\r\n    console.log(e);\r\n    this.setState({ colorValue: value })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"settings-wrapper\">\r\n            <div className=\"settings-container\">\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Цветовая схема</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Громкость звука</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input, Dropdown, TextArea, Form, Checkbox ,Icon, Rating, List } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      books: [],\r\n      allBoooks: [],\r\n      options: [],\r\n      currentGenre: '',\r\n      currentLength: '',\r\n      value: null,\r\n      rating: '',\r\n      size: '',      \r\n      areBooksVisible: true,\r\n      isMenuVisible: true,\r\n      isPreviewVisible: false,\r\n      isSingleBookVisible: false,\r\n      isBookNavPanelVisible: false,\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n      description: null,\r\n      image: null,\r\n      currentBook: '',\r\n      currentPage: '',\r\n      currentPageIndex: 0,\r\n      currentArrayBooks: [],\r\n      currentIndexArray: [],\r\n      bookHTML: '',\r\n      parsedBook: null,\r\n      bookPages: [],\r\n      bookValue: null,\r\n      bookVal: '',\r\n      currentComment: '',\r\n      currentName: '',\r\n      currentEmail: '',\r\n      likes: 0,\r\n      errors: {},\r\n      checkedItems: new Map(),\r\n      checked: false,\r\n      audiobooks: [],\r\n      currentAudio: null,\r\n      newAudio: null,\r\n      playState: false,\r\n      currentAudioId: 0,\r\n      scrollForwardState: true,\r\n      scrollBackwardState: false,\r\n      currentVolume: 50,\r\n      currentRange: 0,\r\n      currentDuration: null,\r\n      minutes: 0,\r\n      hours: 0,\r\n      seconds: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/books.json')\r\n      .then(res => {\r\n        let books = res.data;\r\n        this.setState({ \r\n          books, allBooks: res.data\r\n        }, () => this.createMenu() );\r\n      })\r\n    }\r\n\r\n    createMenu = () =>{\r\n\r\n      let options = [], age = [], genres = {}, sizes = [], ageTemp = [], sizesTemp = {};\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].genre;\r\n        for (var j = 0; j < item.length; j++) {\r\n          if (!genres.hasOwnProperty(item[j])) {\r\n            genres[item[j]] = [];\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          } else {\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const item in genres) {\r\n        options.push({\r\n          key: item,\r\n          text: item,\r\n          value: genres[item]\r\n        })\r\n      }\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        if (ageTemp.indexOf(this.state.books[i].age_restriction) === -1) {\r\n          ageTemp.push(this.state.books[i].age_restriction);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < ageTemp.length; i++) {\r\n        age.push({\r\n          key: ageTemp[i],\r\n          text: ageTemp[i],\r\n          value: ageTemp[i]\r\n        })\r\n      }\r\n\r\n      sizesTemp[\"Менее 10000\"] = [];\r\n      sizesTemp[\"От 10000 до 50000\"] = [];\r\n      sizesTemp[\"Более 50000\"] = [];\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].length;\r\n        if (item <= 10000) {\r\n          sizesTemp[\"Менее 10000\"].push(this.state.books[i].id);\r\n        } else if(item > 10000 && item < 50000) {\r\n          sizesTemp[\"От 10000 до 50000\"].push(this.state.books[i].id);\r\n        } else {\r\n          sizesTemp[\"Более 50000\"].push(this.state.books[i].id);\r\n        }\r\n      }\r\n\r\n      for (const item in sizesTemp) {\r\n        sizes.push({\r\n          key: item,\r\n          text: item,\r\n          value: sizesTemp[item]\r\n        })\r\n      }\r\n\r\n      console.log(sizes);\r\n\r\n      this.setState({\r\n        options, age, sizes\r\n      })\r\n    } \r\n/*\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      console.log(arr);\r\n      var comp = 'text';\r\n      const options = arr\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      console.log(options);    \r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n*/\r\n    selectValue = () =>{\r\n      var bookVal = this.state.bookValue;\r\n      this.setState({\r\n        bookVal\r\n      })  \r\n    }\r\n\r\n\r\n    handleGenreChange = (e, { value }) => {\r\n      this.setState({ currentGenre: value })\r\n    }        \r\n\r\n    handleRatingChange = (e, { value }) => {\r\n      this.setState({ rating: value })\r\n    }  \r\n\r\n    handleLengthChange = (e, { value }) => {\r\n      this.setState({ currentLength: value })\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    } \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu></TopMenu>\r\n        <div className=\"texts-wrapper\">\r\n        {this.state.isMenuVisible ?\r\n          <Menu className=\"texts-menu\" vertical>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите жанр'\r\n                fluid\r\n                value={this.state.currentGenre} \r\n                key={this.state.options.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleGenreChange}\r\n                options={this.state.options} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите размер'\r\n                fluid\r\n                value={this.state.currentLength} \r\n                //key={this.state.length.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleLengthChange}\r\n                options={this.state.sizes} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите рейтинг'\r\n                fluid\r\n                value={this.state.rating} \r\n                //key={this.state.age.key}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleRatingChange}\r\n                options={this.state.age} \r\n              />\r\n            </Menu.Item>                        \r\n          </Menu>:null\r\n        }\r\n            {(this.state.books.length && this.state.areBooksVisible) ? \r\n            <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n            {this.state.books.map((item, index) => ( \r\n              (this.state.currentGenre === 'all'|| this.state.currentGenre === '' || this.state.currentGenre.indexOf(item.id) !== -1) && \r\n              (this.state.rating === 'all'|| this.state.rating === '' || this.state.rating === item.age_restriction) &&\r\n              (this.state.currentLength === 'all' || this.state.currentLength === '' || this.state.currentLength.indexOf(item.id) !== -1)) &&\r\n              <Card key={index} className=\"single-book\">\r\n                <Card.Content>\r\n                  <div className=\"texts-image-wrapper books-image-wrapper\">\r\n                    <Image src={item.image} />\r\n                  </div>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-author\">{item.author}</span></Card.Header>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-title\">{item.title}</span> {/*<span className=\"books-genre\">{item.genre.map((genre, ind) => <span>{`#${genre}`}</span>)}</span>*/}</Card.Header>\r\n                  <div className=\"books-information\">\r\n                    <div className=\"books-views\">\r\n                      <span><Icon name='eye' size='large' /> </span>\r\n                      <span>{item.views}</span>\r\n                    </div>\r\n                    <div className=\"books-favourites\">\r\n                      <span><Icon name='heart' size='' /></span> \r\n                      <span>{item.likes}</span>\r\n                    </div>\r\n                    <Rating icon='star' defaultRating={item.rating} className = \"books-rating\" maxRating={5} disabled/>\r\n                  </div>\r\n                  <Card.Description>\r\n                    {item.content.substr(0,250) + ' ...'}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button primary>\r\n                  <Link className=\"training-link books-link\"  to={{ pathname: `/books/${item.id}`,  query: { item } }}>Читать</Link>\r\n                  </Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n           }\r\n        </div>\r\n      </div>\r\n    <footer></footer>\r\n    </Fragment>\r\n\t );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.booksReducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Materials extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/video.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/videos\">Видео</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card> \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/words.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/decks\">Наборы слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/texts.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/texts\">Обучающие тексты</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>             \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/books.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/books\">Книги</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n                                                                                                                                                             \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Materials;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Checkbox,Icon, Form, Divider, Label } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport ReactDOM from 'react-dom';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Tests extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      categoryArray: [],\r\n      value: null,\r\n      areTestsVisible: true,\r\n      isSingleTestVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      value: '',\r\n      currentValue: '',\r\n      currentTest: [],\r\n      activeTest: null,\r\n      curIndexTest: 0,\r\n      curIndexCheckbox: 0,\r\n      correctResults: [],\r\n      correctAnswers: [],\r\n      incorrectAnswers: [],\r\n      isMenuVisible: true,\r\n      isTooltipVisible: false,\r\n      currentColor: null\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/tests.json')\r\n        .then(res => {\r\n          let tests = res.data;\r\n          this.setState({ \r\n            tests: tests\r\n          }, () => this.getMenuParams());\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (prevState.currentTest !== this.state.currentTest) {\r\n        \r\n      }\r\n    }\r\n\r\n    getMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.tests.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.title, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n    testChange = (e) =>{\r\n      let parentid = e.target.getAttribute(\"parentid\");   \r\n      let id = e.target.getAttribute(\"id\");\r\n      let currentTest = this.state.currentTest.slice();\r\n      let currentState = currentTest[parentid][id];\r\n      const arr = new Array(3).fill(false);\r\n      arr[id] = true;\r\n      currentTest[parentid] = arr;\r\n      this.setState({\r\n        currentTest\r\n      })\r\n    }\r\n\r\n\r\n    selectTest = (testId) =>{\r\n      let tests = this.state.tests.slice();\r\n      let activeTest = tests.find(x => x.id === testId);\r\n\r\n      let currentTest = [];\r\n      let testItem = [];\r\n      let correctResults = [];\r\n\r\n      activeTest.tasks.map((item, index) => correctResults.push(item.correct_answer));      \r\n      for (var i = 0; i < 3; i++) {\r\n        testItem.push(false);\r\n      }\r\n      for (var i = 0; i < activeTest.tasks.length; i++) {\r\n        currentTest.push(testItem);\r\n      }\r\n      this.setState({\r\n        activeTest,\r\n        currentTest,\r\n        correctResults\r\n      }, () => this.setState({\r\n          areTestsVisible: false,\r\n          isSingleTestVisible: true,\r\n      }));\r\n    }\r\n\r\n    backToTests = () =>{\r\n      this.setState({\r\n        areTestsVisible: true,\r\n        isSingleTestVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n    \t\tcurrentTest: [],\r\n    \t\tcurIndexTest: 0,\r\n    \t\tcurIndexCheckbox: 0,\r\n    \t\tcorrectResults: [],\r\n    \t\tcorrectAnswers: [],\r\n    \t\tincorrectAnswers: [],\r\n      })\r\n    }\r\n\r\n    checkResults = () =>{\r\n    \tlet resultsArray = this.state.currentTest.slice();\r\n    \tlet correctResults = this.state.correctResults.slice();\r\n    \tlet finalResults = [];\r\n    \tlet correctAnswers = [];\r\n    \tlet incorrectAnswers = [];\r\n    \tfor (var i = 0; i < resultsArray.length; i++) {\r\n    \t\tlet item = resultsArray[i];\r\n    \t\tfor (var j = 0; j < item.length; j++) {\r\n    \t\t\tif (item[j]) {\r\n    \t\t\t\tfinalResults.push(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n      if(finalResults.length == this.state.activeTest.tasks.length) {\r\n        for (var i = 0; i < finalResults.length; i++) {\r\n          if(correctResults[i] === finalResults[i]){\r\n            correctAnswers.push(i)\r\n          }\r\n          else{\r\n            incorrectAnswers.push(i)\r\n          }\r\n        }\r\n        let test = {};\r\n        test.score = correctAnswers.length;\r\n        test.date = new Date();\r\n        test.percentage = Math.round(test.score / this.state.activeTest.tasks.length * 1000) / 10;\r\n        this.props.actions.updateTestsComplete();\r\n        this.props.actions.updateTests(test);\r\n        this.setState({\r\n          isResultVisible: true,\r\n          isSingleTestVisible: false,\r\n          correctAnswers,\r\n          incorrectAnswers,\r\n          isMenuVisible: false,\r\n          isTooltipVisible: false\r\n        })                \r\n      }\r\n      else{\r\n        this.setState({\r\n          isTooltipVisible: true\r\n        })\r\n      }\r\n \t\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {this.state.areTestsVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n                <Menu.Item name='inbox'>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n          {(this.state.tests.length && this.state.areTestsVisible) ? \r\n            <Card.Group className=\"texts-cards tests-cards\" itemsPerRow={3} >\r\n              {this.state.tests.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&            \r\n              <Card key={index} className=\"test-card test-item\" style = {{boxShadow: `0 1px 3px 0 ${item.color}, 0 0 0 1px ${item.color}` }} >\r\n                <Card.Content>\r\n                  <Card.Header className=\"tests-card-title\" style = {{backgroundColor: item.color}} >\r\n                  \t<h3>{item.difficulty}</h3>\r\n                  \t<span>{item.title}</span>\r\n                  </Card.Header>\r\n                  <Card.Description className=\"tests-card-description\">\r\n                     <p className=\"tests-card-description-line\">Количество заданий - <span className=\"tests-card-description-txt\">{item.number}</span></p>\r\n                     <p className=\"tests-card-description-line\">Максимальное кол-во баллов - <span className=\"tests-card-description-txt\">{item.totalScore}</span></p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={ () => {this.selectTest(item.id)} /*this.selectTest.bind(this, item.id) */} style = {{backgroundColor: item.color }} >Начать тест</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n          }\r\n         {this.state.isSingleTestVisible ? \r\n            <Card className=\"single-text-card tests-wrapper\">\r\n              <h1>\r\n              \t{this.state.activeTest.title}\r\n              \t<span onClick={this.backToTests} title=\"Назад к тестам\" ><Icon name='window close outline'/></span>\r\n              </h1>\r\n              <Card.Content>\r\n                {this.state.activeTest.tasks.slice().map((item, index) =>\r\n                    <Card.Description key={item.id} id={index} className=\"single-text-card-description\">\r\n                    <h3 >{item.sentence}</h3>\r\n                    <Form className=\"single-test-form\" >\r\n                      {item.variants.map((param, ind) => \r\n                        <label className=\"test-label\" key={ind}>\r\n                          <input type=\"checkbox\" \r\n                            id={ind}\r\n                            parentid={item.id}\r\n                            label={param}\r\n                            name='checkboxRadioGroup'\r\n                            value={item}\r\n                            checked={this.state.currentTest[item.id][ind]}\r\n                            onChange={this.testChange}/>\r\n                            {param}                          \r\n                        </label>\r\n                      )}                                             \r\n                    </Form>                      \r\n                  </Card.Description>\r\n                )}\r\n              </Card.Content>\r\n              {this.state.isTooltipVisible ?\r\n                <div className=\"tests-tooltip\">\r\n                    <h4>Заполните все поля!</h4>               \r\n                </div> : null\r\n              }\r\n              <div className=\"tests-button-wrapper decks-button-wrapper\">\r\n              \t<Button onClick={this.checkResults} >Принять</Button>                  \t\r\n              </div>\r\n            </Card>:null\r\n          }\r\n          {this.state.isResultVisible ? \r\n            <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper test-final\" >\r\n             <Card className=\"card-training test-result-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n    \t\t\t\t\t\t  <div className=\"grades-results-wrapper\">\r\n    \t\t\t\t\t\t\t  <h3>Количество правильных ответов - <span>{this.state.correctAnswers.length}</span> из <span>{this.state.activeTest.tasks.length}</span> </h3>\r\n                    <h3>Ваша оценка - <span>{this.state.correctAnswers.length} </span> баллов </h3>\r\n    \t\t\t\t\t\t  </div>\t\t                  \r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.correctAnswers.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.incorrectAnswers.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.backToTests}>Назад к тестам</Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group> : null \r\n          }       \r\n          </div>\r\n        </div>  \r\n        <footer></footer>\r\n      </Fragment>\r\n   );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.testsReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tests);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass TrueOrFalse extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isImageVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false         \r\n    }, () => this.initialLoad())\r\n  } \r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = []; \r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            let el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }  \r\n\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n            \r\n        this.setState({ \r\n          words, \r\n          result,\r\n          currentWord });\r\n      })\r\n  }\r\n\r\n  renderComponent = () =>{\r\n    this.setState({\r\n      isButtonVisible: false,\r\n      isCardVisible: true\r\n    })\r\n  }\r\n\r\n  checkResponse = (response) => {\r\n    if (response) {\r\n      let positiveWords = this.state.positiveWords.slice();        \r\n      positiveWords.push(this.state.currentWord); \r\n      this.setState({ positiveWords })       \r\n    } else {\r\n        let negativeWords = this.state.negativeWords.slice();          \r\n        negativeWords.push(this.state.currentWord);\r\n        this.setState({ negativeWords })          \r\n    }\r\n    this.setState({\r\n      isTranslationVisible: true,\r\n      showNavButtons: false,\r\n      showContinueButton: true,\r\n      isImageVisible: true\r\n    })      \r\n  }\r\n\r\n  continueTraining = () =>{\r\n    let id =this.state.id;\r\n    id = id + 1;\r\n    const result = this.state.result;\r\n    if(id < this.state.result.length){\r\n      const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];     \r\n      this.setState({\r\n        id,\r\n        currentWord, \r\n        isImageVisible: false,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false        \r\n      })\r\n\r\n    }\r\n    else {\r\n      let words = this.state.positiveWords.slice();\r\n      let exercise = {}, wordsTrained = [];\r\n      exercise.id = uuidv4();\r\n      exercise.date = new Date();\r\n      exercise.score = this.state.positiveWords.length;\r\n      for (var i = 0; i < words.length; i++) {\r\n        wordsTrained.push(words[i].id)\r\n      }\r\n      exercise.wordsTrained = wordsTrained;\r\n      this.props.actions.updateTrueOrFalse(exercise);\r\n      this.props.actions.updateExerciseComplete(1);\r\n      this.props.actions.updateTotalScore(exercise.score);\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: false,\r\n        showContinueButton: false, \r\n        isCardVisible: false,\r\n        isButtonVisible: false\r\n      })                \r\n    }\r\n  }\r\n\r\n  voiceWord = () =>{\r\n    speech.say(this.state.currentName);\r\n  }   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Верно-неверно</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent}>Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"rightwrong-timer\"> \r\n                </Card.Header>\r\n                <Card.Header className=\"rightwrong-header\">{this.state.currentWord.name} \r\n                </Card.Header>                \r\n                <Card.Header>{this.state.currentWord.translation} \r\n                </Card.Header>\r\n                <div className=\"rightwrong-image-wrapper\">\r\n                {this.state.isImageVisible ?\r\n                  <Image src={this.state.currentWord.image} className=\"rightwrong-image\"></Image> : null               \r\n                }\r\n                </div>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} className=\"red false-button\" primary>Неверно</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} className=\"green true-button\" primary>Верно</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n       </Card.Group> :\r\n         null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n        <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n          <Card className=\"card-training\" >\r\n            <Card.Content>\r\n              <Card.Header>Результаты</Card.Header>\r\n              <Divider/>\r\n              <Card.Description className=\"audio-list-container\"> \r\n              {(this.state.negativeWords.length !== 0 ) ?\r\n                <div className=\"answers-wrapper\">\r\n                  <List className=\"audio-list\">\r\n                  <h2>Верные ответы</h2>\r\n                  {this.state.positiveWords.map((item, index) => \r\n                      <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                    )}\r\n                 </List>\r\n                  <List className=\"audio-list\">\r\n                  <h2>Неверные ответы</h2>\r\n                  {this.state.negativeWords.map((item, index) => \r\n                      <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                    )}\r\n                 </List>\r\n               </div> : \r\n               <Message>\r\n                  <Message.Header>Поздравляем!</Message.Header>\r\n                  <p>\r\n                    Все задания выполнены правильно\r\n                  </p>\r\n               </Message> \r\n              }\r\n\r\n              </Card.Description>\r\n              <Card.Description className=\"results-wrapper\">\r\n                <div className=\"positive-results-wrapper\"> \r\n                  <div className=\"positive-results\">\r\n                    {this.state.positiveWords.length}\r\n                  </div>\r\n                  <Label>Верно</Label>                    \r\n                </div>\r\n                <div className=\"negative-results-wrapper\"> \r\n                  <div className=\"negative-results\">\r\n                    {this.state.result.length - this.state.positiveWords.length}\r\n                  </div> \r\n                  <Label>Неверно</Label>                   \r\n                </div>\r\n              </Card.Description>\r\n              <Button.Group className=\"card-buttons-wrapper\">\r\n                <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n              </Button.Group>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.exercisesReducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrueOrFalse);","import React,{Component} from 'react';\r\n//import './audioplayer.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\nimport jsmediatags from \"jsmediatags\";\r\nimport { Howl } from \"howler\";\r\nimport axios from 'axios';\r\n\r\n//import {bindActionCreators} from 'redux';\r\n//import actions from './actions/index';\r\n\r\n//import {connect} from 'react-redux';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: [],\r\n      soundVolume: 5,\r\n      playing: false,\r\n      muted: false,\r\n      currentTrack: null,\r\n      currentTrackLength: null,\r\n      currentTrackInfo: null,\r\n      currentTrackPicture: null,\r\n      currentId: 4,\r\n      order: \"consecutive\",\r\n      duration: 0,\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n      currentDuration: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\",\r\n      tracksVisible: true,\r\n      interval: null,\r\n      progress: 0,\r\n      decodingFinished: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      currentId: 1\r\n    }, () => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) =>\r\n          this.setState({ audio: res.data })\r\n        );       \r\n    }) \r\n  }\r\n\r\n/*\r\n  componentDidUpdate(prevProps){\r\n    let currentTrack = this.state.currentTrack;\r\n    if(prevProps.store.playing !== this.state.playing) { \r\n      this.setState({playing: this.state.playing})\r\n      if (this.state.playing === false) {\r\n        currentTrack.pause();\r\n      } else {\r\n        let interval = this.state.interval;\r\n        currentTrack.play();\r\n        interval = setInterval(() => this.startCycle(), 1000);\r\n        this.setState({ interval });\r\n      }\r\n    }    \r\n\r\n    if(prevProps.store.currentId !== this.state.currentId) { \r\n      if (currentTrack) {\r\n        currentTrack.pause();\r\n      }   \r\n      this.setState({\r\n        currentTrack\r\n      }, () => this.callFunctions(this.state.currentId));\r\n    }\r\n  }\r\n*/\r\n  callFunctions = () => {\r\n    let id = this.state.currentId;\r\n    let currentTrack = new Howl({\r\n      src: \"tracks/\" + this.state.audio.slice(id, id + 1),\r\n      html5: true,\r\n      volume: this.state.soundVolume / 10\r\n    });\r\n    var duration, minutes, seconds, currentMinutes, currentSeconds;\r\n    currentTrack.on(\"load\", () => {\r\n      duration = currentTrack.duration();\r\n      minutes = Math.floor(duration / 60);\r\n      seconds = Math.floor(duration - minutes * 60);\r\n      minutes = (\"0\" + minutes).slice(-2);\r\n      seconds = (\"0\" + seconds).slice(-2);\r\n      currentMinutes = \"00\";\r\n      currentSeconds = \"00\";\r\n      this.setState({ minutes, seconds, duration, currentTrack }, () => {\r\n        this.setState({ decodingFinished: true });        \r\n        if (this.state.playing) {\r\n          this.continuePlay();\r\n        } \r\n      });\r\n    });\r\n    this.readTags(id);\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      progress: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\"\r\n    })\r\n  }\r\n\r\n  readTags = (id) => {\r\n    let track = this.state.audio[id];\r\n    jsmediatags.read(\r\n      \"http://localhost:3000/tracks/\" + `${this.state.audio[id]}`,\r\n      {\r\n        onSuccess: (tag) => {\r\n          this.setState({ currentTrackInfo: tag }, () => {\r\n            this.decodeTrackInfo();\r\n          });\r\n        },\r\n        onError: (error) => {\r\n          console.log(\":(\", error.type, error.info);\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  decodeTrackInfo = () => {\r\n    let title = this.state.currentTrackInfo.tags.title;\r\n    let artist = this.state.currentTrackInfo.tags.artist;\r\n    let currentTrackPicture;\r\n    if (this.state.currentTrackInfo.tags.picture) {\r\n      const { data, type } = this.state.currentTrackInfo.tags.picture;\r\n      const byteArray = new Uint8Array(data);\r\n      const blob = new Blob([byteArray], { type });\r\n      currentTrackPicture = URL.createObjectURL(blob);\r\n    }\r\n    this.setState({\r\n      currentTrackPicture,\r\n      currentTrackTitle: title,\r\n      currentTrackArtist: artist\r\n    })\r\n  };\r\n\r\n  playMusic = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let interval = this.state.interval;\r\n    if (this.state.playing) {\r\n      currentTrack.pause();\r\n      //this.props.actions.changePlayingState(false);\r\n      clearInterval(interval);\r\n      this.setState({ interval });\r\n    } else {\r\n      currentTrack.volume(this.state.soundVolume / 10);\r\n      currentTrack.play();\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n      this.setState({ interval });\r\n      //this.props.actions.changePlayingState(true);\r\n    }\r\n    //this.props.actions.changePlayingState(!this.state.playing);\r\n    this.setState({currentTrack});\r\n  };\r\n\r\n  continuePlay = () =>{\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.playing) {\r\n      currentTrack.stop();\r\n    }\r\n    let interval = this.state.interval;\r\n    clearInterval(interval);\r\n    currentTrack.play();\r\n    if (this.state.playing) {\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n    }    \r\n    this.setState({ interval });    \r\n  }\r\n\r\n  changeVolume = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(e.target.value / 10);\r\n    this.setState({ soundVolume: e.target.value, currentTrack });\r\n  };\r\n\r\n  nextTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    console.log(\"currentTrack\", currentTrack);\r\n    currentTrack.stop();\r\n    if (this.state.currentId < this.state.audio.length - 1) {\r\n      //this.props.actions.selectTrack(this.state.currentId + 1);\r\n    } else {\r\n       //this.props.actions.selectTrack(0);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  prevTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    currentTrack.stop();\r\n    if (this.state.currentId > 0) {\r\n      //this.props.actions.selectTrack(this.state.currentId - 1);\r\n    } else {\r\n      //this.props.actions.selectTrack(this.state.audio.length - 1);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  muteSound = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.muted) {\r\n      currentTrack.mute(false);\r\n    } else {\r\n      currentTrack.mute(true);\r\n    }\r\n    this.setState({\r\n      muted: !this.state.muted,\r\n      currentTrack,\r\n    });\r\n  };\r\n\r\n  startCycle = () => {\r\n    this.incTime();\r\n    this.updateProgress();\r\n  };\r\n\r\n  updateProgress = () => {\r\n    let time = Math.round(this.state.currentTrack.seek());\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let progress = ((time / duration) * 100).toFixed(2);\r\n    this.setState({ progress });\r\n    //this.props.actions.changeProgressState(progress);\r\n  };\r\n\r\n  incTime = () => {\r\n    let currentDuration = Math.round(this.state.currentTrack.seek());\r\n    let currentMinutes = Math.floor(currentDuration / 60);\r\n    let currentSeconds = Math.floor(currentDuration - currentMinutes * 60);\r\n    currentMinutes = (\"0\" + currentMinutes).slice(-2);\r\n    currentSeconds = (\"0\" + currentSeconds).slice(-2);\r\n    this.setState({ currentSeconds, currentMinutes, currentDuration });\r\n    if (currentDuration === this.state.currentTrack.duration()) {\r\n      let currentTrack = this.state.currentTrack;\r\n      currentTrack.stop();      \r\n      if (this.state.currentId < this.state.audio.length - 1) {\r\n        //this.props.actions.selectTrack(this.state.currentId + 1);\r\n      } else {\r\n        //this.props.actions.selectTrack(0);\r\n      }\r\n      this.setState({ currentTrack, decodingFinished: false }, () => {\r\n        this.resetState();\r\n        this.callFunctions(this.state.currentId);\r\n      });      \r\n    }\r\n  };\r\n\r\n  setSeek = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let seek = (e.target.value * duration) / 100;\r\n    currentTrack.seek(seek);\r\n    console.log(\"seek\", Math.round(seek));\r\n    this.setState({ currentTrack, progress: e.target.value }, () => {\r\n      this.incTime();\r\n      //this.props.actions.changeProgressState(Math.round(seek));\r\n      console.log(this.state.progress);\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"player__visualizer player-visualizer\">\r\n          <div className=\"player-visualizer__waveform\" id=\"waveform\"></div>\r\n        </div>\r\n        <div className=\"player__top player-top\">\r\n          <span className=\"player-top__time\">{this.state.currentMinutes}.{this.state.currentSeconds}</span>\r\n          <div className=\"player-top__progress player-progress\">\r\n              <input\r\n                className=\"player-progress__input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                type=\"range\"\r\n                value={this.state.progress}\r\n                onChange={this.setSeek}\r\n              />\r\n          </div>\r\n          <span className=\"player-top__time\">{this.state.minutes}.{this.state.seconds}</span>\r\n        </div>\r\n        <div className=\"player-main\">\r\n          <div className=\"player-left\">\r\n            <div className=\"player-info player__info\">\r\n              <div className=\"player-info__icon player-icon\">\r\n                  {this.state.currentTrackPicture ? (\r\n                    <img src={this.state.currentTrackPicture} className=\"player-icon__picture\" alt=\"\" />\r\n                  ) : null}              \r\n              </div>\r\n              <div className=\"player-info__description player-description\">\r\n                <p className=\"player-description__name\">{this.state.currentTrackTitle}</p>\r\n                <p className=\"player-description__artist\">{this.state.currentTrackArtist}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"player__controls player-controls\">\r\n              <div className=\"player-controls__navigation\">\r\n                <div className=\"player-controls__item player-controls__left\" onClick={this.prevTrack}><i className=\"fas fa-backward\"></i></div>\r\n                {!this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-play\"></i></div> : null}\r\n                {this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-pause\"></i></div> : null}\r\n                <div className=\"player-controls__item player-controls__right\" onClick={this.nextTrack}><i className=\"fas fa-forward\"></i></div>         \r\n              </div>\r\n            </div>        \r\n          </div>\r\n          <div className=\"player-controls__volume player-volume\">\r\n            <div className=\"player-controls__item player-volume__item\"><i className=\"fas fa-volume-up\"></i></div>\r\n                      <input\r\n                        className=\"player-controls__audio\"\r\n                        value={this.state.soundVolume}\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        onChange={this.changeVolume}\r\n                        type=\"range\"\r\n                      />        \r\n          </div>      \r\n        </div>\r\n      </div>        \r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n*/\r\nexport default AudioPlayer;","import React, { Component } from 'react';\r\nimport {Button, TextArea, Form, Input } from 'semantic-ui-react'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Comments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      loaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id === Number(this.props.id));\r\n    if (item) {\r\n      for (var i = 0; i < item.comments.length; i++) {\r\n        let date = new Date(item.comments[i].date);\r\n        let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n          date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);\r\n        item.comments[i].date = datestring;\r\n      }\r\n      this.setState({\r\n        comments: item.comments,\r\n        loaded: true\r\n      }, () => console.log(this.state))      \r\n    } else {\r\n      this.setState({\r\n        noComments: true,\r\n        loaded: true\r\n      })\r\n    }\r\n    \r\n  } \r\n\r\n    addComment = () =>{\r\n      let comments = this.state.comments.slice();\r\n      let errors = this.state.errors;\r\n      let currentComment = this.state.currentComment;\r\n      let currentName = this.state.currentName;\r\n      let currentEmail = this.state.currentEmail;\r\n      let temp = {};\r\n\r\n      if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n        let date = new Date();\r\n        let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n        date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);        \r\n        temp['commentId'] = uuidv4();\r\n        temp['author'] = currentName;\r\n        temp['text'] = currentComment;        \r\n        temp['date'] = datestring;\r\n        let id = this.props.id;\r\n        this.props.actions.addCommentToBook(id, temp);        \r\n        this.setState({\r\n          currentName: '',\r\n          currentComment: '',\r\n          currentEmail: ''\r\n        })\r\n      }\r\n\r\n      else if (currentName === ''){\r\n        errors['name'] = \"Заполните поле имени!\";\r\n        this.setState({\r\n          errors\r\n        })\r\n      }\r\n\r\n      else if(currentComment === ''){\r\n        errors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n\r\n      else if(currentEmail === ''){\r\n        errors['email'] = \"Заполните поле почты\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n\r\n    }\r\n\r\n    updateComment = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateName = (event) =>{\r\n      this.setState({currentName: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateEmail = (event) =>{\r\n      this.setState({currentEmail: event.target.value.substr(0,500)});\r\n    }\r\n\r\n\r\n  render() {\r\n    return (     \r\n      <>\r\n        <div className=\"single-text-card-form\">\r\n          <Form>\r\n            <Form.Field>\r\n              <Input value={this.state.currentName || ''} onChange={this.updateName} focus placeholder='Имя'/>\r\n              <span>{this.state.errors['name']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input value={this.state.currentEmail || ''} onChange={this.updateEmail} focus placeholder='Email'/>\r\n              <span>{this.state.errors['email']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <TextArea value={this.state.currentComment || ''} onChange={this.updateComment} maxLength=\"50\" placeholder='Ваш комментарий' />\r\n              <span>{this.state.errors['comment']}</span>\r\n            </Form.Field>                           \r\n            <Button onClick={this.addComment} type='submit'>Отправить</Button>\r\n          </Form>         \r\n        </div>\r\n        {this.state.loaded && this.state.comments ?\r\n          <div className=\"single-text-card-comments\">\r\n            {this.state.comments.map((item, index) =>\r\n              <div className=\"single-text-card-comment\" key={index}>\r\n                <h3>{item.author}<span className=\"single-text-card-date\">{item.date}</span></h3>\r\n                <p>{item.text}</p>                              \r\n              </div>\r\n             )}                       \r\n          </div>\r\n        : null}\r\n      </> \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalFont extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      fontSizeTemp: 16,\r\n      lineHeightTemp: 32,\r\n      fontFamilyTemp: \"'Times New Roman', sans-serif\",\r\n      fontWeightTemp: 400,      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n changeValue = (e) =>{\r\n    this.setState({fontSizeTemp: e.target.value})\r\n  }\r\n\r\n  changeFontFamily = (e) =>{\r\n    this.setState({fontFamilyTemp: e.target.value})\r\n  }\r\n\r\n  changeFontWeight = (e) =>{\r\n    this.setState({fontWeightTemp: e.target.value})\r\n  }\r\n\r\n  changeLineHeight = (e) =>{\r\n    this.setState({lineHeightTemp: e.target.value})\r\n  } \r\n\r\n  applyFontSettings = () => {\r\n    this.props.actions.selectFontSize(this.state.fontSizeTemp);\r\n    this.props.actions.selectFontFamily(this.state.fontFamilyTemp);\r\n    this.props.actions.selectFontWeight(this.state.fontWeightTemp);\r\n    this.props.actions.selectFontSpacing(this.state.lineHeightTemp);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleFontModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper select-font-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-font\">\r\n            <div className=\"select-font-block\">\r\n              <span>Размер</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeValue} type=\"range\" min=\"8\" max=\"24\" value={this.state.fontSizeTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontSizeTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Интервал</span>         \r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeLineHeight} type=\"range\" min=\"16\" max=\"72\" value={this.state.lineHeightTemp} name=\"\"/>                \r\n                <span className=\"select-font-value\">{this.state.lineHeightTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Жирность</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeFontWeight} type=\"range\" min=\"200\" max=\"900\" step=\"100\" value={this.state.fontWeightTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontWeightTemp}</span>\r\n              </div>  \r\n            </div>\r\n          </div>\r\n          <select className=\"select-font-family\" onChange={this.changeFontFamily} value={this.state.fontFamily}>\r\n            <option value =\"'Times New Roman', sans-serif\">Times New Roman</option>\r\n            <option value =\"'Arial', sans-serif\">Arial</option>\r\n            <option value =\"'Verdana', sans-serif\">Verdana</option>\r\n            <option value =\"'Lucida Console', sans-serif\">Lucida Console</option>\r\n            <option value =\"'Georgia', serif\">Georgia</option>\r\n            <option value =\"'Courier New', monospace\">Gourier New</option>\r\n          </select>\r\n          <p className=\"select-font-example\" style={{ \r\n                                fontSize: this.state.fontSizeTemp + \"px\", \r\n                                fontFamily: this.state.fontFamilyTemp,\r\n                                lineHeight: this.state.lineHeightTemp + \"px\",\r\n                                fontWeight: this.state.fontWeightTemp }} >Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet</p>                  \r\n          <Button primary className=\"normal-button\" onClick={this.applyFontSettings} >Применить</Button>\r\n        </div>    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalFont);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalColor extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isColorModalOpen: false,\r\n      activeFontColor: '#222222',\r\n      activeBgColor: '#f6f6f6',\r\n      fontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\r\n      bgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\r\n      colorScheme: [  \r\n              '#000000','#111111','#222222','#333333',\r\n              '#444444','#555555','#666666','#777777',\r\n              '#888888','#999999','#a7a7a7','#b8b8b8',\r\n              '#d0d0d0','#dcdcdc','#f6f6f6','#ffffff'   ]      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n  setFontColor = (e) =>{\r\n    let fontState = this.state.fontState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < fontState.length; i++) {\r\n      fontState[i] = false;\r\n    }\r\n    fontState[index] = true;\r\n    this.setState({\r\n      activeFontColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      fontState\r\n    })\r\n\r\n  }\r\n\r\n  setBgColor = (e) =>{\r\n    let bgState = this.state.bgState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < bgState.length; i++) {\r\n      bgState[i] = false\r\n    }\r\n    bgState[index] = true;\r\n    this.setState({\r\n      activeBgColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      bgState\r\n    })\r\n  }\r\n\r\n  applyColorSettings = () =>{\r\n    this.props.actions.selectBgColor(this.state.activeBgColor);\r\n    this.props.actions.selectFontColor(this.state.activeFontColor);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleColorModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal} >\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-palette-container\">\r\n            <div className=\"palette-container-item\">\r\n              <p>Шрифт</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setFontColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.fontState[index] ? \r\n                      <span><i className=\"fas fa-check\"></i></span>  : null\r\n                    }\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"palette-container-item\">\r\n              <p>Фон</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setBgColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.bgState[index] ?\r\n                      <span><i className=\"fas fa-check\"></i></span> \r\n                       : null\r\n                    }\r\n                  </div>\r\n                )}          \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"palette-item-selected\" style={{ backgroundColor: this.state.activeBgColor }} >\r\n            <span style={{ color: this.state.activeFontColor  }} >Lorem ipsum </span>\r\n          </div> \r\n          <Button primary onClick={this.applyColorSettings}>Применить</Button>\r\n        </div>              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalColor);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\n\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass WordFound extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className = \"word-modal__overlay\">\r\n        <div className=\"word-modal\">\r\n          <div className=\"word-modal__image\">\r\n            <img src=\"word-modal__picture\" src = {this.props.word.image}/>\r\n          </div>\r\n          <div className=\"word-modal__description\">\r\n            <p className=\"word-modal__title\">{this.props.word.name} - {this.props.word.translation}</p>\r\n            <p className=\"word-modal__meaning\">{this.props.word.definition}</p>   \r\n            <Button primary onClick={this.closeSearchModal}>Закрыть</Button>              \r\n          </div>\r\n        </div>              \r\n      </div>        \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordFound);","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu, Icon, TextArea, Form, Checkbox, Input } from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu';\r\nimport Comments from './Comments';\r\nimport ModalFont from './ModalFont';\r\nimport ModalColor from './ModalColor';\r\nimport WordFound from './WordFound';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport iconv from 'iconv-lite';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass SelectedBook extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.fileInputRef = React.createRef();    \r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      text: null,\r\n      pageIndexes: [],\r\n      currentPageId: 0,\r\n      loaded: false,\r\n      pages: 0,      \r\n      commentsVisible: false,\r\n      wordsEl: [],\r\n      words: [],\r\n      selected: '',\r\n      isModalFoundOpen: false,\r\n      isModalInputOpen: false,\r\n      comments: []               \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id == this.props.match.params.id);\r\n    if (item) {\r\n      this.setState({\r\n        comments: item.comments\r\n      })\r\n    }\r\n    var myHeaders = new Headers();\r\n    myHeaders.append('Content-Type','text/plain; charset=UTF-8');  \r\n    const that = this;\r\n    axios.all([\r\n      axios.get('/books.json'), \r\n      axios.get('/words_full.json')\r\n    ])   \r\n    .then(axios.spread((obj1, obj2) => {\r\n      let books = obj1.data; \r\n      let words = obj2.data;\r\n      let selectedBook = books.find(x => x.id == this.props.match.params.id);\r\n      fetch(selectedBook.link, myHeaders)\r\n        .then(response => response.arrayBuffer())\r\n        .then(function (buffer) {\r\n            const decoder = new TextDecoder('iso-8859-1');\r\n            let text = decoder.decode(buffer).split(\"\\n\");\r\n            return text\r\n        })\r\n        .then((text) => that.setState({words, text }, () => that.splitIntoPages() ))\r\n    })) \r\n\r\n  } \r\n\r\n  splitIntoPages = () => {\r\n    let text = this.state.text;\r\n    let pages = [], words = [], pageIndexes = [];\r\n    let value = 1600 / this.props.store.lineHeight;\r\n    let pagesCount = Math.ceil(text.length / value);\r\n    let currentMin = 0;\r\n    let currentMax = 50;\r\n    for (var i = 0; i < pagesCount; i++) {\r\n      let txt = text.slice(currentMin, currentMax);\r\n      if (currentMin === 0 ) {\r\n        let newTxt = [];\r\n        for (var j = 0; j < txt.length; j++) {\r\n          let newSentence = [];\r\n          newSentence.push(txt[j].split(' '));\r\n          newTxt.push(newSentence);\r\n        }\r\n        words.push(newTxt);\r\n      }\r\n      pages.push(txt);\r\n      currentMin = currentMin + 50;\r\n      currentMax = currentMax + 50;\r\n    }\r\n      for (var i = 0; i < pagesCount; i++) {\r\n        pageIndexes.push(i);\r\n      }\r\n      this.setState({ pages, \r\n                      pageIndexes, \r\n                      currentPage: pages[0],\r\n                      splittedPage: words,\r\n                      loaded: true });\r\n  }  \r\n\r\n    prevButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages;\r\n      if(currentPageId > 0){\r\n        currentPageId--;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    }\r\n\r\n    nextButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages.slice();\r\n      if(currentPageId < pages.length - 1){\r\n        currentPageId++;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    }  \r\n\r\n  changePage = (e) =>{\r\n      let currentPageId = Number(e.target.value);\r\n      let pages = this.state.pages;\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId, currentPage\r\n      })  \r\n  }\r\n\r\n  toggleComments = () => {\r\n    this.setState({ commentsVisible: !this.state.commentsVisible })\r\n  }\r\n\r\n\r\n  searchForWord = (item, e) => {\r\n    switch (e.detail) {\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        let words = this.state.words.slice();\r\n        let newItem = item.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n        let found = words.find(x => x.name === newItem);\r\n        if (found) {\r\n          this.setState({\r\n            found\r\n          }, () => this.toggleFoundModal())\r\n        } else {\r\n          this.setState({\r\n            selected: newItem\r\n          }, () => this.toggleInputModal())\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }    \r\n  } \r\n\r\n  toggleFoundModal = () => {\r\n    this.props.actions.toggleSearchModal(true);\r\n  }\r\n\r\n  toggleInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: !this.state.isModalInputOpen\r\n    })\r\n  }\r\n\r\n\r\n\r\n  changeFont = () => {\r\n    this.props.actions.toggleFontModal(true);\r\n  }\r\n\r\n  changeColor = () => {\r\n    this.props.actions.toggleColorModal(true);\r\n  }\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n  closeInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: false\r\n    });\r\n  }  \r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.props.store.isSearchModalOpen ?\r\n            <WordFound word = {this.state.found} />\r\n          : null}\r\n          {this.state.isModalInputOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n                <div className=\"word-modal__reject\">\r\n                   <p>Sorry, cannot find selected word is our vocabulary</p>\r\n                   <Button primary onClick={this.closeInputModal}>Закрыть</Button>\r\n                </div>\r\n            </div>\r\n          : null}        \r\n     \r\n          {this.props.store.isFontModalOpen ?\r\n            <ModalFont />\r\n          : null}\r\n          {this.props.store.isColorModalOpen ?\r\n            <ModalColor />\r\n          : null}\r\n          {this.state.loaded ?\r\n            <div className=\"navigation-panel\">\r\n              <div className=\"navigation-progress\"> \r\n                <input  \r\n                  type=\"range\" \r\n                  value={this.state.currentPageId} \r\n                  max={this.state.pages.length - 1} \r\n                  min=\"0\"\r\n                  onChange={this.changePage} />\r\n              </div>\r\n              <div className=\"nav-pagination\">{this.state.currentPageId + 1} / {this.state.pages.length}</div>            \r\n              <div className=\"navigation-links\">\r\n                <span onClick={this.prevButton} className=\"navigation-links__item\" title=\"Назад\"><Icon name='arrow left' size='large' /> </span>\r\n                <span onClick={this.nextButton} className=\"navigation-links__item\" title=\"Вперед\"><Icon name='arrow right' size='large' /> </span>\r\n                <span onClick={this.changeFont} className=\"navigation-links__item\" title=\"Настройки шрифта\"><Icon name='font' size='large' /> </span>\r\n                <span onClick={this.changeColor} className=\"navigation-links__item\" title=\"Настройки цвета\"><Icon name='tint' size='large' /> </span>\r\n              </div>\r\n            </div>\r\n          : null}\r\n          {this.state.loaded ?\r\n            <>\r\n              <div className=\"selected-book\" style={{ backgroundColor: this.props.store.backgroundColor, color: this.props.store.color}}>\r\n              <div className=\"selected-book__content book-content\" style= \r\n                                          {{ lineHeight: this.props.store.lineHeight + \"px\",\r\n                                             fontWeight: this.props.store.fontWeight, \r\n                                             fontSize:   this.props.store.fontSize + \"px\", \r\n                                             fontFamily: this.props.store.fontFamily }}>\r\n                  {this.state.splittedPage.map((page, index1) => \r\n                    <Fragment key={index1}>\r\n                      {page.map((sentence, index2) => \r\n                        <Fragment key={index2}>\r\n                          {sentence.map((word, index3) => \r\n                            <p key={index3}> \r\n                              {word.map((item, index4) => \r\n                                <span className=\"single-word\" key={index4} onClick={this.searchForWord.bind(this, item)}>{`${item} `}</span>\r\n                              )}\r\n                            </p>\r\n                          )}\r\n                        </Fragment>\r\n                      )}\r\n                    </Fragment> \r\n                  )}\r\n              </div>\r\n              </div>          \r\n              <div className=\"single-text-form__wrapper\">\r\n                <div className=\"comments__header\">\r\n                  {this.state.comments.length ?\r\n                    <>\r\n                    <span className=\"comments-header__counter\">Комментариев: {this.state.comments.length}</span>\r\n                    <span className=\"comments-header__button\" onClick={this.toggleComments}>{this.state.commentsVisible ? 'Скрыть комментарии': 'Показать комментарии'}</span>\r\n                    </>\r\n                  : null}\r\n                </div>\r\n                {this.state.commentsVisible && this.state.comments?\r\n                  <Comments id={this.props.match.params.id} />\r\n                : null}           \r\n              </div>              \r\n            </>\r\n          : <div className=\"preloader\">\r\n            <img src = \"../preloader.gif\"/>\r\n          </div> }\r\n          <footer></footer> \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.booksReducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedBook);","let initialState = {\r\n\t\"colorScheme\": null,\r\n\t\"soundVolume\": null\r\n};\r\n\r\n\r\n\r\nlet settingsReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'CHANGE_COLOR_SCHEME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorScheme: action.payload }\r\n\r\n\t\tcase 'CHANGE_SOUND_VOLUME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsoundVolume: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default settingsReducer;","let initialState = {\r\n\t\"exercises\": {\r\n\t\t\"engToRusWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"rusToEngWords\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"audioWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"constructWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 15, 16, 19, 20],\r\n\t\t\t\t\t\"score\": 7\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"trueOrFalseWords\": \r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 14],\r\n\t\t\t\t\t\"score\": 4\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987],\r\n\t\t\t\t\t\"score\": 3\r\n\t\t\t\t}\r\n\t\t\t],\r\n\r\n\t\t\"cardWords\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 3,\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 3,\r\n\t\t\t\t\t\"wordsTrained\": [32, 47, 987, 43, 89]\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t],\r\n\r\n\t\t\"recreateTxt\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"recreateAudioTxt\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"placeSpaces\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 6\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 7\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t \r\n\t\t\"fillTheGaps\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\r\n\t\t\"commonPhrases\":\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 234,\r\n\t\t\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"id\": 34,\r\n\t\t\t\t\t\"date\": \"Sun Jul 23 2022 20:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\t\t\"score\": 5\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\t\t\t \t\t \t\t\t\t\t\t\t\t\t\t\t\t\r\n\t}\r\n};\r\n\r\n\r\n\r\nlet exercisesReducer = (state = initialState.exercises, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_ENG_TO_RUS':\r\n\t\t\tlet words = [...state.engToRusWords];\r\n\t\t\twords.push(action.payload);\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tengToRusWords: words }\r\n\r\n\t\tcase 'UPDATE_RUS_TO_ENG':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trusToEngWords: [...state.rusToEngWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_AUDIO_WORDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\taudioWords: [...state.audioWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_CONSTRUCT_WORDS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tconstructWords: [...state.constructWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_TRUE_OR_FALSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttrueOrFalseWords: [...state.trueOrFalseWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_CARD_WORDS':\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcardWords: [...state.cardWords, action.payload] }\r\n\r\n\t\tcase 'UPDATE_RECREATE_TXT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trecreateTxt : [...state.recreateTxt, action.payload] }\r\n\r\n\t\tcase 'UPDATE_RECREATE_AUDIOTXT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trecreateAudioTxt: [...state.recreateAudioTxt, action.payload] }\r\n\r\n\t\tcase 'UPDATE_FILL_THE_GAPS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfillTheGaps: [...state.fillTheGaps, action.payload] }\r\n\r\n\t\tcase 'UPDATE_PLACE_SPACES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tplaceSpaces: [...state.placeSpaces, action.payload] }\r\n\r\n\t\tcase 'UPDATE_COMMON_PHRASES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcommonPhrases: [...state.commonPhrases, action.payload] }\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default exercisesReducer;","let selectedBook = {}\r\n\r\n\r\nlet initialState = {\r\n\t\"selectedBook\": selectedBook,\r\n\t\"booksComments\": [\r\n\t\t{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 1,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 2,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 11,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 12,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 40,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 34,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 35,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\t\t\t\t\r\n\t],\r\n\tcolor: '#222222',\r\n\tbackgroundColor: '#f6f6f6',\r\n\tfontSize: 16,\r\n\tfontFamily: \"'Times New Roman', sans-serif\",\r\n\tlineHeight: 32,\r\n\tfontWeight: 400,\r\n\tisFontModalOpen: false,\r\n\tisColorModalOpen: false,\r\n\tisSearchModalOpen: false\r\n};\r\n\r\n\r\n\r\nlet booksReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'SELECT_BOOK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedBook: action.payload }\r\n\r\n\t\tcase 'TOGGLE_FONT_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFontModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_COLOR_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisColorModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_SEARCH_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_FAMILY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontFamily: action.payload }\t\r\n\r\n\t\tcase 'SELECT_FONT_SPACING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlineHeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_WEIGHT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontWeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_SIZE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontSize: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontColor: action.payload }\t\r\n\r\n\t\tcase 'SELECT_BG_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbackgroundColor: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default booksReducer;","\r\nlet initialState = {\r\n\t\"vocabModalOpen\": false,\r\n\t\"selectedVocabWord\": null,\r\n\t\"colorScheme\": null,\r\n\t\"soundVolume\": null\r\n};\r\n\r\n\r\n\r\nlet vocabularyReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'TOGGLE_VOCAB_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedVocabWord: action.payload }\t\t\r\n\r\n\t\tcase 'VOICE_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabWord: action.payload }\r\n\r\n\t    default: return state \t\t\r\n\t}\r\n}\r\n\r\nexport default vocabularyReducer;","let initialState = {\r\n\t\"tests\": [\r\n\t\t{\r\n\t\t\t\"score\": 35,\r\n\t\t\t\"date\": \"Sun Jul 27 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\"percentage\": 82.5\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"score\": 38,\r\n\t\t\t\"date\": \"Sun Jul 20 2022 21:07:21 GMT+0300 (Москва, стандартное время)\",\r\n\t\t\t\"percentage\": 34.5\r\n\t\t}\r\n\t]\r\n};\r\n\r\n\r\n\r\nlet testsReducer = (state = initialState, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase 'UPDATE_TESTS':\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttests: [...state.tests, action.payload] }\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default testsReducer;","let initialState = {\r\n\t\"totalScore\": 187,\r\n\t\"exercisesComplete\": 22,\r\n\t\"testsComplete\": 2\r\n};\r\n\r\n\r\n\r\nlet resultsReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_TOTAL_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalScore: state.totalScore + action.payload }\r\n\r\n\t\tcase 'UPDATE_EXERCISES_COMPLETE':\r\n\t\t\tconsole.log(state.exercisesComplete);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texercisesComplete: ++state.exercisesComplete }\r\n\r\n\t\tcase 'UPDATE_TESTS_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttestsComplete: ++state.testsComplete }\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default resultsReducer;","import {combineReducers} from 'redux';\r\nimport settingsReducer from './settingsReducer';\r\nimport exercisesReducer from './exercisesReducer';\r\nimport booksReducer from './booksReducer';\r\nimport vocabularyReducer from './vocabularyReducer';\r\nimport testsReducer from './testsReducer';\r\nimport resultsReducer from './resultsReducer';\r\n\r\nlet createRootReducer = () => combineReducers({\r\n\texercisesReducer: exercisesReducer, \r\n\tsettingsReducer: settingsReducer, \r\n\tbooksReducer: booksReducer,\r\n\tvocabularyReducer: vocabularyReducer,\r\n\ttestsReducer: testsReducer,\r\n\tresultsReducer: resultsReducer\t\t\r\n})\r\n\r\nexport default createRootReducer;","import {createStore} from 'redux';\r\nimport createRootReducer from '../reducers/rootReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default function configureStore(){\r\n\tlet store = createStore(createRootReducer(), initialState);\r\n\treturn store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Vocabulary from './Vocabulary';\r\nimport GrammarList from './GrammarList'\r\nimport SelectedGrammar from './SelectedGrammar'\r\nimport Statistics from './Statistics'\r\nimport Training from './Training'\r\nimport Main from './Main'\r\nimport ConstructWord from './ConstructWord'\r\nimport Proverbs from './Proverbs'\r\nimport Cards from './Cards'\r\nimport Audio from './Audio'\r\nimport EnglishToRussian from './EnglishToRussian'\r\nimport RussianToEnglish from './RussianToEnglish'\r\nimport Videos from './Videos'\r\nimport FillTheGaps from './FillTheGaps'\r\nimport RecreateText from './RecreateText'\r\nimport RecreateAudioText from './RecreateAudioText'\r\nimport InsertSpaces from './InsertSpaces'\r\nimport SelectedVideo from './SelectedVideo'\r\nimport TextsList from './TextsList'\r\nimport Decks from './Decks'\r\nimport Settings from './Settings'\r\nimport BookList from './BookList'\r\nimport Materials from './Materials'\r\nimport Tests from './Tests'\r\nimport TrueOrFalse from './TrueOrFalse'\r\nimport AudioPlayer from './AudioPlayer'\r\nimport SelectedBook from './SelectedBook'\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport configureStore from \"./store/index\";\r\n\r\nlet initialState = [];\r\nlet store = configureStore(initialState);\r\n\r\nReactDOM.render(  \r\n\t<Provider store={store}>\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<div className=\"router-wrapper\">\r\n\t\t\t\t<Route exact path=\"/\" component={Main} />\r\n\t\t\t\t<Route path=\"/selectedbook\" component={SelectedBook} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t\t<Route path=\"/vocabulary\" component={Vocabulary} />\t\t\t\t\r\n\t\t\t\t<Route path=\"/grammar\" exact component={GrammarList} />\r\n\t\t\t\t<Route path=\"/grammar/:id\" component={SelectedGrammar} />\r\n\t\t\t\t<Route path=\"/materials\" component={Materials} />\r\n\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\r\n\t\t\t\t<Route path=\"/training\" component={Training} />\t\t  \r\n\t\t\t\t<Route path=\"/cards\" component={Cards} />\r\n\t\t\t\t<Route path=\"/trueorfalse\" component={TrueOrFalse} />\t\t\r\n\t\t\t\t<Route path=\"/constructword\" component={ConstructWord} />\r\n\t\t\t\t<Route path=\"/proverbs\" component={Proverbs}/>\r\n\t\t\t\t<Route path=\"/audio\" component={Audio} />\r\n\t\t\t\t<Route path=\"/recreatetext\" component={RecreateText} />\r\n\t\t\t\t<Route path=\"/recreateaudiotext\" component={RecreateAudioText} />\r\n\t\t\t\t<Route path=\"/insertspaces\" component={InsertSpaces} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/englishtorussian\" component={EnglishToRussian} />\r\n\t\t\t\t<Route path=\"/russiantoenglish\" component={RussianToEnglish} />\r\n\t\t\t\t<Route path=\"/fillthegaps\" component={FillTheGaps} />\r\n\t\t\t\t<Route path=\"/decks\" component={Decks} />\t\t\r\n\t\t\t\t<Route path=\"/videos\" exact component={Videos} />\r\n\t\t\t\t<Route path=\"/videos/:id\" component={SelectedVideo} />\r\n\t\t\t\t<Route path=\"/texts\" component={TextsList} />\r\n\t\t\t\t<Route path=\"/books\" exact component={BookList} />\r\n\t\t\t\t<Route path=\"/books/:id\" component={SelectedBook} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/tests\" component={Tests} />\r\n\t\t\t\t<Route path=\"/audioplayer\" component={AudioPlayer} />\r\n\t\t\t</div>\r\n\t\t</Router>\t\r\n\t</Provider>, document.getElementById('root'));\r\n\r\n/*\r\n\tconst routes = [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\tcomponent: App\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/grammar',\r\n\t\t\tcomponent: GrammarList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/courses',\r\n\t\t\tcomponent: CoursesList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursessimple',\r\n\t\t\tcomponent: CoursesSimple\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/training',\r\n\t\t\tcomponent: Training\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/constructword',\r\n\t\t\tcomponent: ConstructWord\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/cards',\r\n\t\t\tcomponent: Cards\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/audio',\r\n\t\t\tcomponent: Audio\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/pronunciation',\r\n\t\t\tcomponent: Pronunciation\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/englishtorussian',\r\n\t\t\tcomponent: EnglishToRussian\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/russiantoenglish',\r\n\t\t\tcomponent: RussianToEnglish\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/videos', \r\n\t\t\tcomponent: Videos\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ted', \r\n\t\t\tcomponent: TED\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/engvid', \r\n\t\t\tcomponent: EngVid\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/britishcouncil', \r\n\t\t\tcomponent: BritishCouncil\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/khan', \r\n\t\t\tcomponent: Khan\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/conanobrien', \r\n\t\t\tcomponent: ConanOBrien\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmyfallon', \r\n\t\t\tcomponent: JimmyFallon\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmykimmel', \r\n\t\t\tcomponent: JimmyKimmel\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursera',\r\n\t\t\tcomponent: Coursera\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ellen',\r\n\t\t\tcomponent: Ellen\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/stephencolbert',\r\n\t\t\tcomponent: StephenColbert\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jamescorden',\r\n\t\t\tcomponent: JamesCorden\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/sethmeyers',\r\n\t\t\tcomponent: SethMeyers\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/texts',\r\n\t\t\tcomponent: TextsList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/tests',\r\n\t\t\tcomponent: Example\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t]\r\n\t*/\r\n/*\r\nReactDOM.render(  \r\n  <Router>\r\n\t  <div className=\"router-wrapper\">\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n\t  </div>\r\n  </Router>, document.getElementById('root'));\r\n*/"],"sourceRoot":""}