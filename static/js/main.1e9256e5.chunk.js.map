{"version":3,"sources":["ModalWord.js","actions/index.js","VocabWord.js","VocabSideMenu.js","TopMenu.js","VocabTopMenu.js","Vocabulary.js","SplittedWords.js","GrammarList.js","Statistics.js","Training.js","Main.js","ConstructWord.js","Proverbs.js","Cards.js","Audio.js","EnglishToRussian.js","RussianToEnglish.js","Videos.js","Fragments.js","Pronunciation.js","RecreateText.js","RecreateAudioText.js","InsertSpaces.js","videos/TED.js","videos/EngVid.js","videos/BritishCouncil.js","videos/Khan.js","videos/Coursera.js","videos/JimmyFallon.js","videos/JimmyKimmel.js","videos/ConanOBrien.js","videos/Ellen.js","videos/JamesCorden.js","videos/SethMeyers.js","videos/StephenColbert.js","TextsList.js","Decks.js","AudioList.js","Settings.js","BookList.js","Materials.js","Example.js","Rightwrong.js","grammar/GrammarPresentSimple.js","grammar/GrammarItem.js","grammar/GrammarPastSimple.js","grammar/GrammarFutureSimple.js","grammar/GrammarPresentContinuous.js","grammar/GrammarPastContinuous.js","grammar/GrammarFutureContinuous.js","grammar/GrammarPresentPerfect.js","grammar/GrammarFuturePerfect.js","grammar/GrammarPastPerfect.js","grammar/GrammarPresentPerfectContinuous.js","grammar/GrammarPastPerfectContinuous.js","grammar/GrammarFuturePerfectContinuous.js","AudioPlayer.js","Comments.js","ModalFont.js","ModalColor.js","WordFound.js","SelectedBook.js","reducers/index.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["Component","actions","updateTotalScore","score","type","payload","updateTodayScore","updateExerciseScore","number","updateTestsScore","updateWordsTotal","updateWordsRemaining","updateWordsStudied","changeColorScheme","val","changeSoundVolume","toggleVocabModal","selectVocabWord","word","voiceVocabWord","selectBook","book","selectFontSize","fontSize","selectFontFamily","fontFamily","selectFontSpacing","lineHeight","selectFontWeight","fontWeight","selectFontColor","fontColor","selectBgColor","backgroundColor","addCommentToBook","id","comment","toggleFontModal","state","toggleColorModal","toggleSearchModal","VocabWord","voiceWord","speech","say","openWord","console","log","_this","props","this","delete","react_default","a","createElement","List","Item","react","Image","avatar","src","image","Content","className","onClick","bind","Header","as","name","transcription","translation","Button","Group","title","Icon","connect","store","reducer","dispatch","bindActionCreators","VocabSideMenu","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","consoleParams","newItems","items","map","item","i","push","key","text","category","value","setState","options","getUnique","arr","unique","e","final","indexOf","filter","newFunc","slice","newObj","callbackFromParent","handleChange","_ref","consoleProps","_this2","axios","get","then","res","data","Menu","vertical","active","Dropdown","placeholder","fluid","clearable","search","selection","onChange","TopMenu","showModal","isModalVisible","changeLogin","event","inputLogin","target","changePassword","inputPassword","changeMail","inputMail","changeDoublePassword","doublePassword","Link","to","VocabTopMenu","updateSearch","substr","searchFunction","changeNameValue","inputName","changeTranslationValue","inputTranslation","changeMeaningValue","inputMeaning","changeCategoryValue","inputCategory","changeImageValue","inputImage","submitForm","newWords","words","inputStringDate","Date","toUTCString","inputDate","obj","meaning","date","unshift","callbackFromApp","searchFromApp","categories","categoryValue","voiceWordFromModal","sortByName","sortByTranslation","sortByDate","newFunction","Modal","trigger","primary","closeIcon","Form","Field","accept","Input","icon","Vocabulary","loadMore","prev","visible","filteredWords","isOldestFirst","sort","b","localeCompare","splice","findIndex","deleteWord","toggleModal","myCallback","dataFromChild","topMenuCallback","searchCallback","consoleState","vocabModalOpen","query","searchString","handler","assertThisInitialized","_this3","toLowerCase","size","selectedVocabWord","src_TopMenu","src_VocabSideMenu","src_VocabTopMenu","relaxed","index","src_VocabWord","length","SplittedWords","searchForWord","detail","newItem","replace","found","find","x","toggleFoundModal","selected","toggleInputModal","isModalFoundOpen","isModalInputOpen","changeFile","filePath","changeTranslation","changeDefinition","definition","addToWords","transription","fileInputRef","React","createRef","wordsEl","loaded","sentence","splitted","split","defineProperty","content","labelPosition","current","click","ref","hidden","concat","GrammarList","grammar","Table","celled","fixed","Row","columns","HeaderCell","rules","Body","Cell","description","link","Statistics","splitIntoArrays","nameArrays","create","forEach","nameArray","names","keys","values","finalData","tmp","lng","fin","Math","floor","barChartData","getYesterdaysDate","days","dateArray","setDate","getDate","getDay","j","lineChartData","contentArray","areTextsVisible","isMenuVisible","isSingleTextVisible","isResultVisible","isResultWrong","negativeWords","positiveWords","spllittedSentences","reservedSentences","seconds","minutes","secondsRemaining","intervalHandle","wrongIndexes","totalSecondsSpent","secondsSpent","minutesSpent","Card","itemsPerRow","Description","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","stroke","activeDot","r","Training","Main","ConstructWord","setStateOnStart","currentWord","currentFullWord","currentTranslation","currentMeaning","isStarterVisible","isCardVisible","isFinalVisible","inputValue","wordNameArray","nameArrayId","currentValue","currentImage","areButtonsVisible","isImageVisible","wordId","mistakeCount","animationState","fade","initialLoad","randomNameArray","random","document","body","addEventListener","myHandler","tempParam","checkValue","keyCode","continueTraining","startTraining","wordsLength","_ref2","newWord","currentName","compareWord","currentLetter","textContent","btn","Container","Label","onAnimationEnd","readOnly","maxLength","Divider","Message","Proverbs","shuffleArray","currentArray","negativeProverbs","positiveProverbs","proverbs","currentProverbName","proverb","constructedProverb","isCheckButtonVisible","isDKButtonVisible","isContinueButtonVisible","nameClass","setValue","indexTarget","parentElement","children","previousElementSibling","removeValue","dontKnow","checkProverb","join","el","_ref3","Cards","isButtonVisible","isTranslationVisible","showNavButtons","showContinueButton","result","renderComponent","checkResponse","Meta","extra","Audio","tempSearch","positiveResponse","isInputVisible","isLinkVisible","correctNameVisible","showImage","correctName","correctNameClass","metaClass","EnglishToRussian","flagState","disabled","selectedWord","currentButtonColor","RussianToEnglish","Videos","cons","videos","channelId","video","Fragments","texts","currentTempArray","currentStringArray","currentRandomWord","currentFinalArray","currentRandomArray","currentOneArray","activeInput","activeArray","sortedRandomArray","comparativeRandomArray","fragmentArrayIndexes","rightAnswers","livesArray","setMenuParams","difficulty","selectValue","readMore","buildLives","builtArray","backToTexts","pop","currentFullArray","currentWordArray","currentRandomIndexes","curArr","resetValue","activeTargetTitle","fragmentArray","fragmentDescription","getElementsByClassName","array","element","innerText","submitText","currentSortedArray","count","tryAgain","lives","livesCount","Pronunciation","startListening","submitResponse","objectTranscription","getElementById","positiveSentences","negativeSentences","currentSentence","currentSentenceContent","splittedText","newId","stopListening","callSubmit","resetTranscript","clearTranscription","transcript","newTranscript","substring","currentText","currentTextContent","showSubmitButtons","autostart","browserSupportsSpeechRecognition","recognition","isDeleteVisible","all","spread","textsRes","lang","SpeechRecognition","RecreateText","makeTextsVisible","createMenuItems","splitText","splittedSentenceVisible","startCountDown","tick","time","clearInterval","timeIsOut","setInterval","onDragStart","draggedItem","dataTransfer","effectAllowed","setData","setDragImage","onDragOver","draggedOverItem","onDragEnd","draggedIdx","checkSentences","splittedSentences","wrongCount","showFinal","selectCategory","menuChange","idx","draggable","RecreateAudioText","createTrack","currentTrack","Howl","html5","volume","audio","playing","playText","play","pause","InsertSpaces","inputContent","newContent","textsLoaded","isTaskStarted","setCaretPosition","ctrl","pos","setSelectionRange","focus","createTextRange","range","collapse","moveEnd","moveStart","select","updateValue","indexOfSpace","newstr","startExercise","TED","handleClick","currentPage","Number","Embed","autoplay","videoId","snippet","thumbnails","high","url","source","EngVid","BritishCouncil","Khan","currentComment","addComment","comments","temp","thumbsUp","likes","thumbsDown","dislikes","author","Coursera","JimmyFallon","JimmyKimmel","ConanOBrien","Ellen","JamesCorden","SethMeyers","StephenColbert","TextsList","activeTargetContent","activeTargetImage","Decks","constructMenu","level","arrayOfButtons","iconsArray","colors","arrayOfColors","allWords","currentWords","currentColor","isDropdownVisible","addToList","addedItems","addedFirst","sortedByTranslationUp","addedUp","sortedByNameUp","deleteItem","deleteAll","contentLoaded","firstResponse","secondResponse","style","sendWords","float","color","AudioList","categoryArray","startPlayer","currentState","playState","playAudio","currentAudio","backToDecks","Settings","changeColor","colorValue","email","password","colorOptions","BookList","createMenu","age","genres","sizes","ageTemp","sizesTemp","books","genre","hasOwnProperty","age_restriction","bookVal","bookValue","handleGenreChange","currentGenre","handleRatingChange","rating","handleLengthChange","currentLength","scrollToTop","window","scrollTo","myRef","offsetTop","allBoooks","areBooksVisible","isPreviewVisible","isSingleBookVisible","isBookNavPanelVisible","currentBook","currentPageIndex","currentArrayBooks","currentIndexArray","bookHTML","parsedBook","bookPages","currentEmail","errors","checkedItems","Map","checked","audiobooks","newAudio","currentAudioId","scrollForwardState","scrollBackwardState","currentVolume","currentRange","currentDuration","hours","allBooks","views","Rating","defaultRating","maxRating","pathname","Materials","Example","_this$state","getMenuParams","tests","testChange","parentid","getAttribute","currentTest","Array","selectTest","testId","activeTest","testItem","correctResults","tasks","correct_answer","areTestsVisible","isSingleTestVisible","backToTests","curIndexTest","curIndexCheckbox","correctAnswers","incorrectAnswers","checkResults","resultsArray","finalResults","isTooltipVisible","prevState","boxShadow","totalScore","variants","param","ind","label","Rightwrong","response","GrammarPresentSimple","goBack","fullData","stepId","currentTitle","currentDescription","currentExamples","examples","isBackButtonVisible","newfullData","consoleFunction","main_points","steps","exampleName","exampleTranslation","GrammarPastSimple","GrammarFutureSimple","GrammarPresentContinuos","GrammarPastContinuos","GrammarFutureContinuos","GrammarPresentPerfect","GrammarFuturePerfect","GrammarPastPerfect","GrammarPresentPerfectContinuous","GrammarPastPerfectContinuous","GrammarFuturePerfectContinuous","AudioPlayer","callFunctions","duration","currentId","soundVolume","on","decodingFinished","continuePlay","readTags","resetState","progress","currentMinutes","currentSeconds","jsmediatags","read","onSuccess","tag","currentTrackInfo","decodeTrackInfo","onError","error","info","currentTrackPicture","tags","artist","picture","_this$state$currentTr","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","currentTrackTitle","currentTrackArtist","playMusic","interval","startCycle","stop","changeVolume","nextTrack","prevTrack","muteSound","muted","mute","incTime","updateProgress","round","seek","toFixed","setSeek","currentTrackLength","order","tracksVisible","min","max","alt","Comments","datestring","getMonth","getFullYear","getHours","getMinutes","uuidv4","updateComment","updateName","updateEmail","booksComments","noComments","Fragment","TextArea","ModalFont","changeValue","fontSizeTemp","changeFontFamily","fontFamilyTemp","changeFontWeight","fontWeightTemp","changeLineHeight","lineHeightTemp","applyFontSettings","closeModal","step","ModalColor","setFontColor","fontState","currentTarget","activeFontColor","setBgColor","bgState","activeBgColor","applyColorSettings","isColorModalOpen","colorScheme","data-index","colorvalue","WordFound","closeSearchModal","SelectedBook","splitIntoPages","pages","pageIndexes","pagesCount","ceil","currentMin","currentMax","txt","newTxt","newSentence","splittedPage","prevButton","currentPageId","nextButton","changePage","toggleComments","commentsVisible","changeFont","closeInputModal","match","params","myHeaders","Headers","append","that","obj1","obj2","selectedBook","fetch","arrayBuffer","buffer","TextDecoder","decode","isSearchModalOpen","src_WordFound","isFontModalOpen","src_ModalFont","src_ModalColor","page","index1","index2","index3","index4","src_Comments","initialState","todayScore","exercisesComplete","testsComplete","wordsTotal","wordsStudied","wordsRemaining","commentId","arguments","undefined","action","objectSpread","vocabWord","newComments","toConsumableArray","createRootReducer","combineReducers","createStore","ReactDOM","render","es","BrowserRouter","basename","process","Route","exact","path","component","GrammarPresentContinuous","GrammarPastContinuous","GrammarFutureContinuous"],"mappings":"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","file":"static/js/main.1e9256e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon, Image, Modal,Header } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass ModalWord extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Modal className=\"modal-word\" trigger = {\r\n          <List.Content >\r\n            <span className=\"word-icon-wrapper\">\r\n               <Icon name='right eye' />\r\n            </span>\r\n          </List.Content>\r\n            } closeIcon>\r\n            <Modal.Content image>\r\n              <Image wrapped size='medium' src={this.props.image} />\r\n              <Modal.Description className=\"modal-word-description\">\r\n\r\n                <Header><h4><span onClick={this.props.voiceWordFromModal.bind(this)} ></span>{this.props.name} - {this.props.translation}                   <span>\r\n                    <Icon name = 'right microphone'/>\r\n                  </span> </h4></Header>\r\n                <div className=\"modal-icon-wrapper-delete\">\r\n                  <span>\r\n                    <Icon name = 'right trash alternate outline'/>\r\n                  </span>\r\n                </div>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n        </Modal>\r\n  );\r\n  }\r\n}\r\n\r\nexport default ModalWord;","let actions = {\r\n\tupdateTotalScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TOTAL_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\r\n\t},\r\n\tupdateTodayScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TODAY_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\t\t\r\n\t},\r\n\tupdateExerciseScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_EXERCISES_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateTestsScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsTotal: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_TOTAL',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsRemaining: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_REMAINING',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsStudied: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_STUDIED',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tchangeColorScheme: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_COLOR_SCHEME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tchangeSoundVolume: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'CHANGE_SOUND_VOLUME',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleVocabModal: function(val) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_VOCAB_MODAL',\r\n\t\t\tpayload: val\r\n\t\t}\t\t\r\n\t},\r\n\tselectVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\r\n\t},\r\n\tvoiceVocabWord: function(word) {\r\n\t\treturn {\r\n\t\t\ttype: 'VOICE_VOCAB_WORD',\r\n\t\t\tpayload: word\r\n\t\t}\t\t\r\n\t},\r\n\tselectBook: function(book) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BOOK',\r\n\t\t\tpayload: book\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSize: function(fontSize) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SIZE',\r\n\t\t\tpayload: fontSize\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontFamily: function(fontFamily) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_FAMILY',\r\n\t\t\tpayload: fontFamily\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontSpacing: function(lineHeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_SPACING',\r\n\t\t\tpayload: lineHeight\r\n\t\t}\t\t\r\n\t},\r\n\tselectFontWeight: function(fontWeight) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_WEIGHT',\r\n\t\t\tpayload: fontWeight\r\n\t\t}\t\t\r\n\t},\t\t\t\t\r\n\tselectFontColor: function(fontColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_FONT_COLOR',\r\n\t\t\tpayload: fontColor\r\n\t\t}\t\t\r\n\t},\r\n\tselectBgColor: function(backgroundColor) {\r\n\t\treturn {\r\n\t\t\ttype: 'SELECT_BG_COLOR',\r\n\t\t\tpayload: backgroundColor\r\n\t\t}\t\t\r\n\t},\r\n\taddCommentToBook: function(id, comment) {\r\n\t\treturn {\r\n\t\t\ttype: 'ADD_COMMENT_TO_BOOK',\r\n\t\t\tpayload: {id, comment}\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleFontModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_FONT_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleColorModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_COLOR_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t},\r\n\ttoggleSearchModal: function(state) {\r\n\t\treturn {\r\n\t\t\ttype: 'TOGGLE_SEARCH_MODAL',\r\n\t\t\tpayload: state\r\n\t\t}\t\t\r\n\t}\t\t\t\t\t\t\r\n\r\n}\r\n\r\nexport default actions;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Icon, Image } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport ModalWord from './ModalWord';\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass VocabWord extends Component {\r\n\r\n\r\n  delete(id){\r\n    this.props.delete(id);\r\n  }\r\n\r\n\r\n   voiceWord = (word) =>{\r\n      speech.say(word);\r\n   }\r\n\r\n   openWord = (word) => {\r\n    console.log(word);\r\n    this.props.actions.selectVocabWord(word);\r\n    this.props.actions.toggleVocabModal(true);\r\n   }\r\n\r\n  render() {\r\n    var descriptionVisible = false;\r\n    return (\r\n      <List.Item >\r\n        <Fragment>\r\n          <Image avatar src={this.props.image} />\r\n          <List.Content className=\"word-content\" onClick={this.openWord.bind(this, this.props.word)}>\r\n            <List.Header as='a'>{this.props.name} - {this.props.transcription} - {this.props.translation}</List.Header>\r\n            {descriptionVisible ?         \r\n              <List.Description className=\"word-meaning\">\r\n                  <b>{this.props.meaning}</b>\r\n              </List.Description> :null\r\n            }\r\n          </List.Content>\r\n        </Fragment>  \r\n      <List.Content>\r\n            <Button.Group>\r\n              <span onClick={this.voiceWord.bind(this, this.props.name)} className=\"word-icon-wrapper\" title=\"Озвучить\">\r\n                 <Icon name = 'right microphone'/>\r\n              </span>\r\n              <span onClick={this.delete.bind(this, this.props.id)} className=\"word-icon-wrapper\" title=\"Удалить\">\r\n                  <Icon name='right trash alternate outline' />\r\n              </span>\r\n            </Button.Group>              \r\n      </List.Content>\r\n    </List.Item>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VocabWord);","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {  Dropdown} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass VocabSideMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       items: [],\r\n       options: [],\r\n       value: null\r\n\r\n    }\r\n  }\r\n\r\n  \tUNSAFE_componentWillMount() {\r\n   \r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const items = res.data;\r\n\t        this.setState({ items }, () => this.consoleParams() );\r\n\t      }) \r\n\t  }\r\n\r\n\t  consoleParams = () =>{\r\n\t  \tlet newItems = [];\r\n\t  \tthis.state.items.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.category, \r\n                        value: item.category \r\n                     }))\r\n\t  \tthis.setState({\r\n\t  \t\toptions: newItems\r\n\t  \t}, () => this.getUnique())\r\n\t  }\r\n\r\n\t  getUnique = () => {\r\n\t  \tvar arr = this.state.options;\r\n\t  \tvar comp = 'text';\r\n  \t\t\tconst unique = arr\r\n       \t\t.map(e => e[comp])\r\n   \t\t\t\t.map((e, i, final) => final.indexOf(e) === i && i)\r\n    \t\t\t.filter(e => arr[e]).map(e => arr[e]);\r\n\t   \tthis.setState({\r\n\t   \t\toptions: unique\r\n\t   \t})\t\t\r\n\t\t}\r\n\r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var value = this.state.value;\r\n      var newObj = {};\r\n      newObj['value'] = value;\r\n      newObj['options'] = options;\r\n      this.props.callbackFromParent(newObj);\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )\r\n\r\n    consoleProps = () =>{\r\n      console.log(this.props);\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical className=\"side-menu\">\r\n        <Menu.Item name='inbox' active >\r\n          <Dropdown placeholder='Выберите категорию'\r\n                    fluid\r\n                    clearable\r\n                    value={this.state.value} \r\n                    search\r\n                    key={this.state.options.id}\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} />\r\n        </Menu.Item>\r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabSideMenu;","import React, { Component } from 'react';\r\nimport {Menu, Image, Icon, Modal, Form, Button} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      inputLogin: '',\r\n      inputPassword: '',\r\n      doublePassword: '',\r\n      inputMail: ''\r\n    }\r\n  }\r\n\r\n  showModal = () =>{\r\n      let state = this.state.isModalVisible;\r\n      this.setState({\r\n        isModalVisible: !state\r\n      },() => console.log(this.state.isModalVisible) )\r\n  }\r\n\r\n    changeLogin = (event) =>{\r\n      this.setState({\r\n        inputLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    changePassword = (event) =>{\r\n      this.setState({\r\n        inputPassword: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMail = (event) =>{\r\n      this.setState({\r\n        inputMail: event.target.value\r\n      })\r\n    }\r\n\r\n    changeDoublePassword = (event) =>{\r\n      this.setState({\r\n        doublePassword: event.target.value\r\n      })\r\n    }    \r\n\r\n  render() {\r\n    return (\r\n        <Menu className=\"top-menu\">\r\n          <Menu.Item>\r\n            <Link to=\"/\">Главная</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/vocabulary\">Словарь</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item>\r\n            <Link to=\"/grammar\">Грамматика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/training\">Тренировки</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/tests\">Тесты</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/materials\">Материалы</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/books\">Книги</Link>\r\n          </Menu.Item>           \r\n          {/*\r\n            <Menu.Item>\r\n              <Link to=\"/statistics\">Статистика</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/audioplayer\">Статистика</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/settings\">Настройки</Link>\r\n            </Menu.Item> \r\n          */}         \r\n             \r\n      \r\n\r\n        {/*\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Войти</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishLogin}>Войти</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Регистрация</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите e-mail</label>\r\n                  <input value={this.state.inputMail} onChange={this.changeMail} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>                   \r\n                <Form.Field>\r\n                  <label>Повторите пароль</label>\r\n                  <input value={this.state.doublePassword} onChange={this.changeDoublePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishRegistration}>Зарегистрироваться</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>                                             \r\n          <Menu.Item position=\"right\" className=\"menu-image\" >\r\n            {this.state.isModalVisible ?\r\n              <div className=\"user-modal\">\r\n                <div className=\"user-modal-pic\">\r\n                  <Image src=\"/icons/member.png\" />              \r\n                  <div className=\"user-modal-name\">\r\n                    <h5> User</h5>\r\n                    <h6>blabla@mail.com</h6>\r\n                  </div>                \r\n                </div>\r\n                <p><Link to=\"/statistics\"> <Icon name='chart bar outline' size='' />Статистика</Link></p>\r\n                <p><Link to=\"/settings\"> <Icon name='setting' size=''  />Настройки</Link></p>\r\n                <p><Link to=\"/statistics\"> <Icon name='log out' size=''  />Выйти</Link></p>\r\n              </div> : null\r\n            }\r\n            <Image className=\"user-avatar\" onClick={this.showModal} src=\"/icons/member.png\" />\r\n          </Menu.Item> \r\n        */}\r\n                                                                                                    \r\n        </Menu>\r\n \t);\r\n  }\r\n}\r\n\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport { Button, Menu, Modal, Form } from 'semantic-ui-react'\r\nimport { Input} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass VocabTopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      search: '',\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: '',\r\n      categories: [],\r\n      categoryValue: 'all'  \r\n    };\r\n    this.delete = this.delete;\r\n    this.voiceWord = this.voiceWord;\r\n    this.voiceWordFromModal = this.voiceWordFromModal;\r\n    this.sortByName = this.sortByName;\r\n    this.sortByTranslation = this.sortByTranslation;\r\n    this.sortByDate = this.sortByDate;\r\n    this.newFunction = this.newFunction;  \r\n    \r\n  }\r\n\r\n  consoleProps = () =>{\r\n    console.log(this.props)\r\n  }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({search: event.target.value.substr(0,20)}, ()=> this.searchFunction() );\r\n    } \r\n\r\n//загрузка слова\r\n    changeNameValue = (event) =>{\r\n      this.setState({\r\n        inputName: event.target.value\r\n      })\r\n    }\r\n\r\n    changeTranslationValue = (event) =>{\r\n      this.setState({\r\n        inputTranslation: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMeaningValue = (event) =>{\r\n      this.setState({\r\n        inputMeaning: event.target.value\r\n      })\r\n    }    \r\n\r\n    changeCategoryValue = (event) =>{\r\n      this.setState({\r\n        inputCategory: event.target.value\r\n      })\r\n    } \r\n\r\n    changeImageValue = (event) =>{\r\n      this.setState({\r\n        inputImage: event.target.value\r\n      })\r\n    }\r\n\r\n    submitForm = (e) =>{\r\n    var newWords = this.props.words.slice();\r\n    const inputName = this.state.inputName;\r\n    const inputTranslation = this.state.inputTranslation;\r\n    const inputMeaning = this.state.inputMeaning;\r\n    const inputCategory = this.state.inputCategory;\r\n    const inputStringDate = new Date().toUTCString();\r\n    console.log(inputStringDate);\r\n    const inputDate = new Date(inputStringDate);\r\n    const inputImage = this.state.inputImage;\r\n    const inputId = 30;\r\n    const obj ={'id': inputId,\r\n          'name': inputName, \r\n          'translation': inputTranslation, \r\n          'meaning': inputMeaning,\r\n          'image': inputImage, \r\n          'date': inputDate,\r\n          'category': inputCategory\r\n          } \r\n\r\n    newWords.unshift(obj); \r\n  \r\n      this.setState({ words: newWords}, () => console.log(this.state.words) );\r\n      this.setState({\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: ''\r\n      }, () => this.newFunc() )\r\n    }    \r\n\r\n    newFunc = () =>{\r\n      var words = this.state.words;\r\n      this.props.callbackFromApp(words);\r\n    }\r\n\r\n    searchFunction = () =>{\r\n      var search = this.state.search;\r\n      this.props.searchFromApp(search);\r\n    }    \r\n\r\n  render() {\r\n\r\n   return (\r\n      <Menu text className=\"vocab-top-menu-wrapper vocab-top-menu-wrapper-color\">\r\n        <Menu.Item>\r\n          <Modal className=\"modal-form\" trigger={<Button primary>Добавить слово</Button>} closeIcon>\r\n            <Form className=\"input-form\">\r\n              <Form.Field>\r\n                <label>Введите слово</label>\r\n                <input value={this.state.inputName} onChange={this.changeNameValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите перевод</label>\r\n                <input value={this.state.inputTranslation} onChange={this.changeTranslationValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите категорию</label>\r\n                <input value={this.state.inputCategory} onChange={this.changeCategoryValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Выберите изображение</label>\r\n                <input value={this.state.inputImage} onChange={this.changeImageValue} type=\"file\" accept=\"image/png, image/jpeg\" />\r\n              </Form.Field>                   \r\n              <Button primary onClick={this.submitForm}>Добавить</Button>\r\n            </Form>         \r\n          </Modal>\r\n        </Menu.Item>\r\n        <Menu.Item name='removeWords'> \r\n          <Button primary >\r\n            Удалить\r\n          </Button>\r\n        </Menu.Item>        \r\n        <Menu.Item name='byName'> \r\n          <Button primary onClick = {this.props.sortByName}>\r\n            по имени\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byTranslation'> \r\n          <Button primary onClick = {this.props.sortByTranslation}>\r\n            по переводу\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byMeaning'> \r\n          <Button primary onClick = {this.props.sortByDate}>\r\n            по дате\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n         <Input icon='search' placeholder='Search...' onChange={this.updateSearch}/>\r\n        </Menu.Item> \r\n   \r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabTopMenu;","import React, { Component, Fragment } from 'react';\r\nimport { List, Button, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport VocabWord from'./VocabWord'\r\nimport VocabSideMenu from'./VocabSideMenu'\r\nimport TopMenu from './TopMenu'\r\nimport VocabTopMenu from './VocabTopMenu'\r\nimport speech from 'speech-synth';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass Vocabulary extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twords: [],\r\n\t\t\tfilteredWords: [],\r\n\t\t\tisOldestFirst: true,\r\n\t\t\tvisible: 15,\r\n\t\t\tquery: '',\r\n\t\t\tsearchString: [],\r\n\t\t\tsearch: '',\r\n\t\t\tcategories: [],\r\n\t\t\tcategoryValue: 'all'\t\r\n\t\t};\r\n\t\tthis.delete = this.delete;\r\n\t\tthis.handler = this.handler.bind(this);\t\r\n\t\tthis.sortByName = this.sortByName;\r\n\t\tthis.sortByTranslation = this.sortByTranslation;\r\n\t\tthis.sortByDate = this.sortByDate;\r\n\t\r\n\t}\r\n\r\n handler() {\r\n    this.setState({\r\n     words: []\r\n    })\r\n  }\r\n\r\n//подгрузка слов\r\n\tloadMore = () => {\r\n\t    this.setState((prev) => {\r\n\t      return {visible: prev.visible + 15};\r\n\t    });\r\n\t  }\r\n\r\n//сортировка по дате\r\n\tsortByDate = () => {\r\n    const words = this.state.filteredWords.slice();\r\n    let newWords = [];\r\n    if(this.state.isOldestFirst){\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(b.date) - new Date(a.date);\r\n      });\r\n    }\r\n    else{\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(a.date) - new Date(b.date);\r\n      });      \r\n    }\r\n    this.setState({\r\n      isOldestFirst: !this.state.isOldestFirst,\r\n      filteredWords: newWords\r\n    })\r\n\t} \r\n\r\n//сортировка по имени\r\n\tsortByName = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name) /*console.log('a,b ', a,b) */ );\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name) /*console.log('b,a ', b,a) */ );\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n//сортировка по переводу\r\n\tsortByTranslation = () =>{\r\n\t\tconst words = this.state.filteredWords.slice();\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\tfilteredWords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\t    axios.get('./working.json')\r\n\t      .then(res => {\r\n\t        const words = res.data;\r\n\t        this.setState({ words, filteredWords: words });\r\n\t      })\r\n\t  }\r\n\r\n   delete = (id) =>{\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t})\r\n   }\r\n\r\n   deleteWord = (id) => {\r\n   \tlet words = this.state.words.slice();\r\n   \twords.splice(words.findIndex(function(i){\r\n    \treturn i.id === id;\r\n\t\t}), 1);\r\n   \tthis.setState({\twords\t}, () => this.toggleModal());\r\n   }\r\n\r\n   myCallback = (dataFromChild) =>{\r\n\t   \tlet words = this.state.words.slice();\r\n\t   \tlet filteredWords;\r\n\t   \tif (dataFromChild.value !== '') {\r\n\t   \t\tfilteredWords = words.filter(item => item.category == dataFromChild.value); \r\n\t   \t} else {\r\n\t   \t\tfilteredWords = words;\r\n\t   \t} \t\r\n   \t\tthis.setState({\r\n   \t\t\tfilteredWords,\r\n   \t\t\tcategoryValue: dataFromChild.value,\r\n   \t\t\toptions: dataFromChild.options\r\n   \t\t}) \r\n   }\r\n\r\n   topMenuCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\twords: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   searchCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tsearch: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   consoleState = () => {\r\n   \tconsole.log(this.state.categoryValue);\r\n   }\r\n\r\n   toggleModal = () => {\r\n   \tlet value = this.props.store.vocabModalOpen;\r\n   \tthis.props.actions.toggleVocabModal(!value);\r\n   }\r\n\r\n\r\n\r\n  render() {  \t\r\n  \tlet filteredWords = this.state.filteredWords.slice().filter(\r\n  \t\t(word) =>{\r\n  \t\t\treturn word.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n  \t\t}\r\n  \t);  \t\r\n    return (\r\n    \t<Fragment>\r\n    \t\t{this.props.store.vocabModalOpen ?\r\n\t    \t\t<div className=\"modal-container\">\r\n\t    \t\t\t<div className=\"modal-word\">\r\n\t    \t\t\t\t<span title=\"Закрыть\" onClick={this.toggleModal} className=\"modal-word__icon modal-word__icon--close\"><Icon name = 'close' size=\"large\" /></span>\r\n\t    \t\t\t\t<div className=\"modal-word__image\">\r\n\t    \t\t\t\t\t<img src = {this.props.store.selectedVocabWord.image} />\r\n\t    \t\t\t\t</div>\r\n\t    \t\t\t\t<p className=\"modal-word__title\">{this.props.store.selectedVocabWord.name} - <span className=\"modal-word__translation\">{this.props.store.selectedVocabWord.translation}</span></p>\r\n\t    \t\t\t\t<span onClick={this.deleteWord.bind(this, this.props.store.selectedVocabWord.id)} title=\"Удалить\" className=\"modal-word__icon modal-word__icon--delete\"><Icon size=\"large\" name = 'trash alternate outline'/></span>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n    \t\t: null}\r\n\t    \t<div className=\"content-wrapper\">\r\n\t    \t\t<TopMenu></TopMenu>\r\n\t    \t\t<div className=\"vocab-side-menu\">\r\n\t    \t\t\t<VocabSideMenu callbackFromParent={this.myCallback} items={this.state.words} ></VocabSideMenu>\r\n\t    \t\t\t<div className=\"vocab-top-menu\">\r\n\t    \t\t\t\t<VocabTopMenu \r\n\t    \t\t\t\t\thandler = {this.handler}\r\n\t    \t\t\t\t\tsortByName={this.sortByName}\r\n\t    \t\t\t\t\tsortByTranslation={this.sortByTranslation}\r\n\t    \t\t\t\t\tsortByDate ={this.sortByDate}\r\n\t     \t\t\t\t\tcallbackFromApp={this.topMenuCallback}\r\n\t    \t\t\t\t\tsearchFromApp={this.searchCallback} \r\n\t    \t\t\t\t\t>\r\n\t\t\t\t\t\t</VocabTopMenu>\r\n\t\t\t \t\t\t<List className=\"vocab-list\" relaxed='very'>\r\n\t\t\t\t\t\t\t{filteredWords.slice(0, this.state.visible).map((word,index) => \r\n\t\t\t\t\t\t\t\t(this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === word.category) && \r\n\t\t\t\t\t\t\t\t<VocabWord\r\n\t\t\t\t\t\t\t\t\tword = {word}\r\n\t\t\t\t\t\t\t\t\tdelete={this.delete}\r\n\t\t\t\t\t\t\t\t\tid={word.id}\r\n\t\t\t\t\t\t\t\t\tkey={word.id} \r\n\t\t\t\t\t\t\t\t\tname={word.name}\r\n\t\t\t\t\t\t\t\t\ttranscription = {word.transcription} \r\n\t\t\t\t\t\t\t\t\ttranslation={word.translation} \r\n\t\t\t\t\t\t\t\t\tmeaning={word.meaning}\r\n\t\t\t\t\t\t\t\t\timage={word.image} \r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t</VocabWord>\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t  \t\t\t</List>\r\n\t\t\t  \t\t\t<div className=\"load-more-button\">\r\n\t\t\t\t\t\t\t{this.state.visible < this.state.words.length &&\r\n\t\t\t\t            \t<Button onClick={this.loadMore} primary>Загрузить ещё</Button>\r\n\t\t\t\t          \t}\t\t\t\t  \t\t\t\t\r\n\t\t\t  \t\t\t</div>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    \t<footer></footer>\r\n\t    </Fragment>\t\r\n\t);\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vocabulary);\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n//import { pronounce } from \"node-pronounce\";\r\n\r\nclass SplittedWords extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.fileInputRef = React.createRef();\r\n    this.state = {\r\n      wordsEl: [],\r\n      words: [],\r\n      selected: '',\r\n      loaded: false,\r\n      isModalFoundOpen: false,\r\n      isModalInputOpen: false,\r\n      sentence: \"arched owl Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\"\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('/words_full.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let splitted = this.state.sentence.split(\" \");\r\n        this.setState({ \r\n          words, splitted, loaded: true\r\n      })    \r\n    })\r\n  } \r\n\r\n  searchForWord = (item, e) => {\r\n    switch (e.detail) {\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        let words = this.state.words.slice();\r\n        let newItem = item.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n        let found = words.find(x => x.name === newItem);\r\n        if (found) {\r\n          this.setState({\r\n            found\r\n          }, () => this.toggleFoundModal())\r\n        } else {\r\n          this.setState({\r\n            selected: newItem\r\n          }, () => this.toggleInputModal())\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }    \r\n  } \r\n\r\n  toggleFoundModal = () => {\r\n    this.setState({\r\n      isModalFoundOpen: !this.state.isModalFoundOpen\r\n    })\r\n  }\r\n\r\n  toggleInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: !this.state.isModalInputOpen\r\n    })\r\n  }\r\n\r\n  changeFile = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      filePath: e.target.value\r\n    })\r\n  }\r\n\r\n  changeTranslation = (e) => {\r\n    this.setState({\r\n      translation: e.target.value\r\n    })\r\n  }\r\n\r\n  changeDefinition = (e) => {\r\n    this.setState({\r\n      definition: e.target.value\r\n    })\r\n  }\r\n\r\n  addToWords = () => {\r\n    let word = {};\r\n    word.name = this.state.selected;\r\n    word.transription = this.state.transcription;\r\n    word.translation = this.state.translation;\r\n    word.category = \"common\";\r\n    word.id = 1;\r\n    word.date = new Date();\r\n    word.definition = this.state.definition;\r\n    word.image = this.state.filePath;\r\n  }\r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.isModalFoundOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n              <div className=\"word-modal\">\r\n                <div className=\"word-modal__image\">\r\n                  <img src=\"word-modal__picture\" src = {this.state.found.image}/>\r\n                </div>\r\n                <div className=\"word-modal__description\">\r\n                  <p className=\"word-modal__title\">{this.state.found.name} - {this.state.found.translation}</p>\r\n                  <p className=\"word-modal__meaning\">{this.state.found.definition}</p>   \r\n                  <Button primary onClick={this.toggleFoundModal}>Закрыть</Button>              \r\n                </div>\r\n              </div>              \r\n            </div>\r\n          : null}\r\n          {this.state.isModalInputOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n              <div className=\"word-modal\">\r\n                <div className=\"word-modal__description\">\r\n                  <p className=\"word-modal__title\">{this.state.selected}</p>\r\n                  <textarea value = {this.state.translation} onChange = {this.changeTranslation} type = \"text\" className=\"word-modal__textarea\" placeholder=\"Добавить перевод\" />\r\n                  <textarea value = {this.state.definition} onChange = {this.changeDefinition} type = \"text\" className=\"word-modal__textarea\" placeholder=\"Добавить значение\" />   \r\n                  <Button\r\n                      primary\r\n                      content=\"Выбрать картинку\"\r\n                      labelPosition=\"left\"\r\n                      icon=\"file\"\r\n                      onClick={() => this.fileInputRef.current.click()}\r\n                      className=\"word-modal__file\"\r\n                  />\r\n                  <input ref={this.fileInputRef}\r\n                         type=\"file\"\r\n                         hidden\r\n                         onChange={this.changeFile} />\r\n                  <div className=\"word-modal__buttons\">\r\n                    <Button primary onClick={this.addToWords}>Добавить</Button>\r\n                    <Button primary onClick={this.toggleInputModal}>Закрыть</Button>                      \r\n                  </div>\r\n                </div>\r\n              </div>              \r\n            </div>\r\n          : null}\r\n          {this.state.loaded ?\r\n            <div className=\"splitted-wrapper\">\r\n              {this.state.splitted.map((item, index) => \r\n                <span onClick={this.searchForWord.bind(this, item)}>{`${item} `}</span>\r\n              )}\r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SplittedWords;","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass GrammarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      grammar: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          const grammar = res.data;\r\n          this.setState({ grammar });\r\n        })\r\n    } \r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {(this.state.grammar.length) ?\r\n          <Table celled fixed className=\"grammar-list\">\r\n            <Table.Header>\r\n              <Table.Row columns={1} >\r\n                <Table.HeaderCell>Грамматические правила</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>        \r\n            {this.state.grammar[0].rules.map((item,index) =>\r\n              <Table.Body key={index}>\r\n                <Table.Row columns={3}>\r\n                  <Table.Cell className=\"grammar-title\">\r\n                    {item.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-description\">\r\n                    {item.description}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-button\">\r\n                    <div className=\"link-wrapper\">\r\n                      <Link to={item.link}>Начать</Link>\r\n                    </div>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            )}\r\n          </Table>: null }        \r\n          </div>\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GrammarList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nclass Statistics extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      words: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n\r\n        this.setState({ \r\n          words\r\n        }, () => this.splitIntoArrays());\r\n      })\r\n\r\n\r\n        \r\n  }   \r\n\r\n  splitIntoArrays = () =>{\r\n    var nameArrays = Object.create(null);\r\n    let words = this.state.words.slice();\r\n    words.forEach(function(word) {\r\n      var nameArray = nameArrays[word.category];\r\n      if (!nameArray) {\r\n        nameArray = nameArrays[word.category] = [];\r\n      }\r\n      nameArray.push(word);\r\n    });\r\n  \tlet names = Object.keys(nameArrays);\r\n  \tlet values = Object.values(nameArrays);\r\n  \tlet finalData = [];\r\n  \tfor (var i = 0; i < names.length; i++) {\r\n  \t\tlet tmp = {};\r\n  \t\tlet lng = values[i].length;\r\n  \t\tlet fin = Math.floor(lng/3);\r\n      \ttmp['Всего слов'] = lng;\r\n      \ttmp['Добавлено слов'] = fin;\r\n      \ttmp['name'] = names[i];\r\n      \tfinalData.push(tmp);\r\n  \t}\r\n  \tthis.setState({\r\n  \t\tnameArrays: nameArrays,\r\n  \t\tbarChartData: finalData\r\n  \t}, () => this.getYesterdaysDate() )     \r\n\r\n  }\r\n\r\n\tgetYesterdaysDate = () => {\r\n    let data = this.state.barChartData.slice(0,6);\r\n\t\tvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let dateArray = [];\t\t\r\n    var date = new Date();\r\n    let i = 0;\r\n    while ( i < 6) {\r\n\t\t  date.setDate(date.getDate() - 1);\r\n      //date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\t    dateArray.push(days[date.getDay()]); \r\n\t    i++;  \t\r\n    }\r\n    for (var j = 0; j < data.length; j++) {\r\n      data[j][\"name\"] = dateArray[j]\r\n    }\r\n    this.setState({\r\n      lineChartData: data\r\n    }, () => console.log(this.state))\r\n\r\n\r\n\t}\r\n\r\n  consoleState = () =>{\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item>\r\n                    <Button onClick={this.getYesterdaysDate}>Press</Button>\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {this.state.areTextsVisible ?\r\n              <Card.Group className=\"texts-cards statistics-wrapper\" itemsPerRow={1} >\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Графики</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n    \t\t              <BarChart\r\n    \t\t                width={800}\r\n    \t\t                height={450}\r\n    \t\t                data={this.state.barChartData}\r\n    \t\t                margin={{\r\n    \t\t                  top: 20, right: 30, left: 20, bottom: 5,\r\n    \t\t                }}\r\n    \t\t              >\r\n    \t\t                <CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t\t                <XAxis dataKey=\"name\" />\r\n    \t\t                <YAxis />\r\n    \t\t                <Tooltip />\r\n    \t\t                <Legend />\r\n    \t\t                <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n    \t\t                <Bar dataKey=\"Добавлено слов\" fill=\"#444444\" />\r\n    \t\t              </BarChart>\r\n                    </Card.Description>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <LineChart\r\n                        width={800}\r\n                        height={450}\r\n                        data={this.state.lineChartData}\r\n                        margin={{\r\n                          top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"Всего слов\" stroke=\"#3281F0\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"Добавлено слов\" stroke=\"#444444\" />\r\n                      </LineChart>\r\n                    </Card.Description>                    \r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Результаты</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                    \t<a className=\"active\">сегодня</a>\r\n                    \t<a>за неделю</a>\r\n                    \t<a>за месяц</a>\r\n                      <a>за всё время</a>\r\n                    </div>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span>\r\n\t                      \t\t\t<Icon name = 'plus square outline'/>\r\n\t                      \t\t</span>\r\n\t                      \t\t<h1>24</h1>\r\n\t                      \t\t<p>Слов добавлено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'file text'/></span>\r\n\t                      \t\t<h1>3</h1>\r\n\t                      \t\t<p>Упражнений выполнено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'gem outline'/></span>\r\n\t                      \t\t<h1>5</h1>\r\n\t                      \t\t<p>Фраз выучено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>14</h1>\r\n\t                      \t\t<p>Страниц прочитано</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'cogs'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Курсов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Тестов пройдено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>           \t                      \t\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Слова</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>1210</h1>\r\n\t                      \t\t<p>Слов всего</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>54</h1>\r\n\t                      \t\t<p>Слов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'question circle outline'/></span>\r\n\t                      \t\t<h1>1156</h1>\r\n\t                      \t\t<p>Слов на изучении</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>                \r\n              </Card.Group>: null\r\n             } \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Statistics;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Training extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper training-cards\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/englishtorussian.jpg' />              \r\n              </div>\r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/englishtorussian\">С английского на русский </Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/russiantoenglish.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/russiantoenglish\">С русского на английский</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/memory.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/cards\">Словарные карточки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/audio.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/audio\">Аудиотренировка</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/construct.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/constructword\">Конструктор слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n          {/*\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/pronunciation.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/pronunciation\">Произношение</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>  \r\n          */}\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/fillthegaps.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/fragments\">Заполни пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreatetext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreatetext\">Воспроизведи текст</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/recreateaudiotext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreateaudiotext\">Воспроизведи аудиоисторию</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/insertspaces.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/insertspaces\">Расставьте пробелы</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/truefalse.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/rightwrong\">Верно-неверно</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='./training/proverbs.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/proverbs\">Пословицы и поговорки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>                                                                                                               \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Training;","import React, { Component, Fragment } from 'react';\r\nimport {Image } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n}\r\n \r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper recommended-wrapper\">\r\n          \t<div className=\"main-section section-1\">\r\n          \t  <div className=\"section-overlay\">\r\n          \t  \t<div className=\"section-header\">\r\n          \t  \t\t<h2>Лучший способ выучить язык</h2>\r\n          \t  \t\t<Link to=\"/training\" className=\"outline-link\">Начать учиться</Link>\r\n          \t  \t</div>\r\n          \t  </div>              \r\n            </div>\r\n          \t<div className=\"advantage-section\">\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/settings.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Простой интерфейс</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notebook.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Удобный словарь</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/user.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разнообразные тренировки</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notepad.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Большое количество обучающих материалов</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/house.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Грамматика и тесты</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/pen.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Полностью бесплатно</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>          \t                \r\n            </div>            \r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image words-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Изучайте слова</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>20 тематических наборов</li>\r\n\t            \t\t\t<li>Более 2000 слов</li>\r\n\t            \t\t\t<li>Словарь с расширенным функционалом</li>            \t\t\t            \t\t\t\r\n\t            \t\t\t<li>Возможность изучать добавленные слова</li>            \t\t\t\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/vocabulary\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Тренируйтесь</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>11 видов тренировок</li>\r\n\t            \t\t\t<li>Тренировка чтения, говорения и понимания на слух</li>\r\n\t            \t\t\t<li>Возможность добавлять на тренировку изучаемые слова</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/training\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image training-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image grammar-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Учите грамматику</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Изучение грамматики английского языка</li>\r\n\t            \t\t\t<li>Наглядные примеры</li>\r\n\t            \t\t\t<li>Тесты на любую тематику</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/grammar\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Улучшайте навыки чтения</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Множество текстов и аудиотекстов различной тематики</li>\r\n\t            \t\t\t<li>Тексты разного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/texts\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image texts-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n          {/*\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image books-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Читайте книги</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Книги на любой вкус</li>\r\n\t            \t\t\t<li>Возможность слушать аудиокниги</li>\r\n\t            \t\t\t<li>Книги различного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/books\" className=\"outline-link\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div> \r\n          */}  \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message, TextArea} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport './style.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass ConstructWord extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    \tthis.btn = React.createRef();\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentWord: '',\r\n        currentFullWord: null,\r\n        currentTranslation: '',\r\n        currentMeaning: '',\r\n        isStarterVisible: true,\r\n        isCardVisible: false,\r\n        isFinalVisible: false,\r\n        inputValue: null,\r\n        nameArray: [],\r\n        wordNameArray: [],\r\n        nameArrayId: 0,\r\n        currentValue: '',\r\n        search: '',\r\n        currentImage: null,\r\n        areButtonsVisible: true,\r\n        isImageVisible: false,\r\n        wordId: 0,\r\n        mistakeCount: 0,\r\n        animationState: false,\r\n        fade: false        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/vocabulary2.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        const currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n        const currentTranslation = words[id].translation;\r\n        const currentImage = words[id].image;\r\n        const currentMeaning = words[id].meaning;\r\n        const nameArray = currentWord.split('');\r\n        const randomNameArray = currentWord.split('');\r\n        for (let i = randomNameArray.length - 1; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n        }\r\n        const wordNameArray = [];\r\n        for (var i = 0; i < nameArray.length; i++) {\r\n          wordNameArray.push(' ');\r\n        }\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          currentFullWord\r\n          });\r\n      })\r\n      document.body.addEventListener(\"keydown\", this.myHandler);\r\n    }\r\n \r\n  myHandler = (e) =>{\r\n    const fade = this.state.fade;\r\n    let mistakeCount = this.state.mistakeCount;\r\n    let currentFullWord = this.state.currentFullWord;\r\n    let negativeWords = this.state.negativeWords.slice();\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let currentValue = this.state.currentValue;\r\n    let currentWord = this.state.currentWord;      \r\n    let id = this.state.nameArrayId;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let tempParam;\r\n    if ((e.key=== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        currentValue = currentValue + e.key;\r\n        this.state.wordNameArray[id] = e.key;\r\n        for (var i = 0; i < randomNameArray.length; i++) {\r\n          if (randomNameArray[i] === e.key) {\r\n            tempParam = i;\r\n            break;\r\n          }\r\n        }\r\n        randomNameArray.splice(tempParam,1);       \r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: e.key,\r\n          randomNameArray\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((e.key !== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        mistakeCount++;\r\n        this.setState({\r\n          mistakeCount,\r\n          fade: true\r\n        })\r\n      }\r\n      else if((e.keyCode == '13') && (this.state.isCardVisible) ){\r\n        this.continueTraining();\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false\r\n        })        \r\n      }\r\n  }    \r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let currentFullWord = this.state.currentFullWord;\r\n\t  let negativeWords = this.state.negativeWords.slice();\r\n\t  let positiveWords = this.state.positiveWords.slice();\r\n\t  let currentValue = this.state.currentValue;\r\n\t  let currentWord = this.state.currentWord;\t  \r\n\t\tif (mistakeCount > 2){\r\n\t\t\tnegativeWords.push(currentFullWord);\r\n\t\t}\r\n\r\n\t\telse if(currentWord !== currentValue){\r\n\t\t  \tnegativeWords.push(currentFullWord);\r\n\t\t  \tthis.setState({\r\n\t\t  \t\tnegativeWords\r\n\t\t  \t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpositiveWords.push(currentFullWord)\r\n\t\t} \r\n      let id = this.state.id;\r\n      let wordsLength = this.state.words.length;\r\n      let words = this.state.words; \r\n\r\n      id = id + 1;\r\n       if(id < wordsLength) {\r\n       \tconst currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n\t\tconst currentTranslation = words[id].translation;\r\n\t\tconst currentImage = words[id].image;\r\n\t\tconst currentMeaning = words[id].meaning;        \r\n\t\tconst nameArray = currentWord.split('');\r\n\t\tconst randomNameArray = currentWord.split('');\r\n\t\tfor (let i = randomNameArray.length - 1; i > 0; i--) {\r\n\t\t    const j = Math.floor(Math.random() * (i + 1));\r\n\t\t    [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n\t\t}\r\n\t\tconst wordNameArray = [];\r\n\t\tfor (var i = 0; i < nameArray.length; i++) {\r\n\t\t\twordNameArray.push(' ');\r\n\t\t}\r\n        this.setState({\r\n            id,\r\n            words, \r\n            currentWord,\r\n            currentFullWord,\r\n            currentTranslation,\r\n            currentImage,\r\n            currentMeaning,\r\n            randomNameArray,\r\n            nameArray,\r\n            wordNameArray,\r\n            isImageVisible: false,\r\n            areButtonsVisible: true,\r\n            currentValue: '',\r\n            nameArrayId: 0,\r\n            mistakeCount: 0,\r\n            positiveWords,\r\n            negativeWords\r\n        })\r\n      }\r\n        else{\r\n          this.setState({\r\n           isFinalVisible: true,\r\n           isCardVisible: false,\r\n           isStarterVisible: false,\r\n      \t\t\tpositiveWords,\r\n      \t\t\tnegativeWords           \r\n          })\r\n        }\r\n    }\r\n  \r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }  \r\n\r\n   checkValue = () =>{\r\n   \tvar currentWord = this.state.currentWord;\r\n    var currentValue = this.state.currentValue;\r\n    if(currentWord.length === currentValue.length){\r\n    \tthis.setState({\r\n    \t\tareButtonsVisible: false,\r\n    \t\tisImageVisible: true\r\n    \t})\r\n    }   \t\r\n   }\r\n\r\n   compareWord = (e) =>{\r\n    var id = this.state.nameArrayId;\r\n    var currentWord = this.state.currentWord;\r\n    var nameArray = this.state.nameArray;\r\n    var randomNameArray = this.state.randomNameArray;\r\n    var currentValue = this.state.currentValue;\r\n    var currentLetter = e.target.textContent.slice(0,1);\r\n    var mistakeCount = this.state.mistakeCount;\r\n      if( (currentLetter === nameArray[id]) && (currentValue.length < currentWord.length) ){\r\n        e.target.className = \"hidden\";\r\n        currentValue = currentValue + currentLetter;\r\n        this.state.wordNameArray[id] = currentLetter;\r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: currentLetter\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((currentLetter !== nameArray[id]) && (currentValue.length < currentWord.length)) {\r\n\t      mistakeCount++;\r\n\t      this.setState({\r\n\t      \tmistakeCount,\r\n          fade: true\r\n\t      })\r\n      }\r\n      else {\r\n      \tthis.setState({\r\n      \t\tisFinalVisible: true,\r\n      \t\tisCardVisible: false\r\n      \t})      \t\r\n      }\r\n} \r\n\r\n\r\n\r\n  render() {\r\n    const fade = this.state.fade;\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/construct.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n            <Container \r\n                onAnimationEnd={() => this.setState({ fade: false })}\r\n                className={fade ? 'fade construct-word-container' : 'construct-word-container'}>\r\n              <ul>\r\n              {this.state.wordNameArray.map((name,index) =>\r\n                <input key={index}  readOnly value={name} maxLength=\"1\" />\r\n               )}\r\n              </ul>\r\n              {this.state.areButtonsVisible ? \r\n\t              <ul>\r\n\t              {this.state.randomNameArray.map((name,index) =>\r\n\t                <li key={index} \r\n                      onClick={this.compareWord}\r\n                  > \r\n                      {name} \r\n                  </li>\r\n\t               )}\r\n\t              </ul>: null \r\n              }\r\n            {this.state.isImageVisible ?\r\n            \t<Fragment>\r\n            \t\t<p>{this.state.currentMeaning}</p>\r\n                   <div className=\"texts-image-wrapper\">\r\n                    <Image src={this.state.currentImage} ></Image>\r\n                  </div>\r\n            \t</Fragment> \r\n            \t : null\r\n            }\r\n            </Container>\r\n            <Button primary onClick={this.continueTraining} >Продолжить</Button>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default ConstructWord;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Proverbs extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n    shuffleArray = () =>{\r\n      let currentArray = this.state.currentArray.slice();\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n  \t  let mistakeCount = this.state.mistakeCount;\r\n  \t  let negativeProverbs = this.state.negativeProverbs.slice();\r\n  \t  let positiveProverbs = this.state.positiveProverbs.slice();\r\n      let id = this.state.id;\r\n      let proverbs = this.state.proverbs;\r\n      id = id + 1;\r\n      if (id < 2) {\r\n        const currentProverb = proverbs[id];\r\n        const currentProverbName = proverbs[id].proverb;\r\n        const currentTranslation = proverbs[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }        \r\n        this.setState({\r\n            id,\r\n            proverbs, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray,\r\n            constructedProverb: [],\r\n            positiveProverbs,\r\n            negativeProverbs,\r\n            isCheckButtonVisible: false,\r\n            isDKButtonVisible: true,\r\n            isContinueButtonVisible: false,\r\n            isResultWrong: false,\r\n            nameClass: ''\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false,\r\n          isStarterVisible: false,\r\n          positiveProverbs,\r\n          negativeProverbs           \r\n        })\r\n      }\r\n  }\r\n\r\n   setValue = (e) =>{\r\n    let target = e.target;\r\n    let parent = e.target.parentElement.children;\r\n    var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n    }\r\n    let constructedProverb = this.state.constructedProverb;\r\n    let currentArray = this.state.currentArray;\r\n    currentArray.splice(indexTarget,1);\r\n    constructedProverb.push(e.target.textContent);\r\n\r\n    this.setState({\r\n      constructedProverb: constructedProverb\r\n    })\r\n    if(currentArray.length == 0){\r\n      this.setState({\r\n        isCheckButtonVisible: true,\r\n        isDKButtonVisible: false\r\n      })\r\n    }\r\n  } \r\n\r\n    removeValue = (e) =>{\r\n      let target = e.target;\r\n      let parent = e.target.parentElement.children;\r\n      var indexTarget = 0;\r\n          while ( (target = target.previousElementSibling) ) {\r\n            indexTarget++\r\n      }\r\n      let constructedProverb = this.state.constructedProverb;\r\n      let currentArray = this.state.currentArray;\r\n      constructedProverb.splice(indexTarget,1);\r\n      currentArray.push(e.target.textContent);\r\n      this.setState({\r\n        currentArray\r\n      })\r\n      if(currentArray.length > 0){\r\n        this.setState({\r\n          isCheckButtonVisible: false\r\n        })\r\n      }\r\n  }\r\n\r\n  dontKnow = (e) =>{\r\n    let negativeProverbs = this.state.negativeProverbs;    \r\n    let currentProverbName = this.state.currentProverbName;\r\n    let currentArray = currentProverbName.split(\" \");\r\n    let constructedProverb = [];\r\n    for (var i = 0; i < currentArray.length; i++) {\r\n      constructedProverb.push(currentArray[i])\r\n    }\r\n    negativeProverbs.push(currentProverbName);\r\n    this.setState({\r\n      currentArray: [],\r\n      isDKButtonVisible: false,\r\n      isContinueButtonVisible: true,\r\n      isCheckButtonVisible: false,\r\n      constructedProverb\r\n    })\r\n  }\r\n\r\n  checkProverb = (e) =>{\r\n    let positiveProverbs = this.state.positiveProverbs.slice();\r\n    let negativeProverbs = this.state.negativeProverbs.slice();\r\n    var sentence = this.state.constructedProverb.slice().join(' ');\r\n    if(sentence === this.state.currentProverbName){\r\n      positiveProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        nameClass: 'audio-name-green',\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        positiveProverbs\r\n      })      \r\n    }\r\n    else {\r\n      negativeProverbs.push(this.state.currentProverbName)\r\n      this.setState({\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        nameClass: 'audio-name-red',\r\n        isResultWrong: true,\r\n        negativeProverbs\r\n      })      \r\n    }\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      proverbs: [],\r\n      id: 0,\r\n      currentProverbName: '',\r\n      currentTranslation: '',\r\n      mistakeCount: 0,\r\n      positiveProverbs: [],\r\n      negativeProverbs: [],\r\n      currentArray: [],\r\n      isStarterVisible: true,\r\n      isCardVisible: false,\r\n      isFinalVisible: false,\r\n      areButtonsVisible: false,\r\n      isContinueButtonVisible: false,\r\n      isCheckButtonVisible: false,\r\n      isDKButtonVisible: true,\r\n      constructedProverb: [],\r\n      nameClass: '',\r\n      isResultWrong: false      \r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    let id = this.state.id;\r\n    axios.get('/proverbs.json')\r\n      .then(res => {\r\n        const proverbs = res.data;\r\n        let random = [];\r\n        while(random.length < 2) {\r\n          var el = proverbs[Math.floor(Math.random() * proverbs.length)];\r\n          if (random.indexOf(el) === -1) {\r\n            random.push(el)\r\n          };                \r\n        }\r\n  \r\n        const currentProverb = random[id];\r\n        const currentProverbName = random[id].proverb;\r\n        const currentTranslation = random[id].translation;\r\n        let currentArray = currentProverbName.split(\" \");\r\n        for (let i = currentArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n        }                    \r\n        this.setState({ \r\n            proverbs: random, \r\n            currentProverbName,\r\n            currentTranslation,\r\n            currentArray\r\n          });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/proverbs.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card proverb-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n              <div className={`proverb-result ${this.state.nameClass}`} >\r\n                  {this.state.constructedProverb.map((item,index) =>\r\n                      <span key={index} className=\"proverb-span\" onClick={this.removeValue}>{item}</span>\r\n                  )}\r\n              </div>\r\n              {this.state.isResultWrong ?\r\n                <div className={`proverb-result audio-name-green`}>\r\n                  {this.state.currentProverbName}\r\n                </div> : null\r\n              }\r\n              <div className=\"fragment-variants\">\r\n                {this.state.currentArray.map((item, index) =>\r\n                  <span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"proverb-button-container\">\r\n              {this.state.isCheckButtonVisible ? \r\n                <Button primary onClick={this.checkProverb} >Проверить</Button> : null\r\n              }\r\n              {this.state.isDKButtonVisible ? \r\n                <Button primary onClick={this.dontKnow}>Не знаю</Button> :null\r\n              }\r\n              {this.state.isContinueButtonVisible ? \r\n                <Button primary onClick={this.continueTraining} >Продолжить</Button> : null\r\n              }                \r\n              </div>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeProverbs.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveProverbs.length ? this.state.positiveProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          ) : null}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeProverbs.map((item, index) => \r\n                            <List.Item key={index} ><span>{item}</span></List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveProverbs.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {2 - this.state.positiveProverbs.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Proverbs;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\n\r\nclass Cards extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });          \r\n        })\r\n   }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (val) => {\r\n      if (val) {\r\n        var positiveWords = this.state.positiveWords.slice();\r\n        positiveWords.push(this.state.currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n        })        \r\n      } else {\r\n        var negativeWords = this.state.negativeWords.slice();\r\n        negativeWords.push(this.state.currentWord);      \r\n        this.setState({\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true\r\n        })        \r\n      }     \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      let result = this.state.result;\r\n      id = id + 1;\r\n      if (id < result.length){ \r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];       \r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n      })\r\n    }\r\n\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }    \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Словарные карточки</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent} >Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n           <div className=\"card-image-wrapper recognize-cards\">\r\n             <Image src={this.state.currentWord.image} />\r\n           </div>\r\n              <Card.Content>\r\n                <Card.Header>{this.state.currentWord.name} \r\n                <span onClick={this.voiceWord} className=\"training-card__icon\" title=\"Прослушать\">\r\n                  <Icon name = 'right sound'/> \r\n                </span>\r\n                </Card.Header>\r\n                {this.state.isTranslationVisible ? \r\n                  <Fragment>\r\n                    <Card.Meta>{this.state.currentWord.translation}</Card.Meta>\r\n                    <Card.Description>{}</Card.Description>                  \r\n                  </Fragment>:null\r\n                }\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} primary>Знаю</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} primary>Не знаю</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  { (this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Cards;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Audio extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({\r\n        search: event.target.value.substr(0,20),\r\n        tempSearch: event.target.value.substr(0,20)});\r\n    }  \r\n\r\n\r\n    positiveResponse = () =>{\r\n      let positiveWords = this.state.positiveWords.slice();\r\n      let negativeWords = this.state.negativeWords.slice();\r\n      let currentWord = this.state.currentWord;\r\n      let search = this.state.search;\r\n\r\n      if(currentWord.name === search){\r\n        positiveWords.push(currentWord);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-green'\r\n        })\r\n      }\r\n      else if(search === ''){\r\n        negativeWords.push(currentWord);        \r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red',\r\n          tempSearch: 'нет ответа'\r\n        }) \r\n      }\r\n\r\n      else {\r\n        negativeWords.push(currentWord);\r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red'\r\n        })        \r\n      }\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < result.length) { \r\n      const currentWord = result[id][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({\r\n          id,\r\n          currentWord,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: true,\r\n          isInputVisible: true,\r\n          search: '',\r\n          correctNameVisible: false        \r\n        })\r\n      } \r\n\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          correctNameVisible: false,\r\n          search: ''\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var word = this.state.currentWord.name;\r\n      speech.say(word);\r\n   }  \r\n\r\n   showImage = () => {\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false,\r\n        correctNameVisible: false,\r\n        correctName: null,\r\n        correctNameClass: 'audio-name-green',\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        tempSearch: '',\r\n        metaClass: 'blue',\r\n        nameClass: ''         \r\n      }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result }, () => console.log(this.state.result));\r\n        })\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />\r\n            </div>  \r\n              <Card.Content>\r\n                <Card.Header>Аудирование</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group>:\r\n          null\r\n        }\r\n         {this.state.isCardVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"audio-header-wrapper\" >\r\n             <Card className=\"audio-training\"  >\r\n                <Card.Content>\r\n                  <Card.Header className=\"audio-header\">\r\n                    <Button onClick={this.voiceWord} primary><Icon size=\"big\" name=\"microphone\"></Icon></Button>\r\n                    {this.state.isInputVisible ?\r\n                      <Input placeholder=\"Введите прослушанное слово\" id=\"audo-input\" onChange={this.updateSearch}/>:null\r\n\r\n                    } \r\n                  </Card.Header>\r\n                  {this.state.isTranslationVisible ? \r\n                    <Fragment>\r\n                    {this.state.correctNameVisible ? <Card.Meta className={this.state.correctNameClass}>{this.state.currentWord.name}</Card.Meta>: null }\r\n                      <Card.Meta className={this.state.nameClass}>{this.state.tempSearch}</Card.Meta>\r\n                      <Card.Meta className={this.state.metaClass}>{this.state.currentWord.translation}</Card.Meta>\r\n                      <Card.Description className=\"audio-description\">{}</Card.Description>                  \r\n                    </Fragment>:null\r\n                  }\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className=\"audio-image-outer-wrapper\">\r\n                  {this.state.isImageVisible ?\r\n                   <div className=\"audio-image-wrapper\">\r\n                     <Image src={this.state.currentWord.image} />\r\n                   </div> :null\r\n                 }\r\n                 {this.state.isLinkVisible ?\r\n                   <div className=\"audio-image-text\">\r\n                       <a onClick={this.showImage}>Show hint</a>\r\n                   </div> :null\r\n                  }                 \r\n                </div>\r\n                  <Button.Group className=\"audio-buttons-wrapper\">\r\n                  {this.state.showNavButtons ?\r\n                  <Fragment>\r\n                    <Button onClick={this.positiveResponse} primary>Проверить</Button>\r\n                  </Fragment>:null\r\n                  }  \r\n                  {this.state.showContinueButton ?\r\n                    <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n\r\n                  }\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group> :\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          </div>\r\n          <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Audio;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EnglishToRussian extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      currentWord: '',\r\n      flagState: false,\r\n      result: [],\r\n      disabled: false        \r\n    }, () => {\r\n      this.initialLoad();\r\n    })\r\n  }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n          for (var i = 0; i < 10; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({ \r\n            words, \r\n            currentWord,\r\n            result });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if (id < result.length) {\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];\r\n          this.setState({\r\n            id,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            currentWord,\r\n            disabled: false\r\n          })\r\n        }  \r\n\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          search: ''\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var name = this.state.currentName;\r\n      speech.say(name);\r\n   }  \r\n\r\n   showImage = ()=>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  } \r\n\r\n   dontKnow = () =>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true\r\n    })\r\n   }\r\n\r\n      render() {\r\n        return (\r\n          <Fragment>\r\n          <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n           {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n              <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/englishtorussian.jpg' />\r\n              </div>  \r\n                <Card.Content>\r\n                  <Card.Header>Перевод</Card.Header>\r\n                  <Card.Description>\r\n                    <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n           {this.state.isCardVisible ?\r\n           \t<Container className=\"list-container\">\r\n           \t\t<Card className=\"training-card\">\r\n    \t       \t\t<Label>\r\n                  {this.state.currentWord.name}\r\n                    <span className=\"training-card__icon\" onClick={this.voiceWord} title=\"Прослушать\">\r\n                      <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n                    </span>\r\n                </Label>\r\n    \t       \t\t<Container className=\"list-inner-wrapper\">\r\n    \t\t\t        <List className=\"training-list\">\r\n    \t\t\t        {this.state.result[this.state.id].map((word, index) =>\r\n    \t\t\t            <List.Item key={index} className=\"training-list-item\">\r\n    \t\t\t              <List.Content>\r\n    \t\t\t                <List.Header as='a'>\r\n                            <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.translation}</Button>\r\n                          </List.Header>\r\n    \t\t\t              </List.Content>\r\n    \t\t\t            </List.Item>\r\n    \t\t\t        )}\r\n                    <List.Item className=\"training-list-item\">\r\n                      <List.Content>\r\n                        <List.Header as='a'>\r\n                          <Button onClick={this.dontKnow} className=\"help\" >Не знаю</Button>\r\n                        </List.Header>\r\n                      </List.Content>\r\n                    </List.Item>              \r\n    \t\t\t        </List>\r\n                  {this.state.isImageVisible ?\r\n                    <div className=\"training-right-wrapper\">\r\n                      <div className=\"training-image-wrapper\">\r\n                        <Image src={this.state.currentWord.image} className=\"training-image\">\r\n                        </Image>                \r\n                      </div>\r\n                    {this.state.flagState && this.state.isImageVisible ?\r\n                      <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n                    }                                     \r\n                    </div>: null               \r\n                   }\r\n    \t       \t\t</Container>\r\n           \t\t</Card>\r\n          \t</Container> :\r\n               null\r\n            }\r\n            {this.state.isFinalVisible ?\r\n             <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n                 <Card className=\"card-training\" >\r\n                    <Card.Content>\r\n                      <Card.Header>Результаты</Card.Header>\r\n                      <Divider/>\r\n                      <Card.Description className=\"audio-list-container\"> \r\n                      {(this.state.negativeWords.length !== 0 ) ?\r\n                      <div className=\"answers-wrapper\">\r\n                        <List className=\"audio-list\">\r\n                        <h2>Верные ответы</h2>\r\n                        {this.state.positiveWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                        <List className=\"audio-list\">\r\n                        <h2>Неверные ответы</h2>\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>\r\n                     </div>: \r\n                       <Message>\r\n                          <Message.Header>Поздравляем!</Message.Header>\r\n                          <p>\r\n                            Все задания выполнены правильно\r\n                          </p>\r\n                       </Message> \r\n                      }\r\n                      </Card.Description>\r\n                      <Card.Description className=\"results-wrapper\">\r\n                        <div className=\"positive-results-wrapper\"> \r\n                          <div className=\"positive-results\">\r\n                            {this.state.positiveWords.length}\r\n                          </div>\r\n                          <Label>Верно</Label>                    \r\n                        </div>\r\n                        <div className=\"negative-results-wrapper\"> \r\n                          <div className=\"negative-results\">\r\n                            {this.state.result.length - this.state.positiveWords.length}\r\n                          </div> \r\n                          <Label>Неверно</Label>                   \r\n                        </div>\r\n                      </Card.Description>\r\n                      <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                      </Button.Group>\r\n                    </Card.Content>\r\n                  </Card>          \r\n            </Card.Group>                \r\n               : null\r\n            }\r\n            </div>\r\n            <footer></footer>\r\n        </Fragment>\r\n    \t);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnglishToRussian);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport classnames from 'classnames';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass RussianToEnglish extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n    this.state = {\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n  this.setStateOnStart()\r\n}\r\n\r\nsetStateOnStart = () => {\r\n  this.setState({\r\n    words: [],\r\n    negativeWords: [],\r\n    positiveWords: [],\r\n    id: 0,\r\n    isCardVisible: false,\r\n    isButtonVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: true,\r\n    showContinueButton: false,\r\n    isFinalVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: true,\r\n    isInputVisible: true,\r\n    search: '',\r\n    currentWord: '',\r\n    flagState: false,\r\n    result: [],\r\n    disabled: false    \r\n  }, () => this.initialLoad())\r\n}\r\n\r\n  initialLoad = () => {\r\n    var id = this.state.id;\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        let result = [];\r\n        for (var i = 0; i < 3; i++) {\r\n          let item = [];\r\n          while(item.length < 5) {\r\n            var el = words[Math.floor(Math.random() * words.length)];\r\n            if (item.indexOf(el) === -1) {\r\n              item.push(el)\r\n            };                \r\n          }\r\n          result.push(item);\r\n        }\r\n        const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          result });\r\n      })\r\n  }\r\n\r\n\r\nstartTraining = () =>{\r\n  this.setState({\r\n    isButtonVisible: false,\r\n    isCardVisible: true\r\n  })\r\n}\r\n\r\ncontinueTraining = () =>{\r\n  let id = this.state.id;\r\n  id = id + 1;\r\n  const result = this.state.result;\r\n  if(id < result.length) {\r\n    const currentWord =  result[id][Math.floor(Math.random() * result[id].length)];\r\n    this.setState({\r\n      id,\r\n      currentWord, \r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      disabled: false\r\n    })\r\n  } \r\n  else this.setState({\r\n    isFinalVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: false,\r\n    showContinueButton: false, \r\n    isCardVisible: false,\r\n    isButtonVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: false,\r\n    isInputVisible: false,\r\n    search: ''   \r\n\r\n  }) \r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentName;\r\n  speech.say(newWords);\r\n}  \r\n\r\nshowImage = ()=>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    isLinkVisible: false\r\n  })\r\n}\r\n\r\n   compareWord = (id) =>{\r\n    let selectedWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    var positiveWords = this.state.positiveWords.slice();\r\n    var negativeWords = this.state.negativeWords.slice();    \r\n    if(this.state.currentWord.id === selectedWord.id){\r\n      positiveWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(this.state.currentWord);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  }\r\n\r\n\r\ndontKnow = () =>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    flagState: true\r\n  })\r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentWord.name;\r\n  speech.say(newWords);\r\n} \r\n\r\nrender() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n          {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n            <Image src='training/russiantoenglish.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n            <Card.Header>Перевод</Card.Header>\r\n            <Card.Description>\r\n            <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n            </Card.Description>\r\n            </Card.Content>\r\n            </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n          {this.state.isCardVisible ?\r\n            <Container className=\"list-container\">\r\n            <Card className=\"training-card\">\r\n            <Label>\r\n            {this.state.currentWord.translation}\r\n            <span onClick={this.voiceWord} className=\"training-card__icon\">\r\n            <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n            </span>\r\n            </Label>\r\n            <Container className=\"list-inner-wrapper\">\r\n            <List className=\"training-list\">\r\n            {this.state.result[this.state.id].map((word, index) =>\r\n             <List.Item key={index} className=\"training-list-item\">\r\n             <List.Content>\r\n             <List.Header as='a'>\r\n             <Button disabled={this.state.disabled}  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.name}</Button>\r\n             </List.Header>\r\n             </List.Content>\r\n             </List.Item>\r\n             )}\r\n            <List.Item className=\"training-list-item \">\r\n            <List.Content>\r\n            <List.Header as='a'>\r\n            <Button className=\"dont-know\" onClick={this.dontKnow} >Не знаю</Button>\r\n            </List.Header>\r\n            </List.Content>\r\n            </List.Item>              \r\n            </List>\r\n            {this.state.isImageVisible ?\r\n              <div className=\"training-right-wrapper\">\r\n              <div className=\"training-image-wrapper\">\r\n              <Image src={this.state.currentWord.image} className=\"training-image\">\r\n              </Image>                \r\n              </div>\r\n              {this.state.flagState ?\r\n                <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n\r\n              }                                     \r\n              </div>: null               \r\n            }\r\n            </Container>\r\n            </Card>\r\n            </Container> :\r\n            null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n           <Card className=\"card-training\" >\r\n           <Card.Content>\r\n           <Card.Header>Результаты</Card.Header>\r\n           <Divider/>\r\n           <Card.Description className=\"audio-list-container\"> \r\n           {  (this.state.negativeWords.length !== 0 ) ?\r\n            <List className=\"audio-list\">\r\n            {this.state.negativeWords.map((item, index) => \r\n              <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n              )}\r\n            </List>: \r\n            <Message>\r\n            <Message.Header>Поздравляем!</Message.Header>\r\n            <p>\r\n            Все задания выполнены правильно\r\n            </p>\r\n            </Message> \r\n          }\r\n        </Card.Description>\r\n    <Card.Description className=\"results-wrapper\">\r\n    <div className=\"positive-results-wrapper\"> \r\n    <div className=\"positive-results\">\r\n    {this.state.positiveWords.length}\r\n    </div>\r\n    <Label>Верно</Label>                    \r\n    </div>\r\n    <div className=\"negative-results-wrapper\"> \r\n    <div className=\"negative-results\">\r\n    {this.state.result.length - this.state.positiveWords.length}\r\n    </div> \r\n    <Label>Неверно</Label>                   \r\n    </div>\r\n    </Card.Description>\r\n    <Button.Group className=\"card-buttons-wrapper\">\r\n    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n    </Button.Group>\r\n    </Card.Content>\r\n    </Card>          \r\n    </Card.Group>          \r\n    : null\r\n  }\r\n  </div>\r\n  <footer></footer>\r\n  </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nexport default RussianToEnglish;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button,Card,Image} from 'semantic-ui-react';\r\n\r\nclass Videos extends Component {\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      videos: [],\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      channelId: null,\r\n      image: '',\r\n      link: '',\r\n      visible: 8\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('/videos.json')\r\n        .then(res => {\r\n          const videos = res.data;\r\n          const name = videos[id].name;\r\n          const description = videos[id].description;\r\n          const channelId = videos[id].channelId;\r\n          const image = videos[id].image;\r\n          const link = videos[id].link;\r\n           this.setState({ \r\n            videos, \r\n            name, \r\n            description, \r\n            channelId, \r\n            image,\r\n            link });\r\n        })\r\n    }\r\n\r\n    cons = () =>{\r\n      console.log(this.state);\r\n    }\r\n\r\n    loadMore = () => {\r\n      this.setState((prev) => {\r\n        return {visible: prev.visible + 4};\r\n      });\r\n    }    \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n        <Button onClick={this.cons} >console</Button>\r\n        <Card.Group itemsPerRow={4} className=\"videos-container\">\r\n          {this.state.videos.slice(0,this.state.visible).map((video,index) =>\r\n            <Card key={index}>\r\n              <Image src={video.image} />\r\n              <Card.Content className=\"video-wrapper\">\r\n                <Card.Header>{video.name}</Card.Header>\r\n                <Card.Description>{video.description}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra className=\"video-extra\">\r\n                 <Link to={video.link}>{video.name}</Link>\r\n              </Card.Content>\r\n            </Card> \r\n          )}                                                                           \r\n        </Card.Group>\r\n           <div className=\"load-more-button\">\r\n            {this.state.visible < this.state.videos.length &&\r\n                    <Button onClick={this.loadMore} primary>Загрузить</Button>\r\n                  }                 \r\n          </div>\r\n          </div>\r\n          <footer></footer>\r\n       </Fragment>\r\n  );\r\n  } \r\n\r\n\r\n}\r\n\r\nexport default Videos;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Fragments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        texts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setStateOnStart();\r\n    }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        texts: [],\r\n        options: [],\r\n        categoryValue: '',\r\n        value: null,\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isResultVisible: false,\r\n        title: '',\r\n        content: '',\r\n        image: null,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        rightAnswers: 0,\r\n        //livesCount: 3,\r\n        livesArray: []        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content) )\r\n          this.setState({ \r\n            texts,\r\n            contentArray\r\n          }, () => this.setMenuParams());\r\n        })\r\n    }\r\n\r\n    setMenuParams = () =>{\r\n      let options = [];\r\n      this.state.texts.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var options = this.state.options.slice();\r\n      var comp = 'text';\r\n      const unique = options\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => options[e]).map(e => options[e]);\r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n\r\n    selectValue = () => {\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue() )         \r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.buildLives();\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.builtArray())\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n    \t\tcontentArray: [],\r\n    \t\tcurrentTempArray: [],\r\n    \t\tcurrentStringArray: [],\r\n    \t\tcurrentRandomWord: '',\r\n    \t\tcurrentFinalArray: [],\r\n    \t\tcurrentRandomArray: [],\r\n    \t\tcurrentOneArray: [],\r\n    \t\tactiveInput: 0,\r\n    \t\tactiveArray: [],\r\n    \t\tsortedRandomArray: [],\r\n    \t\tcomparativeRandomArray: [],\r\n    \t\tfragmentArrayIndexes: []        \r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n    builtArray = () => {\r\n      let currentOneArray = [];\r\n\t    let activeTargetContent = this.state.content.slice();\r\n      let currentStringArray = activeTargetContent.split(\". \");\r\n      currentStringArray.pop();\r\n      let currentFullArray = [];\r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n      \tcurrentFullArray.push(currentStringArray[i].split(\" \"));\r\n      }\r\n      let currentWordArray = currentStringArray[0].split(\" \");\r\n      let currentRandomArray = [];\r\n      let currentRandomIndexes = [];\r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet j = Math.floor(Math.random()*currentFullArray[i].length);\r\n      \tcurrentRandomArray.push(currentFullArray[i][j]);\r\n      \tcurrentRandomIndexes.push(j);\r\n      }\r\n      let random = currentWordArray[Math.floor(Math.random()*currentWordArray.length)];\r\n      let currentFinalArray = [];\r\n    \r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet curArr = currentFullArray[i];\r\n\t      \tfor (var j = 0; j < curArr.length; j++) {\r\n            \tcurrentOneArray.push(curArr[j]);\r\n\t\t      \tif (j !== currentRandomIndexes[i] ) {\r\n\t\t      \t\tcurrentFinalArray.push(<span className=\"fragment-span\">{curArr[j]}</span>)\r\n\t\t      \t}\r\n\t\t      \telse {\r\n\t\t      \t\tcurrentFinalArray.push(<span onClick={this.resetValue} className=\"fragment-input\"></span>)\r\n\t\t      \t}\r\n\t      \t}\r\n\t      \tcurrentFinalArray.push(<span className=\"fragment-dot\">.</span>);\r\n      }\r\n\r\n      this.setState({\r\n      \tcurrentStringArray,\r\n        currentWordArray,\r\n        currentRandomWord: random,\r\n        currentFinalArray,\r\n        currentRandomIndexes,\r\n        currentRandomArray,\r\n        currentFullArray,\r\n        currentOneArray\r\n      }, () => this.shuffleArray())     \r\n    }\r\n\r\n   setValue = (e) => {\r\n      let activeInput = this.state.activeInput;\r\n      let activeArray = [];\r\n      let currentFullArray = this.state.currentFullArray.slice();\r\n      let currentFinalArray = this.state.currentFinalArray.slice();\r\n      let currentRandomArray = this.state.currentRandomArray.slice();\r\n      let currentRandomIndexes = this.state.currentRandomIndexes.slice();\r\n      let activeTargetTitle = e.target.textContent;\r\n      let fragmentArray = [];\r\n      let fragmentArrayIndexes = [];\r\n      let fragmentDescription = document.getElementsByClassName('fragment-description')[0].children;\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif(fragmentDescription[i].className == \"fragment-input\"){\r\n      \t\tfragmentArrayIndexes.push(i);\r\n      \t\tfragmentArray.push(fragmentDescription[i]);\r\n      \t}\r\n      }\r\n      for (var i = 0; i < fragmentArrayIndexes.length; i++) {\r\n      \tactiveArray.push(i);\r\n      }\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif( (fragmentDescription[i].className == \"fragment-input\") && (i == fragmentArrayIndexes[activeInput])){\r\n      \t\tfragmentDescription[i].textContent = activeTargetTitle;\r\n      \t}\r\n      }\r\n\t\t  fragmentArrayIndexes.splice(activeInput, 1);\r\n      let comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n      let sortedRandomArray = this.state.sortedRandomArray.slice();\r\n      let target = e.target;\r\n      comparativeRandomArray.push(target.textContent);\r\n      var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n      }\r\n\r\n      sortedRandomArray.splice(indexTarget, 1);\r\n      if (sortedRandomArray.length === 0) {\r\n      \tthis.setState({\r\n      \t\tisCheckButtonVisible: true\r\n      \t})\r\n      }\r\n\r\n      activeInput++;\r\n      this.setState({\r\n  \t\t\tactiveInput,\r\n  \t\t\tactiveArray,\r\n  \t\t\tfragmentArrayIndexes,\r\n  \t\t\tcurrentRandomArray,\r\n  \t\t\tcomparativeRandomArray,\r\n  \t\t\tsortedRandomArray\r\n\t\t})\r\n    \r\n  }\r\n\r\n\tshuffleArray = () => {\r\n\t\tlet array = this.state.currentRandomArray.slice();\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t    this.setState({\r\n        \tsortedRandomArray: array\t    \t\r\n\t    })\r\n\t}\r\n\r\n    resetValue = (e) =>{\r\n\t    let sortedRandomArray = this.state.sortedRandomArray.slice(); \r\n      let element = e.target;\r\n      if (e.target.textContent !== \"\") {\r\n      \t  sortedRandomArray.push(e.target.textContent);\r\n      \t  element.innerText = \"\";\r\n  \t      this.setState({\r\n  \t      \tsortedRandomArray: sortedRandomArray\r\n  \t      })\r\n\t        var indexTarget = 0;\r\n\t        while ( (element = element.previousElementSibling) ) {\r\n\t          indexTarget++\r\n\t        }\r\n      }\r\n    }\r\n\r\n    submitText = (e) =>{\r\n    \tlet comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    \tlet currentSortedArray = this.state.currentRandomArray.slice();\r\n    \tlet sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    \tlet count = 0;\r\n    \tfor (var i = 0; i < currentSortedArray.length; i++) {\r\n    \t\tif (currentSortedArray[i] === comparativeRandomArray[i]) {\r\n    \t\t\tcount++;\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\tsortedRandomArray.push(comparativeRandomArray[i])\r\n    \t\t}\r\n    \t\t\r\n    \t}\r\n    \tlet rightAnswers = count;\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: false,\r\n    \t\tisResultVisible: true,\r\n    \t\tisSingleTextVisible: false,\r\n    \t\trightAnswers,\r\n    \t\tsortedRandomArray\r\n    \t})\r\n    }\r\n\r\n    tryAgain = () =>{\r\n    \tlet lives = this.state.livesCount;\r\n    \tlives = lives - 1;\r\n    \tthis.setState({\r\n    \t\tisResultVisible: false,\r\n    \t\tisSingleTextVisible: true,\r\n    \t\tlivesCount: lives\r\n    \t}, () => this.buildLives() )\r\n    }\r\n\r\n    buildLives = () =>{\r\n    \tlet livesCount = this.state.livesCount;\r\n    \tlet lives = [];\r\n    \tfor (var i = 0; i < livesCount; i++) {\r\n    \t\tlives.push(<Icon name='like' size='big' />)\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tlivesArray: lives\r\n    \t})\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible && this.state.texts.length ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n            {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                \t<div className=\"fragments-close\">\r\n                \t\t<span onClick={this.backToTexts}>\r\n                \t\t\t<Icon name='close' size='big' />\r\n                \t\t</span>\r\n                \t</div>\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t{this.state.currentFinalArray}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n             \t<div className=\"fragment-variants\">\r\n            \t\t{this.state.sortedRandomArray.map((item, index) =>\r\n            \t\t\t<span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n            \t\t)}\r\n\t            \t{this.state.isCheckButtonVisible ? \r\n\t            \t\t<Button onClick={this.submitText} >Проверить</Button> :null\r\n\t            \t}             \t\t\r\n            \t</div>\r\n                </Card>:null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t<h2>Вы расставили правильно {this.state.rightAnswers} из {this.state.currentRandomArray.length} слов </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                  \t<Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary ><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default Fragments;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Pronunciation extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\ttexts: [],\r\n\t\tnegativeSentences: [],\r\n\t\tpositiveSentences: [],\r\n\t\tid: 0,\r\n\t\tcurrentText: '',\r\n\t\tcurrentTextContent: '',\r\n\t\tcurrentSentence: '',\r\n\t\tisCardVisible: false,\r\n\t\tisButtonVisible: true,\r\n\t\tisTranslationVisible: false,\r\n\t\tshowNavButtons: true,\r\n\t\tshowContinueButton: false,\r\n\t\tisFinalVisible: false,\r\n\t\tshowSubmitButtons: true,\r\n\t\toptions: {\r\n\t\t  autostart: false\r\n\t\t},\r\n\t\ttranscript: '',\r\n\t\tresetTranscript: null,\r\n\t\tbrowserSupportsSpeechRecognition: null,\r\n\t\trecognition: null,\r\n\t\tstartListening: null,\r\n\t\tstopListening: null ,\r\n\t\tsplittedText: [],\r\n\t\tisDeleteVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      var id = this.state.id;\r\n      axios.all([\r\n          axios.get('/texts.json')\r\n        ])\r\n        .then(axios.spread((textsRes) => {\r\n          const texts = textsRes.data;\r\n          const currentText = texts[id].content;\r\n          let splittedText = currentText.split(\". \").slice(0,3);\r\n          let currentSentence = splittedText[id] + '.'; \r\n          let currentSentenceContent = splittedText[id].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();           \r\n          this.setState({\r\n            texts,\r\n            currentSentence,\r\n            splittedText,\r\n            currentText,\r\n            transcript: this.props.transcript,\r\n            resetTranscript: this.props.resetTranscript,\r\n            browserSupportsSpeechRecognition: this.props.browserSupportsSpeechRecognition,\r\n            recognition: this.props.recognition,\r\n            startListening: this.props.startListening,\r\n            stopListening: this.props.stopListening \r\n          }, () => this.state.stopListening() );          \r\n        }));      \r\n    }\r\n\r\n  setStateOnStart = () => {\r\n\r\n  }\r\n\r\n  initialLoad = () => {\r\n\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      }, () => this.state.startListening())\r\n    }\r\n\r\n    submitResponse = () =>{\r\n      var objectTranscription = document.getElementById('transcription').textContent;\r\n      var positiveSentences = this.state.positiveSentences;\r\n      var negativeSentences = this.state.negativeSentences;\r\n      let currentSentence = this.state.currentSentence;\r\n      let currentSentenceContent = this.state.currentSentenceContent;\r\n   \r\n      if(currentSentenceContent === objectTranscription){\r\n        positiveSentences.push(currentSentence);     \r\n      }\r\n\r\n      else {\r\n        negativeSentences.push(currentSentence);\r\n        console.log(negativeSentences);\r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        positiveSentences,\r\n        negativeSentences\r\n\r\n      }, () => this.continueTraining() )        \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let length = this.state.splittedText.length;\r\n      let splittedText = this.state.splittedText;\r\n      let newId = this.state.id;\r\n      newId = newId + 1;\r\n      const texts = this.state.texts;\r\n      if(newId < length){\r\n      \tlet currentSentence = splittedText[newId] + '.';\r\n      \tlet currentSentenceContent = splittedText[newId].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();\r\n \r\n        this.setState({\r\n          id: newId,\r\n          currentSentence,\r\n          currentSentenceContent,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else {\r\n        this.state.stopListening();\r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false\r\n        })\r\n      }  \r\n    }\r\n\r\n    callSubmit = () =>{\r\n      this.state.resetTranscript();\r\n      this.continueTraining();\r\n    }\r\n\r\n    clearTranscription = () =>{\r\n    \tlet transcript = this.props.transcript;\r\n    \tlet newTranscript =\ttranscript.substring(0,transcript.length - 1);\r\n    \tthis.props.transcript = newTranscript;\r\n    }\r\n\r\n  render() {\r\n\r\n    const {transcript} = this.props;\r\n\r\n    if (!this.state.browserSupportsSpeechRecognition) {\r\n      return null\r\n    }\r\n    this.state.recognition.lang = 'en-US';\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/microphone.jpg' />\r\n              </div>  \r\n              <Card.Content>\r\n                <Card.Header>Произношение</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group> : null\r\n         }\r\n         {this.state.isCardVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\"  >\r\n                  <Card.Content>\r\n                    <Card.Header className=\"pronunciation-header\">\r\n                      Произнесите слово в микрофон\r\n                    </Card.Header>\r\n                    <Card.Header className=\"pronunciation-text\">{this.state.currentSentence}\r\n                    </Card.Header>                \r\n                    <Card.Description id=\"transcription\" className=\"pronunciation-transcription\">\r\n                    <span className=\"transcription-text\">\r\n                      {transcript} </span>\r\n                      {this.props.transcript.length ?\r\n                      <div className=\"pronunciation-clear-wrapper\" onClick = {this.clearTranscription}>\r\n    \t                  <span className=\"triangle\"> </span>\r\n    \t                  <span className=\"pronunciation-clear\">\r\n    \t                  \t<Icon name = 'delete'/>\r\n    \t                  </span>                  \t\r\n                      </div> : null\r\n                  }\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Card.Content extra>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                    {this.state.showNavButtons ?\r\n                    <Fragment>\r\n                      <Button onClick={this.submitResponse} primary>Проверить</Button>\r\n                    </Fragment>:null\r\n                    }  \r\n                    {this.state.showContinueButton ?\r\n                      <Button onClick={this.callSubmit} primary>Продолжить</Button>:null\r\n                    }\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n               <Card className=\"card-training pronunciation-card\" >\r\n                  <Card.Content>\r\n                    <Card.Header>Результаты</Card.Header>\r\n                    <Divider/>\r\n                    <Card.Description className=\"audio-list-container\"> \r\n                    {  (this.state.negativeSentences.length !== 0 ) ?\r\n                        <div className=\"answers-wrapper\">\r\n                          <List className=\"audio-list\">\r\n                          <h2>Верные ответы</h2>\r\n                          {this.state.positiveSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                          <List className=\"audio-list\">\r\n                          <h2>Неверные ответы</h2>\r\n                          {this.state.negativeSentences.map((item, index) => \r\n                              <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                            )}\r\n                         </List>\r\n                       </div> : \r\n                     <Message>\r\n                        <Message.Header>Поздравляем!</Message.Header>\r\n                        <p>\r\n                          Все задания выполнены правильно\r\n                        </p>\r\n                     </Message> \r\n                    }\r\n\r\n                    </Card.Description>\r\n                    <Card.Description className=\"results-wrapper\">\r\n                      <div className=\"positive-results-wrapper\"> \r\n                        <div className=\"positive-results\">\r\n                          {this.state.positiveSentences.length}\r\n                        </div>\r\n                        <Label>Верно</Label>                    \r\n                      </div>\r\n                      <div className=\"negative-results-wrapper\"> \r\n                        <div className=\"negative-results\">\r\n                          {this.state.negativeSentences.length}\r\n                        </div> \r\n                        <Label>Неверно</Label>                   \r\n                      </div>\r\n                    </Card.Description>\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                      <Button primary>Продолжить</Button>\r\n                      <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                    </Button.Group>\r\n                  </Card.Content>\r\n                </Card>          \r\n           </Card.Group> : null\r\n          }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default SpeechRecognition({autostart: false})(Pronunciation);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\n\r\nclass RecreateText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '3',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      categoryValue: ''\r\n\t\t}\r\n\t}\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.makeTextsVisible());\r\n      })\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();   \r\n  }   \r\n\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let image = texts[id].image\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      })      \r\n    }\r\n\r\n\r\n    makeTextsVisible = () =>{\r\n      this.setState({\r\n        areTextsVisible: true        \r\n      }, () => this.createMenuItems());\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '5',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0\r\n      })\r\n    }\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        spllittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutes * 60);\r\n          clearInterval(this.state.intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent\r\n          })\r\n\r\n        }\r\n        this.state.secondsRemaining--;\r\n        this.state.totalSecondsSpent++;\r\n\r\n   \r\n    }\r\n    startCountDown = () => {\r\n        this.state.intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.state.secondsRemaining = time * 60;\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.spllittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.spllittedSentences[index];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = this.state.spllittedSentences.filter(item => item !== this.draggedItem);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ spllittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.spllittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n      }\r\n    }\r\n    if(wrongCount==0){\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =()=>{\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(this.state.intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent       \r\n      })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '3',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0        \r\n      }) \r\n  }\r\n\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    menuChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.menuChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null\r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.splitText}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.spllittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <h2>Время вышло</h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\nimport Speech from 'speak-tts'\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport { Howl } from \"howler\";\r\n\r\nclass RecreateAudioText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t      texts: [],\r\n\t      contentArray: [],\r\n\t      areTextsVisible: false,\r\n\t      isMenuVisible: false,\r\n\t      isSingleTextVisible: false,\r\n        options: [],\r\n        categoryValue: '',\r\n\t      isResultVisible: false,\r\n\t      isResultWrong: false,\r\n        title: '',\r\n\t      content: '',\r\n\t      image: null,\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('./audiotexts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        this.setState({ \r\n          texts,\r\n          areTextsVisible: true         \r\n        }, () => this.createMenuItems());\r\n      })        \r\n  }   \r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n    createTrack = (id) => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) => {\r\n          let currentTrack = new Howl({\r\n            src: \"tracks/\" + res.data.slice(id - 1, id),\r\n            html5: true,\r\n            volume: 0.5 / 10\r\n          });\r\n          this.setState({\r\n            currentTrack,\r\n            audio: res.data\r\n          }) \r\n        });    \r\n    }\r\n\r\n    readMore = (id) =>{\r\n\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id - 1].title;\r\n      let content = texts[id - 1].content;\r\n      let image = texts[id - 1].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.createTrack(id))       \r\n    }\r\n\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        categoryValue: '',\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0,\r\n        value: null        \r\n      })\r\n    }\r\n\r\n\r\n\r\n  showFinal = () =>{\r\n    this.setState({\r\n      isResultVisible: true  \r\n    })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,    \r\n      }) \r\n  }\r\n\r\n  playText = () => {\r\n    let playing = !this.state.playing;\r\n    let currentTrack = this.state.currentTrack;\r\n    if (playing) {\r\n      currentTrack.play();\r\n    } else {\r\n      currentTrack.pause();\r\n    }\r\n    this.setState({\r\n      playing,\r\n      currentTrack\r\n    })\r\n  }\r\n\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        splittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var minutes = Math.floor(this.state.secondsRemaining / 60);\r\n        var seconds = this.state.secondsRemaining - (minutes * 60);\r\n        this.setState({\r\n          minutes,\r\n          seconds\r\n        })\r\n        if (seconds < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (minutes < 10) {\r\n          this.setState({\r\n            value: \"0\" + minutes,\r\n           })\r\n        }\r\n        if (minutes === 0 & seconds === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutesSpent = Math.floor(time / 60);\r\n          let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n          let intervalHandle = this.state.intervalHandle;\r\n          clearInterval(intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent,\r\n            secondsSpent,\r\n            intervalHandle\r\n          })\r\n\r\n        }\r\n        this.setState({\r\n          secondsRemaining: this.state.secondsRemaining - 1,\r\n          totalSecondsSpent: this.state.totalSecondsSpent + 1\r\n        })\r\n \r\n    }\r\n    startCountDown = () => {\r\n        let intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.setState({\r\n          intervalHandle,\r\n          secondsRemaining: time * 60\r\n        })\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.splittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.splittedSentences[index];\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n    let items = this.state.splittedSentences.filter(item => item !== this.draggedItem);\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ splittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.splittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let rightAnswers = 0;\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n        rightAnswers++;\r\n      }\r\n    }\r\n    if (wrongCount == 0) {\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes,\r\n      rightAnswers\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =() => {\r\n    this.checkSentences();\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let intervalHandle = this.state.intervalHandle;\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutesSpent = Math.floor(time / 60);\r\n      let secondsSpent = this.state.totalSecondsSpent - (minutesSpent * 60);\r\n\r\n      clearInterval(intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent,\r\n        secondsSpent,\r\n        intervalHandle        \r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }         \r\n              {(this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text display-none\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    {this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"pause\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    {!this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"play\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    <div className=\"buttons-wrapper\">\r\n\t                    <Button primary onClick={this.splitText}>Я прослушал</Button>\r\n           \t\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.splittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <div>\r\n                        <h2>Время вышло</h2>\r\n                        <h2>Правильно расставлено {this.state.rightAnswers} из {this.state.splittedSentences.length} предложений</h2> \r\n                      </div>                      \r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateAudioText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Input, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass InsertSpaces extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }   \r\n\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      inputContent: '',\r\n      textContent: '',\r\n      newContent: '',\r\n      image: null,\r\n      options: [],\r\n      textsLoaded: false,\r\n      categoryValue: ''\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n      }) \r\n  }\r\n\r\n\r\n    readMore = (id) =>{\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id].title;\r\n      let content = texts[id].content;\r\n      let inputContent = texts[id].content;\r\n      inputContent = inputContent.replace(/\\s/g, '');\r\n      let image = texts[id].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image,\r\n        inputContent\r\n      })      \r\n    }\r\n\r\n\r\n  showFinal = () =>{\r\n      this.setState({\r\n        isResultVisible: true,\r\n        isTaskStarted: false\r\n   \r\n      })\r\n  }\r\n\r\nsetCaretPosition = (ctrl, pos) => {\r\n\r\n  if (ctrl.setSelectionRange) {\r\n    ctrl.focus();\r\n    ctrl.setSelectionRange(pos, pos);\r\n\r\n  } else if (ctrl.createTextRange) {\r\n    var range = ctrl.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n}\r\n\r\n  updateValue = (event) =>{\r\n  \tlet newContent = this.state.newContent;\r\n  \tlet target = event.target;\r\n    let str = event.target.value;\r\n    let indexOfSpace = event.target.value.indexOf(\" \") + 1;\r\n    let word = event.target.value.substr(0, indexOfSpace - 1);\r\n    let newstr = event.target.value.substring(indexOfSpace);\r\n    newContent = newContent + (word + ' ');\r\n      this.setState({\r\n      \tnewContent,\r\n        inputContent: newstr\r\n      }, () => this.setCaretPosition(target, 0));\r\n  }\r\n\r\n  startExercise = () => {\r\n    this.setState({\r\n      isTaskStarted: true,\r\n      isSingleTextVisible: false\r\n    })\r\n  }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.startExercise}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }             \r\n             {this.state.isTaskStarted ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <p className=\"single-text-card-description p-wrap fragment-description recreate-text inserted-text\">\r\n                      { this.state.newContent}\r\n                    </p>\r\n                    <Input className=\"insert-spaces-input\" value={this.state.inputContent} onChange={this.updateValue} />\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.showFinal}>Проверить</Button>\r\n                      </Button.Group>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <div className=\"recreate-results\">\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Исходный текст</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.content}</p>\r\n                      </div>\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Результат</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.newContent}</p>\r\n                      </div>                      \r\n                    </div>                                     \r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }    \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default InsertSpaces;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card, Embed, Modal,Image, Rating} from 'semantic-ui-react';\r\n//import LazyLoad from 'react-lazy-load';\r\n\r\nclass TED extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      isModalVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCAuUUnT6oDeKwE6v1NGQxug\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n      handleClick = (event) => {\r\n        this.setState({\r\n          currentPage: Number(event.target.id)\r\n        });\r\n      }\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos.items);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  showModal = () =>{\r\n    this.setState({\r\n      isModalVisible: true\r\n    })\r\n  }\r\n\r\n   render() {\r\n     \r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default TED;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass EngVid extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCKRBA9XfgzAtJodE4t8cUeg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default EngVid;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass BritishCouncil extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    let API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    let channelID = \"UCOtnu-KKoAbN47IuYMeDPOg\";\r\n    let maxResults = 36;\r\n    let url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default BritishCouncil;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image, Input, Icon} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Khan extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      currentComment: '',\r\n      likes: 0,\r\n      dislikes: 0,\r\n      comments: [\r\n        {\r\n          author: 'new2341',\r\n          comment: 'Just a typicall comment'\r\n        },\r\n        {\r\n          author: 'cauthor',\r\n          comment: 'nice! liked it'\r\n        }\r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UC4a-Gbdw7vOaccHmFo40b9g\";\r\n    var maxResults = 48;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,200)});\r\n    } \r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  addComment = () =>{\r\n    let comments = this.state.comments.slice();\r\n    let currentComment = this.state.currentComment;\r\n    let temp = {};\r\n    temp['author'] = 'blabla';\r\n    temp['comment'] = currentComment;\r\n    comments.unshift(temp);\r\n    console.log(comments);\r\n    this.setState({\r\n      comments: comments,\r\n      currentComment: ''\r\n    })\r\n  }\r\n\r\n  thumbsUp = () => {\r\n    let count = this.state.likes;\r\n    count++;\r\n    this.setState({\r\n      likes: count\r\n    })\r\n  }\r\n\r\n  thumbsDown = () => {\r\n    let count = this.state.dislikes;\r\n    count++;\r\n    this.setState({\r\n      dislikes: count\r\n    })\r\n  }\r\n\r\n  consoleState = ()=>{\r\n    console.log(this.state)\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Открыть</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header className=\"video-header-wrapper\">\r\n                    <div className=\"video-header\">{item.snippet.title}</div> \r\n                    <div className=\"video-likes\">\r\n                      <div className=\"video-likes-item first\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsUp}>\r\n                          <Icon name='thumbs up' size='large' />\r\n                        </span>\r\n                        <span>{this.state.likes}</span>\r\n                      </div>\r\n                      <div className=\"video-likes-item second\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsDown}>\r\n                          <Icon name='thumbs down' size='large' />\r\n                        </span>\r\n                        <span>{this.state.dislikes}</span>\r\n                      </div>\r\n                    </div> \r\n                  </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                    <div className=\"comment-section\">\r\n                      <div className=\"comment-section-input\">\r\n                        <Input placeholder='type...' value={this.state.currentComment} onChange={this.updateSearch} /><Button onClick={this.addComment}>Отправить</Button>\r\n                      </div>\r\n                      <div className=\"comment-section-comments\">\r\n                          {this.state.comments.map((item, index) =>\r\n                            <div className=\"single-comment\" key={index}>\r\n                              <h4>{item.author}</h4>\r\n                              <p>{item.comment}</p>                              \r\n                            </div>\r\n                           )}\r\n                      </div>\r\n                    </div>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <h4>{item.snippet.title}</h4>                 \r\n                  <Image src={item.snippet.thumbnails.high.url} />\r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Khan;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Coursera extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCZ50rYSkYQG31YDEJm9Di_g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Coursera;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyFallon extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UC8-Th83bH_thdKZDJCrn88g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyFallon;","import React, { Component, Fragment } from 'react';\r\nimport { Embed,Modal,Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyKimmel extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCa6vGFO9ty8v5KZJXQxdhaw\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyKimmel;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass ConanOBrien extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCi7GJNg51C3jgmYTUwqoUXA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n      axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default ConanOBrien;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Ellen extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCp0hYYBW6IMayGgR-WeoCvQ\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Ellen;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JamesCorden extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCJ0uqCI0Vqr2Rrt1HseGirg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JamesCorden;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass SethMeyers extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCVTyTA7-g9nopHeHbeuvpRA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default SethMeyers;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass StephenColbert extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyARd-RXpYp49rL4X4PPDJnv3bBBo-y-AOo\";\r\n    var channelID = \"UCMtFAi84ehTSYSE9XoHefig\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default StephenColbert;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass TextsList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      textsLoaded: false,\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content))\r\n          this.setState({ \r\n            texts: texts,\r\n            contentArray: contentArray\r\n          }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n        })\r\n    }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )         \r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {!this.state.isSingleTextVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }\r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card text-item\">\r\n                  <Card.Content>\r\n                    <Image src={this.state.image} />\r\n                    <Card.Header>{this.state.title}</Card.Header>\r\n                    <Card.Description className=\"single-text-card-description p-wrap\">\r\n                      { /*this.state.content.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase() */ this.state.content}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n                  <Button onClick={this.backToTexts} >Вернуться</Button>\r\n                </Card>:null\r\n              }          \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default TextsList;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    constructMenu = () =>{\r\n      let options = [];\r\n      this.state.words.map((item, i) =>\r\n                    options.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const options = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options,\r\n      })    \r\n    }  \r\n\r\n    setValue = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.setValue() )  \r\n\r\n    readMore = (id) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let currentColor = colors[Math.floor(Math.random()*colors.length)];\r\n      let activeTargetTitle = this.state.words.find(x => x.id === id).name;\r\n\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(false);          \r\n      \t} \r\n      }\r\n\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords,\r\n        currentColor,\r\n        arrayOfButtons,\r\n        iconsArray,\r\n        disabled      \t\r\n      })\r\n    }\r\n\r\n\r\n    addToList = (id) =>{\r\n      let addedItems = this.state.addedItems.slice();\r\n      let currentWords = this.state.currentWords.slice();\r\n      let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let iconsArray = this.state.iconsArray.slice();\r\n      let selected = currentWords.find(x => x.id === id);      \r\n      arrayOfButtons[id] = \"Добавлено !\";\r\n      iconsArray[id] = false;\r\n      disabled[id] = \"disabled\";\r\n      addedItems.push(selected);\r\n      this.setState({\r\n      \taddedItems,\r\n      \tarrayOfButtons,\r\n      \ticonsArray,\r\n      \tdisabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      let sortedByNameUp = this.state.sortedByNameUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByNameUp: !sortedByNameUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet currentWords;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tcurrentWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tcurrentWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords,\r\n  \t\t\tsortedByTranslationUp: !this.state.sortedByTranslationUp\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n   \tlet addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    arrayOfButtons[id] = \"Добавить\";    \r\n    iconsArray[id] = true;\r\n    disabled[id] = false;\r\n \t  addedItems.splice(addedItems.findIndex(function(item){\r\n        return item.id === id;\r\n    }), 1);\r\n    this.setState({ addedItems, disabled, iconsArray, arrayOfButtons });\r\n   }\r\n\r\n   deleteAll = () => {\r\n    let arrayOfButtons = this.state.arrayOfButtons.slice();\r\n    let iconsArray = this.state.iconsArray.slice(); \r\n    let addedItems = this.state.addedItems.slice();\r\n    let disabled = this.state.disabled.slice();\r\n    addedItems = [];\r\n    for (var i = 0; i < disabled.length; i++) {\r\n      disabled[i] = false;\r\n      arrayOfButtons[i] = \"Добавить\";\r\n      iconsArray[i] = true;\r\n    }\r\n    this.setState({ addedItems, arrayOfButtons, iconsArray, disabled  })    \r\n   }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"#3281F0\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      contentLoaded: false      \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n          .then(axios.spread((firstResponse, secondResponse) => { \r\n          let words = firstResponse.data;\r\n          let allWords = secondResponse.data;\r\n          let contentArray = [];\r\n          this.setState({\r\n            allWords,\r\n            words,\r\n            contentArray,\r\n            contentLoaded: true\r\n          }, () => this.constructMenu());\r\n       }))\r\n   }\r\n\t\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.state.contentLoaded ?\r\n            <div className=\"texts-wrapper\">\r\n              <Menu className=\"texts-menu decks-menu\" vertical>\r\n                {this.state.isDropdownVisible ? \r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.handleChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item> : null\r\n                }\r\n                <Menu.Item className=\"no-top-padding added-title\" style = {{ backgroundColor: this.state.currentColor}} >\r\n                  {this.state.addedItems.length ? \"Добавленные\" : \"Добавленных пока нет\"}\r\n                </Menu.Item>\r\n                <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                  {(this.state.addedItems.length) ? \r\n                  <ul className=\"decks-added-wrapper\">\r\n                    {this.state.addedItems.map((item,index)=> \r\n                      <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                        <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem.bind(this, item.id)} ><Icon name='trash alternate' /></span></li>\r\n                    )}\r\n                  </ul> : null\r\n                } \r\n                </Menu.Item>\r\n                { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n                <Menu.Item className=\"decks-button-wrapper\" >\r\n                   <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Изучить <Icon name='book' className=\"nav-icon-left\" /> </Button>\r\n                   <Button onClick={this.deleteAll} style = {{ backgroundColor: this.state.currentColor}} className=\"decks-button__learn\" >Удалить <Icon name='trash alternate' className=\"nav-icon-left\" /> </Button>\r\n                </Menu.Item> : null\r\n                }           \r\n              </Menu>           \r\n                {(this.state.words.length && this.state.areTextsVisible) ? \r\n                <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n                  {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                    <Card key={index} className=\"decks-single-card\">\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"decks-description\">\r\n                              <h2>{item.name}</h2>\r\n                              <h3>{item.number} слов</h3>\r\n                              <Button onClick={this.readMore.bind(this, item.id)} primary className=\"decks-button\" >Открыть</Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  )}\r\n                </Card.Group> : null\r\n               }\r\n               {this.state.isSingleTextVisible ?\r\n                <div className=\"decks-outer-wrapper\">\r\n                <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                  <Menu.Item name='byName'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                      по имени \r\n                      {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item name='byTranslation'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                      по переводу \r\n                      {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                    </Button>\r\n                  </Menu.Item>\r\n                  <Menu.Item style={{float: \"right\"}} name='close'> \r\n                    <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.setStateOnStart} title=\"Назад\">\r\n                      <Icon name='window close outline' className=\"nav-icon-left\" /> \r\n                    </Button>\r\n                  </Menu.Item>  \r\n                </Menu>\r\n                  <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                    {this.state.currentWords.map((item, index) => \r\n                      <Card key={index}>\r\n                        <Card.Content>\r\n                          <div className=\"texts-image-wrapper decks-image\">\r\n                            <Image src={item.image} />\r\n                            <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                                <h3>{item.name}</h3>\r\n                                <h4>{item.translation}</h4>\r\n                                <Button className=\"decks-button-add\" onClick={this.addToList.bind(this, item.id)} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                  {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                  } \r\n                                  {this.state.arrayOfButtons[index]}\r\n                                </Button>\r\n                            </div>\r\n                          </div>\r\n                        </Card.Content>\r\n                      </Card>\r\n                     )}\r\n                  </Card.Group> \r\n                </div> : null}       \r\n            </div>\r\n          : null}\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass AudioList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      categoryArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"navy\",\"maroon\",\"magenta\",\"green\",\"teal\",\"tomato\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      currentAudio: null,\r\n      playState: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n              .then(axios.spread((firstResponse, secondResponse) => { \r\n              let words = firstResponse.data;\r\n              let allWords = secondResponse.data;\r\n              let contentArray = [];\r\n              let currentAudio = new Audio('audio/Baskervilles1.mp3');\r\n          this.setState({\r\n            allWords: allWords,\r\n            words: words,\r\n            contentArray: contentArray,\r\n            currentAudio: currentAudio\r\n          }, () => this.consoleParams() );\r\n       }))\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.words.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n        const unique = arr\r\n            .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      console.log(categoryValue);\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )  \r\n\r\n    readMore = (e) =>{\r\n      let arrayOfButtons = [];      \r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let target = e.target.parentElement;\r\n      let color = colors[Math.floor(Math.random()*colors.length)];\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].textContent;\r\n      for (var i = 0; i < allWords.length; i++) {\r\n        if(allWords[i][\"category\"] === activeTargetTitle ){\r\n          currentWords.push(allWords[i])\r\n        } \r\n      }\r\n\r\n      for (var i = 0; i < currentWords.length; i++) {\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(\"\");\r\n      }\r\n      \r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords: currentWords,\r\n        currentColor: color,\r\n        arrayOfButtons: arrayOfButtons,\r\n        iconsArray: iconsArray,\r\n        disabled: disabled        \r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n\r\n    addedFirst = () =>{\r\n      console.log(this.state);\r\n      let state = this.state.sortedByTranslationUp;\r\n      this.setState({\r\n        addedUp: !state\r\n      })\r\n    }\r\n\r\n  //сортировка по имени\r\n    sortByName = () =>{\r\n        let state = this.state.sortedByNameUp;\r\n        console.log(\"current words\", this.state.currentWords);\r\n      const words = this.state.currentWords.slice();\r\n      let newWords = words;\r\n      if(this.state.isOldestFirst){\r\n        newWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n      } else {\r\n        newWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n      }\r\n      console.log(\"new words\", newWords);\r\n      this.setState({\r\n        isOldestFirst: !this.state.isOldestFirst,\r\n        currentWords: newWords,\r\n        sortedByNameUp: !state      \r\n      })    \r\n    }\r\n\r\n    startPlayer = () =>{\r\n      let currentState = this.state.playState;\r\n      this.setState({\r\n        playState: !currentState\r\n      }, () => this.playAudio() )\r\n    }\r\n\r\n    playAudio = () =>{\r\n      let audio = this.state.currentAudio;\r\n      if(this.state.playState){\r\n        audio.play();\r\n      }\r\n      else{\r\n        audio.pause();\r\n      }\r\n      this.setState({\r\n        currentAudio: audio\r\n      })\r\n    }\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          <Menu className=\"texts-menu decks-menu\" vertical>\r\n            {this.state.isDropdownVisible ? \r\n                <Menu.Item name='inbox' >\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item> : null\r\n            }\r\n              <Menu.Item>\r\n                <Button onClick={this.startPlayer}>\r\n                {this.state.playState ?\r\n                 <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  }Listen</Button>\r\n\r\n              </Menu.Item>\r\n              <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                {(this.state.addedItems.length) ? \r\n                <ul className=\"decks-added-wrapper\">\r\n                  {this.state.addedItems.map((item,index)=> \r\n                    <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                      <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem} ><Icon name='trash alternate' size='' /></span></li>\r\n                  )}\r\n                </ul> : null\r\n              } \r\n              </Menu.Item>\r\n              { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n              <Menu.Item className=\"decks-button-wrapper\" >\r\n                 <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} >Изучить</Button>\r\n              </Menu.Item> : null\r\n              }           \r\n            </Menu>           \r\n              {(this.state.words.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n              {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper decks-image\">\r\n                      <Image src={item.image} />\r\n                      <div className=\"decks-description\">\r\n                          <h2>{item.name}</h2>\r\n                          <h3><span>{item.number}</span></h3>\r\n                          <Button onClick={this.readMore} primary className=\"decks-button\" >Открыть</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ?\r\n              <div className=\"decks-outer-wrapper\">\r\n              <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                <Menu.Item name='byName'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                    по имени \r\n                    {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item name='byTranslation'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                    по переводу \r\n                    {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item style={{float: \"right\"}} name='close'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.backToDecks}>\r\n                    <Icon name='window close outline' size='small' className=\"nav-icon-left\" /> \r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n                <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                  {this.state.currentWords.map((item, index) => \r\n                    <Card key={index}>\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                              <h3>{item.name}</h3>\r\n                              <h4>{item.translation}</h4>\r\n                              <Button className=\"decks-button-add\" onClick={this.addToList} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                } \r\n                                {this.state.arrayOfButtons[index]}\r\n                              </Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                   )}\r\n                </Card.Group> \r\n              </div> : null}\r\n       \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default AudioList;","import React, { Component, Fragment } from 'react';\r\nimport {  List, Icon, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\n\r\n\r\nclass Settings extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      email: \"user1233\",\r\n      password: 69691231,\r\n      colorValue: \"#3281F0\",\r\n      colorOptions: [{ key: 1, value: \"#3281F0\", text: \"#3281F0\"}, { key: 2, value: \"red\", text: \"red\"}]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      \r\n  }   \r\n\r\n  changeColor = (e, { value }) => {\r\n    console.log(e);\r\n    this.setState({ colorValue: value })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"settings-wrapper\">\r\n            <div className=\"settings-container\">\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Цветовая схема</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>\r\n              <div className=\"settings-block\">\r\n                <span className=\"settings-block__name\">Громкость звука</span>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.colorValue} \r\n                    key\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.changeColor}\r\n                    options={this.state.colorOptions} \r\n                  />                \r\n              </div>              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input, Dropdown, TextArea, Form, Checkbox ,Icon, Rating, List } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      books: [],\r\n      allBoooks: [],\r\n      options: [],\r\n      currentGenre: '',\r\n      currentLength: '',\r\n      value: null,\r\n      rating: '',\r\n      size: '',      \r\n      areBooksVisible: true,\r\n      isMenuVisible: true,\r\n      isPreviewVisible: false,\r\n      isSingleBookVisible: false,\r\n      isBookNavPanelVisible: false,\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n      description: null,\r\n      image: null,\r\n      currentBook: '',\r\n      currentPage: '',\r\n      currentPageIndex: 0,\r\n      currentArrayBooks: [],\r\n      currentIndexArray: [],\r\n      bookHTML: '',\r\n      parsedBook: null,\r\n      bookPages: [],\r\n      bookValue: null,\r\n      bookVal: '',\r\n      currentComment: '',\r\n      currentName: '',\r\n      currentEmail: '',\r\n      likes: 0,\r\n      errors: {},\r\n      checkedItems: new Map(),\r\n      checked: false,\r\n      audiobooks: [],\r\n      currentAudio: null,\r\n      newAudio: null,\r\n      playState: false,\r\n      currentAudioId: 0,\r\n      scrollForwardState: true,\r\n      scrollBackwardState: false,\r\n      currentVolume: 50,\r\n      currentRange: 0,\r\n      currentDuration: null,\r\n      minutes: 0,\r\n      hours: 0,\r\n      seconds: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/books.json')\r\n        .then(res => {\r\n          let books = res.data;\r\n          this.setState({ \r\n            books, allBooks: res.data\r\n          }, () => this.createMenu() );\r\n        })\r\n    }\r\n\r\n    createMenu = () =>{\r\n\r\n      let options = [], age = [], genres = {}, sizes = [], ageTemp = [], sizesTemp = {};\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].genre;\r\n        for (var j = 0; j < item.length; j++) {\r\n          if (!genres.hasOwnProperty(item[j])) {\r\n            genres[item[j]] = [];\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          } else {\r\n            genres[item[j]].push(this.state.books[i].id);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (const item in genres) {\r\n        options.push({\r\n          key: item,\r\n          text: item,\r\n          value: genres[item]\r\n        })\r\n      }\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        if (ageTemp.indexOf(this.state.books[i].age_restriction) === -1) {\r\n          ageTemp.push(this.state.books[i].age_restriction);\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < ageTemp.length; i++) {\r\n        age.push({\r\n          key: ageTemp[i],\r\n          text: ageTemp[i],\r\n          value: ageTemp[i]\r\n        })\r\n      }\r\n\r\n      sizesTemp[\"Менее 10000\"] = [];\r\n      sizesTemp[\"От 10000 до 50000\"] = [];\r\n      sizesTemp[\"Более 50000\"] = [];\r\n\r\n      for (var i = 0; i < this.state.books.length; i++) {\r\n        let item = this.state.books[i].length;\r\n        if (item <= 10000) {\r\n          sizesTemp[\"Менее 10000\"].push(this.state.books[i].id);\r\n        } else if(item > 10000 && item < 50000) {\r\n          sizesTemp[\"От 10000 до 50000\"].push(this.state.books[i].id);\r\n        } else {\r\n          sizesTemp[\"Более 50000\"].push(this.state.books[i].id);\r\n        }\r\n      }\r\n\r\n      for (const item in sizesTemp) {\r\n        sizes.push({\r\n          key: item,\r\n          text: item,\r\n          value: sizesTemp[item]\r\n        })\r\n      }\r\n\r\n      console.log(sizes);\r\n\r\n      this.setState({\r\n        options, age, sizes\r\n      })\r\n    } \r\n/*\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      console.log(arr);\r\n      var comp = 'text';\r\n      const options = arr\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      console.log(options);    \r\n      this.setState({\r\n        options\r\n      })    \r\n    }  \r\n*/\r\n    selectValue = () =>{\r\n      var bookVal = this.state.bookValue;\r\n      this.setState({\r\n        bookVal\r\n      })  \r\n    }\r\n\r\n\r\n    handleGenreChange = (e, { value }) => {\r\n      this.setState({ currentGenre: value })\r\n    }        \r\n\r\n    handleRatingChange = (e, { value }) => {\r\n      this.setState({ rating: value })\r\n    }  \r\n\r\n    handleLengthChange = (e, { value }) => {\r\n      this.setState({ currentLength: value })\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    } \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu></TopMenu>\r\n        <div className=\"texts-wrapper\">\r\n        {this.state.isMenuVisible ?\r\n          <Menu className=\"texts-menu\" vertical>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите жанр'\r\n                fluid\r\n                value={this.state.currentGenre} \r\n                key={this.state.options.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleGenreChange}\r\n                options={this.state.options} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите размер'\r\n                fluid\r\n                value={this.state.currentLength} \r\n                //key={this.state.length.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleLengthChange}\r\n                options={this.state.sizes} \r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите рейтинг'\r\n                fluid\r\n                value={this.state.rating} \r\n                //key={this.state.age.key}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleRatingChange}\r\n                options={this.state.age} \r\n              />\r\n            </Menu.Item>                        \r\n          </Menu>:null\r\n        }\r\n            {(this.state.books.length && this.state.areBooksVisible) ? \r\n            <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n            {this.state.books.map((item, index) => ( \r\n              (this.state.currentGenre === 'all'|| this.state.currentGenre === '' || this.state.currentGenre.indexOf(item.id) !== -1) && \r\n              (this.state.rating === 'all'|| this.state.rating === '' || this.state.rating === item.age_restriction) &&\r\n              (this.state.currentLength === 'all' || this.state.currentLength === '' || this.state.currentLength.indexOf(item.id) !== -1)) &&\r\n              <Card key={index} className=\"single-book\">\r\n                <Card.Content>\r\n                  <div className=\"texts-image-wrapper books-image-wrapper\">\r\n                    <Image src={item.image} />\r\n                  </div>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-author\">{item.author}</span></Card.Header>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-title\">{item.title}</span> {/*<span className=\"books-genre\">{item.genre.map((genre, ind) => <span>{`#${genre}`}</span>)}</span>*/}</Card.Header>\r\n                  <div className=\"books-information\">\r\n                    <div className=\"books-views\">\r\n                      <span><Icon name='eye' size='large' /> </span>\r\n                      <span>{item.views}</span>\r\n                    </div>\r\n                    <div className=\"books-favourites\">\r\n                      <span><Icon name='heart' size='' /></span> \r\n                      <span>{item.likes}</span>\r\n                    </div>\r\n                    <Rating icon='star' defaultRating={item.rating} className = \"books-rating\" maxRating={5} disabled/>\r\n                  </div>\r\n                  <Card.Description>\r\n                    {item.content.substr(0,250) + ' ...'}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button primary><Link className=\"training-link books-link\"  to={{ pathname: `/books/${item.id}`,  query: { item } }}>Читать</Link></Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n           }\r\n        </div>\r\n      </div>\r\n    <footer></footer>\r\n    </Fragment>\r\n\t );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Materials extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/video.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/videos\">Видео</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card> \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/words.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/decks\">Наборы слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/texts.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/texts\">Обучающие тексты</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>             \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/books.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/books\">Книги</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n                                                                                                                                                             \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Materials;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Checkbox,Icon, Form, Divider, Label } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport ReactDOM from 'react-dom';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\n\r\nclass Example extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      categoryArray: [],\r\n      value: null,\r\n      areTestsVisible: true,\r\n      isSingleTestVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      value: '',\r\n      currentValue: '',\r\n      currentTest: [],\r\n      activeTest: null,\r\n      curIndexTest: 0,\r\n      curIndexCheckbox: 0,\r\n      correctResults: [],\r\n      correctAnswers: [],\r\n      incorrectAnswers: [],\r\n      isMenuVisible: true,\r\n      isTooltipVisible: false,\r\n      currentColor: null\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/tests.json')\r\n        .then(res => {\r\n          let tests = res.data;\r\n          this.setState({ \r\n            tests: tests\r\n          }, () => this.getMenuParams());\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (prevState.currentTest !== this.state.currentTest) {\r\n        \r\n      }\r\n    }\r\n\r\n    getMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.tests.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.title, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n    testChange = (e) =>{\r\n      let parentid = e.target.getAttribute(\"parentid\");   \r\n      let id = e.target.getAttribute(\"id\");\r\n      let currentTest = this.state.currentTest.slice();\r\n      let currentState = currentTest[parentid][id];\r\n      const arr = new Array(3).fill(false);\r\n      arr[id] = true;\r\n      currentTest[parentid] = arr;\r\n      this.setState({\r\n        currentTest\r\n      })\r\n    }\r\n\r\n\r\n    selectTest = (testId) =>{\r\n      let tests = this.state.tests.slice();\r\n      let activeTest = tests.find(x => x.id === testId);\r\n\r\n      let currentTest = [];\r\n      let testItem = [];\r\n      let correctResults = [];\r\n\r\n      activeTest.tasks.map((item, index) => correctResults.push(item.correct_answer));      \r\n      for (var i = 0; i < 3; i++) {\r\n        testItem.push(false);\r\n      }\r\n      for (var i = 0; i < activeTest.tasks.length; i++) {\r\n        currentTest.push(testItem);\r\n      }\r\n      this.setState({\r\n        activeTest,\r\n        currentTest,\r\n        correctResults\r\n      }, () => this.setState({\r\n          areTestsVisible: false,\r\n          isSingleTestVisible: true,\r\n      }));\r\n    }\r\n\r\n    backToTests = () =>{\r\n      this.setState({\r\n        areTestsVisible: true,\r\n        isSingleTestVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n    \t\tcurrentTest: [],\r\n    \t\tcurIndexTest: 0,\r\n    \t\tcurIndexCheckbox: 0,\r\n    \t\tcorrectResults: [],\r\n    \t\tcorrectAnswers: [],\r\n    \t\tincorrectAnswers: [],\r\n      })\r\n    }\r\n\r\n    checkResults = () =>{\r\n    \tlet resultsArray = this.state.currentTest.slice();\r\n    \tlet correctResults = this.state.correctResults.slice();\r\n    \tlet finalResults = [];\r\n    \tlet correctAnswers = [];\r\n    \tlet incorrectAnswers = [];\r\n    \tfor (var i = 0; i < resultsArray.length; i++) {\r\n    \t\tlet item = resultsArray[i];\r\n    \t\tfor (var j = 0; j < item.length; j++) {\r\n    \t\t\tif (item[j]) {\r\n    \t\t\t\tfinalResults.push(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n      if(finalResults.length == this.state.activeTest.tasks.length) {\r\n        for (var i = 0; i < finalResults.length; i++) {\r\n          if(correctResults[i] === finalResults[i]){\r\n            correctAnswers.push(i)\r\n          }\r\n          else{\r\n            incorrectAnswers.push(i)\r\n          }\r\n        }\r\n        this.setState({\r\n          isResultVisible: true,\r\n          isSingleTestVisible: false,\r\n          correctAnswers,\r\n          incorrectAnswers,\r\n          isMenuVisible: false,\r\n          isTooltipVisible: false\r\n        })                \r\n      }\r\n      else{\r\n        this.setState({\r\n          isTooltipVisible: true\r\n        })\r\n      }\r\n \t\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {this.state.areTestsVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n                <Menu.Item name='inbox'>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n          {(this.state.tests.length && this.state.areTestsVisible) ? \r\n            <Card.Group className=\"texts-cards tests-cards\" itemsPerRow={3} >\r\n              {this.state.tests.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&            \r\n              <Card key={index} className=\"test-card test-item\" style = {{boxShadow: `0 1px 3px 0 ${item.color}, 0 0 0 1px ${item.color}` }} >\r\n                <Card.Content>\r\n                  <Card.Header className=\"tests-card-title\" style = {{backgroundColor: item.color}} >\r\n                  \t<h3>{item.difficulty}</h3>\r\n                  \t<span>{item.title}</span>\r\n                  </Card.Header>\r\n                  <Card.Description className=\"tests-card-description\">\r\n                     <p className=\"tests-card-description-line\">Количество заданий - <span className=\"tests-card-description-txt\">{item.number}</span></p>\r\n                     <p className=\"tests-card-description-line\">Максимальное кол-во баллов - <span className=\"tests-card-description-txt\">{item.totalScore}</span></p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={ () => {this.selectTest(item.id)} /*this.selectTest.bind(this, item.id) */} style = {{backgroundColor: item.color }} >Начать тест</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n          }\r\n         {this.state.isSingleTestVisible ? \r\n            <Card className=\"single-text-card tests-wrapper\">\r\n              <h1>\r\n              \t{this.state.activeTest.title}\r\n              \t<span onClick={this.backToTests} title=\"Назад к тестам\" ><Icon name='window close outline'/></span>\r\n              </h1>\r\n              <Card.Content>\r\n                {this.state.activeTest.tasks.slice().map((item, index) =>\r\n                    <Card.Description key={item.id} id={index} className=\"single-text-card-description\">\r\n                    <h3 >{item.sentence}</h3>\r\n                    <Form className=\"single-test-form\" >\r\n                      {item.variants.map((param, ind) => \r\n                        <label className=\"test-label\" key={ind}>\r\n                          <input type=\"checkbox\" \r\n                            id={ind}\r\n                            parentid={item.id}\r\n                            label={param}\r\n                            name='checkboxRadioGroup'\r\n                            value={item}\r\n                            checked={this.state.currentTest[item.id][ind]}\r\n                            onChange={this.testChange}/>\r\n                            {param}                          \r\n                        </label>\r\n                      )}                                             \r\n                    </Form>                      \r\n                  </Card.Description>\r\n                )}\r\n              </Card.Content>\r\n              {this.state.isTooltipVisible ?\r\n                <div className=\"tests-tooltip\">\r\n                    <h4>Заполните все поля!</h4>               \r\n                </div> : null\r\n              }\r\n              <div className=\"tests-button-wrapper decks-button-wrapper\">\r\n              \t<Button onClick={this.checkResults} >Принять</Button>                  \t\r\n              </div>\r\n            </Card>:null\r\n          }\r\n          {this.state.isResultVisible ? \r\n            <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper test-final\" >\r\n             <Card className=\"card-training test-result-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n    \t\t\t\t\t\t  <div className=\"grades-results-wrapper\">\r\n    \t\t\t\t\t\t\t  <h3>Количество правильных ответов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n                    <h3>Количество набранных баллов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n    \t\t\t\t\t\t  </div>\t\t                  \r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.correctAnswers.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.incorrectAnswers.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.backToTests}>Назад к тестам</Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group> : null \r\n          }       \r\n          </div>\r\n        </div>  \r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Example;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Rightwrong extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        isCardVisible: false,\r\n        isImageVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false         \r\n      }, () => this.initialLoad())\r\n   } \r\n\r\n   initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          let result = [];\r\n \r\n          for (var i = 0; i < 3; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }  \r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          console.log(result);               \r\n          this.setState({ \r\n            words, \r\n            result,\r\n            currentWord });\r\n        })\r\n   }\r\n\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    checkResponse = (response) => {\r\n      if (response) {\r\n        let positiveWords = this.state.positiveWords.slice();        \r\n        positiveWords.push(this.state.currentWord); \r\n        this.setState({ positiveWords })       \r\n      } else {\r\n          let negativeWords = this.state.negativeWords.slice();          \r\n          negativeWords.push(this.state.currentWord);\r\n          this.setState({ negativeWords })          \r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true\r\n      })      \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let id =this.state.id;\r\n      id = id + 1;\r\n      const result = this.state.result;\r\n      if(id < this.state.result.length){\r\n        const currentWord =  result[id][Math.floor(Math.random() * result[0].length)];     \r\n        this.setState({\r\n          id,\r\n          currentWord, \r\n          isImageVisible: false,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n      })\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Верно-неверно</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent}>Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"rightwrong-timer\"> \r\n                </Card.Header>\r\n                <Card.Header className=\"rightwrong-header\">{this.state.currentWord.name} \r\n                </Card.Header>                \r\n                <Card.Header>{this.state.currentWord.translation} \r\n                </Card.Header>\r\n                <div className=\"rightwrong-image-wrapper\">\r\n                {this.state.isImageVisible ?\r\n                  <Image src={this.state.currentWord.image} className=\"rightwrong-image\"></Image> : null               \r\n                }\r\n                </div>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.checkResponse.bind(this, false)} className=\"red false-button\" primary>Неверно</Button>\r\n                  <Button onClick={this.checkResponse.bind(this, true)} className=\"green true-button\" primary>Верно</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {(this.state.negativeWords.length !== 0 ) ?\r\n                    <div className=\"answers-wrapper\">\r\n                      <List className=\"audio-list\">\r\n                      <h2>Верные ответы</h2>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                      <List className=\"audio-list\">\r\n                      <h2>Неверные ответы</h2>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                          <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                        )}\r\n                     </List>\r\n                   </div> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.result.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Rightwrong;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[1].main_points;\r\n          const fullData = res.data[0].rules[1].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[2].main_points;\r\n          const fullData = res.data[0].rules[2].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[3].main_points;\r\n          const fullData = res.data[0].rules[3].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[4].main_points;\r\n          const fullData = res.data[0].rules[4].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[5].main_points;\r\n          const fullData = res.data[0].rules[5].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[6].main_points;\r\n          const fullData = res.data[0].rules[6].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFuturePerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[8].main_points;\r\n          const fullData = res.data[0].rules[8].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPastPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[7].main_points;\r\n          const fullData = res.data[0].rules[7].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[9].main_points;\r\n          const fullData = res.data[0].rules[9].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples           \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[10].main_points;\r\n          const fullData = res.data[0].rules[10].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass GrammarFuturePerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          let main_points = res.data[0].rules[11].main_points;\r\n          const fullData = res.data[0].rules[11].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples,\r\n            main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle,\r\n            currentDescription,\r\n            currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfectContinuous;","import React,{Component} from 'react';\r\n//import './audioplayer.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\nimport jsmediatags from \"jsmediatags\";\r\nimport { Howl } from \"howler\";\r\nimport axios from 'axios';\r\n\r\n//import {bindActionCreators} from 'redux';\r\n//import actions from './actions/index';\r\n\r\n//import {connect} from 'react-redux';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: [],\r\n      soundVolume: 5,\r\n      playing: false,\r\n      muted: false,\r\n      currentTrack: null,\r\n      currentTrackLength: null,\r\n      currentTrackInfo: null,\r\n      currentTrackPicture: null,\r\n      currentId: 4,\r\n      order: \"consecutive\",\r\n      duration: 0,\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n      currentDuration: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\",\r\n      tracksVisible: true,\r\n      interval: null,\r\n      progress: 0,\r\n      decodingFinished: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      currentId: 1\r\n    }, () => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) =>\r\n          this.setState({ audio: res.data })\r\n        );       \r\n    }) \r\n  }\r\n\r\n/*\r\n  componentDidUpdate(prevProps){\r\n    let currentTrack = this.state.currentTrack;\r\n    if(prevProps.store.playing !== this.state.playing) { \r\n      this.setState({playing: this.state.playing})\r\n      if (this.state.playing === false) {\r\n        currentTrack.pause();\r\n      } else {\r\n        let interval = this.state.interval;\r\n        currentTrack.play();\r\n        interval = setInterval(() => this.startCycle(), 1000);\r\n        this.setState({ interval });\r\n      }\r\n    }    \r\n\r\n    if(prevProps.store.currentId !== this.state.currentId) { \r\n      if (currentTrack) {\r\n        currentTrack.pause();\r\n      }   \r\n      this.setState({\r\n        currentTrack\r\n      }, () => this.callFunctions(this.state.currentId));\r\n    }\r\n  }\r\n*/\r\n  callFunctions = () => {\r\n    let id = this.state.currentId;\r\n    let currentTrack = new Howl({\r\n      src: \"tracks/\" + this.state.audio.slice(id, id + 1),\r\n      html5: true,\r\n      volume: this.state.soundVolume / 10\r\n    });\r\n    var duration, minutes, seconds, currentMinutes, currentSeconds;\r\n    currentTrack.on(\"load\", () => {\r\n      duration = currentTrack.duration();\r\n      minutes = Math.floor(duration / 60);\r\n      seconds = Math.floor(duration - minutes * 60);\r\n      minutes = (\"0\" + minutes).slice(-2);\r\n      seconds = (\"0\" + seconds).slice(-2);\r\n      currentMinutes = \"00\";\r\n      currentSeconds = \"00\";\r\n      this.setState({ minutes, seconds, duration, currentTrack }, () => {\r\n        this.setState({ decodingFinished: true });        \r\n        if (this.state.playing) {\r\n          this.continuePlay();\r\n        } \r\n      });\r\n    });\r\n    this.readTags(id);\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      progress: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\"\r\n    })\r\n  }\r\n\r\n  readTags = (id) => {\r\n    let track = this.state.audio[id];\r\n    jsmediatags.read(\r\n      \"http://localhost:3000/tracks/\" + `${this.state.audio[id]}`,\r\n      {\r\n        onSuccess: (tag) => {\r\n          this.setState({ currentTrackInfo: tag }, () => {\r\n            this.decodeTrackInfo();\r\n          });\r\n        },\r\n        onError: (error) => {\r\n          console.log(\":(\", error.type, error.info);\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  decodeTrackInfo = () => {\r\n    let title = this.state.currentTrackInfo.tags.title;\r\n    let artist = this.state.currentTrackInfo.tags.artist;\r\n    let currentTrackPicture;\r\n    if (this.state.currentTrackInfo.tags.picture) {\r\n      const { data, type } = this.state.currentTrackInfo.tags.picture;\r\n      const byteArray = new Uint8Array(data);\r\n      const blob = new Blob([byteArray], { type });\r\n      currentTrackPicture = URL.createObjectURL(blob);\r\n    }\r\n    this.setState({\r\n      currentTrackPicture,\r\n      currentTrackTitle: title,\r\n      currentTrackArtist: artist\r\n    })\r\n  };\r\n\r\n  playMusic = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let interval = this.state.interval;\r\n    if (this.state.playing) {\r\n      currentTrack.pause();\r\n      //this.props.actions.changePlayingState(false);\r\n      clearInterval(interval);\r\n      this.setState({ interval });\r\n    } else {\r\n      currentTrack.volume(this.state.soundVolume / 10);\r\n      currentTrack.play();\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n      this.setState({ interval });\r\n      //this.props.actions.changePlayingState(true);\r\n    }\r\n    //this.props.actions.changePlayingState(!this.state.playing);\r\n    this.setState({currentTrack});\r\n  };\r\n\r\n  continuePlay = () =>{\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.playing) {\r\n      currentTrack.stop();\r\n    }\r\n    let interval = this.state.interval;\r\n    clearInterval(interval);\r\n    currentTrack.play();\r\n    if (this.state.playing) {\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n    }    \r\n    this.setState({ interval });    \r\n  }\r\n\r\n  changeVolume = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(e.target.value / 10);\r\n    this.setState({ soundVolume: e.target.value, currentTrack });\r\n  };\r\n\r\n  nextTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    console.log(\"currentTrack\", currentTrack);\r\n    currentTrack.stop();\r\n    if (this.state.currentId < this.state.audio.length - 1) {\r\n      //this.props.actions.selectTrack(this.state.currentId + 1);\r\n    } else {\r\n       //this.props.actions.selectTrack(0);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  prevTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    currentTrack.stop();\r\n    if (this.state.currentId > 0) {\r\n      //this.props.actions.selectTrack(this.state.currentId - 1);\r\n    } else {\r\n      //this.props.actions.selectTrack(this.state.audio.length - 1);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  muteSound = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.muted) {\r\n      currentTrack.mute(false);\r\n    } else {\r\n      currentTrack.mute(true);\r\n    }\r\n    this.setState({\r\n      muted: !this.state.muted,\r\n      currentTrack,\r\n    });\r\n  };\r\n\r\n  startCycle = () => {\r\n    this.incTime();\r\n    this.updateProgress();\r\n  };\r\n\r\n  updateProgress = () => {\r\n    let time = Math.round(this.state.currentTrack.seek());\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let progress = ((time / duration) * 100).toFixed(2);\r\n    this.setState({ progress });\r\n    //this.props.actions.changeProgressState(progress);\r\n  };\r\n\r\n  incTime = () => {\r\n    let currentDuration = Math.round(this.state.currentTrack.seek());\r\n    let currentMinutes = Math.floor(currentDuration / 60);\r\n    let currentSeconds = Math.floor(currentDuration - currentMinutes * 60);\r\n    currentMinutes = (\"0\" + currentMinutes).slice(-2);\r\n    currentSeconds = (\"0\" + currentSeconds).slice(-2);\r\n    this.setState({ currentSeconds, currentMinutes, currentDuration });\r\n    if (currentDuration === this.state.currentTrack.duration()) {\r\n      let currentTrack = this.state.currentTrack;\r\n      currentTrack.stop();      \r\n      if (this.state.currentId < this.state.audio.length - 1) {\r\n        //this.props.actions.selectTrack(this.state.currentId + 1);\r\n      } else {\r\n        //this.props.actions.selectTrack(0);\r\n      }\r\n      this.setState({ currentTrack, decodingFinished: false }, () => {\r\n        this.resetState();\r\n        this.callFunctions(this.state.currentId);\r\n      });      \r\n    }\r\n  };\r\n\r\n  setSeek = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let seek = (e.target.value * duration) / 100;\r\n    currentTrack.seek(seek);\r\n    console.log(\"seek\", Math.round(seek));\r\n    this.setState({ currentTrack, progress: e.target.value }, () => {\r\n      this.incTime();\r\n      //this.props.actions.changeProgressState(Math.round(seek));\r\n      console.log(this.state.progress);\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"player__visualizer player-visualizer\">\r\n          <div className=\"player-visualizer__waveform\" id=\"waveform\"></div>\r\n        </div>\r\n        <div className=\"player__top player-top\">\r\n          <span className=\"player-top__time\">{this.state.currentMinutes}.{this.state.currentSeconds}</span>\r\n          <div className=\"player-top__progress player-progress\">\r\n              <input\r\n                className=\"player-progress__input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                type=\"range\"\r\n                value={this.state.progress}\r\n                onChange={this.setSeek}\r\n              />\r\n          </div>\r\n          <span className=\"player-top__time\">{this.state.minutes}.{this.state.seconds}</span>\r\n        </div>\r\n        <div className=\"player-main\">\r\n          <div className=\"player-left\">\r\n            <div className=\"player-info player__info\">\r\n              <div className=\"player-info__icon player-icon\">\r\n                  {this.state.currentTrackPicture ? (\r\n                    <img src={this.state.currentTrackPicture} className=\"player-icon__picture\" alt=\"\" />\r\n                  ) : null}              \r\n              </div>\r\n              <div className=\"player-info__description player-description\">\r\n                <p className=\"player-description__name\">{this.state.currentTrackTitle}</p>\r\n                <p className=\"player-description__artist\">{this.state.currentTrackArtist}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"player__controls player-controls\">\r\n              <div className=\"player-controls__navigation\">\r\n                <div className=\"player-controls__item player-controls__left\" onClick={this.prevTrack}><i className=\"fas fa-backward\"></i></div>\r\n                {!this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-play\"></i></div> : null}\r\n                {this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-pause\"></i></div> : null}\r\n                <div className=\"player-controls__item player-controls__right\" onClick={this.nextTrack}><i className=\"fas fa-forward\"></i></div>         \r\n              </div>\r\n            </div>        \r\n          </div>\r\n          <div className=\"player-controls__volume player-volume\">\r\n            <div className=\"player-controls__item player-volume__item\"><i className=\"fas fa-volume-up\"></i></div>\r\n                      <input\r\n                        className=\"player-controls__audio\"\r\n                        value={this.state.soundVolume}\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        onChange={this.changeVolume}\r\n                        type=\"range\"\r\n                      />        \r\n          </div>      \r\n        </div>\r\n      </div>        \r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n*/\r\nexport default AudioPlayer;","import React, { Component } from 'react';\r\nimport {Button, TextArea, Form, Input } from 'semantic-ui-react'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Comments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n      loaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id === Number(this.props.id));\r\n    if (item) {\r\n      for (var i = 0; i < item.comments.length; i++) {\r\n        let date = new Date(item.comments[i].date);\r\n        let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n          date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);\r\n        item.comments[i].date = datestring;\r\n      }\r\n      this.setState({\r\n        comments: item.comments,\r\n        loaded: true\r\n      }, () => console.log(this.state))      \r\n    } else {\r\n      this.setState({\r\n        noComments: true,\r\n        loaded: true\r\n      })\r\n    }\r\n    \r\n  } \r\n\r\n    addComment = () =>{\r\n      let comments = this.state.comments.slice();\r\n      let errors = this.state.errors;\r\n      let currentComment = this.state.currentComment;\r\n      let currentName = this.state.currentName;\r\n      let currentEmail = this.state.currentEmail;\r\n      let temp = {};\r\n\r\n      if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n        let date = new Date();\r\n        let datestring = (\"0\" + date.getDate()).slice(-2) + \"-\" + (\"0\"+(date.getMonth()+1)).slice(-2) + \"-\" +\r\n        date.getFullYear() + \" \" + (\"0\" + date.getHours()).slice(-2) + \":\" + (\"0\" + date.getMinutes()).slice(-2);        \r\n        temp['commentId'] = uuidv4();\r\n        temp['author'] = currentName;\r\n        temp['text'] = currentComment;        \r\n        temp['date'] = datestring;\r\n        let id = this.props.id;\r\n        this.props.actions.addCommentToBook(id, temp);        \r\n        this.setState({\r\n          currentName: '',\r\n          currentComment: '',\r\n          currentEmail: ''\r\n        })\r\n      }\r\n\r\n      else if (currentName === ''){\r\n        errors['name'] = \"Заполните поле имени!\";\r\n        this.setState({\r\n          errors\r\n        })\r\n      }\r\n\r\n      else if(currentComment === ''){\r\n        errors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n\r\n      else if(currentEmail === ''){\r\n        errors['email'] = \"Заполните поле почты\";\r\n        this.setState({\r\n          errors\r\n        })        \r\n      }\r\n\r\n    }\r\n\r\n    updateComment = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateName = (event) =>{\r\n      this.setState({currentName: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateEmail = (event) =>{\r\n      this.setState({currentEmail: event.target.value.substr(0,500)});\r\n    }\r\n\r\n\r\n  render() {\r\n    return (     \r\n      <>\r\n        <div className=\"single-text-card-form\">\r\n          <Form>\r\n            <Form.Field>\r\n              <Input value={this.state.currentName || ''} onChange={this.updateName} focus placeholder='Имя'/>\r\n              <span>{this.state.errors['name']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input value={this.state.currentEmail || ''} onChange={this.updateEmail} focus placeholder='Email'/>\r\n              <span>{this.state.errors['email']}</span>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <TextArea value={this.state.currentComment || ''} onChange={this.updateComment} maxLength=\"50\" placeholder='Ваш комментарий' />\r\n              <span>{this.state.errors['comment']}</span>\r\n            </Form.Field>                           \r\n            <Button onClick={this.addComment} type='submit'>Отправить</Button>\r\n          </Form>         \r\n        </div>\r\n        {this.state.loaded && this.state.comments ?\r\n          <div className=\"single-text-card-comments\">\r\n            {this.state.comments.map((item, index) =>\r\n              <div className=\"single-text-card-comment\" key={index}>\r\n                <h3>{item.author}<span className=\"single-text-card-date\">{item.date}</span></h3>\r\n                <p>{item.text}</p>                              \r\n              </div>\r\n             )}                       \r\n          </div>\r\n        : null}\r\n      </> \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalFont extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      fontSizeTemp: 16,\r\n      lineHeightTemp: 32,\r\n      fontFamilyTemp: \"'Times New Roman', sans-serif\",\r\n      fontWeightTemp: 400,      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n changeValue = (e) =>{\r\n    this.setState({fontSizeTemp: e.target.value})\r\n  }\r\n\r\n  changeFontFamily = (e) =>{\r\n    this.setState({fontFamilyTemp: e.target.value})\r\n  }\r\n\r\n  changeFontWeight = (e) =>{\r\n    this.setState({fontWeightTemp: e.target.value})\r\n  }\r\n\r\n  changeLineHeight = (e) =>{\r\n    this.setState({lineHeightTemp: e.target.value})\r\n  } \r\n\r\n  applyFontSettings = () => {\r\n    this.props.actions.selectFontSize(this.state.fontSizeTemp);\r\n    this.props.actions.selectFontFamily(this.state.fontFamilyTemp);\r\n    this.props.actions.selectFontWeight(this.state.fontWeightTemp);\r\n    this.props.actions.selectFontSpacing(this.state.lineHeightTemp);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleFontModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper select-font-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-font\">\r\n            <div className=\"select-font-block\">\r\n              <span>Размер</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeValue} type=\"range\" min=\"8\" max=\"24\" value={this.state.fontSizeTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontSizeTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Интервал</span>         \r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeLineHeight} type=\"range\" min=\"16\" max=\"72\" value={this.state.lineHeightTemp} name=\"\"/>                \r\n                <span className=\"select-font-value\">{this.state.lineHeightTemp}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"select-font-block\">\r\n              <span>Жирность</span>\r\n              <div className=\"select-font-input\">\r\n                <input onChange={this.changeFontWeight} type=\"range\" min=\"200\" max=\"900\" step=\"100\" value={this.state.fontWeightTemp} name=\"\"/>               \r\n                <span className=\"select-font-value\">{this.state.fontWeightTemp}</span>\r\n              </div>  \r\n            </div>\r\n          </div>\r\n          <select className=\"select-font-family\" onChange={this.changeFontFamily} value={this.state.fontFamily}>\r\n            <option value =\"'Times New Roman', sans-serif\">Times New Roman</option>\r\n            <option value =\"'Arial', sans-serif\">Arial</option>\r\n            <option value =\"'Verdana', sans-serif\">Verdana</option>\r\n            <option value =\"'Lucida Console', sans-serif\">Lucida Console</option>\r\n            <option value =\"'Georgia', serif\">Georgia</option>\r\n            <option value =\"'Courier New', monospace\">Gourier New</option>\r\n          </select>\r\n          <p className=\"select-font-example\" style={{ \r\n                                fontSize: this.state.fontSizeTemp + \"px\", \r\n                                fontFamily: this.state.fontFamilyTemp,\r\n                                lineHeight: this.state.lineHeightTemp + \"px\",\r\n                                fontWeight: this.state.fontWeightTemp }} >Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet</p>                  \r\n          <button className=\"normal-button\" onClick={this.applyFontSettings} >Применить</button>\r\n        </div>    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalFont);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ModalColor extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isColorModalOpen: false,\r\n      activeFontColor: '#222222',\r\n      activeBgColor: '#f6f6f6',\r\n      fontState: [false,false,true,false,false,false,false,false,false,false,false,false,false,false,false,false],\r\n      bgState: [false,false,false,false,false,false,false,false,false,false,false,false,false,false,true,false],\r\n      colorScheme: [  \r\n              '#000000','#111111','#222222','#333333',\r\n              '#444444','#555555','#666666','#777777',\r\n              '#888888','#999999','#a7a7a7','#b8b8b8',\r\n              '#d0d0d0','#dcdcdc','#f6f6f6','#ffffff'   ]      \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n  setFontColor = (e) =>{\r\n    let fontState = this.state.fontState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < fontState.length; i++) {\r\n      fontState[i] = false;\r\n    }\r\n    fontState[index] = true;\r\n    this.setState({\r\n      activeFontColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      fontState\r\n    })\r\n\r\n  }\r\n\r\n  setBgColor = (e) =>{\r\n    let bgState = this.state.bgState.slice();\r\n    let index = e.currentTarget.getAttribute(\"data-index\");\r\n    for (var i = 0; i < bgState.length; i++) {\r\n      bgState[i] = false\r\n    }\r\n    bgState[index] = true;\r\n    this.setState({\r\n      activeBgColor: e.currentTarget.getAttribute(\"colorvalue\"),\r\n      bgState\r\n    })\r\n  }\r\n\r\n  applyColorSettings = () =>{\r\n    this.props.actions.selectBgColor(this.state.activeBgColor);\r\n    this.props.actions.selectFontColor(this.state.activeFontColor);\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.props.actions.toggleColorModal(false);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className=\"settings-overlay\">\r\n        <div className=\"select-palette-wrapper\">\r\n          <span className=\"close-button\" onClick={this.closeModal} >\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n          <div className=\"select-palette-container\">\r\n            <div className=\"palette-container-item\">\r\n              <p>Шрифт</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setFontColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.fontState[index] ? \r\n                      <span><i className=\"fas fa-check\"></i></span>  : null\r\n                    }\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"palette-container-item\">\r\n              <p>Фон</p>\r\n              <div className=\"select-palette\">\r\n                {this.state.colorScheme.map((item,index) =>\r\n                  <div key={index} className=\"palette-item\" data-index={index} onClick={this.setBgColor} style={{ backgroundColor: item }} colorvalue={item}>\r\n                    {this.state.bgState[index] ?\r\n                      <span><i className=\"fas fa-check\"></i></span> \r\n                       : null\r\n                    }\r\n                  </div>\r\n                )}          \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"palette-item-selected\" style={{ backgroundColor: this.state.activeBgColor }} >\r\n            <span style={{ color: this.state.activeFontColor  }} >Lorem ipsum </span>\r\n          </div> \r\n          <Button primary onClick={this.applyColorSettings}>Применить</Button>\r\n        </div>              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalColor);","import React, { Component, Fragment } from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\n\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass WordFound extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  } \r\n\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (     \r\n      <div className = \"word-modal__overlay\">\r\n        <div className=\"word-modal\">\r\n          <div className=\"word-modal__image\">\r\n            <img src=\"word-modal__picture\" src = {this.props.word.image}/>\r\n          </div>\r\n          <div className=\"word-modal__description\">\r\n            <p className=\"word-modal__title\">{this.props.word.name} - {this.props.word.translation}</p>\r\n            <p className=\"word-modal__meaning\">{this.props.word.definition}</p>   \r\n            <Button primary onClick={this.closeSearchModal}>Закрыть</Button>              \r\n          </div>\r\n        </div>              \r\n      </div>        \r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WordFound);","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu, Icon, TextArea, Form, Checkbox, Input } from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu';\r\nimport Comments from './Comments';\r\nimport ModalFont from './ModalFont';\r\nimport ModalColor from './ModalColor';\r\nimport WordFound from './WordFound';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport iconv from 'iconv-lite';\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass SelectedBook extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.fileInputRef = React.createRef();    \r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      text: null,\r\n      pageIndexes: [],\r\n      currentPageId: 0,\r\n      loaded: false,\r\n      pages: 0,      \r\n      commentsVisible: false,\r\n      wordsEl: [],\r\n      words: [],\r\n      selected: '',\r\n      isModalFoundOpen: false,\r\n      isModalInputOpen: false,\r\n      comments: []               \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    let allComments = this.props.store.booksComments;\r\n    let item = allComments.find(x => x.id == this.props.match.params.id);\r\n    if (item) {\r\n      this.setState({\r\n        comments: item.comments\r\n      })\r\n    }\r\n    var myHeaders = new Headers();\r\n    myHeaders.append('Content-Type','text/plain; charset=UTF-8');  \r\n    const that = this;\r\n    axios.all([\r\n      axios.get('/books.json'), \r\n      axios.get('/words_full.json')\r\n    ])   \r\n    .then(axios.spread((obj1, obj2) => {\r\n      let books = obj1.data; \r\n      let words = obj2.data;\r\n      let selectedBook = books.find(x => x.id == this.props.match.params.id);\r\n      fetch(selectedBook.link, myHeaders)\r\n        .then(response => response.arrayBuffer())\r\n        .then(function (buffer) {\r\n            const decoder = new TextDecoder('iso-8859-1');\r\n            let text = decoder.decode(buffer).split(\"\\n\");\r\n            return text\r\n        })\r\n        .then((text) => that.setState({words, text }, () => that.splitIntoPages() ))\r\n    })) \r\n\r\n  } \r\n\r\n  splitIntoPages = () => {\r\n    let text = this.state.text;\r\n    let pages = [], words = [], pageIndexes = [];\r\n    let value = 1600 / this.props.store.lineHeight;\r\n    let pagesCount = Math.ceil(text.length / value);\r\n    let currentMin = 0;\r\n    let currentMax = 50;\r\n    for (var i = 0; i < pagesCount; i++) {\r\n      let txt = text.slice(currentMin, currentMax);\r\n      if (currentMin === 0 ) {\r\n        let newTxt = [];\r\n        for (var j = 0; j < txt.length; j++) {\r\n          let newSentence = [];\r\n          newSentence.push(txt[j].split(' '));\r\n          newTxt.push(newSentence);\r\n        }\r\n        words.push(newTxt);\r\n      }\r\n      pages.push(txt);\r\n      currentMin = currentMin + 50;\r\n      currentMax = currentMax + 50;\r\n    }\r\n      for (var i = 0; i < pagesCount; i++) {\r\n        pageIndexes.push(i);\r\n      }\r\n      this.setState({ pages, \r\n                      pageIndexes, \r\n                      currentPage: pages[0],\r\n                      splittedPage: words,\r\n                      loaded: true });\r\n  }  \r\n\r\n    prevButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages;\r\n      if(currentPageId > 0){\r\n        currentPageId--;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    }\r\n\r\n    nextButton = () =>{\r\n      let currentPageId = this.state.currentPageId;\r\n      let pages = this.state.pages.slice();\r\n      if(currentPageId < pages.length - 1){\r\n        currentPageId++;\r\n      }\r\n      let currentPage = pages[currentPageId];\r\n      let newTxt = []; let words = [];\r\n      for (var i = 0; i < currentPage.length; i++) {\r\n        let newSentence = [];\r\n        newSentence.push(currentPage[i].split(' '));\r\n        newTxt.push(newSentence);\r\n      }\r\n      words.push(newTxt);  \r\n      this.setState({\r\n          splittedPage: words,\r\n          currentPageId,\r\n          currentPage\r\n      }, () => this.scrollToTop())\r\n    } \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    }  \r\n\r\n  changePage = (e) =>{\r\n      let currentPageId = Number(e.target.value);\r\n      let pages = this.state.pages;\r\n      let currentPage = pages[currentPageId];\r\n      this.setState({\r\n          currentPageId, currentPage\r\n      })  \r\n  }\r\n\r\n  toggleComments = () => {\r\n    this.setState({ commentsVisible: !this.state.commentsVisible })\r\n  }\r\n\r\n\r\n  searchForWord = (item, e) => {\r\n    switch (e.detail) {\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        let words = this.state.words.slice();\r\n        let newItem = item.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\r\n        let found = words.find(x => x.name === newItem);\r\n        if (found) {\r\n          this.setState({\r\n            found\r\n          }, () => this.toggleFoundModal())\r\n        } else {\r\n          this.setState({\r\n            selected: newItem\r\n          }, () => this.toggleInputModal())\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }    \r\n  } \r\n\r\n  toggleFoundModal = () => {\r\n    this.props.actions.toggleSearchModal(true);\r\n  }\r\n\r\n  toggleInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: !this.state.isModalInputOpen\r\n    })\r\n  }\r\n\r\n\r\n\r\n  changeFont = () => {\r\n    this.props.actions.toggleFontModal(true);\r\n  }\r\n\r\n  changeColor = () => {\r\n    this.props.actions.toggleColorModal(true);\r\n  }\r\n\r\n  closeSearchModal = () => {\r\n    this.props.actions.toggleSearchModal(false);\r\n  }\r\n\r\n  closeInputModal = () => {\r\n    this.setState({\r\n      isModalInputOpen: false\r\n    });\r\n  }  \r\n\r\n  render() {\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          {this.props.store.isSearchModalOpen ?\r\n            <WordFound word = {this.state.found} />\r\n          : null}\r\n          {this.state.isModalInputOpen ?\r\n            <div className = \"word-modal__overlay\">\r\n                <div className=\"word-modal__reject\">\r\n                   <p>Sorry, cannot find selected word is our vocabulary</p>\r\n                   <Button primary onClick={this.closeInputModal}>Закрыть</Button>\r\n                </div>\r\n            </div>\r\n          : null}        \r\n     \r\n          {this.props.store.isFontModalOpen ?\r\n            <ModalFont />\r\n          : null}\r\n          {this.props.store.isColorModalOpen ?\r\n            <ModalColor />\r\n          : null}\r\n          {this.state.loaded ?\r\n            <div className=\"navigation-panel\">\r\n              <div className=\"navigation-progress\"> \r\n                <input  \r\n                  type=\"range\" \r\n                  value={this.state.currentPageId} \r\n                  max={this.state.pages.length - 1} \r\n                  min=\"0\"\r\n                  onChange={this.changePage} />\r\n              </div>\r\n              <div className=\"nav-pagination\">{this.state.currentPageId + 1} / {this.state.pages.length}</div>            \r\n              <div className=\"navigation-links\">\r\n                <span onClick={this.prevButton} className=\"navigation-links__item\" title=\"Назад\"><Icon name='arrow left' size='large' /> </span>\r\n                <span onClick={this.nextButton} className=\"navigation-links__item\" title=\"Вперед\"><Icon name='arrow right' size='large' /> </span>\r\n                <span onClick={this.changeFont} className=\"navigation-links__item\" title=\"Настройки шрифта\"><Icon name='font' size='large' /> </span>\r\n                <span onClick={this.changeColor} className=\"navigation-links__item\" title=\"Настройки цвета\"><Icon name='tint' size='large' /> </span>\r\n              </div>\r\n            </div>\r\n          : null}\r\n          {this.state.loaded ?\r\n            <>\r\n              <div className=\"selected-book\" style={{ backgroundColor: this.props.store.backgroundColor, color: this.props.store.color}}>\r\n              <div className=\"selected-book__content book-content\" style= \r\n                                          {{ lineHeight: this.props.store.lineHeight + \"px\",\r\n                                             fontWeight: this.props.store.fontWeight, \r\n                                             fontSize:   this.props.store.fontSize + \"px\", \r\n                                             fontFamily: this.props.store.fontFamily }}>\r\n                  {this.state.splittedPage.map((page, index1) => \r\n                    <Fragment key={index1}>\r\n                      {page.map((sentence, index2) => \r\n                        <Fragment key={index2}>\r\n                          {sentence.map((word, index3) => \r\n                            <p key={index3}> \r\n                              {word.map((item, index4) => \r\n                                <span className=\"single-word\" key={index4} onClick={this.searchForWord.bind(this, item)}>{`${item} `}</span>\r\n                              )}\r\n                            </p>\r\n                          )}\r\n                        </Fragment>\r\n                      )}\r\n                    </Fragment> \r\n                  )}\r\n              </div>\r\n              </div>          \r\n              <div className=\"single-text-form__wrapper\">\r\n                <div className=\"comments__header\">\r\n                  {this.state.comments.length ?\r\n                    <>\r\n                    <span className=\"comments-header__counter\">Комментариев: {this.state.comments.length}</span>\r\n                    <span className=\"comments-header__button\" onClick={this.toggleComments}>{this.state.commentsVisible ? 'Скрыть комментарии': 'Показать комментарии'}</span>\r\n                    </>\r\n                  : null}\r\n                </div>\r\n                {this.state.commentsVisible && this.state.comments?\r\n                  <Comments id={this.props.match.params.id} />\r\n                : null}           \r\n              </div>              \r\n            </>\r\n          : <div className=\"preloader\">\r\n            <img src = \"../preloader.gif\"/>\r\n          </div> }\r\n          <footer></footer> \r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return { store: state.reducer };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: bindActionCreators(actions, dispatch) }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedBook);","let selectedBook = {}\r\n\r\n\r\nlet initialState = {\r\n\t\"totalScore\": 0,\r\n\t\"todayScore\": 0,\r\n\t\"exercisesComplete\": 0,\r\n\t\"testsComplete\": 0,\r\n\t\"wordsTotal\": 0,\r\n\t\"wordsStudied\": 0,\r\n\t\"wordsRemaining\": 0,\r\n\t\"vocabModalOpen\": false,\r\n\t\"selectedVocabWord\": null,\r\n\t\"selectedBook\": selectedBook,\r\n\t\"booksComments\": [\r\n\t\t{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 1,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 2,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 11,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 12,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 40,\r\n\t\t\t\"comments\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 34,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"John Doe\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"commentId\": 35,\r\n\t\t\t\t\t\"date\": \"Sun, 17 Mar 2019 16:40:49 GMT\",\r\n\t\t\t\t\t\"author\": \"Bob Davis\",\r\n\t\t\t\t\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod  tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,  quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo  consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse  cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\t\t\t\t\r\n\t],\r\n\tcolor: '#222222',\r\n\tbackgroundColor: '#f6f6f6',\r\n\tfontSize: 16,\r\n\tfontFamily: \"'Times New Roman', sans-serif\",\r\n\tlineHeight: 32,\r\n\tfontWeight: 400,\r\n\tisFontModalOpen: false,\r\n\tisColorModalOpen: false,\r\n\tisSearchModalOpen: false\t\r\n\r\n};\r\n\r\n\r\n\r\nlet reducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_TOTAL_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalScore: action.payload }\r\n\r\n\t\tcase 'UPDATE_TODAY_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodayScore: action.payload }\r\n\r\n\t\tcase 'UPDATE_EXERCISES_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texercisesComplete: action.payload }\r\n\r\n\t\tcase 'UPDATE_TESTS_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttestsComplete: action.payload }\r\n\r\n\t\tcase 'UPDATE_WORDS_TOTAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsTotal: action.payload }\r\n\r\n\t\tcase 'UPDATE_WORDS_REMAINING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsRemaining: action.payload }\r\n\r\n\t\tcase 'UPDATE_WORDS_STUDIED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsStudied: action.payload }\r\n\r\n\t\tcase 'CHANGE_COLOR_SCHEME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcolorScheme: action.payload }\r\n\r\n\t\tcase 'CHANGE_SOUND_VOLUME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsoundVolume: action.payload }\r\n\r\n\t\tcase 'TOGGLE_VOCAB_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedVocabWord: action.payload }\t\t\r\n\r\n\t\tcase 'VOICE_VOCAB_WORD':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvocabWord: action.payload }\r\n\r\n\t\tcase 'SELECT_BOOK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedBook: action.payload }\r\n\r\n\t\tcase 'TOGGLE_FONT_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFontModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_COLOR_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisColorModalOpen: action.payload }\r\n\r\n\t\tcase 'TOGGLE_SEARCH_MODAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisSearchModalOpen: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_FAMILY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontFamily: action.payload }\t\r\n\r\n\t\tcase 'SELECT_FONT_SPACING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlineHeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_WEIGHT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontWeight: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_SIZE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontSize: action.payload }\r\n\r\n\t\tcase 'SELECT_FONT_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfontColor: action.payload }\t\r\n\r\n\t\tcase 'SELECT_BG_COLOR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbackgroundColor: action.payload }\r\n\r\n\t\tcase 'ADD_COMMENT_TO_BOOK':\r\n\t\t\tconst index = state.booksComments.findIndex(book => book.id == action.payload.id);\r\n\t\t\tconst newComments = [...state.booksComments];\r\n\t\t\tnewComments[index].comments.push(action.payload.comment);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbooksComments: [...newComments] }\r\n\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default reducer;","import {combineReducers} from 'redux';\r\nimport reducer from './index';\r\n\r\nlet createRootReducer = () => combineReducers({\r\n\treducer\r\n})\r\n\r\nexport default createRootReducer;","import {createStore} from 'redux';\r\nimport createRootReducer from '../reducers/rootReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default function configureStore(){\r\n\tlet store = createStore(createRootReducer(), initialState);\r\n\treturn store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Vocabulary from './Vocabulary';\r\nimport SplittedWords from './SplittedWords';\r\nimport GrammarList from './GrammarList'\r\nimport Statistics from './Statistics'\r\nimport Training from './Training'\r\nimport Main from './Main'\r\nimport ConstructWord from './ConstructWord'\r\nimport Proverbs from './Proverbs'\r\nimport Cards from './Cards'\r\nimport Audio from './Audio'\r\nimport EnglishToRussian from './EnglishToRussian'\r\nimport RussianToEnglish from './RussianToEnglish'\r\nimport Videos from './Videos'\r\nimport Fragments from './Fragments'\r\nimport Pronunciation from './Pronunciation'\r\nimport RecreateText from './RecreateText'\r\nimport RecreateAudioText from './RecreateAudioText'\r\nimport InsertSpaces from './InsertSpaces'\r\nimport TED from './videos/TED'\r\nimport EngVid from './videos/EngVid'\r\nimport BritishCouncil from './videos/BritishCouncil'\r\nimport Khan from './videos/Khan'\r\nimport Coursera from './videos/Coursera'\r\nimport JimmyFallon from './videos/JimmyFallon'\r\nimport JimmyKimmel from './videos/JimmyKimmel'\r\nimport ConanOBrien from './videos/ConanOBrien'\r\nimport Ellen from './videos/Ellen'\r\nimport JamesCorden from './videos/JamesCorden'\r\nimport SethMeyers from './videos/SethMeyers'\r\nimport StephenColbert from './videos/StephenColbert'\r\nimport TextsList from './TextsList'\r\nimport Decks from './Decks'\r\nimport AudioList from './AudioList'\r\nimport Settings from './Settings'\r\nimport BookList from './BookList'\r\nimport Materials from './Materials'\r\nimport Example from './Example'\r\nimport Rightwrong from './Rightwrong'\r\nimport GrammarItem from './grammar/GrammarItem'\r\nimport GrammarPresentSimple from './grammar/GrammarPresentSimple'\r\nimport GrammarPastSimple from './grammar/GrammarPastSimple'\r\nimport GrammarFutureSimple from './grammar/GrammarFutureSimple'\r\nimport GrammarPresentContinuous from './grammar/GrammarPresentContinuous'\r\nimport GrammarPastContinuous from './grammar/GrammarPastContinuous'\r\nimport GrammarFutureContinuous from './grammar/GrammarFutureContinuous'\r\nimport GrammarPresentPerfect from './grammar/GrammarPresentPerfect'\r\nimport GrammarFuturePerfect from './grammar/GrammarFuturePerfect'\r\nimport GrammarPastPerfect from './grammar/GrammarPastPerfect'\r\nimport GrammarPresentPerfectContinuous from './grammar/GrammarPresentPerfectContinuous'\r\nimport GrammarPastPerfectContinuous from './grammar/GrammarPastPerfectContinuous'\r\nimport GrammarFuturePerfectContinuous from './grammar/GrammarFuturePerfectContinuous'\r\nimport AudioPlayer from './AudioPlayer'\r\nimport SelectedBook from './SelectedBook'\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport configureStore from \"./store/index\";\r\n\r\nlet initialState = [];\r\nlet store = configureStore(initialState);\r\n\r\n\r\nReactDOM.render(  \r\n\t<Provider store={store}>\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<div className=\"router-wrapper\">\r\n\t\t\t\t<Route exact path=\"/\" component={Main} />\r\n\t\t\t\t<Route path=\"/splitted\" component={SplittedWords} />\r\n\t\t\t\t<Route path=\"/selectedbook\" component={SelectedBook} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t\t<Route path=\"/vocabulary\" component={Vocabulary} />\t\t\t\t\r\n\t\t\t\t<Route path=\"/grammar\" component={GrammarList} />\r\n\t\t\t\t<Route path=\"/materials\" component={Materials} />\r\n\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\r\n\t\t\t\t<Route path=\"/training\" component={Training} />\t\t  \r\n\t\t\t\t<Route path=\"/cards\" component={Cards} />\r\n\t\t\t\t<Route path=\"/rightwrong\" component={Rightwrong} />\t\t\r\n\t\t\t\t<Route path=\"/constructword\" component={ConstructWord} />\r\n\t\t\t\t<Route path=\"/proverbs\" component={Proverbs}/>\r\n\t\t\t\t<Route path=\"/audio\" component={Audio} />\r\n\t\t\t\t<Route path=\"/pronunciation\" component={Pronunciation} />\r\n\t\t\t\t<Route path=\"/recreatetext\" component={RecreateText} />\r\n\t\t\t\t<Route path=\"/recreateaudiotext\" component={RecreateAudioText} />\r\n\t\t\t\t<Route path=\"/insertspaces\" component={InsertSpaces} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/englishtorussian\" component={EnglishToRussian} />\r\n\t\t\t\t<Route path=\"/russiantoenglish\" component={RussianToEnglish} />\r\n\t\t\t\t<Route path=\"/videos\" component={Videos} />\r\n\t\t\t\t<Route path=\"/fragments\" component={Fragments} />\r\n\t\t\t\t<Route path=\"/decks\" component={Decks} />\t\t\r\n\t\t\t\t<Route path=\"/ted\" component={TED} />\r\n\t\t\t\t<Route path=\"/engvideo\" component={EngVid} />\r\n\t\t\t\t<Route path=\"/britishcouncil\" component={BritishCouncil} />\r\n\t\t\t\t<Route path=\"/khan\" component={Khan} />\r\n\t\t\t\t<Route path=\"/conanobrien\" component={ConanOBrien} />\r\n\t\t\t\t<Route path=\"/jimmyfallon\" component={JimmyFallon} />\r\n\t\t\t\t<Route path=\"/jimmykimmel\" component={JimmyKimmel} />\r\n\t\t\t\t<Route path=\"/coursera\" component={Coursera} />\r\n\t\t\t\t<Route path=\"/ellen\" component={Ellen} />\r\n\t\t\t\t<Route path=\"/stephencolbert\" component={StephenColbert} />\r\n\t\t\t\t<Route path=\"/jamescorden\" component={JamesCorden} />\r\n\t\t\t\t<Route path=\"/sethmeyers\" component={SethMeyers} />\r\n\t\t\t\t<Route path=\"/texts\" component={TextsList} />\r\n\t\t\t\t<Route path=\"/books\" exact component={BookList} />\r\n\t\t\t\t<Route path=\"/books/:id\" component={SelectedBook} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/tests\" component={Example} />\r\n\t\t\t\t<Route path=\"/audiolist\" component={AudioList} />\r\n\t\t\t\t<Route path=\"/grammarpresentsimple\" component={GrammarPresentSimple} />\r\n\t\t\t\t<Route path=\"/grammarpastsimple\" component={GrammarPastSimple} />\r\n\t\t\t\t<Route path=\"/grammarfuturesimple\" component={GrammarFutureSimple} />\r\n\t\t\t\t<Route path=\"/grammarpresentcontinuous\" component={GrammarPresentContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastcontinuous\" component={GrammarPastContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfuturecontinuous\" component={GrammarFutureContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfect\" component={GrammarPresentPerfect} />\r\n\t\t\t\t<Route path=\"/grammarpastperfect\" component={GrammarPastPerfect} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfect\" component={GrammarFuturePerfect} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfectcontinuous\" component={GrammarPresentPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastperfectcontinuous\" component={GrammarPastPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfectcontinuous\" component={GrammarFuturePerfectContinuous} />\r\n\t\t\t\t<Route path=\"/audioplayer\" component={AudioPlayer} />\r\n\t\t\t</div>\r\n\t\t</Router>\t\r\n\t</Provider>, document.getElementById('root'));\r\n\r\n/*\r\n\tconst routes = [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\tcomponent: App\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/grammar',\r\n\t\t\tcomponent: GrammarList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/courses',\r\n\t\t\tcomponent: CoursesList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursessimple',\r\n\t\t\tcomponent: CoursesSimple\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/training',\r\n\t\t\tcomponent: Training\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/constructword',\r\n\t\t\tcomponent: ConstructWord\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/cards',\r\n\t\t\tcomponent: Cards\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/audio',\r\n\t\t\tcomponent: Audio\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/pronunciation',\r\n\t\t\tcomponent: Pronunciation\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/englishtorussian',\r\n\t\t\tcomponent: EnglishToRussian\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/russiantoenglish',\r\n\t\t\tcomponent: RussianToEnglish\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/videos', \r\n\t\t\tcomponent: Videos\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ted', \r\n\t\t\tcomponent: TED\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/engvid', \r\n\t\t\tcomponent: EngVid\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/britishcouncil', \r\n\t\t\tcomponent: BritishCouncil\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/khan', \r\n\t\t\tcomponent: Khan\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/conanobrien', \r\n\t\t\tcomponent: ConanOBrien\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmyfallon', \r\n\t\t\tcomponent: JimmyFallon\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmykimmel', \r\n\t\t\tcomponent: JimmyKimmel\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursera',\r\n\t\t\tcomponent: Coursera\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ellen',\r\n\t\t\tcomponent: Ellen\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/stephencolbert',\r\n\t\t\tcomponent: StephenColbert\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jamescorden',\r\n\t\t\tcomponent: JamesCorden\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/sethmeyers',\r\n\t\t\tcomponent: SethMeyers\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/texts',\r\n\t\t\tcomponent: TextsList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/tests',\r\n\t\t\tcomponent: Example\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t]\r\n\t*/\r\n/*\r\nReactDOM.render(  \r\n  <Router>\r\n\t  <div className=\"router-wrapper\">\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n\t  </div>\r\n  </Router>, document.getElementById('root'));\r\n*/"],"sourceRoot":""}