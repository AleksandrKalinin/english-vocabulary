{"version":3,"sources":["ModalWord.js","VocabWord.js","VocabSideMenu.js","TopMenu.js","VocabTopMenu.js","App.js","GrammarList.js","Statistics.js","CoursesSimpleItem.js","CoursesSimple.js","CoursesMedium.js","CoursesList.js","Training.js","Main.js","ConstructWord.js","Proverbs.js","Cards.js","Audio.js","actions/index.js","EnglishToRussian.js","RussianToEnglish.js","Videos.js","Fragments.js","Pronunciation.js","RecreateText.js","RecreateAudioText.js","InsertSpaces.js","videos/TED.js","videos/EngVid.js","videos/BritishCouncil.js","videos/Khan.js","videos/Coursera.js","videos/JimmyFallon.js","videos/JimmyKimmel.js","videos/ConanOBrien.js","videos/Ellen.js","videos/JamesCorden.js","videos/SethMeyers.js","videos/StephenColbert.js","TextsList.js","Decks.js","AudioList.js","Settings.js","BookList.js","Materials.js","Example.js","Rightwrong.js","grammar/GrammarPresentSimple.js","grammar/GrammarItem.js","grammar/GrammarPastSimple.js","grammar/GrammarFutureSimple.js","grammar/GrammarPresentContinuous.js","grammar/GrammarPastContinuous.js","grammar/GrammarFutureContinuous.js","grammar/GrammarPresentPerfect.js","grammar/GrammarFuturePerfect.js","grammar/GrammarPastPerfect.js","grammar/GrammarPresentPerfectContinuous.js","grammar/GrammarPastPerfectContinuous.js","grammar/GrammarFuturePerfectContinuous.js","AudioPlayer.js","reducers/index.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["ModalWord","react_default","a","createElement","Modal","className","trigger","List","Content","Icon","name","closeIcon","image","Image","wrapped","size","src","this","props","Description","Header","onClick","voiceWordFromModal","bind","translation","Component","VocabWord","consoleState","el","target","parentElement","newFunction","id","delete","voiceWord","Item","react","avatar","as","transcription","src_ModalWord","key","meaning","date","Date","Button","Group","VocabSideMenu","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","consoleParams","newItems","state","items","map","item","i","push","text","category","value","setState","options","getUnique","arr","unique","e","final","indexOf","filter","newFunc","slice","newObj","callbackFromParent","handleChange","_ref","consoleProps","console","log","_this2","axios","get","then","res","data","Menu","vertical","active","Dropdown","placeholder","fluid","clearable","search","selection","onChange","TopMenu","showModal","isModalVisible","changeLogin","event","inputLogin","changePassword","inputPassword","changeMail","inputMail","changeDoublePassword","doublePassword","Link","to","VocabTopMenu","updateSearch","substr","searchFunction","changeNameValue","inputName","changeTranslationValue","inputTranslation","changeMeaningValue","inputMeaning","changeCategoryValue","inputCategory","changeImageValue","inputImage","submitForm","newWords","words","inputStringDate","toUTCString","inputDate","obj","unshift","callbackFromApp","searchFromApp","categories","categoryValue","sortByName","sortByTranslation","sortByDate","primary","Form","Field","type","accept","Input","icon","App","loadMore","prev","visible","isOldestFirst","sort","b","localeCompare","newIndex","index","toConsumableArray","children","splice","first","firstChild","textContent","speech","say","myCallback","dataFromChild","topMenuCallback","searchCallback","query","searchString","handler","assertThisInitialized","_this3","filteredWords","word","toLowerCase","src_TopMenu","src_VocabSideMenu","src_VocabTopMenu","relaxed","src_VocabWord","length","GrammarList","grammar","Table","celled","fixed","Row","columns","HeaderCell","rules","Body","Cell","description","link","Statistics","splitIntoArrays","nameArrays","create","forEach","nameArray","names","keys","values","finalData","tmp","lng","fin","Math","floor","barChartData","getYesterdaysDate","days","dateArray","setDate","getDate","getDay","j","lineChartData","contentArray","areTextsVisible","isMenuVisible","isSingleTextVisible","isResultVisible","isResultWrong","negativeWords","positiveWords","content","spllittedSentences","reservedSentences","seconds","minutes","secondsRemaining","intervalHandle","wrongIndexes","totalSecondsSpent","secondsSpent","minutesSpent","Card","itemsPerRow","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","stroke","activeDot","r","CoursesSimple","con","headerVisible","updateSentence","targ","newSentence","sentence","concat","visibleSentence","continueTraining","propsToState","exercises","submitAnswer","positiveAnswers","negativeAnswers","correct_answer","replace","correctAnswer","incorrectAnswer","renderArray","currentArray","doubleWords","currentExerciseId","currentId","isFinalVisible","isWordGroupVisible","nextSentence","courses","exerciseId","full_sentence","variants","result","sentenceVisible","course","Meta","time","tasks","mapCourses","arrays","CoursesSimpleItem","exerciseName","exerciseTranslation","CoursesList","extra","BrowserRouter","Route","path","component","CoursesMedium","Training","Decks","level","categoryArray","readMore","arrayOfButtons","iconsArray","disabled","colors","arrayOfColors","allWords","currentWords","color","random","previousElementSibling","activeTargetTitle","isDropdownVisible","currentColor","backToTexts","getUniqueCategory","addToList","array","addedItems","buttons","icons","temp","addedFirst","sortedByTranslationUp","addedUp","sortedByNameUp","deleteItem","title","texts","books","videos","all","spread","decksResponse","wordsResponse","textsResponse","booksResponse","grammarResponse","videosResponse","ConstructWord","myHandler","fade","tempParam","mistakeCount","currentValue","currentFullWord","currentWord","nameArrayId","randomNameArray","isCardVisible","wordNameArray","inputValue","checkValue","keyCode","startTraining","isStarterVisible","wordsLength","currentTranslation","currentImage","currentMeaning","split","isImageVisible","areButtonsVisible","newWord","currentName","compareWord","currentLetter","changeValue","forceUpdate","setStateOnStart","wordId","animationState","initialLoad","_ref2","document","body","addEventListener","btn","React","createRef","Container","Label","onAnimationEnd","readOnly","maxLength","Divider","Message","Proverbs","shuffleArray","proverbs","currentProverbName","proverb","isCheckButtonVisible","isDKButtonVisible","isContinueButtonVisible","setValue","indexTarget","removeValue","dontKnow","defineProperty","checkProverb","_ref3","Cards","updateComponent","renderComponent","isButtonVisible","updateState","newId","currentDate","currentCategory","isTranslationVisible","checkResponse","val","showNavButtons","showContinueButton","randomItem","Audio","tempSearch","positiveResponse","searchValue","isInputVisible","isLinkVisible","nameClass","correctNameVisible","showImage","correctName","correctNameClass","metaClass","actions","updateTotalScore","score","payload","updateTodayScore","updateExerciseScore","number","updateTestsScore","updateWordsTotal","updateWordsRemaining","updateWordsStudied","EnglishToRussian","currentPicture","compWord","find","x","param","flagState","randomValues","currentButtonColor","newColor","ref","connect","store","reducer","dispatch","bindActionCreators","RussianToEnglish","wholeList","list","Videos","cons","channelId","currentDescription","currentChannelId","currentLink","video","Fragments","currentTempArray","currentStringArray","currentRandomWord","currentFinalArray","currentRandomArray","currentOneArray","activeInput","activeArray","sortedRandomArray","comparativeRandomArray","fragmentArrayIndexes","rightAnswers","livesArray","setMenuParams","difficulty","selectValue","activeTargetContent","activeTargetImage","buildLives","builtArray","pop","currentFullArray","currentWordArray","currentRandomIndexes","curArr","resetValue","fragmentArray","fragmentDescription","getElementsByClassName","element","innerText","submitText","currentSortedArray","count","tryAgain","lives","livesCount","Pronunciation","startListening","submitResponse","objectTranscription","getElementById","positiveSentences","negativeSentences","currentSentence","currentSentenceContent","alert","splittedText","stopListening","callSubmit","resetTranscript","clearTranscription","transcript","newTranscript","substring","currentText","currentTextContent","showSubmitButtons","autostart","browserSupportsSpeechRecognition","recognition","isDeleteVisible","textsRes","lang","SpeechRecognition","RecreateText","makeTextsVisible","createMenuItems","splitText","splittedSentenceVisible","startCountDown","tick","min","sec","clearInterval","timeIsOut","setInterval","onDragStart","draggedItem","dataTransfer","effectAllowed","setData","setDragImage","onDragOver","draggedOverItem","onDragEnd","draggedIdx","checkSentences","splittedSentences","wrongCount","showFinal","selectCategory","menuChange","idx","draggable","RecreateAudioText","createTrack","currentTrack","Howl","html5","volume","audio","playing","playText","play","pause","InsertSpaces","inputContent","isTaskStarted","setCaretPosition","ctrl","pos","setSelectionRange","focus","createTextRange","range","collapse","moveEnd","moveStart","select","updateValue","newContent","indexOfSpace","newstr","startExercise","TED","handleClick","currentPage","Number","loaded","Embed","autoplay","videoId","snippet","thumbnails","high","url","source","EngVid","BritishCouncil","Khan","currentComment","addComment","comments","thumbsUp","likes","thumbsDown","dislikes","author","comment","Coursera","JimmyFallon","JimmyKimmel","ConanOBrien","Ellen","JamesCorden","SethMeyers","StephenColbert","TextsList","textsLoaded","firstResponse","secondResponse","style","backgroundColor","sendWords","float","backToDecks","AudioList","startPlayer","currentState","playState","playAudio","currentAudio","Settings","email","password","BookList","handleCheckChange","isChecked","checked","prevState","checkedItems","set","callFunctions","populateDropdown","genre","newPage","bookVal","bookValue","handlePageChange","getElementIndex","node","checkInterval","audiobooks","currentBook","parsedBook","HTMLReactParser","splitBook","activeTargetDescription","activeTargetAuthor","areBooksVisible","isPreviewVisible","parseHtml","book","currentArrayBooks","indexArray","pages","ceil","currentMin","currentIndexArray","renderPagination","backToBooks","isSingleBookVisible","isBookNavPanelVisible","bookPages","currentPageIndex","renderFirstButton","renderLastButton","prevButton","scrollToTop","goToPage","nextButton","window","scrollTo","myRef","offsetTop","chapterIndex","page","bookObject","errors","currentEmail","updateComment","updateName","updateEmail","checkChange","handleRate","rating","maxRating","newAudio","duration","hours","currentDuration","scrollForward","currentTime","scrollBackward","player","currentRange","setVolume","currentVolume","setRange","bookHTML","Map","currentAudioId","thumbArray","scrollForwardState","scrollBackwardState","controls","Rating","onRate","max","step","onInput","downloadBook","TextArea","Materials","Example","_this$state","getMenuParams","tests","testChange","parentid","getAttribute","currentTest","Array","selectTest","testId","activeTest","testItem","correctResults","areTestsVisible","isSingleTestVisible","backToTests","curIndexTest","curIndexCheckbox","correctAnswers","incorrectAnswers","checkResults","resultsArray","finalResults","isTooltipVisible","boxShadow","totalScore","ind","label","Rightwrong","negativeResponse","consoleMessage","GrammarPresentSimple","goBack","fullData","stepId","currentTitle","currentExamples","examples","isBackButtonVisible","newfullData","consoleFunction","main_points","steps","exampleName","exampleTranslation","GrammarPastSimple","GrammarFutureSimple","GrammarPresentContinuos","GrammarPastContinuos","GrammarFutureContinuos","GrammarPresentPerfect","GrammarFuturePerfect","GrammarPastPerfect","GrammarPresentPerfectContinuous","GrammarPastPerfectContinuous","GrammarFuturePerfectContinuous","AudioPlayer","soundVolume","on","decodingFinished","continuePlay","readTags","resetState","progress","currentMinutes","currentSeconds","jsmediatags","read","onSuccess","tag","currentTrackInfo","decodeTrackInfo","onError","error","info","currentTrackPicture","tags","artist","picture","_this$state$currentTr","byteArray","Uint8Array","blob","Blob","URL","createObjectURL","currentTrackTitle","currentTrackArtist","playMusic","interval","startCycle","stop","changeVolume","nextTrack","prevTrack","muteSound","muted","mute","incTime","updateProgress","round","seek","toFixed","setSeek","currentTrackLength","order","tracksVisible","alt","initialState","todayScore","exercisesComplete","testsComplete","wordsTotal","wordsStudied","wordsRemaining","arguments","undefined","action","objectSpread","createRootReducer","combineReducers","createStore","ReactDOM","render","es","basename","process","exact","Main","GrammarPresentContinuous","GrammarPastContinuous","GrammarFutureContinuous"],"mappings":"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","file":"static/js/main.41b84493.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon, Image, Modal,Header } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass ModalWord extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Modal className=\"modal-word\" trigger={\r\n          <List.Content >\r\n            <span className=\"word-icon-wrapper\">\r\n               <Icon name='right eye' />\r\n            </span>\r\n          </List.Content>\r\n            } closeIcon>\r\n            <Modal.Content image>\r\n              <Image wrapped size='medium' src={this.props.image} />\r\n              <Modal.Description className=\"modal-word-description\">\r\n\r\n                <Header><h4><span onClick={this.props.voiceWordFromModal.bind(this)} ></span>{this.props.name} - {this.props.translation}                   <span>\r\n                    <Icon name = 'right microphone'/>\r\n                  </span> </h4></Header>\r\n                <div className=\"modal-icon-wrapper-delete\">\r\n                  <span>\r\n                    <Icon name = 'right trash alternate outline'/>\r\n                  </span>\r\n                </div>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n        </Modal>\r\n  );\r\n  }\r\n}\r\n\r\nexport default ModalWord;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Icon, Image } from 'semantic-ui-react'\r\nimport { List} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport ModalWord from './ModalWord';\r\n\r\n\r\nclass VocabWord extends Component {\r\n\r\n  newFunction(){\r\n    this.props.newFunction();\r\n  }\r\n\r\n  delete(id){\r\n       this.props.delete(id);\r\n   }\r\n\r\n   voiceWord(el){\r\n      this.props.voiceWord(el);\r\n   }\r\n\r\n   voiceWordFromModal(el){\r\n      this.props.voiceWordFromModal(el);\r\n   }   \r\n\r\n  consoleState = (el) =>{\r\n    var newIndex = el.target.parentElement.parentElement.parentElement.parentElement;\r\n  }\r\n\r\n  render() {\r\n    var descriptionVisible = false;\r\n    return (\r\n      <List.Item>\r\n        <Fragment>\r\n          <Image avatar src={this.props.image} />\r\n          <List.Content className=\"word-content\">\r\n            <List.Header as='a'>{this.props.name} - {this.props.transcription} - {this.props.translation}</List.Header>\r\n            {descriptionVisible ?         \r\n              <List.Description className=\"word-meaning\">\r\n                  <b>{this.props.meaning}</b>\r\n              </List.Description> :null\r\n            }\r\n        </List.Content>\r\n      </Fragment>  \r\n        <List.Content>\r\n              <ModalWord \r\n                      key={this.props.id} \r\n                      name={this.props.name} \r\n                      translation={this.props.translation} \r\n                      meaning={this.props.meaning}\r\n                      image={this.props.image}\r\n                      voiceWord={this.props.voiceWord}\r\n                      date = { new Date(this.props.date)}\r\n                      voiceWordFromModal={this.props.voiceWordFromModal} >\r\n              </ModalWord>        \r\n              <Button.Group>\r\n                <span onClick={this.voiceWord.bind(this)} className=\"word-icon-wrapper\">\r\n                   <Icon name = 'right microphone'/>\r\n                </span>\r\n                <span onClick={this.delete.bind(this)} className=\"word-icon-wrapper\">\r\n                    <Icon name='right trash alternate outline' />\r\n                </span>\r\n              </Button.Group>              \r\n        </List.Content>\r\n      </List.Item>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VocabWord;","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport {  Dropdown} from 'semantic-ui-react'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass VocabSideMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n       items: [],\r\n       options: [],\r\n       value: null\r\n\r\n    }\r\n  }\r\n\r\n  \tUNSAFE_componentWillMount() {\r\n   \r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const items = res.data;\r\n\t        this.setState({ items }, () => this.consoleParams() );\r\n\t      }) \r\n\t  }\r\n\r\n\t  consoleParams = () =>{\r\n\t  \tlet newItems = [];\r\n\t  \tthis.state.items.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.category, \r\n                        value: item.category \r\n                     }))\r\n\t  \tthis.setState({\r\n\t  \t\toptions: newItems\r\n\t  \t}, () => this.getUnique())\r\n\t  }\r\n\r\n\t  getUnique = () => {\r\n\t  \tvar arr = this.state.options;\r\n\t  \tvar comp = 'text';\r\n  \t\t\tconst unique = arr\r\n       \t\t.map(e => e[comp])\r\n   \t\t\t\t.map((e, i, final) => final.indexOf(e) === i && i)\r\n    \t\t\t.filter(e => arr[e]).map(e => arr[e]);\r\n\t   \tthis.setState({\r\n\t   \t\toptions: unique\r\n\t   \t})\t\t\r\n\t\t}\r\n\r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var value = this.state.value;\r\n      var newObj = {};\r\n      newObj['value'] = value;\r\n      newObj['options'] = options;\r\n      this.props.callbackFromParent(newObj);\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )\r\n\r\n    consoleProps = () =>{\r\n      console.log(this.props);\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Menu vertical className=\"side-menu\">\r\n        <Menu.Item name='inbox' active >\r\n          <Dropdown placeholder='Выберите категорию'\r\n                    fluid\r\n                    clearable\r\n                    value={this.state.value} \r\n                    search\r\n                    key={this.state.options.id}\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} />\r\n        </Menu.Item>\r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabSideMenu;","import React, { Component } from 'react';\r\nimport {Menu, Image, Icon, Modal, Form, Button} from 'semantic-ui-react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass TopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isModalVisible: false,\r\n      inputLogin: '',\r\n      inputPassword: '',\r\n      doublePassword: '',\r\n      inputMail: ''\r\n    }\r\n  }\r\n\r\n  showModal = () =>{\r\n      let state = this.state.isModalVisible;\r\n      this.setState({\r\n        isModalVisible: !state\r\n      },() => console.log(this.state.isModalVisible) )\r\n  }\r\n\r\n    changeLogin = (event) =>{\r\n      this.setState({\r\n        inputLogin: event.target.value\r\n      })\r\n    }\r\n\r\n    changePassword = (event) =>{\r\n      this.setState({\r\n        inputPassword: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMail = (event) =>{\r\n      this.setState({\r\n        inputMail: event.target.value\r\n      })\r\n    }\r\n\r\n    changeDoublePassword = (event) =>{\r\n      this.setState({\r\n        doublePassword: event.target.value\r\n      })\r\n    }    \r\n\r\n  render() {\r\n    return (\r\n        <Menu className=\"top-menu\">\r\n          <Menu.Item>\r\n            <Link to=\"/\">Главная</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/vocab\">Словарь</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item>\r\n            <Link to=\"/grammar\">Грамматика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/training\">Тренировки</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/tests\">Тесты</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/materials\">Материалы</Link>\r\n          </Menu.Item>          \r\n          <Menu.Item>\r\n            <Link to=\"/statistics\">Статистика</Link>\r\n          </Menu.Item>\r\n          <Menu.Item>\r\n            <Link to=\"/audioplayer\">Статистика</Link>\r\n          </Menu.Item>          \r\n      \r\n\r\n        {/*\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Войти</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishLogin}>Войти</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>\r\n          <Menu.Item className=\"login-item\">\r\n            <Modal className=\"modal-form login-modal\" trigger={<Button primary>Регистрация</Button>} closeIcon>\r\n              <Form className=\"input-form login-form\">\r\n                <Form.Field>\r\n                  <label>Введите логин</label>\r\n                  <input value={this.state.inputLogin} onChange={this.changeLogin} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите e-mail</label>\r\n                  <input value={this.state.inputMail} onChange={this.changeMail} type=\"text\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Введите пароль</label>\r\n                  <input value={this.state.inputPassword} onChange={this.changePassword} type=\"text\" />\r\n                </Form.Field>                   \r\n                <Form.Field>\r\n                  <label>Повторите пароль</label>\r\n                  <input value={this.state.doublePassword} onChange={this.changeDoublePassword} type=\"text\" />\r\n                </Form.Field>\r\n                <Button primary onClick={this.finishRegistration}>Зарегистрироваться</Button>\r\n              </Form>         \r\n            </Modal>              \r\n          </Menu.Item>                                             \r\n          <Menu.Item position=\"right\" className=\"menu-image\" >\r\n            {this.state.isModalVisible ?\r\n              <div className=\"user-modal\">\r\n                <div className=\"user-modal-pic\">\r\n                  <Image src=\"/icons/member.png\" />              \r\n                  <div className=\"user-modal-name\">\r\n                    <h5> User</h5>\r\n                    <h6>blabla@mail.com</h6>\r\n                  </div>                \r\n                </div>\r\n                <p><Link to=\"/statistics\"> <Icon name='chart bar outline' size='' />Статистика</Link></p>\r\n                <p><Link to=\"/settings\"> <Icon name='setting' size=''  />Настройки</Link></p>\r\n                <p><Link to=\"/statistics\"> <Icon name='log out' size=''  />Выйти</Link></p>\r\n              </div> : null\r\n            }\r\n            <Image className=\"user-avatar\" onClick={this.showModal} src=\"/icons/member.png\" />\r\n          </Menu.Item> \r\n        */}\r\n                                                                                                    \r\n        </Menu>\r\n \t);\r\n  }\r\n}\r\n\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport { Button, Menu, Modal, Form } from 'semantic-ui-react'\r\nimport { Input} from 'semantic-ui-react'\r\nimport './style.css'\r\n\r\nclass VocabTopMenu extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      search: '',\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: '',\r\n      categories: [],\r\n      categoryValue: 'all'  \r\n    };\r\n    this.delete = this.delete;\r\n    this.voiceWord = this.voiceWord;\r\n    this.voiceWordFromModal = this.voiceWordFromModal;\r\n    this.sortByName = this.sortByName;\r\n    this.sortByTranslation = this.sortByTranslation;\r\n    this.sortByDate = this.sortByDate;\r\n    this.newFunction = this.newFunction;  \r\n    \r\n  }\r\n\r\n  consoleProps = () =>{\r\n    console.log(this.props)\r\n  }\r\n\r\n    updateSearch = (event) => {\r\n      this.setState({search: event.target.value.substr(0,20)}, ()=> this.searchFunction() );\r\n    } \r\n\r\n//загрузка слова\r\n    changeNameValue = (event) =>{\r\n      this.setState({\r\n        inputName: event.target.value\r\n      })\r\n    }\r\n\r\n    changeTranslationValue = (event) =>{\r\n      this.setState({\r\n        inputTranslation: event.target.value\r\n      })\r\n    }\r\n\r\n    changeMeaningValue = (event) =>{\r\n      this.setState({\r\n        inputMeaning: event.target.value\r\n      })\r\n    }    \r\n\r\n    changeCategoryValue = (event) =>{\r\n      this.setState({\r\n        inputCategory: event.target.value\r\n      })\r\n    } \r\n\r\n    changeImageValue = (event) =>{\r\n      this.setState({\r\n        inputImage: event.target.value\r\n      })\r\n    }\r\n\r\n    submitForm = (e) =>{\r\n    var newWords = this.props.words.slice();\r\n    const inputName = this.state.inputName;\r\n    const inputTranslation = this.state.inputTranslation;\r\n    const inputMeaning = this.state.inputMeaning;\r\n    const inputCategory = this.state.inputCategory;\r\n    const inputStringDate = new Date().toUTCString();\r\n    console.log(inputStringDate);\r\n    const inputDate = new Date(inputStringDate);\r\n    const inputImage = this.state.inputImage;\r\n    const inputId = 30;\r\n    const obj ={'id': inputId,\r\n          'name': inputName, \r\n          'translation': inputTranslation, \r\n          'meaning': inputMeaning,\r\n          'image': inputImage, \r\n          'date': inputDate,\r\n          'category': inputCategory\r\n          } \r\n\r\n    newWords.unshift(obj); \r\n  \r\n      this.setState({ words: newWords}, () => console.log(this.state.words) );\r\n      this.setState({\r\n      inputName: '',\r\n      inputTranslation: '',\r\n      inputMeaning: '',\r\n      inputDate: '',\r\n      inputCategory: '',\r\n      inputImage: ''\r\n      }, () => this.newFunc() )\r\n    }    \r\n\r\n    newFunc = () =>{\r\n      var words = this.state.words;\r\n      this.props.callbackFromApp(words);\r\n    }\r\n\r\n    searchFunction = () =>{\r\n      var search = this.state.search;\r\n      this.props.searchFromApp(search);\r\n    }    \r\n\r\n  render() {\r\n\r\n   return (\r\n      <Menu text className=\"vocab-top-menu-wrapper vocab-top-menu-wrapper-color\">\r\n        <Menu.Item>\r\n          <Modal className=\"modal-form\" trigger={<Button primary>Добавить слово</Button>} closeIcon>\r\n            <Form className=\"input-form\">\r\n              <Form.Field>\r\n                <label>Введите слово</label>\r\n                <input value={this.state.inputName} onChange={this.changeNameValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите перевод</label>\r\n                <input value={this.state.inputTranslation} onChange={this.changeTranslationValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Введите категорию</label>\r\n                <input value={this.state.inputCategory} onChange={this.changeCategoryValue} type=\"text\" />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>Выберите изображение</label>\r\n                <input value={this.state.inputImage} onChange={this.changeImageValue} type=\"file\" accept=\"image/png, image/jpeg\" />\r\n              </Form.Field>                   \r\n              <Button primary onClick={this.submitForm}>Добавить</Button>\r\n            </Form>         \r\n          </Modal>\r\n        </Menu.Item>\r\n        <Menu.Item name='removeWords'> \r\n          <Button primary >\r\n            Удалить\r\n          </Button>\r\n        </Menu.Item>        \r\n        <Menu.Item name='byName'> \r\n          <Button primary onClick = {this.props.sortByName}>\r\n            по имени\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byTranslation'> \r\n          <Button primary onClick = {this.props.sortByTranslation}>\r\n            по переводу\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item name='byMeaning'> \r\n          <Button primary onClick = {this.props.sortByDate}>\r\n            по дате\r\n          </Button>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n         <Input icon='search' placeholder='Search...' onChange={this.updateSearch}/>\r\n        </Menu.Item> \r\n   \r\n      </Menu>\r\n  );\r\n  }\r\n}\r\n\r\nexport default VocabTopMenu;","import React, { Component, Fragment } from 'react';\r\nimport { List, Button} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\nimport VocabWord from'./VocabWord'\r\nimport VocabSideMenu from'./VocabSideMenu'\r\nimport TopMenu from './TopMenu'\r\nimport VocabTopMenu from './VocabTopMenu'\r\nimport speech from 'speech-synth';\r\n\r\nclass App extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twords: [],\r\n\t\t\tisOldestFirst: true,\r\n\t\t\tvisible: 15,\r\n\t\t\tquery: '',\r\n\t\t\tsearchString: [],\r\n\t\t\tsearch: '',\r\n\t\t\tcategories: [],\r\n\t\t\tcategoryValue: 'all'\t\r\n\t\t};\r\n\t\tthis.delete = this.delete;\r\n\t\tthis.voiceWord = this.voiceWord;\r\n\t\tthis.voiceWordFromModal = this.voiceWordFromModal;\r\n\t\tthis.handler = this.handler.bind(this);\t\r\n\t\tthis.sortByName = this.sortByName;\r\n\t\tthis.sortByTranslation = this.sortByTranslation;\r\n\t\tthis.sortByDate = this.sortByDate;\r\n\t\tthis.newFunction = this.newFunction;\t\r\n\t\t\r\n\t}\r\n\r\n handler() {\r\n    this.setState({\r\n     words: []\r\n    })\r\n  }\r\n\r\n//подгрузка слов\r\n\tloadMore = () => {\r\n\t    this.setState((prev) => {\r\n\t      return {visible: prev.visible + 15};\r\n\t    });\r\n\t  }\r\n\r\n//сортировка по дате\r\n\tsortByDate = () => {\r\n    const words = this.state.words.slice();\r\n    let newWords = [];\r\n    if(this.state.isOldestFirst){\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(b.date) - new Date(a.date);\r\n      });\r\n    }\r\n    else{\r\n      newWords = words.sort(function(a,b){\r\n        return new Date(a.date) - new Date(b.date);\r\n      });      \r\n    }\r\n    this.setState({\r\n      isOldestFirst: !this.state.isOldestFirst,\r\n      words: newWords\r\n    })\r\n\t} \r\n\r\n//сортировка по имени\r\n\tsortByName = () =>{\r\n\t\tconst words = this.state.words;\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name) /*console.log('a,b ', a,b) */ );\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name) /*console.log('b,a ', b,a) */ );\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\twords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n//сортировка по переводу\r\n\tsortByTranslation = () =>{\r\n\t\tconst words = this.state.words;\r\n\t\tlet newWords = words;\r\n\t\tif(this.state.isOldestFirst){\r\n\t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n\t\t} else {\r\n\t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n\t\t\twords: newWords\r\n\t\t})\t\t\r\n\t}\r\n\r\n\tUNSAFE_componentWillMount(){\r\n\t    axios.get('/working.json')\r\n\t      .then(res => {\r\n\t        const words = res.data;\r\n\t        this.setState({ words });\r\n\t      })\r\n\t  }\r\n\r\n\r\n   delete = (id) =>{\r\n   \tvar newWords = this.state.words.slice();\r\n \t\tvar newIndex = (id.target.parentElement.parentElement.parentElement.parentElement);\r\n\t\tconst index = [...newIndex.parentElement.children].indexOf(newIndex);\r\n\t\tnewWords.splice(index,1);\r\n    this.setState({words: newWords});\r\n   }\r\n\r\n   newFunction = () =>{\r\n   \tconsole.log('new');\r\n   }\r\n\r\n   voiceWord = (el) =>{\r\n   \t\tvar newWords = this.state.words.slice();\r\n   \t\tvar newIndex = (el.target.parentElement.parentElement.parentElement.parentElement);\r\n   \t\tvar first = newIndex.children[1].firstChild.firstChild.textContent;\r\n   \t\tspeech.say(first);\r\n   }\r\n\r\n   voiceWordFromModal = (el) =>{\r\n   \t\tvar newWords = this.state.words.slice();\r\n   \t\tvar newIndex = (el.target.parentElement.parentElement.children[1].textContent);\r\n   \t\tspeech.say(newIndex);\r\n   }\r\n\r\n   myCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tcategoryValue: dataFromChild.value,\r\n   \t\t\toptions: dataFromChild.options\r\n   \t\t}) \r\n   }\r\n\r\n   topMenuCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\twords: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   searchCallback = (dataFromChild) =>{\r\n   \t\tthis.setState({\r\n   \t\t\tsearch: dataFromChild\r\n   \t\t}) \r\n   } \r\n\r\n   consoleState = ()=>{\r\n   \tconsole.log(this.state)\r\n   }\r\n\r\n  render() {\r\n  \t//let filteredWords = this.state.words;\r\n  \t\r\n  \tlet filteredWords = this.state.words.filter(\r\n  \t\t(word) =>{\r\n  \t\t\treturn word.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n  \t\t}\r\n  \t);  \t\r\n    return (\r\n    \t<Fragment>\r\n\t    \t<div className=\"content-wrapper\">\r\n\t    \t\t<TopMenu></TopMenu>\r\n\t    \t\t<div className=\"vocab-side-menu\">\r\n\t    \t\t\t<VocabSideMenu callbackFromParent={this.myCallback} items={this.state.words} ></VocabSideMenu>\r\n\t    \t\t\t<div className=\"vocab-top-menu\">\r\n\t    \t\t\t\t<VocabTopMenu \r\n\t    \t\t\t\t\twords ={this.state.words} \r\n\t    \t\t\t\t\thandler = {this.handler}\r\n\t    \t\t\t\t\tsortByName={this.sortByName}\r\n\t    \t\t\t\t\tsortByTranslation={this.sortByTranslation}\r\n\t    \t\t\t\t\tsortByDate ={this.sortByDate}\r\n\t     \t\t\t\t\tcallbackFromApp={this.topMenuCallback}\r\n\t    \t\t\t\t\tsearchFromApp={this.searchCallback} \r\n\t    \t\t\t\t\t>\r\n\t\t\t\t\t\t</VocabTopMenu>\r\n\t\t\t \t\t\t<List className=\"vocab-list\" relaxed='very'>\r\n\t\t\t\t\t\t\t{filteredWords.slice(0,this.state.visible).map((word,index) => \r\n\t\t\t\t\t\t\t\t(this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === word.category) && \r\n\t\t\t\t\t\t\t\t<VocabWord\r\n\t\t\t\t\t\t\t\t\tnewFunction={this.newFunction}\r\n\t\t\t\t\t\t\t\t\tvoiceWord={this.voiceWord}\r\n\t\t\t\t\t\t\t\t\tvoiceWordFromModal = {this.voiceWordFromModal}\r\n\t\t\t\t\t\t\t\t\tdelete={this.delete}\r\n\t\t\t\t\t\t\t\t\tkey={word.id} \r\n\t\t\t\t\t\t\t\t\tname={word.name}\r\n\t\t\t\t\t\t\t\t\ttranscription = {word.transcription} \r\n\t\t\t\t\t\t\t\t\ttranslation={word.translation} \r\n\t\t\t\t\t\t\t\t\tmeaning={word.meaning}\r\n\t\t\t\t\t\t\t\t\timage={word.image} \r\n\t\t\t\t\t\t\t\t\tindex={index}>\r\n\t\t\t\t\t\t\t\t</VocabWord>\r\n\t\t\t\t\t\t\t)} \r\n\t\t\t  \t\t\t</List>\r\n\t\t\t  \t\t\t<div className=\"load-more-button\">\r\n\t\t\t\t\t\t\t{this.state.visible < this.state.words.length &&\r\n\t\t\t\t            \t<Button onClick={this.loadMore} primary>Загрузить ещё</Button>\r\n\t\t\t\t          \t}\t\t\t\t  \t\t\t\t\r\n\t\t\t  \t\t\t</div>\r\n\t    \t\t\t</div>\r\n\t    \t\t</div>\r\n\t    \t</div>\r\n\t    \t<footer></footer>\r\n\t    </Fragment>\t\r\n\t);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Table,  Image, Button, Menu } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass GrammarList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      grammar: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          const grammar = res.data;\r\n          this.setState({ grammar });\r\n        })\r\n    } \r\n\r\n  consoleState = () => {\r\n      console.log(this.state.grammar);\r\n      console.log(this.state.grammar[0]);\r\n  } \r\n\r\n  render() {\r\n\r\n    return (     \r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n        {/*\r\n            <Menu className=\"texts-menu\" vertical>\r\n\r\n            </Menu> \r\n        */}\r\n   \r\n          {(this.state.grammar.length) ?\r\n          <Table celled fixed className=\"grammar-list\">\r\n            <Table.Header>\r\n              <Table.Row columns={1} >\r\n                <Table.HeaderCell>Грамматические правила</Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>        \r\n            {this.state.grammar[0].rules.map((item,index) =>\r\n              <Table.Body>\r\n                <Table.Row columns={3}>\r\n                  <Table.Cell className=\"grammar-title\">\r\n                    {item.name}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-description\">\r\n                    {item.description}\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"grammar-button\">\r\n                    <div className=\"link-wrapper\">\r\n                      <Link to={item.link}>Начать</Link>\r\n                    </div>\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            )}\r\n          </Table>: null }        \r\n          </div>\r\n        </div>\r\n        <footer></footer>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GrammarList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {LineChart, Line, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\n\r\nclass Statistics extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      words: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n\r\n        this.setState({ \r\n          words\r\n        }, () => this.splitIntoArrays());\r\n      })\r\n\r\n\r\n        \r\n  }   \r\n\r\n  splitIntoArrays = () =>{\r\n    var nameArrays = Object.create(null);\r\n    let words = this.state.words.slice();\r\n    words.forEach(function(word) {\r\n      var nameArray = nameArrays[word.category];\r\n      if (!nameArray) {\r\n        nameArray = nameArrays[word.category] = [];\r\n      }\r\n      nameArray.push(word);\r\n    });\r\n  \tlet names = Object.keys(nameArrays);\r\n  \tlet values = Object.values(nameArrays);\r\n  \tlet finalData = [];\r\n  \tfor (var i = 0; i < names.length; i++) {\r\n  \t\tlet tmp = {};\r\n  \t\tlet lng = values[i].length;\r\n  \t\tlet fin = Math.floor(lng/3);\r\n      \ttmp['Всего слов'] = lng;\r\n      \ttmp['Добавлено слов'] = fin;\r\n      \ttmp['name'] = names[i];\r\n      \tfinalData.push(tmp);\r\n  \t}\r\n  \tthis.setState({\r\n  \t\tnameArrays: nameArrays,\r\n  \t\tbarChartData: finalData\r\n  \t}, () => this.getYesterdaysDate() )     \r\n\r\n  }\r\n\r\n\tgetYesterdaysDate = () => {\r\n    let data = this.state.barChartData.slice(0,6);\r\n\t\tvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    let dateArray = [];\t\t\r\n    var date = new Date();\r\n    let i = 0;\r\n    while ( i < 6) {\r\n\t\t  date.setDate(date.getDate() - 1);\r\n      //date.getDate() + '/' + (date.getMonth()+1) + '/' + date.getFullYear();\r\n\t    dateArray.push(days[date.getDay()]); \r\n\t    i++;  \t\r\n    }\r\n    for (var j = 0; j < data.length; j++) {\r\n      data[j][\"name\"] = dateArray[j]\r\n    }\r\n    this.setState({\r\n      lineChartData: data\r\n    }, () => console.log(this.state))\r\n\r\n\r\n\t}\r\n\r\n  consoleState = () =>{\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item>\r\n                    <Button onClick={this.getYesterdaysDate}>Press</Button>\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {this.state.areTextsVisible ?\r\n              <Card.Group className=\"texts-cards statistics-wrapper\" itemsPerRow={1} >\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Графики</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n    \t\t              <BarChart\r\n    \t\t                width={800}\r\n    \t\t                height={450}\r\n    \t\t                data={this.state.barChartData}\r\n    \t\t                margin={{\r\n    \t\t                  top: 20, right: 30, left: 20, bottom: 5,\r\n    \t\t                }}\r\n    \t\t              >\r\n    \t\t                <CartesianGrid strokeDasharray=\"3 3\" />\r\n    \t\t                <XAxis dataKey=\"name\" />\r\n    \t\t                <YAxis />\r\n    \t\t                <Tooltip />\r\n    \t\t                <Legend />\r\n    \t\t                <Bar dataKey=\"Всего слов\" fill=\"#3281F0\" />\r\n    \t\t                <Bar dataKey=\"Добавлено слов\" fill=\"#444444\" />\r\n    \t\t              </BarChart>\r\n                    </Card.Description>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                      <LineChart\r\n                        width={800}\r\n                        height={450}\r\n                        data={this.state.lineChartData}\r\n                        margin={{\r\n                          top: 5, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"Всего слов\" stroke=\"#3281F0\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"Добавлено слов\" stroke=\"#444444\" />\r\n                      </LineChart>\r\n                    </Card.Description>                    \r\n                  </Card.Content>\r\n                </Card>\r\n\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Результаты</Card.Header>\r\n                    <div className=\"statistics-menu\">\r\n                    \t<a className=\"active\">сегодня</a>\r\n                    \t<a>за неделю</a>\r\n                    \t<a>за месяц</a>\r\n                      <a>за всё время</a>\r\n                    </div>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span>\r\n\t                      \t\t\t<Icon name = 'plus square outline'/>\r\n\t                      \t\t</span>\r\n\t                      \t\t<h1>24</h1>\r\n\t                      \t\t<p>Слов добавлено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'file text'/></span>\r\n\t                      \t\t<h1>3</h1>\r\n\t                      \t\t<p>Упражнений выполнено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'gem outline'/></span>\r\n\t                      \t\t<h1>5</h1>\r\n\t                      \t\t<p>Фраз выучено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>14</h1>\r\n\t                      \t\t<p>Страниц прочитано</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'cogs'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Курсов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>1</h1>\r\n\t                      \t\t<p>Тестов пройдено</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>           \t                      \t\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Card.Header className=\"statistics-wrapper-header\">Слова</Card.Header>\r\n                    <Card.Description className=\"statistics-inner-wrapper\">\r\n                    \t<div className=\"statistics-container\">\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'book'/></span>\r\n\t                      \t\t<h1>1210</h1>\r\n\t                      \t\t<p>Слов всего</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'check circle outline'/></span>\r\n\t                      \t\t<h1>54</h1>\r\n\t                      \t\t<p>Слов изучено</p>\r\n\t                      \t</div>\r\n\t                      \t<div className=\"statistics-item\">\r\n\t                      \t\t<span><Icon name = 'question circle outline'/></span>\r\n\t                      \t\t<h1>1156</h1>\r\n\t                      \t\t<p>Слов на изучении</p>\r\n\t                      \t</div>                    \t\t\r\n                    \t</div>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                </Card>                \r\n              </Card.Group>: null\r\n             } \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport { Card, Image, Button, Modal} from 'semantic-ui-react'\r\n//import TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n\r\nclass CoursesSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      data: [],\r\n\t\t\tsentence: '',\r\n      visibleSentence: '',\r\n\t\t\tcourses: [],\r\n\t\t\tcorrect_answer: '',\r\n\t\t\twords: [],\r\n      isWordGroupVisible: true,\r\n      isFinalVisible: false,\r\n      doubleWords: [],\r\n      currentArray: [],\r\n      currentId: 0,\r\n      correctAnswer: false,\r\n      incorrectAnswer: false,\r\n      currentExerciseId: 0,\r\n      exercises: [],\r\n      headerVisible: false,\r\n      sentenceVisible: true,\r\n      positiveAnswers: [],\r\n      negativeAnswers: [],\r\n      isResultVisible: false\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n  con = () =>{\r\n    this.setState({\r\n      headerVisible: true\r\n    })\r\n    console.log(this.state);\r\n  }\r\n\r\n  updateSentence =(e)=>{\r\n    var targ = e.target.textContent + ' ';\r\n  \tvar newSentence = this.state.sentence.concat([e.target.textContent]);\r\n    var visibleSentence = this.state.visibleSentence.concat([targ]);\r\n  \tthis.setState({\r\n  \t\tsentence: newSentence,\r\n      visibleSentence: visibleSentence\r\n  \t\t//sentence: [this.state.sentence, ...e.target.textContent]\r\n  \t}, () => this.continueTraining() )\r\n  \tconsole.log(visibleSentence);\r\n  }\r\n\r\n    componentDidMount() {\r\n      var exerciseId = this.state.currentExerciseId;\r\n      axios.get('/courses.json')\r\n        .then(res => {\r\n          const courses = res.data;\r\n          const correct_answer = res.data[0].exercises[exerciseId].full_sentence;\r\n          const words = res.data[0].exercises[exerciseId].words;\r\n          var newWords = []\r\n          for (var i = 0; i < words.length; i++) {\r\n            var a = words[i].variants;\r\n            for (var j = 0; j < a.length; j++) {\r\n              newWords.push(a[j]);\r\n            }\r\n          }          \r\n          var result = []; \r\n          for(var i=0;i < newWords.length;i = i+4){\r\n            result.push(newWords.slice(i,i+4));\r\n          }\r\n          console.log(this.props);\r\n          this.setState({ \r\n            courses: courses, \r\n            correct_answer: correct_answer, \r\n            words: words, \r\n            doubleWords: result,\r\n            exercises: this.props.exercises,\r\n            headerVisible: true \r\n          }, () => this.renderArray() );\r\n        })\r\n    }\r\n\r\n    propsToState = () =>{\r\n      this.setState({\r\n        exercises: this.props.exercises\r\n      })\r\n    }\r\n\r\n    submitAnswer = () =>{\r\n    \tvar sentence = this.state.sentence;\r\n      var positiveAnswers = this.state.positiveAnswers;\r\n      var negativeAnswers = this.state.negativeAnswers;\r\n    \tvar correct_answer = this.state.correct_answer.replace(/\\s/g, '');\r\n\r\n    \tif(sentence===correct_answer){\r\n        positiveAnswers.push(sentence);\r\n    \t\tthis.setState({\r\n          correctAnswer: true,\r\n          positiveAnswers: positiveAnswers\r\n\r\n        })\r\n\r\n    \t}\r\n    \telse{\r\n        negativeAnswers.push(sentence);        \r\n    \t\tthis.setState({\r\n          incorrectAnswer: true,\r\n          negativeAnswers: negativeAnswers\r\n\r\n        })\r\n    \t};\r\n\r\n    }\r\n\r\n    renderArray = () =>{\r\n      var array = this.state.doubleWords.slice();\r\n      var id  = this.state.currentExerciseId;\r\n      var currentArray = array[id];\r\n      this.setState({\r\n        currentArray: currentArray\r\n      })\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      var id  = this.state.currentId;\r\n      var words = this.state.doubleWords.slice();\r\n      id = id+1;\r\n      var currentArray = words[id];\r\n      if(id<words.length){\r\n        this.setState({\r\n          currentId: id,\r\n          currentArray: currentArray\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isWordGroupVisible: false,\r\n          currentId: 0\r\n        }, ()=>this.submitAnswer() )\r\n      }\r\n    }\r\n\r\n\r\n    nextSentence = () =>{\r\n      let courses = this.state.courses.slice();\r\n      let currentId = this.state.currentId;\r\n      let exerciseId = this.state.currentExerciseId;\r\n      exerciseId  = exerciseId + 1;\r\n      if(exerciseId<courses[0].exercises.length){\r\n\r\n        const correct_answer = courses[0].exercises[exerciseId].full_sentence;\r\n        const words = courses[0].exercises[exerciseId].words;\r\n        console.log(correct_answer);\r\n        console.log(words);\r\n            var newWords = []\r\n            for (var i = 0; i < words.length; i++) {\r\n              var a = words[i].variants;\r\n              for (var j = 0; j < a.length; j++) {\r\n                newWords.push(a[j]);\r\n              }\r\n            }          \r\n            var result = []; \r\n            for(var i=0;i < newWords.length;i = i+4){\r\n              result.push(newWords.slice(i,i+4));\r\n            }\r\n        console.log(result);\r\n        console.log(newWords);\r\n        var currentArray = result[currentId]; \r\n        console.log(currentArray);\r\n\r\n        this.setState({\r\n          currentExerciseId: exerciseId,\r\n          isWordGroupVisible: true,\r\n          isFinalVisible: false,\r\n          correct_answer: correct_answer,\r\n          words: words,\r\n          doubleWords: result,\r\n          currentArray: currentArray,\r\n          visibleSentence: '',\r\n          sentence: '',\r\n          incorrectAnswer: false,\r\n          correctAnswer: false\r\n\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          isResultVisible: true,\r\n          incorrectAnswer: false,\r\n          correctAnswer: false,\r\n          isWordGroupVisible: false,\r\n          isFinalVisible: false,\r\n          sentenceVisible: false,\r\n          headerVisible: false                      \r\n        })\r\n\r\n      } \r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    var id = this.state.currentExerciseId;\r\n    return (\r\n          <Card>\r\n            <Image src='/courses.png' />\r\n            <Card.Content>\r\n              <Card.Header>{this.props.course}</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Requires {this.props.time} minutes of your time</span>\r\n              </Card.Meta>\r\n              <Card.Description>This course consists of {this.props.tasks} exercises</Card.Description>\r\n              <Card.Description>\r\n                <Modal className=\"modal\" trigger={<Button primary>Start</Button>} closeIcon>\r\n                    <Card className=\"wrapper-variant\">\r\n                        <Card.Content>\r\n                        {this.state.isResultVisible ? <h1>Congratulations</h1>: null }\r\n                        {this.state.headerVisible ? \r\n                          <Card.Header className=\"header-variant course-simple-item-header\">{this.state.exercises[id].translation}</Card.Header>: null  \r\n                        }\r\n                        {this.state.sentenceVisible ?\r\n                            <Card.Header className=\"header-variant course-simple-item-sentence\">{this.state.visibleSentence}</Card.Header>: null\r\n                         }\r\n                          \r\n    \r\n                          <Card.Description className=\"button-wrap\">\r\n                            <Button.Group className=\"button-group button-variants\">\r\n                            { /*this.state.isWordGroupVisible ? this.state.words.map((word, index) =>\r\n                                <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{word}</Button>\r\n                                ) : null */\r\n                                /*\r\n                                this.state.doubleWords.map((item,index) => {\r\n                                    return item.map((word,index) => \r\n                                      <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{word}</Button>\r\n                                    )\r\n                                } */\r\n                                this.state.isWordGroupVisible ?\r\n                                this.state.currentArray.map((item,index) => \r\n                                  <Button className=\"button-variant\" key={index} primary onClick={this.updateSentence}>{item}</Button>\r\n                                ): null\r\n                              }                            \t\r\n                            </Button.Group>\r\n                            { (this.state.isFinalVisible && this.state.correctAnswer) ? <h1 className=\"course-simple-item right\">Right!</h1>: null }\r\n                            { (this.state.isFinalVisible && this.state.incorrectAnswer) ? <h1 className=\"course-simple-item wrong\">Wrong!</h1>: null }\r\n                            <Button.Group className=\"button-group\">\r\n                              <Button className=\"button-variant\" primary onClick={this.con}>Console</Button>\r\n                            </Button.Group>\r\n                            <Button.Group className=\"button-group\">\r\n                              <Button className=\"button-variant\" primary onClick={this.nextSentence}>Continue</Button>\r\n                            </Button.Group>                                                                                                                                                                                                        \r\n                          </Card.Description>                          \r\n                        </Card.Content>\r\n                    </Card>\r\n                </Modal>                \r\n              </Card.Description>\r\n             </Card.Content>\r\n          </Card> \r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button} from 'semantic-ui-react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport CoursesSimpleItem from './CoursesSimpleItem';\r\n\r\nclass CoursesSimple extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      courses: [],\r\n      words: [],\r\n      exercises: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/courses.json')\r\n        .then(res => {\r\n          const courses = res.data;\r\n          this.setState({ courses: courses }, () => this.mapCourses() );\r\n        })\r\n    }\r\n\r\n    mapCourses = () =>{\r\n      var courses = this.state.courses.slice();\r\n      var arrays = [];\r\n      for (var i = 0; i < courses.length; i++) {\r\n            var a = courses[i].exercises;\r\n            for (var j = 0; j < a.length; j++) {\r\n              arrays.push(a[j]);\r\n            }\r\n      }   \r\n      console.log(arrays) \r\n      this.setState({\r\n        exercises: arrays\r\n      })   \r\n      /*\r\n          for (var i = 0; i < words.length; i++) {\r\n            var a = words[i].variants;\r\n            for (var j = 0; j < a.length; j++) {\r\n              newWords.push(a[j]);\r\n            }\r\n          }   */    \r\n    }\r\n\r\n    con = () =>{\r\n      let courses = this.state.courses.slice();\r\n\r\n      console.log(courses[0].exercises[0].words[1].variants);\r\n      console.log(courses[0].exercises[1].words);\r\n      console.log(courses[1].exercises[0].words);\r\n      console.log(courses[1].exercises[1].words);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          {this.state.courses.map((course, index) =>\r\n            <CoursesSimpleItem\r\n                      \r\n              exerciseName={course.exercises[0].full_sentence}\r\n              exercises = {this.state.exercises}\r\n              exerciseTranslation={course.exercises[0].translation}\r\n              key={index}\r\n              name = {course.course}\r\n              time={course.time}\r\n              tasks={course.tasks}\r\n\r\n            />\r\n          )}\r\n        </Card.Group>\r\n        <Button onClick={this.con}>Console</Button>\r\n        <Button onClick={this.mapCourses}>Courses</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\n\r\nclass CoursesList extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Meta>\r\n                <span className='date'>Joined in 2015</span>\r\n              </Card.Meta>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <Button primary>Primary</Button>\r\n            </Card.Content>\r\n          </Card>                           \r\n        </Card.Group>        \r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport CoursesSimple from './CoursesSimple'\r\nimport CoursesMedium from './CoursesMedium'\r\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass CoursesList extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu></TopMenu>\r\n        <Card.Group itemsPerRow={4}>\r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                  <Link to={\"/coursessimple\"}>Simple courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                <Link to={\"/coursesintermediate\"}>Intermediate courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card> \r\n          <Card>\r\n            <Image src='/data/alacrity.jpg' />\r\n            <Card.Content>\r\n              <Card.Header>Matthew</Card.Header>\r\n              <Card.Description>Matthew is a musician living in Nashville.</Card.Description>\r\n              <div className=\"link-wrapper\">\r\n                <Link to={\"/coursesadvanced\"}>Advanced courses</Link>\r\n              </div>              \r\n            </Card.Content>\r\n          </Card>       \r\n        </Card.Group>\r\n        <Router>\r\n          <div>\r\n            <Route path=\"/courses/simple\" component={CoursesSimple} />\r\n            <Route path=\"/courses/medium\" component={CoursesMedium} />     \r\n          </div>\r\n        </Router>                  \r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default CoursesList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Training extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper training-cards\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/englishtorussian.jpg' />              \r\n              </div>\r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/englishtorussian\">С английского на русский</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/russiantoenglish.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/russiantoenglish\">С русского на английский</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/memory.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/cards\">Словарные карточки</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/audio\">Аудиотренировка</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/construct.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/constructword\">Конструктор слов</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/pronunciation.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/pronunciation\">Произношение</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>          \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/fillthegaps.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/fragments\">Заполни пробелы</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/recreatetext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreatetext\">Воспроизведи текст</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/recreateaudiotext.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/recreateaudiotext\">Воспроизведи аудиоисторию</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/insertspaces.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/insertspaces\">Расставьте пробелы</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='../training/truefalse.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/rightwrong\">Верно-неверно</Link></Card.Header>\r\n\r\n              </Card.Content>\r\n            </Card>                                                                                                   \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Training;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon, Modal, Embed} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      categoryArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"navy\",\"maroon\",\"magenta\",\"green\",\"teal\",\"tomato\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      texts: [],\r\n      books: [],\r\n      videos: [],\r\n      grammar: []\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UC4a-Gbdw7vOaccHmFo40b9g\";\r\n    var maxResults = 48;\r\n    var videoUrl =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;  \t\r\n  \taxios.all([axios.get('decks.json'),\r\n               axios.get('working.json'),\r\n               axios.get('texts.json'),\r\n               axios.get('books.json'),\r\n               axios.get('grammar2.json'),\r\n               axios.get(videoUrl)])\r\n            .then(axios.spread((decksResponse, wordsResponse, textsResponse, booksResponse, grammarResponse, videosResponse ) => { \r\n\t          let words = decksResponse.data;\r\n\t          let allWords = wordsResponse.data;\r\n\t          let texts = textsResponse.data;\r\n\t          let books = booksResponse.data;\r\n\t          let grammar = grammarResponse.data;\r\n\t          let videos = videosResponse.data;\r\n          \t  let contentArray = [];\r\n          this.setState({\r\n          \tallWords: allWords,\r\n            words: words,\r\n            texts: texts,\r\n            books: books,\r\n            grammar: grammar,\r\n            videos: videos,\r\n            contentArray: contentArray\r\n          }, () => console.log(this.state.grammar[0].rules) );\r\n       }))\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.words.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n        const unique = arr\r\n            .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      }, () => console.log(this.state))    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      console.log(categoryValue);\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )  \r\n\r\n    readMore = (e) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let target = e.target.parentElement;\r\n      let color = colors[Math.floor(Math.random()*colors.length)];\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].textContent;\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n      \t} \r\n      }\r\n\r\n      for (var i = 0; i < currentWords.length; i++) {\r\n      \t\tarrayOfButtons.push(\"Добавить\");\r\n      \t\ticonsArray.push(true);\r\n      \t\tdisabled.push(\"\");\r\n      }\r\n      \r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords: currentWords,\r\n        currentColor: color,\r\n        arrayOfButtons: arrayOfButtons,\r\n        iconsArray: iconsArray,\r\n        disabled: disabled      \t\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n\r\n    }\r\n\r\n    getUniqueCategory = () =>{\r\n      \r\n    }\r\n\r\n    addToList = (e) =>{\r\n      let array = this.state.addedItems.slice();\r\n      let buttons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let icons = this.state.iconsArray.slice();\r\n      let target = e.target.parentElement.parentElement.parentElement.parentElement;\r\n      let name = e.target.parentElement.children[0].textContent;\r\n      let translation = e.target.parentElement.children[1].textContent;\r\n      var index = 0;\r\n        while ((target = target.previousElementSibling)) {\r\n          index++;\r\n      }\r\n      buttons[index] = \"Добавлено !\";\r\n      icons[index] = false;\r\n      disabled[index] = \"disabled\";\r\n      let temp = {}\r\n      temp[\"name\"] = name;\r\n      temp[\"translation\"] = translation;\r\n      array.push(temp);\r\n      this.setState({\r\n      \taddedItems: array,\r\n      \tarrayOfButtons: buttons,\r\n      \ticonsArray: icons,\r\n      \tdisabled: disabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tconsole.log(this.state);\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      \tlet state = this.state.sortedByNameUp;\r\n      \tconsole.log(\"current words\", this.state.currentWords);\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet newWords = words;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tconsole.log(\"new words\", newWords);\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords: newWords,\r\n  \t\t\tsortedByNameUp: !state\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n      \tlet state = this.state.sortedByTranslationUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tconsole.log(\"current translation\", this.state.currentWords);\r\n  \t\tlet newWords = words;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n  \t\tconsole.log(\"new words\", newWords);\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords: newWords,\r\n  \t\t\tsortedByTranslationUp: !state\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n   \tvar newWords = this.state.addedItems.slice();\r\n   \tconsole.log(newWords);\r\n \t  var newIndex = (id.target.parentElement.parentElement);\r\n    console.log(newIndex);\r\n\t  const index = [...newIndex.parentElement.children].indexOf(newIndex);\r\n\t  console.log(index);\r\n\t  newWords.splice(index,1);\r\n    this.setState({addedItems: newWords});\r\n   }\r\n\t\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper recommended-wrapper\">\r\n          \t<div className=\"main-section section-1\">\r\n          \t  <div className=\"section-overlay\">\r\n          \t  \t<div className=\"section-header\">\r\n          \t  \t\t<h2>Лучший способ выучить язык</h2>\r\n          \t  \t\t<Link to=\"/training\">Начать учиться</Link>\r\n          \t  \t</div>\r\n          \t  </div>              \r\n            </div>\r\n          \t<div className=\"advantage-section\">\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/settings.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Удобный интерфейс</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notebook.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Множество возможностей</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/user.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разнообразные тренировки</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>\r\n          \t  <div className=\"advantage-overlay\">\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/notepad.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Большой каталог материалов</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/house.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Полностью бесплатно</p>\r\n          \t  \t\t</div>\r\n          \t  \t\t<div className=\"advantage-icon\">\r\n          \t  \t\t\t<span>\r\n          \t  \t\t\t\t<Image  src=\"icons/pen.png\" />\r\n          \t  \t\t\t</span>\r\n          \t  \t\t\t<p>Разные уровни обучения</p>\r\n          \t  \t\t</div>          \t  \t\t          \t  \t\t\r\n          \t  </div>          \t                \r\n            </div>            \r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image words-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Изучайте слова</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>20 тематических наборов</li>\r\n\t            \t\t\t<li>4000 слов</li>\r\n\t            \t\t\t<li>Словарь с расширенным функционалом</li>            \t\t\t            \t\t\t\r\n\t            \t\t\t<li>Возможность изучать добавленные слова</li>            \t\t\t\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/vocabulary\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Тренируйтесь</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>10 видов тренировок</li>\r\n\t            \t\t\t<li>Тренировка чтения, говорения  и понимания на слух</li>\r\n\t            \t\t\t<li>Возможность добавлять на тренировку изучаемые слова</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/training\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image training-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image grammar-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Учите грамматику</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Изучение времен английского языка</li>\r\n\t            \t\t\t<li>Примеры употребления</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/grammar\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Улучшайте навыки чтения</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>120 учебных текстов</li>\r\n\t            \t\t\t<li>Различная тематика</li>\r\n\t            \t\t\t<li>Тексты разного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/texts\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-image texts-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>            \t\r\n            </div>\r\n            <div className=\"half-section\">\r\n            \t<div className=\"half-section-image books-section\">\r\n            \t\t<div className=\"half-section-image-overlay\">\r\n            \t\t\t\r\n            \t\t</div>\r\n            \t</div>\r\n            \t<div className=\"half-section-text\">\r\n            \t\t<div className=\"half-section-text-wrapper\">\t\r\n\t            \t\t<h3>Читайте книги</h3>\r\n\t            \t\t<ul>\r\n\t            \t\t\t<li>Книги на любой вкус</li>\r\n\t            \t\t\t<li>Возможность слушать аудиокниги</li>\r\n\t            \t\t\t<li>Книги различного уровня сложности</li>\r\n\t            \t\t</ul>\r\n\t            \t\t<Link to=\"/books\">Перейти</Link>\r\n            \t\t</div>\r\n            \t</div>\r\n            </div>     \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message, TextArea} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport './style.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass ConstructWord extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    \tthis.btn = React.createRef();\r\n  \t\tthis.state = {\r\n\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n \r\n  myHandler = (e) =>{\r\n    const fade = this.state.fade;\r\n    let mistakeCount = this.state.mistakeCount;\r\n    let currentFullWord = this.state.currentFullWord;\r\n    let negativeWords = this.state.negativeWords.slice();\r\n    let positiveWords = this.state.positiveWords.slice();\r\n    let currentValue = this.state.currentValue;\r\n    let currentWord = this.state.currentWord;      \r\n    let id = this.state.nameArrayId;\r\n    let nameArray = this.state.nameArray;\r\n    let randomNameArray = this.state.randomNameArray;\r\n    let tempParam;\r\n    if ((e.key=== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        currentValue = currentValue + e.key;\r\n        this.state.wordNameArray[id] = e.key;\r\n        for (var i = 0; i < randomNameArray.length; i++) {\r\n          if (randomNameArray[i] === e.key) {\r\n            tempParam = i;\r\n            break;\r\n          }\r\n        }\r\n        randomNameArray.splice(tempParam,1);       \r\n        ++id;\r\n        this.setState({\r\n          currentValue,\r\n          nameArrayId: id,\r\n          inputValue: e.key,\r\n          randomNameArray\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((e.key !== nameArray[id]) && (currentValue.length < currentWord.length) && (this.state.isCardVisible) ) {\r\n        mistakeCount++;\r\n        this.setState({\r\n          mistakeCount,\r\n          fade: true\r\n        })\r\n      }\r\n      else if((e.keyCode == '13') && (this.state.isCardVisible) ){\r\n        this.continueTraining();\r\n      }\r\n\r\n      else {\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false\r\n        })        \r\n      }\r\n  }    \r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let currentFullWord = this.state.currentFullWord;\r\n\t  let negativeWords = this.state.negativeWords.slice();\r\n\t  let positiveWords = this.state.positiveWords.slice();\r\n\t  let currentValue = this.state.currentValue;\r\n\t  let currentWord = this.state.currentWord;\t  \r\n\t\tif (mistakeCount > 2){\r\n\t\t\tnegativeWords.push(currentFullWord);\r\n\t\t}\r\n\r\n\t\telse if(currentWord !== currentValue){\r\n\t\t  \tnegativeWords.push(currentFullWord);\r\n\t\t  \tthis.setState({\r\n\t\t  \t\tnegativeWords\r\n\t\t  \t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpositiveWords.push(currentFullWord)\r\n\t\t} \r\n      let id = this.state.id;\r\n      let wordsLength = this.state.words.length;\r\n      let words = this.state.words; \r\n\r\n      id = id + 1;\r\n       if(id < wordsLength) {\r\n       \tconst currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n\t\tconst currentTranslation = words[id].translation;\r\n\t\tconst currentImage = words[id].image;\r\n\t\tconst currentMeaning = words[id].meaning;        \r\n\t\tconst nameArray = currentWord.split('');\r\n\t\tconst randomNameArray = currentWord.split('');\r\n\t\tfor (let i = randomNameArray.length - 1; i > 0; i--) {\r\n\t\t    const j = Math.floor(Math.random() * (i + 1));\r\n\t\t    [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n\t\t}\r\n\t\tconst wordNameArray = [];\r\n\t\tfor (var i = 0; i < nameArray.length; i++) {\r\n\t\t\twordNameArray.push(' ');\r\n\t\t}\r\n        this.setState({\r\n            id,\r\n            words, \r\n            currentWord,\r\n            currentFullWord,\r\n            currentTranslation,\r\n            currentImage,\r\n            currentMeaning,\r\n            randomNameArray,\r\n            nameArray,\r\n            wordNameArray,\r\n            isImageVisible: false,\r\n            areButtonsVisible: true,\r\n            currentValue: '',\r\n            nameArrayId: 0,\r\n            mistakeCount: 0,\r\n            positiveWords,\r\n            negativeWords\r\n        })\r\n      }\r\n        else{\r\n          this.setState({\r\n           isFinalVisible: true,\r\n           isCardVisible: false,\r\n           isStarterVisible: false,\r\n      \t\t\tpositiveWords,\r\n      \t\t\tnegativeWords           \r\n          })\r\n        }\r\n    }\r\n  \r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }  \r\n\r\n   checkValue = () =>{\r\n   \tvar currentWord = this.state.currentWord;\r\n    var currentValue = this.state.currentValue;\r\n    if(currentWord.length === currentValue.length){\r\n    \tthis.setState({\r\n    \t\tareButtonsVisible: false,\r\n    \t\tisImageVisible: true\r\n    \t})\r\n    }   \t\r\n   }\r\n\r\n   compareWord = (e) =>{\r\n    var id = this.state.nameArrayId;\r\n    var currentWord = this.state.currentWord;\r\n    var nameArray = this.state.nameArray;\r\n    var randomNameArray = this.state.randomNameArray;\r\n    var currentValue = this.state.currentValue;\r\n    var currentLetter = e.target.textContent.slice(0,1);\r\n    var mistakeCount = this.state.mistakeCount;\r\n      if( (currentLetter === nameArray[id]) && (currentValue.length < currentWord.length) ){\r\n        e.target.className = \"hidden\";\r\n        currentValue = currentValue + currentLetter;\r\n        this.state.wordNameArray[id] = currentLetter;\r\n        ++id;\r\n        this.setState({\r\n          currentValue: currentValue,\r\n          nameArrayId: id,\r\n          inputValue: currentLetter\r\n        }, () => this.checkValue() )\r\n      }\r\n      else if((currentLetter !== nameArray[id]) && (currentValue.length < currentWord.length)) {\r\n\t      mistakeCount++;\r\n\t      this.setState({\r\n\t      \tmistakeCount: mistakeCount,\r\n          fade: true\r\n\t      })\r\n      }\r\n      else {\r\n      \tthis.setState({\r\n      \t\tisFinalVisible: true,\r\n      \t\tisCardVisible: false\r\n      \t})      \t\r\n      }\r\n} \r\n\r\n\r\n\tconsoleState = () =>{\r\n\t\tconsole.log(this.state)\r\n\t}\r\n\r\n\r\n    updateSearch = (e) => { \t\r\n      this.setState({search: e.target.value});\r\n    }\t\r\n\r\n    changeValue = () =>{\r\n    \tthis.state.wordNameArray[0] = 'f';\r\n    \tthis.forceUpdate();\r\n    }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentWord: '',\r\n        currentFullWord: null,\r\n        currentTranslation: '',\r\n        currentMeaning: '',\r\n        isStarterVisible: true,\r\n        isCardVisible: false,\r\n        isFinalVisible: false,\r\n        inputValue: null,\r\n        nameArray: [],\r\n        wordNameArray: [],\r\n        nameArrayId: 0,\r\n        currentValue: '',\r\n        search: '',\r\n        currentImage: null,\r\n        areButtonsVisible: true,\r\n        isImageVisible: false,\r\n        wordId: 0,\r\n        mistakeCount: 0,\r\n        animationState: false,\r\n        fade: false        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/vocabulary2.json')\r\n      .then(res => {\r\n        const words = res.data;\r\n        const currentFullWord = words[id];\r\n        const currentWord = words[id].name;\r\n        const currentTranslation = words[id].translation;\r\n        const currentImage = words[id].image;\r\n        const currentMeaning = words[id].meaning;\r\n        const nameArray = currentWord.split('');\r\n        const randomNameArray = currentWord.split('');\r\n        for (let i = randomNameArray.length - 1; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              [randomNameArray[i], randomNameArray[j]] = [randomNameArray[j], randomNameArray[i]];\r\n        }\r\n        const wordNameArray = [];\r\n        for (var i = 0; i < nameArray.length; i++) {\r\n          wordNameArray.push(' ');\r\n        }\r\n        this.setState({ \r\n          words, \r\n          currentWord,\r\n          currentTranslation,\r\n          currentImage,\r\n          currentMeaning,\r\n          randomNameArray,\r\n          nameArray,\r\n          wordNameArray,\r\n          currentFullWord\r\n          });\r\n      })\r\n      document.body.addEventListener(\"keydown\", this.myHandler);\r\n    }\r\n\r\n\r\n  render() {\r\n    const fade = this.state.fade;\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/construct.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n            <Container \r\n                onAnimationEnd={() => this.setState({ fade: false })}\r\n                className={fade ? 'fade construct-word-container' : 'construct-word-container'}>\r\n              <ul>\r\n              {this.state.wordNameArray.map((name,index) =>\r\n                <input key={index}  readOnly value={name} maxLength=\"1\" />\r\n               )}\r\n              </ul>\r\n              {this.state.areButtonsVisible ? \r\n\t              <ul>\r\n\t              {this.state.randomNameArray.map((name,index) =>\r\n\t                <li key={index} \r\n                      onClick={this.compareWord}\r\n                  > \r\n                      {name} \r\n                  </li>\r\n\t               )}\r\n\t              </ul>: null \r\n              }\r\n            {this.state.isImageVisible ?\r\n            \t<Fragment>\r\n            \t\t<p>{this.state.currentMeaning}</p>\r\n                   <div className=\"texts-image-wrapper\">\r\n                    <Image src={this.state.currentImage} ></Image>\r\n                  </div>\r\n            \t</Fragment> \r\n            \t : null\r\n            }\r\n            </Container>\r\n            <Button primary onClick={this.continueTraining} >Продолжить</Button>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer>\r\n        </footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default ConstructWord;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Container, Label, List, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Proverbs extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n  \t\tthis.state = {\r\n  \t\t\tproverbs: [],\r\n        id: 0,\r\n        currentProverbName: '',\r\n        currentTranslation: '',\r\n        mistakeCount: 0,\r\n        positiveWords: [],\r\n        negativeWords: [],\r\n        currentArray: [],\r\n        isStarterVisible: true,\r\n        isCardVisible: false,\r\n        isFinalVisible: false,\r\n        areButtonsVisible: false,\r\n        isContinueButtonVisible: false,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: true,\r\n        currentWord: []\r\n  \t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('/proverbs.json')\r\n        .then(res => {\r\n          const proverbs = res.data;\r\n          const currentProverb = proverbs[id];\r\n          const currentProverbName = proverbs[id].proverb;\r\n          const currentTranslation = proverbs[id].translation;\r\n          let currentArray = currentProverbName.split(\" \");\r\n          for (let i = currentArray.length - 1; i > 0; i--) {\r\n              const j = Math.floor(Math.random() * (i + 1));\r\n              [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n          }                    \r\n          this.setState({ \r\n              proverbs: proverbs, \r\n              currentProverbName: currentProverbName,\r\n              currentTranslation: currentTranslation,\r\n              currentArray: currentArray\r\n            },()=> console.log(\"currentArray \", this.state.currentArray));\r\n        })\r\n    }\r\n\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n          isStarterVisible: false,\r\n          isCardVisible: true\r\n      })\r\n    }\r\n\r\n    shuffleArray = () =>{\r\n      let currentArray = this.state.currentArray.slice();\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }\r\n      console.log(currentArray)      \r\n    }\r\n\r\n\r\n\r\n    continueTraining = () =>{\r\n\t  let mistakeCount = this.state.mistakeCount;\r\n\t  let negativeWords = this.state.negativeWords.slice();\r\n\t  let positiveWords = this.state.positiveWords.slice();\r\n    let id = this.state.id;\r\n    let proverbs = this.state.proverbs;\r\n    id = id + 1;\r\n    if(id < 2) {\r\n      const currentProverb = proverbs[id];\r\n      const currentProverbName = proverbs[id].proverb;\r\n      const currentTranslation = proverbs[id].translation;\r\n      let currentArray = currentProverbName.split(\" \");\r\n      for (let i = currentArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentArray[i], currentArray[j]] = [currentArray[j], currentArray[i]];\r\n      }        \r\n      this.setState({\r\n          id: id,\r\n          proverbs: proverbs, \r\n          currentProverbName: currentProverbName,\r\n          currentTranslation: currentTranslation,\r\n          currentArray: currentArray,\r\n          currentWord: [],\r\n          positiveWords: positiveWords,\r\n          negativeWords: negativeWords,\r\n          isCheckButtonVisible: false,\r\n          isDKButtonVisible: true,\r\n          isContinueButtonVisible: false\r\n      }, () => console.log(this.state))\r\n    }\r\n    else{\r\n      this.setState({\r\n        isFinalVisible: true,\r\n        isCardVisible: false,\r\n        isStarterVisible: false,\r\n        positiveWords: positiveWords,\r\n        negativeWords: negativeWords           \r\n      })\r\n    }\r\n  }\r\n\r\n   setValue = (e) =>{\r\n    let target = e.target;\r\n    let parent = e.target.parentElement.children;\r\n    var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n    }\r\n    let currentWord = this.state.currentWord;\r\n    let currentArray = this.state.currentArray;\r\n    currentArray.splice(indexTarget,1);\r\n    currentWord.push(e.target.textContent);\r\n\r\n    this.setState({\r\n      currentWord: currentWord\r\n    })\r\n    if(currentArray.length == 0){\r\n      this.setState({\r\n        isCheckButtonVisible: true,\r\n        isDKButtonVisible: false\r\n      })\r\n    }\r\n  } \r\n\r\n    removeValue = (e) =>{\r\n      let target = e.target;\r\n      let parent = e.target.parentElement.children;\r\n      var indexTarget = 0;\r\n          while ( (target = target.previousElementSibling) ) {\r\n            indexTarget++\r\n      }\r\n      console.log(indexTarget);\r\n      let currentWord = this.state.currentWord;\r\n      let currentArray = this.state.currentArray;\r\n      currentWord.splice(indexTarget,1);\r\n      currentArray.push(e.target.textContent);\r\n      this.setState({\r\n        currentArray: currentArray\r\n      })\r\n      if(currentArray.length > 0){\r\n        this.setState({\r\n          isCheckButtonVisible: false\r\n        })\r\n      }\r\n  }\r\n\r\n  dontKnow = (e) =>{\r\n    let negativeWords = this.state.negativeWords;    \r\n    let currentProverbName = this.state.currentProverbName;\r\n    let currentArray = currentProverbName.split(\" \");\r\n    let currentWord = [];\r\n    for (var i = 0; i < currentArray.length; i++) {\r\n      currentWord.push(currentArray[i])\r\n    }\r\n    negativeWords.push(currentProverbName);\r\n    console.log(currentWord);\r\n    this.setState({\r\n      currentWord: currentWord,\r\n      currentArray: [],\r\n      isDKButtonVisible: false,\r\n      isContinueButtonVisible: true,\r\n      isCheckButtonVisible: false,\r\n      currentWord: currentWord\r\n    })\r\n  }\r\n\r\n  checkProverb = (e) =>{\r\n    let positiveWords = this.state.positiveWords;\r\n    let currentWord = this.state.currentWord;\r\n    let sentence = '';\r\n    for (var i = 0; i < currentWord.length; i++) {\r\n      if(i !== currentWord.length-1){\r\n        sentence = sentence + currentWord[i]+ ' ';\r\n      }\r\n      else{\r\n        sentence = sentence + currentWord[i];\r\n      }\r\n    }\r\n    if(sentence === this.state.currentProverbName){\r\n      console.log(\"correct!\");\r\n      positiveWords.push(sentence)\r\n      this.setState({\r\n        isContinueButtonVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isDKButtonVisible: false,\r\n        positiveWords: positiveWords\r\n      })      \r\n    }\r\n    else {\r\n      console.log(\"incorrect!\");\r\n      this.setState({\r\n        isDKButtonVisible: true\r\n      })      \r\n    }\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isStarterVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n          <div className=\"training-wrapper-image\">\r\n            <Image src='training/proverbs.jpg' />\r\n          </div>  \r\n            <Card.Content>\r\n              <Card.Header>Составь слово</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       \t<Container className=\"list-container\">\r\n       \t\t<Card className=\"construct-card proverb-card\">\r\n\t       \t\t<Label>\r\n              {this.state.currentTranslation}\r\n            </Label>\r\n              <div className=\"proverb-result\">\r\n                  {this.state.currentWord.map((item,index) =>\r\n                      <span key={index} className=\"proverb-span\" onClick={this.removeValue}>{item}</span>\r\n                  )}\r\n              </div>\r\n              <div className=\"fragment-variants\">\r\n                {this.state.currentArray.map((item, index) =>\r\n                  <span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"proverb-button-container\">\r\n              {this.state.isCheckButtonVisible ? \r\n                <Button primary onClick={this.checkProverb} >Проверить</Button> :null\r\n              }\r\n              {this.state.isDKButtonVisible ? \r\n                <Button primary onClick={this.dontKnow}>Не знаю</Button> :null\r\n              }\r\n              {this.state.isContinueButtonVisible ? \r\n                <Button primary onClick={this.continueTraining} >Продолжить</Button> :null\r\n              }                \r\n              </div>\r\n       \t\t</Card>\r\n      \t</Container> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Results</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    <h3>Верно</h3>\r\n                      {this.state.positiveWords.map((item, index) => \r\n                        <List.Item key={index} >{item}</List.Item>  \r\n                      )}\r\n                    <h3>Неверно</h3>\r\n                      {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} >{item}</List.Item>  \r\n                      )}                      \r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {2 - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary>Продолжить</Button>\r\n                    <Button primary><Link to=\"/materials\">Вернуться</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Proverbs;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react';\r\nimport {Link} from \"react-router-dom\";\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\n\r\nclass Cards extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n    updateComponent = () =>{\r\n         const id = this.state.id;\r\n          const words = this.state.words;\r\n          const currentName = words[id].name;\r\n          const currentTranslation = words[id].translation;\r\n          const currentImage = words[id].image;\r\n          this.setState({ \r\n            words, \r\n            currentName, \r\n            currentImage, \r\n            currentTranslation });\r\n    }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateState = () =>{\r\n      let newId =this.state.id;\r\n      newId = newId + 1;\r\n      const id = this.state.id;\r\n      const words = this.state.words;\r\n      const currentName = words[newId].name;\r\n      const currentTranslation = words[newId].translation;\r\n      const currentImage = words[newId].image;\r\n      const currentDate = words[newId].date;\r\n      const currentCategory = words[newId].category;      \r\n      this.setState({\r\n        id: newId,\r\n        words, \r\n        currentName, \r\n        currentImage, \r\n        currentTranslation, \r\n        currentDate,\r\n        currentCategory,\r\n        isTranslationVisible: false        \r\n      })\r\n    }\r\n\r\n    checkResponse = (val) => {\r\n      var newObj = {};\r\n      newObj.id = this.state.id;\r\n      newObj.name = this.state.currentName;\r\n      newObj.translation = this.state.currentTranslation;\r\n      newObj.image = this.state.currentImage;\r\n      newObj.date = this.state.currentDate;\r\n      newObj.category = this.state.currentCategory; \r\n      if (val) {\r\n        var positiveWords = this.state.positiveWords.slice();\r\n        positiveWords.push(newObj);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n        })        \r\n      } else {\r\n        var negativeWords = this.state.negativeWords.slice();\r\n        negativeWords.push(newObj);      \r\n        this.setState({\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true\r\n        })        \r\n      }     \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let wordsLength = this.state.words.length;\r\n      let newId =this.state.id;\r\n      newId = newId + 1;\r\n      const id = this.state.id;\r\n      const words = this.state.words;\r\n      if(newId < wordsLength){\r\n        const currentName = words[newId].name;\r\n        const currentTranslation = words[newId].translation;\r\n        const currentImage = words[newId].image;\r\n        const currentDate = words[newId].date;\r\n        const currentCategory = words[newId].category;     \r\n        this.setState({\r\n          id: newId,\r\n          words, \r\n          currentName, \r\n          currentImage, \r\n          currentTranslation, \r\n          currentDate,\r\n          currentCategory,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n      })\r\n    }\r\n\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }    \r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      currentName: '',\r\n      currentTranslation: '',\r\n      currentImage: null,\r\n      currentDate : null,\r\n      currentCategory: '',\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false \r\n    }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    var id = this.state.id;\r\n      axios.get('/words.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          const currentName = words[id].name;\r\n          const currentTranslation = words[id].translation;\r\n          const currentImage = words[id].image;\r\n          const currentDate = words[id].date;\r\n          const currentCategory = words[id].category;           \r\n          this.setState({\r\n            currentName, \r\n            currentImage, \r\n            currentTranslation, \r\n            currentDate,\r\n            currentCategory }, () => this.randomItem(words));\r\n        })\r\n   }\r\n\r\n   randomItem = (arr) => {\r\n    let words = [];\r\n    for (var i = 0; i < 10; i++) {\r\n      words.push(arr[Math.floor(Math.random() * arr.length)]);\r\n    }\r\n    this.setState({\r\n      words\r\n    })\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Словарные карточки</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent} >Начать тренировку</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n           <div className=\"card-image-wrapper recognize-cards\">\r\n             <Image src={this.state.currentImage} />\r\n           </div>\r\n              <Card.Content>\r\n                <Card.Header>{this.state.currentName} \r\n                <span onClick={this.voiceWord} className=\"training-card__icon\" title=\"Прослушать\">\r\n                  <Icon name = 'right sound'/> \r\n                </span>\r\n                </Card.Header>\r\n                {this.state.isTranslationVisible ? \r\n                  <Fragment>\r\n                    <Card.Meta>{this.state.currentTranslation}</Card.Meta>\r\n                    <Card.Description>{}</Card.Description>                  \r\n                  </Fragment>:null\r\n                }\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={/*this.positiveResponse */ this.checkResponse.bind(this, true)} primary>Знаю</Button>\r\n                  <Button onClick={/*this.negativeResponse*/ this.checkResponse.bind(this, false)} primary>Не знаю</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  { (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Cards;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Audio extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart()\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({\r\n        search: event.target.value.substr(0,20),\r\n        tempSearch: event.target.value.substr(0,20)});\r\n    }  \r\n\r\n\r\n    positiveResponse = () =>{\r\n      var newObj = {};\r\n      var positiveWords = this.state.positiveWords.slice();\r\n      var negativeWords = this.state.negativeWords.slice();\r\n      var currentWord = this.state.currentName;\r\n      var searchValue = this.state.search;\r\n      newObj.id = this.state.id;\r\n      newObj.name = this.state.currentName;\r\n      newObj.translation = this.state.currentTranslation;\r\n      newObj.image = this.state.currentImage;\r\n      newObj.date = this.state.currentDate;\r\n      newObj.category = this.state.currentCategory;\r\n      if(currentWord === searchValue){\r\n        positiveWords.push(newObj);\r\n        this.setState({\r\n          positiveWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-green'\r\n        })\r\n      }\r\n      else if(searchValue === ''){\r\n        negativeWords.push(newObj);        \r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red',\r\n          tempSearch: 'нет ответа'\r\n        }) \r\n      }\r\n\r\n      else {\r\n        negativeWords.push(newObj);\r\n        this.setState({\r\n          correctNameVisible: true,\r\n          negativeWords,\r\n          isTranslationVisible: true,\r\n          showNavButtons: false,\r\n          showContinueButton: true,\r\n          isImageVisible: true,\r\n          isInputVisible: false,\r\n          isLinkVisible: false,\r\n          search: '',\r\n          nameClass: 'audio-name-red'\r\n        })        \r\n      }\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let wordsLength = this.state.words.length;\r\n      let newId =this.state.id;\r\n      newId = newId + 1;\r\n      const id = this.state.id;\r\n      const words = this.state.words;\r\n        if(newId < wordsLength) {\r\n        const currentName = words[newId].name;\r\n        const currentTranslation = words[newId].translation;\r\n        const currentImage = words[newId].image;\r\n        const currentDate = words[newId].date;\r\n        const currentCategory = words[newId].category;          \r\n          this.setState({\r\n            id: newId,\r\n            words, \r\n            currentName, \r\n            currentImage, \r\n            currentTranslation, \r\n            currentDate,\r\n            currentCategory,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            correctNameVisible: false        \r\n          })\r\n\r\n        } \r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          correctNameVisible: false,\r\n          search: ''   \r\n\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }  \r\n\r\n   showImage = () => {\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentName: '',\r\n        currentTranslation: '',\r\n        currentImage: null,\r\n        currentDate : null,\r\n        currentCategory: '',\r\n        isCardVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false,\r\n        correctNameVisible: false,\r\n        correctName: null,\r\n        correctNameClass: 'audio-name-green',\r\n        isImageVisible: false,\r\n        isLinkVisible: true,\r\n        isInputVisible: true,\r\n        search: '',\r\n        tempSearch: '',\r\n        metaClass: 'blue',\r\n        nameClass: ''         \r\n      }, () => this.initialLoad())\r\n   }\r\n\r\n   initialLoad = () => {\r\n    var id = this.state.id;\r\n      axios.get('/words.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          const currentName = words[id].name;\r\n          const currentTranslation = words[id].translation;\r\n          const currentImage = words[id].image;\r\n          const currentDate = words[id].date;\r\n          const currentCategory = words[id].category;           \r\n          this.setState({ \r\n            currentName, \r\n            currentImage, \r\n            currentTranslation, \r\n            currentDate,\r\n            currentCategory }, () => this.randomItem(words));\r\n        })\r\n   }\r\n\r\n   randomItem = (arr) => {\r\n    let words = [];\r\n    for (var i = 0; i < 10; i++) {\r\n      words.push(arr[Math.floor(Math.random() * arr.length)]);\r\n    }\r\n    this.setState({\r\n      words\r\n    })\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n         {this.state.isButtonVisible ?\r\n          <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='../training/audio.jpg' />\r\n            </div>  \r\n              <Card.Content>\r\n                <Card.Header>Аудирование</Card.Header>\r\n                <Card.Description>\r\n                  <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                </Card.Description>\r\n              </Card.Content>\r\n            </Card>          \r\n          </Card.Group>:\r\n          null\r\n        }\r\n         {this.state.isCardVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"audio-header-wrapper\" >\r\n             <Card className=\"audio-training\"  >\r\n                <Card.Content>\r\n                  <Card.Header className=\"audio-header\">\r\n                    <Button onClick={this.voiceWord} primary><Icon size=\"big\" name=\"microphone\"></Icon></Button>\r\n                    {this.state.isInputVisible ?\r\n                      <Input placeholder=\"Введите прослушанное слово\" id=\"audo-input\" onChange={this.updateSearch}/>:null\r\n\r\n                    } \r\n                  </Card.Header>\r\n                  {this.state.isTranslationVisible ? \r\n                    <Fragment>\r\n                    {this.state.correctNameVisible ? <Card.Meta className={this.state.correctNameClass}>{this.state.currentName}</Card.Meta>: null }\r\n                      <Card.Meta className={this.state.nameClass}>{this.state.tempSearch}</Card.Meta>\r\n                      <Card.Meta className={this.state.metaClass}>{this.state.currentTranslation}</Card.Meta>\r\n                      <Card.Description className=\"audio-description\">{}</Card.Description>                  \r\n                    </Fragment>:null\r\n                  }\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                <div className=\"audio-image-outer-wrapper\">\r\n                  {this.state.isImageVisible ?\r\n                   <div className=\"audio-image-wrapper\">\r\n                     <Image src={this.state.currentImage} />\r\n                   </div> :null\r\n                 }\r\n                 {this.state.isLinkVisible ?\r\n                   <div className=\"audio-image-text\">\r\n                       <a onClick={this.showImage}>Show hint</a>\r\n                   </div> :null\r\n                  }                 \r\n                </div>\r\n                  <Button.Group className=\"audio-buttons-wrapper\">\r\n                  {this.state.showNavButtons ?\r\n                  <Fragment>\r\n                    <Button onClick={this.positiveResponse} primary>Проверить</Button>\r\n                  </Fragment>:null\r\n                  }  \r\n                  {this.state.showContinueButton ?\r\n                    <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n\r\n                  }\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group> :\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          </div>\r\n          <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Audio;","let actions = {\r\n\tupdateTotalScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TOTAL_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\r\n\t},\r\n\tupdateTodayScore: function(score) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TODAY_SCORE',\r\n\t\t\tpayload: score\r\n\t\t}\t\t\r\n\t},\r\n\tupdateExerciseScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_EXERCISES_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateTestsScore: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_TESTS_COMPLETE',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsTotal: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_TOTAL',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsRemaining: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_REMAINING',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t},\r\n\tupdateWordsStudied: function(number) {\r\n\t\treturn {\r\n\t\t\ttype: 'UPDATE_WORDS_STUDIED',\r\n\t\t\tpayload: number\r\n\t\t}\t\t\r\n\t}\t\t\t\t\t\r\n}\r\n\r\nexport default actions;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {bindActionCreators} from 'redux';\r\nimport actions from './actions/index';\r\nimport {connect} from 'react-redux';\r\n\r\nclass EnglishToRussian extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n\r\n    initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/working.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          const currentName = words[id].name;\r\n          const currentTranslation = words[id].translation;\r\n          const currentMeaning = words[id].meaning;\r\n          const currentImage = words[id].image;\r\n          const currentDate = words[id].date;\r\n          const currentCategory = words[id].category;\r\n          let result = [];\r\n          for (var i = 0; i < 10; i++) {\r\n            let item = [];\r\n            while(item.length < 5) {\r\n              var el = words[Math.floor(Math.random() * words.length)];\r\n              if (item.indexOf(el) === -1) {\r\n                item.push(el)\r\n              };                \r\n            }\r\n            result.push(item);\r\n          }\r\n\r\n          const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n          const currentPicture = currentWord.image;          \r\n          this.setState({ \r\n            words, \r\n            currentName, \r\n            currentImage, \r\n            currentTranslation, \r\n            currentMeaning,\r\n            currentDate,\r\n            currentCategory,\r\n            currentWord,\r\n            result,\r\n            currentPicture });\r\n        })\r\n    }\r\n\r\n    updateComponent = () =>{\r\n      const id = this.state.id;\r\n      const words = this.state.words;\r\n      const currentName = words[id].name;\r\n      const currentTranslation = words[id].translation;\r\n      const currentMeaning = words[id].meaning;\r\n      const currentImage = words[id].image;\r\n      this.setState({ \r\n        words, \r\n        currentName, \r\n        currentImage, \r\n        currentTranslation, \r\n        currentMeaning});\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({search: event.target.value.substr(0,20)});\r\n    }  \r\n\r\n    continueTraining = () =>{\r\n      let wordsLength = this.state.result.length;\r\n      let id = this.state.id;\r\n      id = id + 1;\r\n      const words = this.state.result;\r\n      const result = this.state.result;\r\n      if(id < wordsLength) {\r\n        const currentName = words[id].name;\r\n        const currentTranslation = words[id].translation;\r\n        const currentMeaning = words[id].meaning;\r\n        const currentImage = words[id].image;\r\n        const currentDate = words[id].date;\r\n        const currentCategory = words[id].category; \r\n        const currentWord =  result[id][Math.floor(Math.random() * result[id].length)]\r\n        const currentPicture = currentWord.image; \r\n          this.setState({\r\n            id,\r\n            words, \r\n            currentName, \r\n            currentImage, \r\n            currentTranslation, \r\n            currentMeaning,\r\n            currentDate,\r\n            currentCategory,\r\n            isTranslationVisible: false,\r\n            showNavButtons: true,\r\n            showContinueButton: false,\r\n            isImageVisible: false,\r\n            isLinkVisible: true,\r\n            isInputVisible: true,\r\n            search: '',\r\n            currentWord,\r\n            currentPicture,\r\n            disabled: false\r\n          })\r\n        }  \r\n\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false,\r\n          isImageVisible: false,\r\n          isLinkVisible: false,\r\n          isInputVisible: false,\r\n          search: ''\r\n      }) \r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var name = this.state.currentName;\r\n      speech.say(name);\r\n   }  \r\n\r\n   showImage = ()=>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      isLinkVisible: false\r\n    })\r\n   }\r\n\r\n\r\n   compareWord = (id) =>{\r\n    let compWord = this.state.result[this.state.id].find(x => x.id === id);\r\n    console.log(compWord);\r\n    console.log(id);\r\n    var positiveWords = this.state.positiveWords.slice();\r\n    var negativeWords = this.state.negativeWords.slice();    \r\n    const param = id.target.textContent;\r\n    const name = this.state.currentWord.translation;\r\n    const currentPicture = this.state.currentPicture;\r\n    let newObj = {}\r\n    newObj.id = this.state.id;\r\n    newObj.name = this.state.currentWord.name;\r\n    newObj.translation = this.state.currentWord.translation;\r\n    newObj.meaning = this.state.currentWord.meaning;\r\n    newObj.image = this.state.currentWord.image;\r\n    newObj.date = this.state.currentWord.date;\r\n    newObj.category = this.state.currentWord.category;\r\n    if(param === name){\r\n      positiveWords.push(newObj);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        currentPicture,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    }\r\n\r\n    else {\r\n      negativeWords.push(newObj);\r\n      this.setState({\r\n        isImageVisible: true,\r\n        flagState: true,\r\n        currentPicture,\r\n        positiveWords,\r\n        negativeWords,\r\n        disabled: true\r\n      })\r\n    } \r\n  } \r\n\r\n   dontKnow = () =>{\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true\r\n    })\r\n   }\r\n\r\n   setStateOnStart = () => {\r\n    this.setState({\r\n      words: [],\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      id: 0,\r\n      currentName: '',\r\n      currentTranslation: '',\r\n      currentMeaning: '',\r\n      currentImage: null,\r\n      currentDate : null,\r\n      currentCategory: '',\r\n      isCardVisible: false,\r\n      isButtonVisible: true,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      metaClass: 'blue',\r\n      nameClass: '',\r\n      randomValues: [],\r\n      currentWord: '',\r\n      currentButtonColor: '',\r\n      flagState: false,\r\n      result: [],\r\n      currentPicture: null,\r\n      newColor: 'green',\r\n      disabled: false        \r\n    }, () => {\r\n      this.initialLoad();\r\n    })\r\n  }\r\n\r\n      render() {\r\n        return (\r\n          <Fragment>\r\n          <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n           {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n              <Card>\r\n              <div className=\"training-wrapper-image\">\r\n                <Image src='training/englishtorussian.jpg' />\r\n              </div>  \r\n                <Card.Content>\r\n                  <Card.Header>Перевод</Card.Header>\r\n                  <Card.Description>\r\n                    <Button primary onClick={this.startTraining} >Начать тренировку</Button>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n           {this.state.isCardVisible ?\r\n           \t<Container className=\"list-container\">\r\n           \t\t<Card className=\"training-card\">\r\n    \t       \t\t<Label>\r\n                  {this.state.currentWord.name}\r\n                    <span className=\"training-card__icon\" onClick={this.voiceWord} title=\"Прослушать\">\r\n                      <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n                    </span>\r\n                </Label>\r\n    \t       \t\t<Container className=\"list-inner-wrapper\">\r\n    \t\t\t        <List className=\"training-list\">\r\n    \t\t\t        {this.state.result[this.state.id].map((word, index) =>\r\n    \t\t\t            <List.Item key={index} className=\"training-list-item\">\r\n    \t\t\t              <List.Content>\r\n    \t\t\t                <List.Header as='a'>\r\n                            <Button  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord.bind(this, word.id)} >{word.translation}</Button>\r\n                          </List.Header>\r\n    \t\t\t              </List.Content>\r\n    \t\t\t            </List.Item>\r\n    \t\t\t        )}\r\n                    <List.Item className=\"training-list-item\">\r\n                      <List.Content>\r\n                        <List.Header as='a'>\r\n                          <Button onClick={this.dontKnow} className=\"help\" >Не знаю</Button>\r\n                        </List.Header>\r\n                      </List.Content>\r\n                    </List.Item>              \r\n    \t\t\t        </List>\r\n                  {this.state.isImageVisible ?\r\n                    <div className=\"training-right-wrapper\">\r\n                      <div className=\"training-image-wrapper\">\r\n                        <Image src={this.state.currentPicture} className=\"training-image\">\r\n                        </Image>                \r\n                      </div>\r\n                    {this.state.flagState && this.state.isImageVisible ?\r\n                      <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n                    }                                     \r\n                    </div>: null               \r\n                   }\r\n    \t       \t\t</Container>\r\n           \t\t</Card>\r\n          \t</Container> :\r\n               null\r\n            }\r\n            {this.state.isFinalVisible ?\r\n             <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n                 <Card className=\"card-training\" >\r\n                    <Card.Content>\r\n                      <Card.Header>Результаты</Card.Header>\r\n                      <Divider/>\r\n                      <Card.Description className=\"audio-list-container\"> \r\n                      {  (this.state.negativeWords.length !== 0 ) ?\r\n                        <List className=\"audio-list\">\r\n                        {this.state.negativeWords.map((item, index) => \r\n                            <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n                          )}\r\n                       </List>: \r\n                       <Message>\r\n                          <Message.Header>Поздравляем!</Message.Header>\r\n                          <p>\r\n                            Все задания выполнены правильно\r\n                          </p>\r\n                       </Message> \r\n                      }\r\n                      </Card.Description>\r\n                      <Card.Description className=\"results-wrapper\">\r\n                        <div className=\"positive-results-wrapper\"> \r\n                          <div className=\"positive-results\">\r\n                            {this.state.positiveWords.length}\r\n                          </div>\r\n                          <Label>Верно</Label>                    \r\n                        </div>\r\n                        <div className=\"negative-results-wrapper\"> \r\n                          <div className=\"negative-results\">\r\n                            {this.state.words.length - this.state.positiveWords.length}\r\n                          </div> \r\n                          <Label>Неверно</Label>                   \r\n                        </div>\r\n                      </Card.Description>\r\n                      <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                        <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                      </Button.Group>\r\n                    </Card.Content>\r\n                  </Card>          \r\n            </Card.Group>                \r\n               : null\r\n            }\r\n            </div>\r\n            <footer></footer>\r\n        </Fragment>\r\n    \t);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {store: state.reducer}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnglishToRussian);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, Input, List, Container, Label, Message} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport classnames from 'classnames';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass RussianToEnglish extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n    this.btn = React.createRef();\r\n    this.state = {\r\n     \r\n   }\r\n }\r\n\r\n\r\n componentDidMount() {\r\n  this.setStateOnStart()\r\n}\r\n\r\n\r\nupdateComponent = () =>{\r\n  const id = this.state.id;\r\n  const words = this.state.words;\r\n  const currentName = words[id].name;\r\n  const currentTranslation = words[id].translation;\r\n  const currentMeaning = words[id].meaning;\r\n  const currentImage = words[id].image;\r\n  this.setState({ \r\n    words, \r\n    currentName, \r\n    currentImage, \r\n    currentTranslation, \r\n    currentMeaning \r\n  });\r\n}\r\n\r\nstartTraining = () =>{\r\n  this.setState({\r\n    isButtonVisible: false,\r\n    isCardVisible: true\r\n  })\r\n}\r\n\r\nupdateSearch = (event) =>{\r\n  this.setState({search: event.target.value.substr(0,20)});\r\n}  \r\n\r\ncontinueTraining = () =>{\r\n  let wordsLength = this.state.wholeList.length;\r\n  let newId = this.state.id;\r\n  newId = newId + 1;\r\n  const id = this.state.id;\r\n  const words = this.state.wholeList;\r\n  const result = this.state.result;\r\n  if(newId < wordsLength) {\r\n    const currentName = words[newId].name;\r\n    const currentTranslation = words[newId].translation;\r\n    const currentMeaning = words[newId].meaning;\r\n    const currentImage = words[newId].image;\r\n    const currentDate = words[newId].date;\r\n    const currentCategory = words[newId].category; \r\n    const currentResult = result[newId];\r\n    const currentWord =  result[newId][Math.floor(Math.random() * result[newId].length)]\r\n    const currentPicture = currentWord.image; \r\n    this.setState({\r\n      id: newId,\r\n      words, \r\n      currentName, \r\n      currentImage, \r\n      currentTranslation, \r\n      currentMeaning,\r\n      currentDate,\r\n      currentCategory,\r\n      isTranslationVisible: false,\r\n      showNavButtons: true,\r\n      showContinueButton: false,\r\n      isImageVisible: false,\r\n      isLinkVisible: true,\r\n      isInputVisible: true,\r\n      search: '',\r\n      currentWord,\r\n      currentPicture,\r\n      disabled: false\r\n\r\n    })\r\n  } \r\n  else this.setState({\r\n    isFinalVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: false,\r\n    showContinueButton: false, \r\n    isCardVisible: false,\r\n    isButtonVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: false,\r\n    isInputVisible: false,\r\n    search: ''   \r\n\r\n  }) \r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentName;\r\n  speech.say(newWords);\r\n}  \r\n\r\nshowImage = ()=>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    isLinkVisible: false\r\n  })\r\n}\r\n\r\n\r\ncompareWord = (e) =>{\r\n  var positiveWords = this.state.positiveWords.slice();\r\n  var negativeWords = this.state.negativeWords.slice();    \r\n  const param = e.target.textContent;\r\n  const word = this.state.currentWord;    \r\n  const name = this.state.currentWord.name;\r\n  const currentPicture = this.state.currentPicture;\r\n  let newObj = {}\r\n  newObj.id = this.state.id;\r\n  newObj.name = this.state.currentWord.name;\r\n  newObj.translation = this.state.currentWord.translation;\r\n  newObj.meaning = this.state.currentWord.meaning;\r\n  newObj.image = this.state.currentWord.image;\r\n  newObj.date = this.state.currentWord.date;\r\n  newObj.category = this.state.currentWord.category;\r\n\r\n  if(param === name){\r\n    positiveWords.push(newObj);\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true,\r\n      currentPicture,\r\n      positiveWords,\r\n      negativeWords,\r\n      disabled: true\r\n    })\r\n  }\r\n  else{\r\n    negativeWords.push(newObj);\r\n    this.setState({\r\n      isImageVisible: true,\r\n      flagState: true,\r\n      currentPicture,\r\n      positiveWords,\r\n      negativeWords,\r\n      disabled: true\r\n    })\r\n  } \r\n} \r\n\r\ndontKnow = () =>{\r\n  this.setState({\r\n    isImageVisible: true,\r\n    flagState: true\r\n  })\r\n}\r\n\r\nconsoleState = (e) =>{\r\n  console.log(this.state);\r\n}\r\n\r\nvoiceWord = () =>{\r\n  var newWords = this.state.currentWord.name;\r\n  speech.say(newWords);\r\n} \r\n\r\nsetStateOnStart = () => {\r\n  this.setState({\r\n    words: [],\r\n    negativeWords: [],\r\n    positiveWords: [],\r\n    id: 0,\r\n    currentName: '',\r\n    currentTranslation: '',\r\n    currentMeaning: '',\r\n    currentImage: null,\r\n    currentDate : null,\r\n    currentCategory: '',\r\n    isCardVisible: false,\r\n    isButtonVisible: true,\r\n    isTranslationVisible: false,\r\n    showNavButtons: true,\r\n    showContinueButton: false,\r\n    isFinalVisible: false,\r\n    isImageVisible: false,\r\n    isLinkVisible: true,\r\n    isInputVisible: true,\r\n    search: '',\r\n    metaClass: 'blue',\r\n    nameClass: '',\r\n    randomValues: [],\r\n    list: [],\r\n    wholeList: [],\r\n    currentWord: '',\r\n    currentButtonColor: '',\r\n    flagState: false,\r\n    result: [],\r\n    currentPicture: null,\r\n    newColor: 'green',\r\n    disabled: false    \r\n  }, () => this.initialLoad())\r\n}\r\n\r\ninitialLoad = () => {\r\n  var id = this.state.id;\r\n  axios.get('/words.json')\r\n  .then(res => {\r\n    const words = res.data;\r\n    const currentName = words[id].name;\r\n    const currentTranslation = words[id].translation;\r\n    const currentMeaning = words[id].meaning;\r\n    const currentImage = words[id].image;\r\n    const currentDate = words[id].date;\r\n    const currentCategory = words[id].category;\r\n    const list = [];\r\n    var wholeList = [];\r\n    for (var i = 0; i < words.length/5; i++) {\r\n      while(list.length < 5) {\r\n        var el = words[Math.floor(Math.random() * words.length)];\r\n        if(list.indexOf(el) === -1) list.push(el);\r\n      }\r\n      wholeList.push(list);\r\n    }\r\n\r\n    var result = [];\r\n\r\n    for (var i = 0; i < words.length/5; i++) {\r\n     result[i] = [];\r\n     for (var j = 0; j < 5; j++) {\r\n       var el = words[Math.floor(Math.random() * words.length)]\r\n       if (result[i].indexOf(el) === -1){\r\n        result[i][j] = el; \r\n      }  \r\n      else {\r\n        el = words[Math.floor(Math.random() * words.length)]\r\n        if(result[i].indexOf(el) === -1){\r\n          result[i][j] = el;\r\n        }\r\n        else {\r\n          el = words[Math.floor(Math.random() * words.length)]\r\n          if(result[i].indexOf(el) === -1){\r\n            result[i][j] = el;\r\n          }\r\n          else {\r\n            result[i][j] = words[Math.floor(Math.random() * words.length)];\r\n          }\r\n        }\r\n      }    \r\n    }\r\n  }\r\n\r\n  const currentWord = result[0][Math.floor(Math.random() * result[0].length)];\r\n  const currentPicture = currentWord.image;          \r\n  this.setState({ \r\n    words, \r\n    currentName, \r\n    currentImage, \r\n    currentTranslation, \r\n    currentMeaning,\r\n    currentDate,\r\n    currentCategory,\r\n    list,\r\n    currentWord,\r\n    wholeList: wholeList.slice(0, 10),\r\n    result: result.slice(0, 10),\r\n    currentPicture });\r\n  })\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n          {this.state.isButtonVisible ?\r\n            <Card.Group className=\"card-header-wrapper\">\r\n            <Card>\r\n            <div className=\"training-wrapper-image\">\r\n            <Image src='training/russiantoenglish.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n            <Card.Header>Перевод</Card.Header>\r\n            <Card.Description>\r\n            <Button primary onClick={this.startTraining}>Начать тренировку</Button>\r\n            </Card.Description>\r\n            </Card.Content>\r\n            </Card>          \r\n            </Card.Group>:\r\n            null\r\n          }\r\n          {this.state.isCardVisible ?\r\n            <Container className=\"list-container\">\r\n            <Card className=\"training-card\">\r\n            <Label>\r\n            {this.state.currentWord.translation}\r\n            <span onClick={this.voiceWord} className=\"training-card__icon\">\r\n            <Icon className=\"pointer-icon\"  name = 'right sound'/> \r\n            </span>\r\n            </Label>\r\n            <Container className=\"list-inner-wrapper\">\r\n            <List className=\"training-list\">\r\n            {this.state.result[this.state.id].map((word, index) =>\r\n             <List.Item key={index} className=\"training-list-item\">\r\n             <List.Content>\r\n             <List.Header as='a'>\r\n             <Button  ref={btn => { this.btn = btn; }}  className={this.state.currentButtonColor} onClick={this.compareWord} >{word.name}</Button>\r\n             </List.Header>\r\n             </List.Content>\r\n             </List.Item>\r\n             )}\r\n            <List.Item className=\"training-list-item \">\r\n            <List.Content>\r\n            <List.Header as='a'>\r\n            <Button className=\"dont-know\" onClick={this.dontKnow} >Не знаю</Button>\r\n            </List.Header>\r\n            </List.Content>\r\n            </List.Item>              \r\n            </List>\r\n            {this.state.isImageVisible ?\r\n              <div className=\"training-right-wrapper\">\r\n              <div className=\"training-image-wrapper\">\r\n              <Image src={this.state.currentPicture} className=\"training-image\">\r\n              </Image>                \r\n              </div>\r\n              {this.state.flagState ?\r\n                <Button onClick={this.continueTraining} primary>Продолжить тренировку</Button>:null\r\n\r\n              }                                     \r\n              </div>: null               \r\n            }\r\n            </Container>\r\n            </Card>\r\n            </Container> :\r\n            null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n           <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n           <Card className=\"card-training\" >\r\n           <Card.Content>\r\n           <Card.Header>Результаты</Card.Header>\r\n           <Divider/>\r\n           <Card.Description className=\"audio-list-container\"> \r\n           {  (this.state.negativeWords.length !== 0 ) ?\r\n            <List className=\"audio-list\">\r\n            {this.state.negativeWords.map((item, index) => \r\n              <List.Item key={index} ><span>{item.name}</span>  -  {item.translation}</List.Item>  \r\n              )}\r\n            </List>: \r\n            <Message>\r\n            <Message.Header>Поздравляем!</Message.Header>\r\n            <p>\r\n            Все задания выполнены правильно\r\n            </p>\r\n            </Message> \r\n          }\r\n        </Card.Description>\r\n    <Card.Description className=\"results-wrapper\">\r\n    <div className=\"positive-results-wrapper\"> \r\n    <div className=\"positive-results\">\r\n    {this.state.positiveWords.length}\r\n    </div>\r\n    <Label>Верно</Label>                    \r\n    </div>\r\n    <div className=\"negative-results-wrapper\"> \r\n    <div className=\"negative-results\">\r\n    {this.state.words.length - this.state.positiveWords.length}\r\n    </div> \r\n    <Label>Неверно</Label>                   \r\n    </div>\r\n    </Card.Description>\r\n    <Button.Group className=\"card-buttons-wrapper\">\r\n    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n    </Button.Group>\r\n    </Card.Content>\r\n    </Card>          \r\n    </Card.Group>          \r\n    : null\r\n  }\r\n  </div>\r\n  <footer></footer>\r\n  </Fragment>\r\n  );\r\n}\r\n}\r\n\r\nexport default RussianToEnglish;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from './TopMenu';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button,Card,Image} from 'semantic-ui-react';\r\n\r\nclass Videos extends Component {\r\n  \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      videos: [],\r\n      id: 0,\r\n      name: '',\r\n      description: '',\r\n      channelId: null,\r\n      image: '',\r\n      link: '',\r\n      visible: 4\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n      axios.get('/videos.json')\r\n        .then(res => {\r\n          const videos = res.data;\r\n          const currentName = videos[id].name;\r\n          const currentDescription = videos[id].description;\r\n          const currentChannelId = videos[id].channelId;\r\n          const currentImage = videos[id].image;\r\n          const currentLink = videos[id].link;\r\n           this.setState({ \r\n            videos: videos, \r\n            name: currentName, \r\n            description: currentDescription, \r\n            channelId: currentChannelId, \r\n            image: currentImage,\r\n            link: currentLink });\r\n        })\r\n    }\r\n\r\n    cons = () =>{\r\n      console.log(this.state);\r\n    }\r\n\r\n  loadMore = () => {\r\n      this.setState((prev) => {\r\n        return {visible: prev.visible + 4};\r\n      });\r\n    }    \r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n        <TopMenu/>\r\n        <Button onClick={this.cons} >console</Button>\r\n        <Card.Group itemsPerRow={4} className=\"videos-container\">\r\n          {this.state.videos.slice(0,this.state.visible).map((video,index) =>\r\n            <Card key={index}>\r\n              <Image src={video.image} />\r\n              <Card.Content className=\"video-wrapper\">\r\n                <Card.Header>{video.name}</Card.Header>\r\n                <Card.Description>{video.description}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra className=\"video-extra\">\r\n                 <Link to={video.link}>{video.name}</Link>\r\n              </Card.Content>\r\n            </Card> \r\n          )}                                                                           \r\n        </Card.Group>\r\n           <div className=\"load-more-button\">\r\n            {this.state.visible < this.state.videos.length &&\r\n                    <Button onClick={this.loadMore} primary>Загрузить</Button>\r\n                  }                 \r\n          </div>\r\n          </div>\r\n          <footer></footer>\r\n       </Fragment>\r\n  );\r\n  } \r\n\r\n\r\n}\r\n\r\nexport default Videos;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Fragments extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        texts: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setStateOnStart();\r\n    }\r\n\r\n    setStateOnStart = () => {\r\n      this.setState({\r\n        texts: [],\r\n        options: [],\r\n        categoryValue: '',\r\n        value: null,\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isCheckButtonVisible: false,\r\n        isResultVisible: false,\r\n        title: '',\r\n        content: '',\r\n        image: null,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        rightAnswers: 0,\r\n        //livesCount: 3,\r\n        livesArray: []        \r\n      }, () => this.initialLoad())\r\n    }\r\n\r\n    initialLoad = () => {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content) )\r\n          this.setState({ \r\n            texts,\r\n            contentArray\r\n          }, () => this.setMenuParams());\r\n        })\r\n    }\r\n\r\n    setMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectValue = () => {\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectValue() )         \r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.buildLives();\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      }, () => this.builtArray())\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n    \t\tcontentArray: [],\r\n    \t\tcurrentTempArray: [],\r\n    \t\tcurrentStringArray: [],\r\n    \t\tcurrentRandomWord: '',\r\n    \t\tcurrentFinalArray: [],\r\n    \t\tcurrentRandomArray: [],\r\n    \t\tcurrentOneArray: [],\r\n    \t\tactiveInput: 0,\r\n    \t\tactiveArray: [],\r\n    \t\tsortedRandomArray: [],\r\n    \t\tcomparativeRandomArray: [],\r\n    \t\tfragmentArrayIndexes: []        \r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n    builtArray = () => {\r\n      let currentOneArray = [];\r\n\t    let activeTargetContent = this.state.content.slice();\r\n      let currentStringArray = activeTargetContent.split(\". \");\r\n      currentStringArray.pop();\r\n      let currentFullArray = [];\r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n      \tcurrentFullArray.push(currentStringArray[i].split(\" \"));\r\n      }\r\n      let currentWordArray = currentStringArray[0].split(\" \");\r\n      let currentRandomArray = [];\r\n      let currentRandomIndexes = [];\r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet j = Math.floor(Math.random()*currentFullArray[i].length);\r\n      \tcurrentRandomArray.push(currentFullArray[i][j]);\r\n      \tcurrentRandomIndexes.push(j);\r\n      }\r\n      let random = currentWordArray[Math.floor(Math.random()*currentWordArray.length)];\r\n      let currentFinalArray = [];\r\n    \r\n      for (var i = 0; i < currentFullArray.length; i++) {\r\n      \tlet curArr = currentFullArray[i];\r\n\t      \tfor (var j = 0; j < curArr.length; j++) {\r\n            \tcurrentOneArray.push(curArr[j]);\r\n\t\t      \tif (j !== currentRandomIndexes[i] ) {\r\n\t\t      \t\tcurrentFinalArray.push(<span className=\"fragment-span\">{curArr[j]}</span>)\r\n\t\t      \t}\r\n\t\t      \telse {\r\n\t\t      \t\tcurrentFinalArray.push(<span onClick={this.resetValue} className=\"fragment-input\"></span>)\r\n\t\t      \t}\r\n\t      \t}\r\n\t      \tcurrentFinalArray.push(<span className=\"fragment-dot\">.</span>);\r\n      }\r\n\r\n      this.setState({\r\n      \tcurrentStringArray,\r\n        currentWordArray,\r\n        currentRandomWord: random,\r\n        currentFinalArray,\r\n        currentRandomIndexes,\r\n        currentRandomArray,\r\n        currentFullArray,\r\n        currentOneArray\r\n      }, () => this.shuffleArray())     \r\n    }\r\n\r\n   setValue = (e) => {\r\n      let activeInput = this.state.activeInput;\r\n      let activeArray = [];\r\n      let currentFullArray = this.state.currentFullArray.slice();\r\n      let currentFinalArray = this.state.currentFinalArray.slice();\r\n      let currentRandomArray = this.state.currentRandomArray.slice();\r\n      let currentRandomIndexes = this.state.currentRandomIndexes.slice();\r\n      let activeTargetTitle = e.target.textContent;\r\n      let fragmentArray = [];\r\n      let fragmentArrayIndexes = [];\r\n      let fragmentDescription = document.getElementsByClassName('fragment-description')[0].children;\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif(fragmentDescription[i].className == \"fragment-input\"){\r\n      \t\tfragmentArrayIndexes.push(i);\r\n      \t\tfragmentArray.push(fragmentDescription[i]);\r\n      \t}\r\n      }\r\n      for (var i = 0; i < fragmentArrayIndexes.length; i++) {\r\n      \tactiveArray.push(i);\r\n      }\r\n      for (var i = 0; i < fragmentDescription.length; i++) {\r\n      \tif( (fragmentDescription[i].className == \"fragment-input\") && (i == fragmentArrayIndexes[activeInput])){\r\n      \t\tfragmentDescription[i].textContent = activeTargetTitle;\r\n      \t}\r\n      }\r\n\t\t  fragmentArrayIndexes.splice(activeInput, 1);\r\n      let comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n      let sortedRandomArray = this.state.sortedRandomArray.slice();\r\n      let target = e.target;\r\n      comparativeRandomArray.push(target.textContent);\r\n      var indexTarget = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          indexTarget++\r\n      }\r\n\r\n      sortedRandomArray.splice(indexTarget, 1);\r\n      if (sortedRandomArray.length === 0) {\r\n      \tthis.setState({\r\n      \t\tisCheckButtonVisible: true\r\n      \t})\r\n      }\r\n\r\n      activeInput++;\r\n      this.setState({\r\n  \t\t\tactiveInput,\r\n  \t\t\tactiveArray,\r\n  \t\t\tfragmentArrayIndexes,\r\n  \t\t\tcurrentRandomArray,\r\n  \t\t\tcomparativeRandomArray,\r\n  \t\t\tsortedRandomArray\r\n\t\t})\r\n    \r\n  }\r\n\r\n\tshuffleArray = () => {\r\n\t\tlet array = this.state.currentRandomArray.slice();\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t    this.setState({\r\n        \tsortedRandomArray: array\t    \t\r\n\t    })\r\n\t}\r\n\r\n    resetValue = (e) =>{\r\n\t    let sortedRandomArray = this.state.sortedRandomArray.slice(); \r\n      let element = e.target;\r\n      if (e.target.textContent !== \"\") {\r\n      \t  sortedRandomArray.push(e.target.textContent);\r\n      \t  element.innerText = \"\";\r\n  \t      this.setState({\r\n  \t      \tsortedRandomArray: sortedRandomArray\r\n  \t      })\r\n\t        var indexTarget = 0;\r\n\t        while ( (element = element.previousElementSibling) ) {\r\n\t          indexTarget++\r\n\t        }\r\n      }\r\n    }\r\n\r\n    submitText = (e) =>{\r\n    \tlet comparativeRandomArray = this.state.comparativeRandomArray.slice();\r\n    \tlet currentSortedArray = this.state.currentRandomArray.slice();\r\n    \tlet sortedRandomArray = this.state.sortedRandomArray.slice();\r\n    \tlet count = 0;\r\n    \tfor (var i = 0; i < currentSortedArray.length; i++) {\r\n    \t\tif (currentSortedArray[i] === comparativeRandomArray[i]) {\r\n    \t\t\tcount++;\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\tsortedRandomArray.push(comparativeRandomArray[i])\r\n    \t\t}\r\n    \t\t\r\n    \t}\r\n    \tlet rightAnswers = count;\r\n    \tthis.setState({\r\n    \t\tisCheckButtonVisible: false,\r\n    \t\tisResultVisible: true,\r\n    \t\tisSingleTextVisible: false,\r\n    \t\trightAnswers,\r\n    \t\tsortedRandomArray\r\n    \t})\r\n    }\r\n\r\n    tryAgain = () =>{\r\n    \tlet lives = this.state.livesCount;\r\n    \tlives = lives - 1;\r\n    \tthis.setState({\r\n    \t\tisResultVisible: false,\r\n    \t\tisSingleTextVisible: true,\r\n    \t\tlivesCount: lives\r\n    \t}, () => this.buildLives() )\r\n    }\r\n\r\n    buildLives = () =>{\r\n    \tlet livesCount = this.state.livesCount;\r\n    \tlet lives = [];\r\n    \tfor (var i = 0; i < livesCount; i++) {\r\n    \t\tlives.push(<Icon name='like' size='big' />)\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tlivesArray: lives\r\n    \t})\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible && this.state.texts.length ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n            {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                \t<div className=\"fragments-close\">\r\n                \t\t<span onClick={this.backToTexts}>\r\n                \t\t\t<Icon name='close' size='big' />\r\n                \t\t</span>\r\n                \t</div>\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t{this.state.currentFinalArray}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n             \t<div className=\"fragment-variants\">\r\n            \t\t{this.state.sortedRandomArray.map((item, index) =>\r\n            \t\t\t<span onClick={this.setValue} key={index} className=\"fragment-span\">{item}</span>\r\n            \t\t)}\r\n\t            \t{this.state.isCheckButtonVisible ? \r\n\t            \t\t<Button onClick={this.submitText} >Проверить</Button> :null\r\n\t            \t}             \t\t\r\n            \t</div>\r\n                </Card>:null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                    \t<h2>Вы расставили правильно {this.state.rightAnswers} из {this.state.currentRandomArray.length} слов </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                  \t<Button primary onClick={this.setStateOnStart}>Заново</Button>\r\n                    <Button primary ><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default Fragments;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Pronunciation extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\ttexts: [],\r\n\t\tnegativeSentences: [],\r\n\t\tpositiveSentences: [],\r\n\t\tid: 0,\r\n\t\tcurrentText: '',\r\n\t\tcurrentTextContent: '',\r\n\t\tcurrentSentence: '',\r\n\t\tisCardVisible: false,\r\n\t\tisButtonVisible: true,\r\n\t\tisTranslationVisible: false,\r\n\t\tshowNavButtons: true,\r\n\t\tshowContinueButton: false,\r\n\t\tisFinalVisible: false,\r\n\t\tshowSubmitButtons: true,\r\n\t\toptions: {\r\n\t\tautostart: false\r\n\t\t},\r\n\t\ttranscript: '',\r\n\t\tresetTranscript: null,\r\n\t\tbrowserSupportsSpeechRecognition: null,\r\n\t\trecognition: null,\r\n\t\tstartListening: null,\r\n\t\tstopListening: null ,\r\n\t\tsplittedText: [],\r\n\t\tisDeleteVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n      var id = this.state.id;\r\n      axios.all([\r\n          axios.get('/texts.json')\r\n        ])\r\n        .then(axios.spread((textsRes) => {\r\n          const texts = textsRes.data;\r\n          const currentText = texts[id].content;\r\n          let splittedText = currentText.split(\". \").slice(0,3);\r\n          let currentSentence = splittedText[id] + '.'; \r\n          let currentSentenceContent = splittedText[id].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();           \r\n          this.setState({\r\n            texts,\r\n            currentSentence,\r\n            splittedText,\r\n            currentText,\r\n            transcript: this.props.transcript,\r\n            resetTranscript: this.props.resetTranscript,\r\n            browserSupportsSpeechRecognition: this.props.browserSupportsSpeechRecognition,\r\n            recognition: this.props.recognition,\r\n            startListening: this.props.startListening,\r\n            stopListening: this.props.stopListening \r\n          }, () => this.state.stopListening() );          \r\n        }));      \r\n    }\r\n\r\n  setStateOnStart = () => {\r\n\r\n  }\r\n\r\n  initialLoad = () => {\r\n\r\n  }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      }, () => this.state.startListening())\r\n    }\r\n\r\n    submitResponse = () =>{\r\n      var objectTranscription = document.getElementById('transcription').textContent;\r\n      var positiveSentences = this.state.positiveSentences;\r\n      var negativeSentences = this.state.negativeSentences;\r\n      let currentSentence = this.state.currentSentence;\r\n      let currentSentenceContent = this.state.currentSentenceContent;\r\n   \r\n      if(currentSentenceContent === objectTranscription){\r\n        alert('true')\r\n        positiveSentences.push(currentSentence);     \r\n      }\r\n\r\n      else {\r\n        alert('false')\r\n        negativeSentences.push(currentSentence);\r\n      }\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        positiveSentences,\r\n        negativeSentences\r\n\r\n      }, () => this.continueTraining() )        \r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let length = this.state.splittedText.length;\r\n      let splittedText = this.state.splittedText;\r\n      let newId = this.state.id;\r\n      newId = newId + 1;\r\n      const texts = this.state.texts;\r\n      if(newId < length){\r\n      \tlet currentSentence = splittedText[newId] + '.';\r\n      \tlet currentSentenceContent = splittedText[newId].replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase();\r\n \r\n        this.setState({\r\n          id: newId,\r\n          currentSentence,\r\n          currentSentenceContent,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else {\r\n        this.state.stopListening();\r\n        this.setState({\r\n            isFinalVisible: true,\r\n            isTranslationVisible: false,\r\n            showNavButtons: false,\r\n            showContinueButton: false, \r\n            isCardVisible: false,\r\n            isButtonVisible: false\r\n        })\r\n      }  \r\n    }\r\n\r\n    callSubmit = () =>{\r\n      this.state.resetTranscript();\r\n      this.continueTraining();\r\n    }\r\n\r\n    clearTranscription = () =>{\r\n    \tlet transcript = this.props.transcript;\r\n    \tlet newTranscript =\ttranscript.substring(0,transcript.length - 1);\r\n    \tthis.props.transcript = newTranscript;\r\n    }\r\n\r\n  render() {\r\n\r\n    const {transcript} = this.props;\r\n\r\n    if (!this.state.browserSupportsSpeechRecognition) {\r\n      return null\r\n    }\r\n    this.state.recognition.lang = 'en-US';\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/microphone.jpg' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Произношение</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.startTraining} >Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training pronunciation-card\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"pronunciation-header\">\r\n                  Произнесите предложение в микрофон\r\n                </Card.Header>\r\n                <Card.Header className=\"pronunciation-text\">{this.state.currentSentence}\r\n                </Card.Header>                \r\n                <Card.Description id=\"transcription\" className=\"pronunciation-transcription\">\r\n                <span className=\"transcription-text\">\r\n                  {transcript} </span>\r\n                  {this.props.transcript.length ?\r\n                  <div className=\"pronunciation-clear-wrapper\" onClick = {this.clearTranscription}>\r\n\t                  <span className=\"triangle\"> </span>\r\n\t                  <span className=\"pronunciation-clear\">\r\n\t                  \t<Icon name = 'delete'/>\r\n\t                  </span>                  \t\r\n                  </div> : null\r\n              }\r\n                </Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.submitResponse} primary>Проверить</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.callSubmit} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training pronunciation-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeSentences.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    <h4>Верно</h4>\r\n                    {this.state.positiveSentences.map((item, index) => \r\n                        <List.Item  className=\"audio-list-item\" key={index} >{item}</List.Item>  \r\n                      )}\r\n                      <h4>Неверно</h4>                    \r\n                    {this.state.negativeSentences.map((item, index) => \r\n                        <List.Item  className=\"audio-list-item\" key={index} >{item}</List.Item>  \r\n                      )}\r\n                   </List> : \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveSentences.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.negativeSentences.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary>Продолжить</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default SpeechRecognition({autostart: false})(Pronunciation);","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\n\r\nclass RecreateText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '3',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      categoryValue: ''\r\n\t\t}\r\n\t}\r\n\r\n  initialLoad = () => {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        }, () => this.makeTextsVisible());\r\n      })\r\n  }\r\n\r\n  setStateOnStart = () => {\r\n    this.setState({\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: false,\r\n      isMenuVisible: false,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   // responsible for the seconds \r\n      minutes: '5',  // responsible for the minutes\r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0\r\n    }, () => this.initialLoad())\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();   \r\n  }   \r\n\r\n\r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      })      \r\n    }\r\n\r\n\r\n    makeTextsVisible = () =>{\r\n      this.setState({\r\n        areTextsVisible: true        \r\n      }, () => this.createMenuItems());\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        contentArray: [],\r\n        currentTempArray: [],\r\n        currentStringArray: [],\r\n        currentRandomWord: '',\r\n        currentFinalArray: [],\r\n        currentRandomArray: [],\r\n        currentOneArray: [],\r\n        activeInput: 0,\r\n        activeArray: [],\r\n        sortedRandomArray: [],\r\n        comparativeRandomArray: [],\r\n        fragmentArrayIndexes: [],\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '5',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0\r\n      })\r\n    }\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        spllittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var min = Math.floor(this.state.secondsRemaining / 60);\r\n        var sec = this.state.secondsRemaining - (min * 60);\r\n        this.setState({\r\n          minutes: min,\r\n          seconds: sec\r\n        })\r\n        if (sec < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (min < 10) {\r\n          this.setState({\r\n            value: \"0\" + min,\r\n           })\r\n        }\r\n        if (min === 0 & sec === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutes = Math.floor(time / 60);\r\n          let seconds = this.state.totalSecondsSpent - (minutes * 60);\r\n          clearInterval(this.state.intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent: minutes,\r\n            secondsSpent: seconds\r\n          })\r\n\r\n        }\r\n        this.state.secondsRemaining--;\r\n        this.state.totalSecondsSpent++;\r\n\r\n   \r\n    }\r\n    startCountDown = () => {\r\n        this.state.intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.state.secondsRemaining = time * 60;\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.spllittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.spllittedSentences[index];\r\n\r\n    // if the item is dragged over itself, ignore\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n\r\n    // filter out the currently dragged item\r\n    let items = this.state.spllittedSentences.filter(item => item !== this.draggedItem);\r\n\r\n    // add the dragged item after the dragged over item\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ spllittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.spllittedSentences;\r\n    let currentProgress;\r\n    console.log(splittedSentences);\r\n    console.log(reservedSentences);\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n      }\r\n    }\r\n    if(wrongCount==0){\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes: wrongIndexes\r\n    }, () => console.log(this.state))\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =()=>{\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let time = this.state.totalSecondsSpent;\r\n      console.log(time);\r\n      let minutes = Math.floor(time / 60);\r\n      console.log(minutes);\r\n      let seconds = this.state.totalSecondsSpent - (minutes * 60);\r\n\r\n      clearInterval(this.state.intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent: minutes,\r\n        secondsSpent: seconds        \r\n      })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '3',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0        \r\n      }) \r\n  }\r\n\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    menuChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n                    <Dropdown \r\n                      placeholder='Выберите уровень'\r\n                      fluid\r\n                      value={this.state.value} \r\n                      key={this.state.options.id}\r\n                      clearable\r\n                      search\r\n                      selection\r\n                      onChange = {this.menuChange}\r\n                      options={this.state.options} \r\n                    />\r\n                  </Menu.Item>\r\n                </Menu> : null\r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.splitText}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.spllittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <h2>Время вышло</h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label, Menu, Dropdown} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\nimport Speech from 'speak-tts'\r\nimport SpeechRecognition from 'react-speech-recognition'\r\nimport { Howl } from \"howler\";\r\n\r\nclass RecreateAudioText extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t      texts: [],\r\n\t      contentArray: [],\r\n\t      areTextsVisible: false,\r\n\t      isMenuVisible: false,\r\n\t      isSingleTextVisible: false,\r\n        options: [],\r\n        categoryValue: '',\r\n\t      isResultVisible: false,\r\n\t      isResultWrong: false,\r\n        title: '',\r\n\t      content: '',\r\n\t      image: null,\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('./audiotexts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        this.setState({ \r\n          texts,\r\n          areTextsVisible: true\r\n         \r\n        }, () => this.createMenuItems());\r\n      })        \r\n  }   \r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        isMenuVisible: true\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )\r\n\r\n    createTrack = (id) => {\r\n      console.log(id);\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) => {\r\n          let currentTrack = new Howl({\r\n            src: \"tracks/\" + res.data.slice(id - 1, id),\r\n            html5: true,\r\n            volume: 0.5 / 10\r\n          });\r\n          this.setState({\r\n            currentTrack,\r\n            audio: res.data\r\n          }) \r\n        });    \r\n    }\r\n\r\n    readMore = (id) =>{\r\n\r\n      let texts = this.state.texts.slice();\r\n      let title = texts[id - 1].title;\r\n      let content = texts[id - 1].content;\r\n      let image = texts[id - 1].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title,\r\n        content,\r\n        image\r\n      }, () => this.createTrack(id))       \r\n    }\r\n\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n        isResultWrong: false,\r\n        categoryValue: '',\r\n        currentTrack: null,\r\n        playing: false,\r\n        seconds: '00',   // responsible for the seconds \r\n        minutes: '0.1',  // responsible for the minutes\r\n        secondsRemaining: 0,\r\n        intervalHandle: 0,\r\n        wrongIndexes: [],\r\n        totalSecondsSpent: 0,\r\n        secondsSpent: 0,\r\n        minutesSpent: 0,\r\n        rightAnswers: 0,\r\n        value: null        \r\n      })\r\n    }\r\n\r\n\r\n\r\n  showFinal = () =>{\r\n    this.setState({\r\n      isResultVisible: true  \r\n    })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,    \r\n      }) \r\n  }\r\n\r\n  playText = () => {\r\n    let playing = !this.state.playing;\r\n    let currentTrack = this.state.currentTrack;\r\n    if (playing) {\r\n      currentTrack.play();\r\n    } else {\r\n      currentTrack.pause();\r\n    }\r\n    this.setState({\r\n      playing,\r\n      currentTrack\r\n    })\r\n  }\r\n\r\n\r\n    splitText = () =>{\r\n      let wrongIndexes = [];\r\n      let content = this.state.content;\r\n      let currentStringArray = content.split(\". \");\r\n      currentStringArray.pop();\r\n      let reservedSentences = content.split(\". \");\r\n      reservedSentences.pop();   \r\n      for (var i = 0; i < currentStringArray.length; i++) {\r\n           wrongIndexes.push(\"recreate-text-right\");\r\n      }   \r\n      for (let i = currentStringArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [currentStringArray[i], currentStringArray[j]] = [currentStringArray[j], currentStringArray[i]];\r\n      }             \r\n      console.log(currentStringArray);\r\n      this.setState({\r\n        isSingleTextVisible: false,\r\n        splittedSentenceVisible: true,\r\n        splittedSentences: currentStringArray,\r\n        reservedSentences,\r\n        wrongIndexes\r\n\r\n      }, () => this.startCountDown())\r\n    }  \r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n    tick = () => {\r\n        var min = Math.floor(this.state.secondsRemaining / 60);\r\n        var sec = this.state.secondsRemaining - (min * 60);\r\n        this.setState({\r\n          minutes: min,\r\n          seconds: sec\r\n        })\r\n        if (sec < 10) {\r\n          this.setState({\r\n            seconds: \"0\" + this.state.seconds,\r\n          })\r\n        }\r\n        if (min < 10) {\r\n          this.setState({\r\n            value: \"0\" + min,\r\n           })\r\n        }\r\n        if (min === 0 & sec === 0) {\r\n          let time = this.state.totalSecondsSpent;\r\n          let minutes = Math.floor(time / 60);\r\n          let seconds = this.state.totalSecondsSpent - (minutes * 60);\r\n          let intervalHandle = this.state.intervalHandle;\r\n          clearInterval(intervalHandle);\r\n          this.timeIsOut();\r\n          this.setState({\r\n            minutesSpent: minutes,\r\n            secondsSpent: seconds,\r\n            intervalHandle\r\n          })\r\n\r\n        }\r\n        this.setState({\r\n          secondsRemaining: this.state.secondsRemaining - 1,\r\n          totalSecondsSpent: this.state.totalSecondsSpent + 1\r\n        })\r\n \r\n    }\r\n    startCountDown = () => {\r\n        let intervalHandle = setInterval(this.tick, 1000);\r\n        let time = this.state.minutes;\r\n        this.setState({\r\n          intervalHandle,\r\n          secondsRemaining: time * 60\r\n        })\r\n    }\r\n\r\n  onDragStart = (e, index) => {\r\n    this.draggedItem = this.state.splittedSentences[index];\r\n    e.dataTransfer.effectAllowed = \"move\";\r\n    e.dataTransfer.setData(\"text/html\", e.target);\r\n    e.dataTransfer.setDragImage(e.target, 20, 20);\r\n  };\r\n\r\n  onDragOver = index => {\r\n    const draggedOverItem = this.state.splittedSentences[index];\r\n    if (this.draggedItem === draggedOverItem) {\r\n      return;\r\n    }\r\n    let items = this.state.splittedSentences.filter(item => item !== this.draggedItem);\r\n    items.splice(index, 0, this.draggedItem);\r\n\r\n    this.setState({ splittedSentences: items });\r\n  };\r\n\r\n  onDragEnd = () => {\r\n    this.draggedIdx = null;\r\n  };\r\n\r\n  checkSentences = () =>{\r\n    let reservedSentences = this.state.reservedSentences;\r\n    let splittedSentences = this.state.splittedSentences;\r\n    let currentProgress;\r\n    let wrongIndexes = this.state.wrongIndexes.slice();\r\n    let rightAnswers = 0;\r\n    let wrongCount = 0;\r\n    for (var i = 0; i < splittedSentences.length; i++) {\r\n      if (splittedSentences[i] !== reservedSentences[i]) {\r\n        wrongIndexes[i] = \"recreate-text-wrong\";\r\n        wrongCount++;\r\n      }\r\n      else{\r\n        wrongIndexes[i] = \"recreate-text-right\"\r\n        rightAnswers++;\r\n      }\r\n    }\r\n    if (wrongCount == 0) {\r\n      this.showFinal();\r\n    }\r\n\r\n    this.setState({\r\n      wrongIndexes,\r\n      rightAnswers\r\n    })\r\n\r\n  }\r\n\r\n\r\n  timeIsOut =() => {\r\n    this.checkSentences();\r\n    this.setState({\r\n      isResultWrong: true,\r\n      splittedSentenceVisible: false\r\n    })\r\n  }\r\n\r\n  showFinal = () =>{\r\n      let intervalHandle = this.state.intervalHandle;\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutes = Math.floor(time / 60);\r\n      let seconds = this.state.totalSecondsSpent - (minutes * 60);\r\n\r\n      clearInterval(intervalHandle);\r\n      this.setState({\r\n        isResultVisible: true,\r\n        splittedSentenceVisible: false,\r\n        minutesSpent: minutes,\r\n        secondsSpent: seconds,\r\n        intervalHandle        \r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n          {this.state.isMenuVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }         \r\n              {(this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) && \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore.bind(this, item.id)} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text display-none\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    {this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"pause\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    {!this.state.playing ?\r\n                      <div className=\"recreate-text-icon\" onClick={this.playText}>\r\n                        <Icon size=\"large\" name=\"play\"></Icon>\r\n                      </div>: null\r\n                    }\r\n                    <div className=\"buttons-wrapper\">\r\n\t                    <Button primary onClick={this.splitText}>Я прослушал</Button>\r\n           \t\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.splittedSentenceVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <h1 className=\"timer\">{this.state.minutes}:{this.state.seconds}</h1>\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      {this.state.splittedSentences.map((item, idx) =>\r\n                          <p className={'recreate-text-sentence drag ' + this.state.wrongIndexes[idx]} \r\n                              draggable \r\n                              key = {idx}\r\n                              onDragOver={() => this.onDragOver(idx)}\r\n                              onDragStart={e => this.onDragStart(e, idx)}\r\n                              onDragEnd={this.onDragEnd} >{item + '.'}\r\n\r\n                          </p>\r\n                      )}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.checkSentences}>Проверить</Button>\r\n                  </Card.Content>\r\n                </Card> : null\r\n              } \r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text-final\">\r\n                      <h1>Поздравляем ! Задание выполнено</h1>\r\n                      <h2>Потрачено {this.state.minutesSpent} минут {this.state.secondsSpent} секунд </h2>\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }\r\n              {this.state.isResultWrong ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                   \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description\">\r\n                      <div>\r\n                        <h2>Время вышло</h2>\r\n                        <h2>Правильно расставлено {this.state.rightAnswers} из {this.state.splittedSentences.length} предложений</h2> \r\n                      </div>                      \r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants recreate-text-buttons\">\r\n                    <Button primary onClick={this.backToTexts}>Назад к текстам</Button>\r\n                  </div> \r\n                </Card> : null\r\n              }         \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default RecreateAudioText;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Icon, Menu, Input} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass InsertSpaces extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      texts: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      inputContent: '',\r\n      textContent: '',\r\n      newContent: '',\r\n      image: null,\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount() {\r\n    axios.get('/texts.json')\r\n      .then(res => {\r\n        let texts = res.data;\r\n        let contentArray = [];\r\n        texts.map((item, index) => contentArray.push(item.content) )\r\n        this.setState({ \r\n          texts,\r\n          contentArray\r\n        });\r\n      })        \r\n  }   \r\n\r\n\r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let inputContent = texts[index].content;\r\n      inputContent = inputContent.replace(/\\s/g, '');\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage,\r\n        inputContent\r\n      })      \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n     this.setState({\r\n       minutes: event.target.value\r\n     })\r\n    }  \r\n\r\n  showFinal = () =>{\r\n      let intervalHandle = this.state.intervalHandle;\r\n      let time = this.state.totalSecondsSpent;\r\n      let minutes = Math.floor(time / 60);\r\n      let seconds = this.state.totalSecondsSpent - (minutes * 60);\r\n      clearInterval(intervalHandle);\r\n      this.setState({\r\n        intervalHandle,\r\n        isResultVisible: true,\r\n        isTaskStarted: false,\r\n        minutesSpent: minutes,\r\n        secondsSpent: seconds        \r\n      })\r\n  }\r\n\r\n  tryAgain = () =>{\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isMenuVisible: false,\r\n        isResultVisible: false,\r\n        isResultWrong: false,  \r\n      }) \r\n  }\r\n\r\nsetCaretPosition = (ctrl, pos) => {\r\n  // Modern browsers\r\n  if (ctrl.setSelectionRange) {\r\n    ctrl.focus();\r\n    ctrl.setSelectionRange(pos, pos);\r\n  \r\n  // IE8 and below\r\n  } else if (ctrl.createTextRange) {\r\n    var range = ctrl.createTextRange();\r\n    range.collapse(true);\r\n    range.moveEnd('character', pos);\r\n    range.moveStart('character', pos);\r\n    range.select();\r\n  }\r\n}\r\n\r\n  updateValue = (event) =>{\r\n  \tlet newContent = this.state.newContent;\r\n  \tlet target = event.target;\r\n    let str = event.target.value;\r\n    let indexOfSpace = event.target.value.indexOf(\" \") + 1;\r\n    let word = event.target.value.substr(0, indexOfSpace - 1);\r\n    let newstr = event.target.value.substring(indexOfSpace);\r\n    newContent = newContent + (word + ' ');\r\n      this.setState({\r\n      \tnewContent: newContent,\r\n        inputContent: newstr\r\n      }, () => this.setCaretPosition(target, 0));\r\n  }\r\n\r\n  startExercise = () => {\r\n    this.setState({\r\n      isTaskStarted: true,\r\n      isSingleTextVisible: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper fragments-wrapper\">\r\n              {this.state.isMenuVisible ?\r\n                <Menu className=\"texts-menu\" vertical>\r\n                  <Menu.Item name='inbox' >\r\n\r\n                  </Menu.Item>\r\n                </Menu> : null \r\n              }          \r\n              {(this.state.texts.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => \r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <Card.Description className=\"single-text-card-description p-wrap fragment-description recreate-text\">\r\n                      { this.state.content}\r\n                    </Card.Description>\r\n                    <Button primary onClick={this.startExercise}>Я прочитал</Button> \r\n                  </Card.Content>\r\n                </Card>:null\r\n              }             \r\n             {this.state.isTaskStarted ? \r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>\r\n                  <Card.Content className=\"fragments-content recreate-text-content\">\r\n                    <p className=\"single-text-card-description p-wrap fragment-description recreate-text inserted-text\">\r\n                      { this.state.newContent}\r\n                    </p>\r\n                    <Input className=\"insert-spaces-input\" value={this.state.inputContent} onChange={this.updateValue} />\r\n                    <Button.Group className=\"card-buttons-wrapper\">\r\n                        <Button primary onClick={this.showFinal}>Проверить</Button>\r\n                      </Button.Group>\r\n                  </Card.Content>\r\n                </Card>:null\r\n              }\r\n              {this.state.isResultVisible ?\r\n                <Card className=\"single-text-card single-fragments-card\">\r\n                  <div className=\"fragments-close\">\r\n                    <span onClick={this.backToTexts}>\r\n                      <Icon name='close' size='big' />\r\n                    </span>\r\n                  </div>                \r\n                  <Card.Content className=\"fragments-content\">\r\n                    <div className=\"recreate-results\">\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Исходный текст</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.content}</p>\r\n                      </div>\r\n                      <div className=\"recreate-results__item recreate-item\">\r\n                        <h3 className=\"recreate-item__title\">Результат</h3>\r\n                        <p className=\"recreate-item__text\">{this.state.newContent}</p>\r\n                      </div>                      \r\n                    </div>                                     \r\n                  </Card.Content>\r\n                  <div className=\"fragment-variants\">\r\n                    <Button primary onClick={this.tryAgain}>Заново</Button>\r\n                    <Button primary><Link className=\"training-link\" to=\"/training\">К тренировкам</Link></Button>\r\n                  </div> \r\n                </Card> : null\r\n              }    \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default InsertSpaces;","import React, { Component, Fragment } from 'react';\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card, Embed, Modal,Image, Rating} from 'semantic-ui-react';\r\n//import LazyLoad from 'react-lazy-load';\r\n\r\nclass TED extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      isModalVisible: false\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCAuUUnT6oDeKwE6v1NGQxug\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n      handleClick = (event) => {\r\n        this.setState({\r\n          currentPage: Number(event.target.id)\r\n        });\r\n      }\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos.items);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  showModal = () =>{\r\n    this.setState({\r\n      isModalVisible: true\r\n    })\r\n  }\r\n\r\n   render() {\r\n     \r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card>                \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default TED;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass EngVid extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCKRBA9XfgzAtJodE4t8cUeg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>\r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>              \r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default EngVid;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass BritishCouncil extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCOtnu-KKoAbN47IuYMeDPOg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default BritishCouncil;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image, Input, Icon} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Khan extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: [],\r\n      currentComment: '',\r\n      likes: 0,\r\n      dislikes: 0,\r\n      comments: [\r\n        {\r\n          author: 'new2341',\r\n          comment: 'Just a typicall comment'\r\n        },\r\n        {\r\n          author: 'cauthor',\r\n          comment: 'nice! liked it'\r\n        }\r\n      ]\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UC4a-Gbdw7vOaccHmFo40b9g\";\r\n    var maxResults = 48;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n    updateSearch = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,200)});\r\n    } \r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n  addComment = () =>{\r\n    let comments = this.state.comments.slice();\r\n    let currentComment = this.state.currentComment;\r\n    let temp = {};\r\n    temp['author'] = 'blabla';\r\n    temp['comment'] = currentComment;\r\n    comments.unshift(temp);\r\n    console.log(comments);\r\n    this.setState({\r\n      comments: comments,\r\n      currentComment: ''\r\n    })\r\n  }\r\n\r\n  thumbsUp = () => {\r\n    let count = this.state.likes;\r\n    count++;\r\n    this.setState({\r\n      likes: count\r\n    })\r\n  }\r\n\r\n  thumbsDown = () => {\r\n    let count = this.state.dislikes;\r\n    count++;\r\n    this.setState({\r\n      dislikes: count\r\n    })\r\n  }\r\n\r\n  consoleState = ()=>{\r\n    console.log(this.state)\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Открыть</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header className=\"video-header-wrapper\">\r\n                    <div className=\"video-header\">{item.snippet.title}</div> \r\n                    <div className=\"video-likes\">\r\n                      <div className=\"video-likes-item first\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsUp}>\r\n                          <Icon name='thumbs up' size='large' />\r\n                        </span>\r\n                        <span>{this.state.likes}</span>\r\n                      </div>\r\n                      <div className=\"video-likes-item second\">\r\n                        <span className=\"video-likes-icon\" onClick={this.thumbsDown}>\r\n                          <Icon name='thumbs down' size='large' />\r\n                        </span>\r\n                        <span>{this.state.dislikes}</span>\r\n                      </div>\r\n                    </div> \r\n                  </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                    <div className=\"comment-section\">\r\n                      <div className=\"comment-section-input\">\r\n                        <Input placeholder='type...' value={this.state.currentComment} onChange={this.updateSearch} /><Button onClick={this.addComment}>Отправить</Button>\r\n                      </div>\r\n                      <div className=\"comment-section-comments\">\r\n                          {this.state.comments.map((item, index) =>\r\n                            <div className=\"single-comment\" key={index}>\r\n                              <h4>{item.author}</h4>\r\n                              <p>{item.comment}</p>                              \r\n                            </div>\r\n                           )}\r\n                      </div>\r\n                    </div>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <h4>{item.snippet.title}</h4>                 \r\n                  <Image src={item.snippet.thumbnails.high.url} />\r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Khan;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Coursera extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCZ50rYSkYQG31YDEJm9Di_g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Coursera;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyFallon extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UC8-Th83bH_thdKZDJCrn88g\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyFallon;","import React, { Component, Fragment } from 'react';\r\nimport { Embed,Modal,Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JimmyKimmel extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCa6vGFO9ty8v5KZJXQxdhaw\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JimmyKimmel;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass ConanOBrien extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCi7GJNg51C3jgmYTUwqoUXA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default ConanOBrien;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass Ellen extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCp0hYYBW6IMayGgR-WeoCvQ\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default Ellen;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass JamesCorden extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCJ0uqCI0Vqr2Rrt1HseGirg\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length)?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default JamesCorden;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass SethMeyers extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCVTyTA7-g9nopHeHbeuvpRA\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default SethMeyers;","import React, { Component, Fragment } from 'react';\r\nimport { Embed, Modal, Image} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu';\r\nimport axios from 'axios';\r\n//import speech from 'speech-synth';\r\n//import classnames from 'classnames';\r\n//import {Link} from \"react-router-dom\";\r\nimport {Button,Card} from 'semantic-ui-react';\r\n\r\nclass StephenColbert extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideos: [],\r\n      loaded: false,\r\n      items: []\r\n\t\t}\r\n\t}\r\n\r\n  componentDidMount(){\r\n    var API_key = \"AIzaSyANIs2WwcSlrkJhfkw2z-q0Zumsu80CR28\";\r\n    var channelID = \"UCMtFAi84ehTSYSE9XoHefig\";\r\n    var maxResults = 36;\r\n    var url =\r\n      \"https://www.googleapis.com/youtube/v3/search?key=\" +\r\n      API_key +\r\n      \"&channelId=\" +\r\n      channelID +\r\n      \"&part=snippet,id&order=date&maxResults=\" +\r\n      maxResults;\r\n    axios.get(url)\r\n        .then(res => {\r\n          const videos = res.data;\r\n          this.setState({\r\n            videos: videos,\r\n            items: videos.items\r\n        })\r\n      })\r\n  }\r\n\r\n  \r\n  consoleState = () =>{\r\n    console.log(this.state.videos);\r\n    this.setState({\r\n      loaded: true,\r\n    })\r\n  }\r\n\r\n   render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n        {(this.state.items.length) ?\r\n          <Card.Group itemsPerRow = {3} className=\"single-video-wrapper\">\r\n            {this.state.items.map((item, index) => \r\n              <Card key={index}>\r\n                <Modal className=\"video-modal\" closeIcon trigger={<Button>Show Modal</Button>}>\r\n                  <Embed  autoplay={true} id={item.id.videoId} placeholder={item.snippet.thumbnails.high.url} source='youtube' />                \r\n                  <Modal.Header>{item.snippet.title} </Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      <p>{item.snippet.description}</p>\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                </Modal>              \r\n                <div className=\"single-video-wrapper-image\">\r\n                  <Image src={item.snippet.thumbnails.high.url} />                  \r\n                </div>\r\n              </Card> \r\n              )}\r\n          </Card.Group>\r\n            :null\r\n       }\r\n       </Fragment>\r\n\t);\r\n  }\r\n\r\n}\r\n\r\nexport default StephenColbert;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass TextsList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      texts: [],\r\n      textsLoaded: false,\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/texts.json')\r\n        .then(res => {\r\n          let texts = res.data;\r\n          let contentArray = [];\r\n          texts.map((item, index) => contentArray.push(item.content))\r\n          this.setState({ \r\n            texts: texts,\r\n            contentArray: contentArray\r\n          }, () => {\r\n            this.setState({\r\n              textsLoaded: true\r\n            })\r\n            this.createMenuItems()\r\n          });\r\n        })\r\n    }\r\n\r\n    createMenuItems = () =>{\r\n      let newItems = [];\r\n      this.state.texts.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() )         \r\n\r\n    readMore = (e) =>{\r\n      let texts = this.state.texts.slice();\r\n      let target = e.target.parentElement;\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[1].textContent;\r\n      let activeTargetContent = texts[index].content;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        image: activeTargetImage\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {!this.state.isSingleTextVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n              <Menu.Item name='inbox' >\r\n                <Dropdown \r\n                  placeholder='Выберите уровень'\r\n                  fluid\r\n                  value={this.state.value} \r\n                  key={this.state.options.id}\r\n                  clearable\r\n                  search\r\n                  selection\r\n                  onChange = {this.handleChange}\r\n                  options={this.state.options} \r\n                />\r\n              </Menu.Item>\r\n            </Menu> : null\r\n          }\r\n              {(this.state.textsLoaded && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n              {this.state.texts.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper\">\r\n                      <Image src={item.image} />\r\n                    </div>\r\n                    <Card.Header>{item.title}</Card.Header>\r\n                    <Card.Description>\r\n                      {item.content.substr(0,250) + ' ...'}\r\n                    </Card.Description>\r\n                  </Card.Content>\r\n                  <Button onClick={this.readMore} >Читать далее</Button>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ? \r\n                <Card className=\"single-text-card text-item\">\r\n                  <Card.Content>\r\n                    <Image src={this.state.image} />\r\n                    <Card.Header>{this.state.title}</Card.Header>\r\n                    <Card.Description className=\"single-text-card-description p-wrap\">\r\n                      { /*this.state.content.replace(/[&\\/\\\\#,+()$~%.'\":*?<>{}]/g, '').toLowerCase() */ this.state.content}\r\n                    </Card.Description> \r\n                  </Card.Content>\r\n                  <Button onClick={this.backToTexts} >Вернуться</Button>\r\n                </Card>:null\r\n              }          \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default TextsList;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Decks extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      categoryArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"tomato\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  \taxios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n             .then(axios.spread((firstResponse, secondResponse) => { \r\n          let words = firstResponse.data;\r\n          let allWords = secondResponse.data;\r\n          let contentArray = [];\r\n          this.setState({\r\n          \tallWords: allWords,\r\n            words: words,\r\n            contentArray: contentArray\r\n          }, () => this.consoleParams() );\r\n       }))\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.words.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n        const unique = arr\r\n            .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      console.log(categoryValue);\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )  \r\n\r\n    readMore = (e) =>{\r\n      let arrayOfButtons = [];    \t\r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let target = e.target.parentElement;\r\n      let color = colors[Math.floor(Math.random()*colors.length)];\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].textContent;\r\n      for (var i = 0; i < allWords.length; i++) {\r\n      \tif(allWords[i][\"category\"] === activeTargetTitle ){\r\n      \t\tcurrentWords.push(allWords[i])\r\n      \t} \r\n      }\r\n\r\n      for (var i = 0; i < currentWords.length; i++) {\r\n      \t\tarrayOfButtons.push(\"Добавить\");\r\n      \t\ticonsArray.push(true);\r\n      \t\tdisabled.push(\"\");\r\n      }\r\n      \r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords: currentWords,\r\n        currentColor: color,\r\n        arrayOfButtons: arrayOfButtons,\r\n        iconsArray: iconsArray,\r\n        disabled: disabled      \t\r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n\r\n    }\r\n\r\n    getUniqueCategory = () =>{\r\n      \r\n    }\r\n\r\n    addToList = (e) =>{\r\n      let array = this.state.addedItems.slice();\r\n      let buttons = this.state.arrayOfButtons.slice();\r\n      let disabled = this.state.disabled.slice();\r\n      let icons = this.state.iconsArray.slice();\r\n      let target = e.target.parentElement.parentElement.parentElement.parentElement;\r\n      let name = e.target.parentElement.children[0].textContent;\r\n      let translation = e.target.parentElement.children[1].textContent;\r\n      var index = 0;\r\n        while ((target = target.previousElementSibling)) {\r\n          index++;\r\n      }\r\n      buttons[index] = \"Добавлено !\";\r\n      icons[index] = false;\r\n      disabled[index] = \"disabled\";\r\n      let temp = {}\r\n      temp[\"name\"] = name;\r\n      temp[\"translation\"] = translation;\r\n      array.push(temp);\r\n      this.setState({\r\n      \taddedItems: array,\r\n      \tarrayOfButtons: buttons,\r\n      \ticonsArray: icons,\r\n      \tdisabled: disabled\r\n      })\r\n\r\n    }\r\n\r\n    addedFirst = () =>{\r\n    \tconsole.log(this.state);\r\n    \tlet state = this.state.sortedByTranslationUp;\r\n    \tthis.setState({\r\n    \t\taddedUp: !state\r\n    \t})\r\n    }\r\n\r\n  //сортировка по имени\r\n  \tsortByName = () =>{\r\n      \tlet state = this.state.sortedByNameUp;\r\n      \tconsole.log(\"current words\", this.state.currentWords);\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tlet newWords = words;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tnewWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n  \t\t} else {\r\n  \t\t\tnewWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n  \t\t}\r\n  \t\tconsole.log(\"new words\", newWords);\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords: newWords,\r\n  \t\t\tsortedByNameUp: !state\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n  //сортировка по переводу\r\n  \tsortByTranslation = () =>{\r\n      \tlet state = this.state.sortedByTranslationUp;\r\n  \t\tconst words = this.state.currentWords.slice();\r\n  \t\tconsole.log(\"current translation\", this.state.currentWords);\r\n  \t\tlet newWords = words;\r\n  \t\tif(this.state.isOldestFirst){\r\n  \t\t\tnewWords = words.sort((a,b) => a.translation.localeCompare(b.translation));\r\n  \t\t} else {\r\n  \t\t\tnewWords = words.sort((a,b) => b.translation.localeCompare(a.translation));\r\n  \t\t}\r\n  \t\tconsole.log(\"new words\", newWords);\r\n  \t\tthis.setState({\r\n  \t\t\tisOldestFirst: !this.state.isOldestFirst,\r\n  \t\t\tcurrentWords: newWords,\r\n  \t\t\tsortedByTranslationUp: !state\t\t\t\r\n  \t\t})\t\t\r\n  \t}\r\n\r\n   deleteItem = (id) =>{\r\n   \tvar newWords = this.state.addedItems.slice();\r\n   \tconsole.log(newWords);\r\n \t  var newIndex = (id.target.parentElement.parentElement);\r\n    console.log(newIndex);\r\n\t  const index = [...newIndex.parentElement.children].indexOf(newIndex);\r\n\t  console.log(index);\r\n\t  newWords.splice(index,1);\r\n    this.setState({addedItems: newWords});\r\n   }\r\n\t\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          <Menu className=\"texts-menu decks-menu\" vertical>\r\n\t          {this.state.isDropdownVisible ? \r\n\t              <Menu.Item name='inbox' >\r\n\t                <Dropdown \r\n\t                  placeholder='Выберите уровень'\r\n\t                  fluid\r\n\t                  value={this.state.value} \r\n\t                  key={this.state.options.id}\r\n\t                  clearable\r\n\t                  search\r\n\t                  selection\r\n\t                  onChange = {this.handleChange}\r\n\t                  options={this.state.options} \r\n\t                />\r\n\t              </Menu.Item> : null\r\n\t          }\r\n              <Menu.Item className=\"no-top-padding added-title\" style = {{ backgroundColor: this.state.currentColor}} >\r\n              \t{this.state.addedItems.length ? \"Добавленные\" : \"Добавленных пока нет\"}\r\n              </Menu.Item>\r\n              <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n              \t{(this.state.addedItems.length) ? \r\n              \t<ul className=\"decks-added-wrapper\">\r\n              \t\t{this.state.addedItems.map((item,index)=> \r\n              \t\t\t<li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n              \t\t\t\t<span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem} ><Icon name='trash alternate' size='' /></span></li>\r\n              \t\t)}\r\n              \t</ul> : null\r\n              } \r\n              </Menu.Item>\r\n              { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n              <Menu.Item className=\"decks-button-wrapper\" >\r\n              \t <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} >Изучить</Button>\r\n              </Menu.Item> : null\r\n              }           \r\n            </Menu>           \r\n              {(this.state.words.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n              {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper decks-image\">\r\n                      <Image src={item.image} />\r\n                      <div className=\"decks-description\">\r\n                      \t\t<h2>{item.name}</h2>\r\n                      \t\t<h3><span>{item.number}</span></h3>\r\n                      \t\t<Button onClick={this.readMore} primary className=\"decks-button\" >Открыть</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ?\r\n             \t<div className=\"decks-outer-wrapper\">\r\n\t\t\t        <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n\t\t\t\t        <Menu.Item name='byName'> \r\n\t\t\t\t          <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n\t\t\t\t            по имени \r\n\t\t\t\t            {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n\t\t\t\t          </Button>\r\n\t\t\t\t        </Menu.Item>\r\n\t\t\t\t        <Menu.Item name='byTranslation'> \r\n\t\t\t\t          <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n\t\t\t\t            по переводу \r\n\t\t\t\t            {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n\t\t\t\t          </Button>\r\n\t\t\t\t        </Menu.Item>\r\n\t\t\t\t        <Menu.Item style={{float: \"right\"}} name='close'> \r\n\t\t\t\t          <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.backToDecks}>\r\n\t\t\t\t            <Icon name='window close outline' size='small' className=\"nav-icon-left\" /> \r\n\t\t\t\t          </Button>\r\n\t\t\t\t        </Menu.Item>\t\t\t\t        \r\n                {/*\r\n\t\t\t\t        <Menu.Item name='added'> \r\n\t\t\t\t          <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.addedFirst}>\r\n\t\t\t\t            добавленные \r\n\t\t\t\t            {this.state.addedUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n\t\t\t\t          </Button>\r\n\t\t\t\t        </Menu.Item>\t*/}\t\t\t        \r\n\t\t\t        </Menu>\r\n\t\t            <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n\t\t              {this.state.currentWords.map((item, index) => \r\n\t\t                <Card key={index}>\r\n\t\t                  <Card.Content>\r\n\t\t                    <div className=\"texts-image-wrapper decks-image\">\r\n\t\t                      <Image src={item.image} />\r\n\t\t                      <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n\t\t                      \t\t<h3>{item.name}</h3>\r\n\t\t                      \t\t<h4>{item.translation}</h4>\r\n\t\t                      \t\t<Button className=\"decks-button-add\" onClick={this.addToList} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n\t\t                      \t\t\t{this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n\t\t                      \t\t\t} \r\n\t\t                      \t\t\t{this.state.arrayOfButtons[index]}\r\n\t\t                      \t\t</Button>\r\n\t\t                      </div>\r\n\t\t                    </div>\r\n\t\t                  </Card.Content>\r\n\t\t                </Card>\r\n\t\t               )}\r\n\t\t            </Card.Group> \r\n\t            </div> : null}\r\n       \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Decks;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass AudioList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      words: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areTextsVisible: true,\r\n      isSingleTextVisible: false,\r\n      isOldestFirst: false,\r\n      isDropdownVisible: true,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      contentArray: [],\r\n      categoryArray: [],\r\n      allWords: [],\r\n      currentWords: [],\r\n      arrayOfColors: [\"navy\",\"maroon\",\"magenta\",\"green\",\"teal\",\"tomato\"],\r\n      currentColor: \"white\",\r\n      sortedByNameUp: true,\r\n      sortedByTranslationUp: true,\r\n      addedUp: true,\r\n      addedItems: [],\r\n      arrayOfButtons: [],\r\n      iconsArray: [],\r\n      disabled: [],\r\n      currentAudio: null,\r\n      playState: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.all([axios.get('/decks.json'),\r\n               axios.get('working.json')])\r\n              .then(axios.spread((firstResponse, secondResponse) => { \r\n              let words = firstResponse.data;\r\n              let allWords = secondResponse.data;\r\n              let contentArray = [];\r\n              let currentAudio = new Audio('audio/Baskervilles1.mp3');\r\n          this.setState({\r\n            allWords: allWords,\r\n            words: words,\r\n            contentArray: contentArray,\r\n            currentAudio: currentAudio\r\n          }, () => this.consoleParams() );\r\n       }))\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.words.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.level, \r\n                        value: item.level\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n        const unique = arr\r\n            .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      console.log(categoryValue);\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc() )  \r\n\r\n    readMore = (e) =>{\r\n      let arrayOfButtons = [];      \r\n      let iconsArray = [];\r\n      let disabled = [];\r\n      let colors = this.state.arrayOfColors.slice(); \r\n      let words = this.state.words.slice();\r\n      let allWords = this.state.allWords.slice();\r\n      let currentWords = [];\r\n      let target = e.target.parentElement;\r\n      let color = colors[Math.floor(Math.random()*colors.length)];\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let activeTargetTitle = e.target.parentElement.children[0].textContent;\r\n      for (var i = 0; i < allWords.length; i++) {\r\n        if(allWords[i][\"category\"] === activeTargetTitle ){\r\n          currentWords.push(allWords[i])\r\n        } \r\n      }\r\n\r\n      for (var i = 0; i < currentWords.length; i++) {\r\n          arrayOfButtons.push(\"Добавить\");\r\n          iconsArray.push(true);\r\n          disabled.push(\"\");\r\n      }\r\n      \r\n      this.setState({\r\n        areTextsVisible: false,\r\n        isSingleTextVisible: true,\r\n        isDropdownVisible: false,\r\n        currentWords: currentWords,\r\n        currentColor: color,\r\n        arrayOfButtons: arrayOfButtons,\r\n        iconsArray: iconsArray,\r\n        disabled: disabled        \r\n      })\r\n    }\r\n\r\n    backToTexts = () =>{\r\n      this.setState({\r\n        areTextsVisible: true,\r\n        isSingleTextVisible: false        \r\n      })\r\n    }\r\n\r\n\r\n    addedFirst = () =>{\r\n      console.log(this.state);\r\n      let state = this.state.sortedByTranslationUp;\r\n      this.setState({\r\n        addedUp: !state\r\n      })\r\n    }\r\n\r\n  //сортировка по имени\r\n    sortByName = () =>{\r\n        let state = this.state.sortedByNameUp;\r\n        console.log(\"current words\", this.state.currentWords);\r\n      const words = this.state.currentWords.slice();\r\n      let newWords = words;\r\n      if(this.state.isOldestFirst){\r\n        newWords = words.sort((a,b) => a.name.localeCompare(b.name));\r\n      } else {\r\n        newWords = words.sort((a,b) => b.name.localeCompare(a.name));\r\n      }\r\n      console.log(\"new words\", newWords);\r\n      this.setState({\r\n        isOldestFirst: !this.state.isOldestFirst,\r\n        currentWords: newWords,\r\n        sortedByNameUp: !state      \r\n      })    \r\n    }\r\n\r\n    startPlayer = () =>{\r\n      let currentState = this.state.playState;\r\n      this.setState({\r\n        playState: !currentState\r\n      }, () => this.playAudio() )\r\n    }\r\n\r\n    playAudio = () =>{\r\n      let audio = this.state.currentAudio;\r\n      if(this.state.playState){\r\n        audio.play();\r\n      }\r\n      else{\r\n        audio.pause();\r\n      }\r\n      this.setState({\r\n        currentAudio: audio\r\n      })\r\n    }\r\n\r\n  render() {\r\n    let color = this.state.currentColor;\r\n    let filteredWords = this.state.currentWords;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          <Menu className=\"texts-menu decks-menu\" vertical>\r\n            {this.state.isDropdownVisible ? \r\n                <Menu.Item name='inbox' >\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item> : null\r\n            }\r\n              <Menu.Item>\r\n                <Button onClick={this.startPlayer}>\r\n                {this.state.playState ?\r\n                 <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  }Listen</Button>\r\n\r\n              </Menu.Item>\r\n              <Menu.Item className=\"no-padding decks-added-outer-wrapper\">\r\n                {(this.state.addedItems.length) ? \r\n                <ul className=\"decks-added-wrapper\">\r\n                  {this.state.addedItems.map((item,index)=> \r\n                    <li key={index}  className=\"decks-added-items\" style = {{ backgroundColor: this.state.currentColor}}>\r\n                      <span className=\"decks-added-items-name\">{item.name} - {item.translation}</span><span className=\"decks-added-items-icon\" onClick={this.deleteItem} ><Icon name='trash alternate' size='' /></span></li>\r\n                  )}\r\n                </ul> : null\r\n              } \r\n              </Menu.Item>\r\n              { (this.state.addedItems.length && this.state.isSingleTextVisible) ? \r\n              <Menu.Item className=\"decks-button-wrapper\" >\r\n                 <Button onClick={this.sendWords} style = {{ backgroundColor: this.state.currentColor}} >Изучить</Button>\r\n              </Menu.Item> : null\r\n              }           \r\n            </Menu>           \r\n              {(this.state.words.length && this.state.areTextsVisible) ? \r\n              <Card.Group className=\"texts-cards decks-cards\" itemsPerRow={3} >\r\n              {this.state.words.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.level) &&\r\n                <Card key={index}>\r\n                  <Card.Content>\r\n                    <div className=\"texts-image-wrapper decks-image\">\r\n                      <Image src={item.image} />\r\n                      <div className=\"decks-description\">\r\n                          <h2>{item.name}</h2>\r\n                          <h3><span>{item.number}</span></h3>\r\n                          <Button onClick={this.readMore} primary className=\"decks-button\" >Открыть</Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card>\r\n               )}\r\n              </Card.Group> : null\r\n             }\r\n             {this.state.isSingleTextVisible ?\r\n              <div className=\"decks-outer-wrapper\">\r\n              <Menu text className=\"vocab-top-menu-wrapper decks-top-menu\">\r\n                <Menu.Item name='byName'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByName}> \r\n                    по имени \r\n                    {this.state.sortedByNameUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item name='byTranslation'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.sortByTranslation}>\r\n                    по переводу \r\n                    {this.state.sortedByTranslationUp ? <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  }\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item style={{float: \"right\"}} name='close'> \r\n                  <Button style = {{ backgroundColor: this.state.currentColor}} onClick = {this.backToDecks}>\r\n                    <Icon name='window close outline' size='small' className=\"nav-icon-left\" /> \r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n                <Card.Group className=\"texts-cards decks-cards words-cards\" itemsPerRow={4} >\r\n                  {this.state.currentWords.map((item, index) => \r\n                    <Card key={index}>\r\n                      <Card.Content>\r\n                        <div className=\"texts-image-wrapper decks-image\">\r\n                          <Image src={item.image} />\r\n                          <div className=\"words-description\" style = {{ backgroundColor: this.state.currentColor}} > \r\n                              <h3>{item.name}</h3>\r\n                              <h4>{item.translation}</h4>\r\n                              <Button className=\"decks-button-add\" onClick={this.addToList} disabled= {this.state.disabled[index]} style = {{ color: this.state.currentColor, height: \"41px\"}} >\r\n                                {this.state.iconsArray[index] ? null : <Icon name='check circle outline' size='big' />\r\n\r\n                                } \r\n                                {this.state.arrayOfButtons[index]}\r\n                              </Button>\r\n                          </div>\r\n                        </div>\r\n                      </Card.Content>\r\n                    </Card>\r\n                   )}\r\n                </Card.Group> \r\n              </div> : null}\r\n       \r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n  );\r\n  }\r\n}\r\n\r\nexport default AudioList;","import React, { Component, Fragment } from 'react';\r\nimport {  List, Icon} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\n\r\n\r\nclass Settings extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      words: [],\r\n      contentArray: [],\r\n      areTextsVisible: true,\r\n      isMenuVisible: true,\r\n      isSingleTextVisible: false,\r\n      isResultVisible: false,\r\n      isResultWrong: false,\r\n      negativeWords: [],\r\n      positiveWords: [],\r\n      content: '',\r\n      image: null,\r\n      spllittedSentences: [],\r\n      reservedSentences: [],\r\n      seconds: '00',   \r\n      minutes: '5',  \r\n      secondsRemaining: 0,\r\n      intervalHandle: 0,\r\n      wrongIndexes: [],\r\n      totalSecondsSpent: 0,\r\n      secondsSpent: 0,\r\n      minutesSpent: 0,\r\n      nameArrays: null,\r\n      barChartData: [],\r\n      lineChartData: [],\r\n      active: \"#F9B707\",\r\n\r\n      email: \"user1233\",\r\n      password: 69691231\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    axios.get('/working.json')\r\n      .then(res => {\r\n        let words = res.data;\r\n\r\n        this.setState({ \r\n          words\r\n        });\r\n      })        \r\n  }   \r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"settings-wrapper\">\r\n            <List className=\"settings-list\"> \r\n\r\n              <List.Item> <Icon name='user circle' size='' /> \r\n                          <span className=\"settings-item-title\">Аккаунт</span>\r\n                          <div className=\"settings-item-wrapper\">\r\n                            <p>Email: {this.state.email}</p>\r\n                            <p>Password: {this.state.password}</p>\r\n                          </div>\r\n              </List.Item>\r\n              <List.Item> \r\n                <Icon name='settings' size='' />\r\n                <span className=\"settings-item-title\">Настройки темы</span>\r\n              </List.Item>\r\n              <List.Item> \r\n                <Icon name='sound' size='' />\r\n                \r\n                 <span className=\"settings-item-title\">Настройки звука</span>\r\n              </List.Item>\r\n            </List>\r\n          </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Settings;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input, Dropdown, TextArea, Form, Checkbox ,Icon, Rating, List } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport parse from 'html-react-parser';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      books: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      value: null,\r\n      areBooksVisible: true,\r\n      isMenuVisible: true,\r\n      isPreviewVisible: false,\r\n      isSingleBookVisible: false,\r\n      isBookNavPanelVisible: false,\r\n      title: '',\r\n      author: '',\r\n      content: '',\r\n      description: null,\r\n      image: null,\r\n      contentArray: [],\r\n      currentBook: '',\r\n      currentPage: '',\r\n      currentPageIndex: 0,\r\n      currentArrayBooks: [],\r\n      currentIndexArray: [],\r\n      bookHTML: '',\r\n      parsedBook: null,\r\n      bookPages: [],\r\n      bookValue: null,\r\n      bookVal: '',\r\n      currentComment: '',\r\n      currentName: '',\r\n      currentEmail: '',\r\n      likes: 0,\r\n      errors: {},\r\n      checkedItems: new Map(),\r\n      checked: false,\r\n      comments: [{\r\n        \"author\": \"Author 1\",\r\n        \"comment\": \"simple comment\"\r\n      }],\r\n      audiobooks: [],\r\n      currentAudio: null,\r\n      newAudio: null,\r\n      playState: false,\r\n      currentAudioId: 0,\r\n      thumbArray: [],\r\n      scrollForwardState: true,\r\n      scrollBackwardState: false,\r\n      currentVolume: 50,\r\n      currentRange: 0,\r\n      currentDuration: null,\r\n      minutes: 0,\r\n      hours: 0,\r\n      seconds: 0,\r\n      rating: 0,\r\n      maxRating: 5\r\n\r\n    }\r\n  }\r\n\r\n  handleCheckChange = (e) => {\r\n    const item = e.target.name;\r\n    const isChecked = e.target.checked;\r\n    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/books.json')\r\n        .then(res => {\r\n          let books = res.data;\r\n          let contentArray = [];\r\n          let thumbArray = [];\r\n          books.map((item, index) =>{ \r\n            contentArray.push(item.content); \r\n            thumbArray.push(item.image); \r\n          })\r\n          let currentAudio = new Audio(`audio/Baskervilles${this.state.currentAudioId}.mp3`);\r\n          let newAudio = new Audio('audio/Baskervilles1.mp3');\r\n          newAudio.volume = 0.5;\r\n          newAudio.controls = true;\r\n          this.setState({ \r\n            books,\r\n            contentArray,\r\n            currentAudio,\r\n            newAudio,\r\n            thumbArray\r\n          }, () => this.consoleParams() );\r\n        })\r\n    }\r\n\r\n    callFunctions = () =>{\r\n    \tthis.consoleParams();\r\n    \tthis.populateDropdown();\r\n    }\r\n\r\n    consoleParams = () =>{\r\n      let newItems = [];\r\n      this.state.books.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.id, \r\n                        text: item.genre, \r\n                        value: item.genre \r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n          .map(e => e[comp])\r\n          .map((e, i, final) => final.indexOf(e) === i && i)\r\n          .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique\r\n      })    \r\n    }  \r\n\r\n    newFunc = () =>{\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue\r\n      })\r\n    }\r\n\r\n    newPage = () =>{\r\n      var bookVal = this.state.bookValue;\r\n      this.setState({\r\n        bookVal\r\n      })\r\n  \r\n    }\r\n\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.newFunc())         \r\n\r\n    handlePageChange= (e, { value }) => this.setState({ value }, () => this.newPage())\r\n\r\n  \tgetElementIndex = (node) => {\r\n  \t    var index = 0;\r\n  \t    while ( (node = node.previousElementSibling) ) {\r\n  \t        index++;\r\n  \t    }\r\n  \t}\r\n\r\n    readMore = (e) =>{\r\n      var currentElement = e.target.parentElement.children[0].children[1];\r\n      let books = this.state.books.slice();\r\n      let target = e.target.parentElement;\r\n      setInterval(this.checkInterval, 1000);\r\n      var index = 0;\r\n        while ( (target = target.previousElementSibling) ) {\r\n          index++;\r\n      }\r\n      let audiobooks = books[index].audio;\r\n      let image = books[index].image;\r\n      var link = books[index].link;\r\n      axios.all([axios.get('/books/'+ link)])\r\n                   .then(axios.spread((firstResponse) => {           \r\n                    let currentBook = firstResponse.data;\r\n                    var parsedBook = HTMLReactParser(currentBook);\r\n                    this.setState({ \r\n                      currentBook,\r\n                      parsedBook,\r\n                      audiobooks\r\n                    }, () => this.splitBook(this.state.currentBook));\r\n              }))\r\n      let activeTargetTitle = e.target.parentElement.children[0].children[2].children[0].textContent;\r\n      let activeTargetDescription = e.target.parentElement.children[0].children[4].textContent;\r\n      let activeTargetAuthor = e.target.parentElement.children[0].children[1].children[0].textContent;\r\n      let activeTargetContent = this.state.currentBook;\r\n      let activeTargetImage = e.target.parentElement.children[0].children[0].children[0].src;\r\n      this.setState({\r\n        areBooksVisible: false,\r\n        isMenuVisible: false,\r\n        isPreviewVisible: true,\r\n        title: activeTargetTitle,\r\n        content: activeTargetContent,\r\n        author: activeTargetAuthor,\r\n        description: activeTargetDescription,\r\n        image\r\n      }, () => this.populateDropdown())\r\n    }\r\n\r\n    parseHtml = () =>{\r\n      const html = `\r\n        <h1 style=\"font-family: Arial;\">\r\n          html-react-parser\r\n        </h1>\r\n      `;\r\n      return HTMLReactParser(html);      \r\n    }\r\n\r\n    splitBook = (book) =>{\r\n    \tlet currentArrayBooks = [];\r\n    \tlet indexArray = [];\r\n    \tlet length = book.length;\r\n    \tlet pages = Math.ceil(length/4500);\r\n    \tlet currentMin = 0;\r\n    \tlet currentMax = 4500;\r\n    \tfor (var i = 0; i < pages; i++) {\r\n    \t\tcurrentArrayBooks.push(book.substr(currentMin,currentMax));\r\n    \t\tcurrentMin = currentMin + 4500;\r\n    \t}\r\n    \tfor (var i = 0; i < pages; i++) {\r\n    \t\tindexArray.push(i);\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tcurrentArrayBooks,\r\n    \t\tcurrentPage: currentArrayBooks[0],\r\n    \t\tcurrentIndexArray: indexArray\r\n    \t})\r\n    }\r\n\r\n    renderPagination = (book) =>{\r\n    \tlet currentArrayBooks = [];\r\n    \tlet indexArray = [];\r\n    \tlet length = book.length;\r\n    \tlet currentMin = 0;\r\n    \tlet currentMax = 4500;    \t\r\n    \tfor (var i = 0; i < 8; i++) {\r\n    \t\tcurrentArrayBooks.push(book.substr(currentMin,currentMax));\r\n    \t\tcurrentMin = currentMin + 4500;\r\n    \t}\r\n    \tfor (var i = 0; i < 8; i++) {\r\n    \t\tindexArray.push(i);\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tcurrentArrayBooks,\r\n    \t\tcurrentPage: currentArrayBooks[0],\r\n    \t\tcurrentIndexArray: indexArray\r\n    \t})    \t\r\n    }\r\n\r\n    backToBooks = () =>{\r\n      this.setState({\r\n        areBooksVisible: true,\r\n        isMenuVisible: true,\r\n        isSingleBookVisible: false,\r\n        isBookNavPanelVisible: false,\r\n        bookPages: [],\r\n        content: '',\r\n\t\t    currentArrayBooks: [],\r\n\t\t    currentIndexArray: []                \r\n      })\r\n    }\r\n\r\n    handleClick = (e) =>{\r\n    \tlet pages = this.state.currentArrayBooks.slice();\r\n    \tthis.setState({\r\n    \t\tcurrentPageIndex: e.target.id,\r\n    \t\tcurrentPage: pages[e.target.id]\r\n    \t})\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state);\r\n\r\n    }\r\n\r\n\r\n\r\n    renderFirstButton = () =>{\r\n    \treturn(\r\n    \t\t<li className=\"pagination-nav-button\" id=\"0\" onClick={this.handleClick}>First</li>\r\n    \t)\r\n    }\r\n\r\n    renderLastButton = () =>{\r\n    \treturn(\r\n    \t\t<li className=\"pagination-nav-button\" id={this.state.currentArrayBooks.length-1} onClick={this.handleClick}>Last</li>\r\n    \t)\r\n    }\r\n\r\n    prevButton = () =>{\r\n      let currentId = this.state.currentPageIndex;\r\n      let pages = this.state.currentArrayBooks;\r\n      if(currentId>0){\r\n      \tcurrentId--;\r\n      }\r\n      let currentPage = pages[currentId];\r\n      this.setState({\r\n          currentPageIndex: currentId,\r\n          currentPage\r\n      }, this.scrollToTop())\r\n    }\r\n\r\n   goToPage = () =>{\r\n      let currentId = this.state.value;\r\n      let pages = this.state.currentArrayBooks;\r\n      let currentPage = pages[currentId];\r\n      this.setState({\r\n          currentPageIndex: currentId,\r\n          currentPage: currentPage\r\n      }, this.scrollToTop())\r\n    }    \r\n\r\n    nextButton = () =>{\r\n      let currentId = this.state.currentPageIndex;\r\n      let pages = this.state.currentArrayBooks.slice();\r\n      console.log(pages.length);\r\n      if(currentId < pages.length-1){\r\n      \tcurrentId++;\r\n      }\r\n      let currentPage = pages[currentId];\r\n      this.setState({\r\n          currentPageIndex: currentId,\r\n          currentPage\r\n      },this.scrollToTop())\r\n    }   \r\n\r\n    scrollToTop = () =>{\r\n      window.scrollTo(0, this.myRef.offsetTop)\r\n    } \r\n\r\n    chapterIndex = () =>{\r\n    \tif(this.state.bookPages.length == 0){\r\n    \t\tthis.populateDropdown();\r\n    \t}\r\n    \tlet currentState = this.state.isBookNavPanelVisible;\r\n    \tthis.setState({\r\n    \t\tisBookNavPanelVisible: !currentState\r\n    \t})\r\n    }\r\n\r\n    populateDropdown = () =>{\r\n    \tlet pages = this.state.currentArrayBooks.slice();\r\n    \tlet bookPages = this.state.bookPages.slice();\r\n    \tfor (var i = 0; i < pages.length; i++) {\r\n    \t\tlet page = '';\r\n    \t\tlet bookObject = {};\r\n    \t\tpage = 'Page ' + (i+1);\r\n    \t\tbookObject[\"key\"] = i;\r\n    \t\tbookObject[\"text\"] = page;\r\n    \t\tbookObject[\"value\"] = i;\r\n    \t\tbookPages.push(bookObject);\r\n    \t}\r\n    \tthis.setState({\r\n    \t\tbookPages\r\n    \t})\r\n    }\r\n\r\n\t  addComment = () =>{\r\n\t    let comments = this.state.comments.slice();\r\n\t    let errors = this.state.errors;\r\n\t    let currentComment = this.state.currentComment;\r\n\t    let currentName = this.state.currentName;\r\n\t    let currentEmail = this.state.currentEmail;\r\n\t    let temp = {};\r\n\t    if( (currentName !== '') && (currentComment !== '') && (currentEmail !== '')){\r\n\t\t    temp['author'] = currentName;\r\n\t\t    temp['comment'] = currentComment;\r\n\t\t    comments.unshift(temp);\r\n\t\t    this.setState({\r\n\t\t      comments,\r\n\t\t      currentName: '',\r\n\t\t      currentComment: '',\r\n\t\t      currentEmail: ''\r\n\t\t    })\r\n\t    }\r\n\t    else if (currentName == ''){\r\n\t    \terrors['name'] = \"Заполните поле имени!\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors: errors\r\n\t    \t})\r\n\t    }\r\n\t    else if(currentComment == ''){\r\n\t    \terrors['comment'] = \"Комментария должен быть не короче 30 символов\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors: errors\r\n\t    \t})\t    \t\r\n\t    }\r\n\t    else if(currentEmail == ''){\r\n\t    \terrors['email'] = \"Заполните поле почты\";\r\n\t    \tthis.setState({\r\n\t    \t\terrors: errors\r\n\t    \t})\t    \t\r\n\t    }\r\n\r\n\t  }\r\n\r\n    updateComment = (event) =>{\r\n      this.setState({currentComment: event.target.value.substr(0,500)});\r\n    }\r\n\r\n\r\n    updateName = (event) =>{\r\n      this.setState({currentName: event.target.value.substr(0,500)});\r\n    }\r\n\r\n    updateEmail = (event) =>{\r\n      this.setState({currentEmail: event.target.value.substr(0,500)});\r\n    }      \r\n\r\n    checkChange = (e) =>{\r\n      let checked = this.state.checked;\r\n      this.setState({\r\n      \tchecked: !checked\r\n      })\r\n    } \r\n\r\n    handleRate = (e, { rating, maxRating }) => this.setState({ rating, maxRating })\r\n\r\n\r\n    startPlayer = () =>{\r\n      let currentState = this.state.playState;\r\n      this.setState({\r\n        playState: !currentState\r\n      }, () => this.playAudio() )\r\n    }\r\n\r\n    playAudio = () =>{\r\n      let audio = this.state.newAudio;\r\n      let audiobooks = this.state.audiobooks;\r\n      let duration = audio.duration;\r\n      let minutes = Math.floor(Math.floor(duration) / 60);\r\n      let hours = Math.floor(Math.floor(minutes) / 60 );\r\n      let seconds = Math.floor(duration - minutes * 60);\r\n      minutes = Math.floor(minutes - hours * 60);\r\n      if(this.state.playState){\r\n        audio.play();\r\n      }\r\n      else{\r\n        audio.pause();\r\n      }\r\n      this.setState({\r\n        currentAudio: audio,\r\n        currentDuration: duration,\r\n        minutes,\r\n        seconds,\r\n        hours\r\n      })\r\n    }\r\n\r\n\r\n    scrollForward = () =>{\r\n      let audio = this.state.currentAudio; \r\n      audio.pause();\r\n      audio.currentTime += 10;\r\n      if(this.state.playState){\r\n        audio.play(); \r\n      }\r\n      this.setState({\r\n        newAudio: audio\r\n      })          \r\n    }\r\n\r\n    scrollBackward = () =>{\r\n      let audio = this.state.currentAudio; \r\n      audio.pause();\r\n      if (audio.currentTime >= 10) {\r\n         audio.currentTime -= 10;\r\n      }\r\n      else{\r\n        audio.currentTime = 0;\r\n      }\r\n      if(this.state.playState){\r\n        audio.play(); \r\n      }\r\n      this.setState({\r\n        newAudio: audio\r\n      })  \r\n    }\r\n\r\n    \r\n\r\n    checkInterval = () =>{\r\n      let player = this.state.newAudio;\r\n      this.setState({\r\n        currentRange: player.currentTime\r\n      })\r\n    }\r\n\r\n    setVolume = (e) =>{\r\n      let volValue = this.state.currentValue;\r\n      var player = this.state.newAudio;\r\n      player.volume = e.target.value / 100;\r\n      this.setState({\r\n        newAudio: player,\r\n        currentVolume: e.target.value\r\n      })\r\n    }\r\n\r\n    setRange = (e) =>{      \r\n      let rangeValue = this.state.currentRange;\r\n      var player = this.state.newAudio;\r\n      player.currentTime = e.target.value;\r\n      this.setState({\r\n        newAudio: player,\r\n        currentRange: e.target.value\r\n      })\r\n\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n        <TopMenu></TopMenu>\r\n        <div className=\"texts-wrapper\">\r\n        {this.state.isMenuVisible ?\r\n          <Menu className=\"texts-menu\" vertical>\r\n            <Menu.Item name='inbox' >\r\n              <Dropdown \r\n                placeholder='Выберите жанр'\r\n                fluid\r\n                value={this.state.value} \r\n                key={this.state.options.id}\r\n                clearable\r\n                search\r\n                selection\r\n                onChange = {this.handleChange}\r\n                options={this.state.options} \r\n              />\r\n            </Menu.Item>\r\n          </Menu>:null\r\n        }\r\n            {(this.state.books.length && this.state.areBooksVisible) ? \r\n            <Card.Group className=\"texts-cards\" itemsPerRow={3} >\r\n            {this.state.books.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.genre) &&\r\n              <Card key={index}>\r\n                <Card.Content>\r\n                  <div className=\"texts-image-wrapper books-image-wrapper\">\r\n                    <Image src={item.image} />\r\n                  </div>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-author\">{item.author}</span></Card.Header>\r\n                  <Card.Header className=\"books-header\"><span className=\"books-title\">{item.title}</span> <span className=\"books-genre\">{item.genre}</span></Card.Header>\r\n                  <div className=\"books-information\">\r\n                    <div className=\"books-views\">\r\n                      <span><Icon name='eye' size='' /> </span>\r\n                      <span>1234</span>\r\n                    </div>\r\n                    <div className=\"books-favourites\">\r\n                      <span><Icon name='heart' size='' /></span> \r\n                      <span>39</span>\r\n                    </div>\r\n                    <Rating className = \"books-rating\" maxRating={5} onRate={this.handleRate} />\r\n                  </div>\r\n                  <Card.Description>\r\n                    {item.content.substr(0,250) + ' ...'}\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={this.readMore} >Читать</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n           }\r\n           {this.state.isPreviewVisible ?\r\n                    <div className=\"book-preview-wrapper\">\r\n                      <div className=\"book-preview-image\">\r\n                        <Image src={this.state.image} />\r\n                      </div>\r\n                      <div className=\"book-preview-description\">\r\n                          <h3>{this.state.title}</h3>\r\n                          <h6>By: {this.state.author}</h6>\r\n                          <h6>Pages: {this.state.currentArrayBooks.length} </h6>\r\n                          <h6 className=\"book-preview-text\">{this.state.description} </h6>\r\n                          <div className=\"book-preview-rating\">\r\n                             <Rating icon=\"star\" className = \"books-rating\" maxRating={5} onRate={this.handleRate} />\r\n                             <span >{this.state.rating}/{this.state.maxRating}</span>\r\n                          </div>\r\n                          <Button primary onClick={this.consoleState}>\r\n                            Начать\r\n                          </Button>\r\n                      </div>\r\n                    </div>\r\n           :null}\r\n           {this.state.isSingleBookVisible ?\r\n           \t<Fragment>\r\n              <Menu className=\"texts-menu audio-menu\" vertical>\r\n                <Menu.Item name='inbox' >\r\n                  <List className=\"audiobooks-list\">\r\n                  {this.state.audiobooks.map((item,index) =>\r\n                    <List.Item key={index}>\r\n                      <div className=\"audiobooks-image-wrapper\">\r\n                        <Image src={this.state.image} />\r\n                      </div>\r\n                      <div className=\"audiobooks-content-wrapper\">\r\n                         <div className=\"audio-name-wrapper\">\r\n                           <h4>Chapter {index+1} </h4>\r\n                           <p>{this.state.title}</p>\r\n                         </div>\r\n                         <div className=\"audio-range-control\">\r\n                            <input id=\"range-control\" type=\"range\" value={this.state.currentRange} min=\"0\" max={this.state.currentDuration} step=\"1\" onInput={this.setRange} onChange={this.setRange}></input>                           \r\n                         </div>\r\n                         <div className=\"audiobooks-controls-wrapper\">\r\n                            <span className=\"audiobooks-icon\" onClick={this.startPlayer}>\r\n                              {this.state.playState ?\r\n                                <Icon name='pause circle outline' size='' /> : <Icon name='play circle outline' size='' />  \r\n                              } \r\n                           </span>\r\n                            <span className=\"audiobooks-icon\" onClick={this.scrollBackward}>\r\n                                <Icon name='backward' size='' /> \r\n                           </span>                            \r\n                            <span className=\"audiobooks-icon\" onClick={this.scrollForward}>\r\n                                <Icon name='forward' size='' />\r\n                           </span>\r\n                           <div className=\"audiobooks-icon audiobooks-input\">\r\n                             <Icon name='volume up' size='' />\r\n                             <input id=\"vol-control\" type=\"range\" value={this.state.currentVolume} min=\"0\" max=\"100\" step=\"1\" onInput={this.setVolume} onChange={this.setVolume}></input>\r\n                             <span className=\"audiobooks-time\">{this.state.hours}.{this.state.minutes}.{this.state.seconds}</span>\r\n                           </div>\r\n                         </div>\r\n                       </div>\r\n                    </List.Item>\r\n                  )}\r\n                  </List>\r\n                </Menu.Item>\r\n              </Menu>            \r\n      \t\t\t\t<Card className=\"single-text-card\">\r\n      \t\t\t\t\t<Card.Content>\r\n      \t\t\t\t\t<div className=\"book-index\">\r\n                  <span className=\"nav-icon-close\" onClick={this.backToBooks} >\r\n                    <Icon name='window close outline' size=\"big\"/>\r\n                  </span>\r\n      \t\t\t\t\t\t<ul className=\"pagination-container\">\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.prevButton}><Icon name='arrow left' size='small'  className=\"nav-icon-right\"/> Previous page</li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.nextButton}>Next page <Icon name='arrow right' size='small' className=\"nav-icon-left\" /> </li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.chapterIndex}>Pages index \r\n                      {this.state.isBookNavPanelVisible ?\r\n                      <Icon name='arrow up' size='small' className=\"nav-icon-left\" /> : <Icon name='arrow down' size='small' className=\"nav-icon-left\" />  } \r\n                    </li>\r\n      \t\t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.downloadBook}>Download  <Icon name='download' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t\t</ul>           \t\t\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t{this.state.isBookNavPanelVisible ?\r\n      \t\t\t\t\t\t<div className=\"book-index-panel\">\r\n      \t\t\t\t\t\t\t<Dropdown \r\n      \t\t\t\t\t\t\t\tplaceholder='Выберите страницу'\r\n      \t\t\t\t\t\t\t\tfluid\r\n\t\t\t                value={this.state.value} \r\n\t\t\t                key={this.state.options.id}\r\n\t\t\t                clearable\r\n\t\t\t                search\r\n\t\t\t                selection\r\n\t\t\t                onChange = {this.handlePageChange}\r\n\t\t\t                options={this.state.bookPages} \r\n      \t\t\t\t\t\t\t />\r\n      \t\t\t\t\t\t\t<Button onClick={this.goToPage}>Go</Button>\r\n      \t\t\t\t\t\t</div> : null\r\n      \t\t\t\t\t}\r\n      \t\t\t\t\t  <Card.Header className=\"single-book-title\">{this.state.title}</Card.Header>\r\n      \t\t\t\t\t  <Card.Description className=\"single-text-card-description\">\r\n      \t\t\t\t\t    <div className=\"p-wrap\">\r\n      \t\t\t\t\t      {this.state.currentPage}\r\n      \t\t\t\t\t    </div>\r\n      \t\t\t\t\t  </Card.Description>\r\n      \t\t\t\t\t</Card.Content>\r\n      \t\t\t\t\t<ul className=\"pagination-container\">\r\n      \t\t\t\t\t\t{this.renderFirstButton()}\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.scrollToTop}>Top <Icon name='arrow up' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.prevButton}><Icon name='arrow left' size='small'  className=\"nav-icon-right\"/> Previous page </li>\r\n      \t\t\t\t\t  <li className=\"pagination-nav-button\" onClick={this.nextButton}>Next page <Icon name='arrow right' size='small' className=\"nav-icon-left\" /></li>\r\n      \t\t\t\t\t    {this.renderLastButton()}                \t\r\n      \t\t\t\t\t</ul>\r\n      \t\t\t\t\t<div className=\"single-text-card-form\">\r\n      \t\t\t\t\t\t<Form>\r\n      \t\t\t\t\t\t\t<Form.Field>\r\n      \t\t\t\t\t\t\t\t<Input value={this.state.currentName} onChange={this.updateName} focus placeholder='Имя'/>\r\n      \t\t\t\t\t\t\t\t<span>{this.state.errors['name']}</span>\r\n      \t\t\t\t\t\t\t</Form.Field>\r\n      \t\t\t\t\t\t\t<Form.Field>\r\n      \t\t\t\t\t\t\t\t<Input value={this.state.currentEmail} onChange={this.updateEmail} focus placeholder='Email'/>\r\n      \t\t\t\t\t\t\t\t<span>{this.state.errors['email']}</span>\r\n      \t\t\t\t\t\t\t</Form.Field>\r\n      \t\t\t\t\t\t\t<Form.Field>\r\n      \t\t\t\t\t\t\t\t<TextArea value={this.state.currentComment} onChange={this.updateComment} maxLength=\"50\" placeholder='Ваш комментарий' />\r\n      \t\t\t\t\t\t\t\t<span>{this.state.errors['comment']}</span>\r\n      \t\t\t\t\t\t\t</Form.Field>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n      \t\t\t\t\t\t\t<Button onClick={this.addComment} type='submit'>Отправить</Button>\r\n      \t\t\t\t\t\t</Form>\t\t\t\t\t\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t\t<div className=\"single-text-card-comments\">\r\n                  {this.state.comments.map((item, index) =>\r\n                    <div className=\"single-text-card-comment\" key={index}>\r\n                      <h3>{item.author}</h3>\r\n                      <p>{item.comment}</p>                              \r\n                    </div>\r\n                   )}\t\t\t\t\t\t\t\t\t\t\t\t\r\n      \t\t\t\t\t</div>\r\n      \t\t\t\t</Card>\r\n      \t\t\t</Fragment>:null\r\n            }          \r\n        </div>\r\n        </div>\r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default BookList;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Materials extends Component {\r\n\r\n\t   \r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"content-wrapper\">\r\n          <TopMenu/>\r\n          <Card.Group className=\"training-wrapper\">\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/video.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/videos\">Видео</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card> \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/proverbs.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/proverbs\">Пословицы и поговорки</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/words.png' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/decks\">Наборы слов</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/texts.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/texts\">Обучающие тексты</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>             \r\n            <Card>\r\n              <div className=\"training-wrapper-image\">\r\n              <Image src='training/books.jpg' />              \r\n              </div>          \r\n              <Card.Content>\r\n                <Card.Header><Link to=\"/books\">Книги</Link></Card.Header>\r\n              </Card.Content>\r\n            </Card>\r\n                                                                                                                                                             \r\n          </Card.Group>\r\n          </div> \r\n        <footer></footer>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Materials;","import React, { Component, Fragment } from 'react';\r\nimport {Image, Button,Card, Menu, Input,Dropdown, Checkbox,Icon, Form, Divider, Label } from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport ReactDOM from 'react-dom';\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport update from 'immutability-helper';\r\n\r\nclass Example extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      options: [],\r\n      categoryValue: '',\r\n      categoryArray: [],\r\n      value: null,\r\n      areTestsVisible: true,\r\n      isSingleTestVisible: false,\r\n      title: '',\r\n      content: '',\r\n      image: null,\r\n      value: '',\r\n      currentValue: '',\r\n      currentTest: [],\r\n      activeTest: null,\r\n      curIndexTest: 0,\r\n      curIndexCheckbox: 0,\r\n      correctResults: [],\r\n      correctAnswers: [],\r\n      incorrectAnswers: [],\r\n      isMenuVisible: true,\r\n      isTooltipVisible: false,\r\n      currentColor: null\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      axios.get('/tests.json')\r\n        .then(res => {\r\n          let tests = res.data;\r\n          this.setState({ \r\n            tests: tests\r\n          }, () => this.getMenuParams());\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (prevState.currentTest !== this.state.currentTest) {\r\n        \r\n      }\r\n    }\r\n\r\n    getMenuParams = () =>{\r\n      let newItems = [];\r\n      this.state.tests.map((item, i) =>\r\n                    newItems.push({ \r\n                        key: item.title, \r\n                        text: item.difficulty, \r\n                        value: item.difficulty\r\n                     }))\r\n      this.setState({\r\n        options: newItems\r\n      }, () => this.getUnique())\r\n    } \r\n\r\n    getUnique = () => {\r\n      var tempArray = [];\r\n      var arr = this.state.options;\r\n      var comp = 'text';\r\n      const unique = arr\r\n        .map(e => e[comp])\r\n        .map((e, i, final) => final.indexOf(e) === i && i)\r\n        .filter(e => arr[e]).map(e => arr[e]);\r\n      this.setState({\r\n        options: unique,\r\n        categoryArray: tempArray\r\n      })    \r\n    }  \r\n\r\n    selectCategory = () =>{\r\n      var options = this.state.options.slice();\r\n      var categoryValue = this.state.value;\r\n      this.setState({\r\n        categoryValue: categoryValue\r\n      })\r\n    }\r\n\r\n    handleChange = (e, { value }) => this.setState({ value }, () => this.selectCategory() ) \r\n\r\n    testChange = (e) =>{\r\n      let parentid = e.target.getAttribute(\"parentid\");   \r\n      let id = e.target.getAttribute(\"id\");\r\n      let currentTest = this.state.currentTest.slice();\r\n      let currentState = currentTest[parentid][id];\r\n      const arr = new Array(3).fill(false);\r\n      arr[id] = true;\r\n      currentTest[parentid] = arr;\r\n      this.setState({\r\n        currentTest\r\n      })\r\n    }\r\n\r\n\r\n    selectTest = (testId) =>{\r\n      let tests = this.state.tests.slice();\r\n      let activeTest = tests.find(x => x.id === testId);\r\n\r\n      let currentTest = [];\r\n      let testItem = [];\r\n      let correctResults = [];\r\n\r\n      activeTest.tasks.map((item, index) => correctResults.push(item.correct_answer));      \r\n      for (var i = 0; i < 3; i++) {\r\n        testItem.push(false);\r\n      }\r\n      for (var i = 0; i < activeTest.tasks.length; i++) {\r\n        currentTest.push(testItem);\r\n      }\r\n      this.setState({\r\n        activeTest,\r\n        currentTest,\r\n        correctResults\r\n      }, () => this.setState({\r\n          areTestsVisible: false,\r\n          isSingleTestVisible: true,\r\n      }));\r\n    }\r\n\r\n    backToTests = () =>{\r\n      this.setState({\r\n        areTestsVisible: true,\r\n        isSingleTestVisible: false,\r\n        isMenuVisible: true,\r\n        isResultVisible: false,\r\n    \t\tcurrentTest: [],\r\n    \t\tcurIndexTest: 0,\r\n    \t\tcurIndexCheckbox: 0,\r\n    \t\tcorrectResults: [],\r\n    \t\tcorrectAnswers: [],\r\n    \t\tincorrectAnswers: [],\r\n      })\r\n    }\r\n\r\n    checkResults = () =>{\r\n    \tlet resultsArray = this.state.currentTest.slice();\r\n    \tlet correctResults = this.state.correctResults.slice();\r\n    \tlet finalResults = [];\r\n    \tlet correctAnswers = [];\r\n    \tlet incorrectAnswers = [];\r\n    \tfor (var i = 0; i < resultsArray.length; i++) {\r\n    \t\tlet item = resultsArray[i];\r\n    \t\tfor (var j = 0; j < item.length; j++) {\r\n    \t\t\tif (item[j]) {\r\n    \t\t\t\tfinalResults.push(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n      if(finalResults.length == this.state.activeTest.tasks.length) {\r\n        for (var i = 0; i < finalResults.length; i++) {\r\n          if(correctResults[i] === finalResults[i]){\r\n            correctAnswers.push(i)\r\n          }\r\n          else{\r\n            incorrectAnswers.push(i)\r\n          }\r\n        }\r\n        this.setState({\r\n          isResultVisible: true,\r\n          isSingleTestVisible: false,\r\n          correctAnswers,\r\n          incorrectAnswers,\r\n          isMenuVisible: false,\r\n          isTooltipVisible: false\r\n        })                \r\n      }\r\n      else{\r\n        this.setState({\r\n          isTooltipVisible: true\r\n        })\r\n      }\r\n \t\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n          <TopMenu></TopMenu>\r\n          <div className=\"texts-wrapper\">\r\n          {this.state.areTestsVisible ?\r\n            <Menu className=\"texts-menu\" vertical>\r\n                <Menu.Item name='inbox'>\r\n                  <Dropdown \r\n                    placeholder='Выберите уровень'\r\n                    fluid\r\n                    value={this.state.value} \r\n                    key={this.state.options.id}\r\n                    clearable\r\n                    search\r\n                    selection\r\n                    onChange = {this.handleChange}\r\n                    options={this.state.options} \r\n                  />\r\n                </Menu.Item>\r\n            </Menu> : null \r\n          }\r\n          {(this.state.tests.length && this.state.areTestsVisible) ? \r\n            <Card.Group className=\"texts-cards tests-cards\" itemsPerRow={3} >\r\n              {this.state.tests.map((item, index) => (this.state.categoryValue === 'all'|| this.state.categoryValue === '' || this.state.categoryValue === item.difficulty) &&            \r\n              <Card key={index} className=\"test-card test-item\" style = {{boxShadow: `0 1px 3px 0 ${item.color}, 0 0 0 1px ${item.color}` }} >\r\n                <Card.Content>\r\n                  <Card.Header className=\"tests-card-title\" style = {{backgroundColor: item.color}} >\r\n                  \t<h3>{item.difficulty}</h3>\r\n                  \t<span>{item.title}</span>\r\n                  </Card.Header>\r\n                  <Card.Description className=\"tests-card-description\">\r\n                     <p className=\"tests-card-description-line\">Количество заданий - <span className=\"tests-card-description-txt\">{item.number}</span></p>\r\n                     <p className=\"tests-card-description-line\">Максимальное кол-во баллов - <span className=\"tests-card-description-txt\">{item.totalScore}</span></p>\r\n                  </Card.Description>\r\n                </Card.Content>\r\n                <Button onClick={ () => {this.selectTest(item.id)} /*this.selectTest.bind(this, item.id) */} style = {{backgroundColor: item.color }} >Начать тест</Button>\r\n              </Card>\r\n             )}\r\n            </Card.Group> : null\r\n          }\r\n         {this.state.isSingleTestVisible ? \r\n            <Card className=\"single-text-card tests-wrapper\">\r\n              <h1>\r\n              \t{this.state.activeTest.title}\r\n              \t<span onClick={this.backToTests} ><Icon name='window close outline'/></span>\r\n              </h1>\r\n              <Card.Content>\r\n                {this.state.activeTest.tasks.slice().map((item, index) =>\r\n                    <Card.Description key={item.id} id={index} className=\"single-text-card-description\">\r\n                    <h3 >{item.sentence}</h3>\r\n                    <Form className=\"single-test-form\" >\r\n                      {item.variants.map((param, ind) => \r\n                        <label className=\"test-label\" key={ind}>\r\n                          <input type=\"checkbox\" \r\n                            id={ind}\r\n                            parentid={item.id}\r\n                            label={param}\r\n                            name='checkboxRadioGroup'\r\n                            value={item}\r\n                            checked={this.state.currentTest[item.id][ind]}\r\n                            onChange={this.testChange}/>\r\n                            {param}                          \r\n                        </label>\r\n                      )}                                             \r\n                    </Form>                      \r\n                  </Card.Description>\r\n                )}\r\n              </Card.Content>\r\n              {this.state.isTooltipVisible ?\r\n                <div className=\"tests-tooltip\">\r\n                    <h4>Заполните все поля!</h4>               \r\n                </div> : null\r\n              }\r\n              <div className=\"tests-button-wrapper decks-button-wrapper\">\r\n              \t<Button onClick={this.checkResults} >Принять</Button>                  \t\r\n              </div>\r\n            </Card>:null\r\n          }\r\n          {this.state.isResultVisible ? \r\n            <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper test-final\" >\r\n             <Card className=\"card-training test-result-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n    \t\t\t\t\t\t  <div className=\"grades-results-wrapper\">\r\n    \t\t\t\t\t\t\t  <h3>Количество правильных ответов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n                    <h3>Количество набранных баллов - <span>{this.state.correctAnswers.length}</span> </h3>\r\n    \t\t\t\t\t\t  </div>\t\t                  \r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.correctAnswers.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.incorrectAnswers.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.backToTests}>Назад к тестам</Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n            </Card.Group> : null \r\n          }       \r\n          </div>\r\n        </div>  \r\n        <footer></footer>\r\n      </Fragment>\r\n\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Example;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Image, Button, Divider, Icon, List, Message, Label} from 'semantic-ui-react'\r\nimport TopMenu from './TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Rightwrong extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    this.setStateOnStart();\r\n  }\r\n\r\n    updateComponent = () =>{\r\n      const id = this.state.id;\r\n      const words = this.state.words;\r\n      const currentName = words[id].name;\r\n      const currentTranslation = words[id].translation;\r\n      const currentMeaning = words[id].meaning;\r\n      const currentImage = words[id].image;\r\n      this.setState({ \r\n        words, \r\n        currentName, \r\n        currentImage, \r\n        currentTranslation, \r\n        currentMeaning });\r\n    }\r\n\r\n    renderComponent = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n    updateState = () =>{\r\n      let newId =this.state.id;\r\n      newId = newId + 1;\r\n      const id = this.state.id;\r\n      const words = this.state.words;\r\n      const currentName = words[newId].name;\r\n      const currentTranslation = words[newId].translation;\r\n      const currentMeaning = words[newId].meaning;\r\n      const currentImage = words[newId].image;\r\n      const currentDate = words[newId].date;\r\n      const currentCategory = words[newId].category;      \r\n      this.setState({\r\n        id: newId,\r\n        words, \r\n        currentName, \r\n        currentImage, \r\n        currentTranslation, \r\n        currentMeaning,\r\n        currentDate,\r\n        currentCategory,\r\n        isTranslationVisible: false        \r\n      })\r\n    }\r\n\r\n\r\n\r\n    positiveResponse = () =>{\r\n      var newObj = {};\r\n      var positiveWords = this.state.positiveWords.slice();\r\n      newObj.id = this.state.id;\r\n      newObj.name = this.state.currentName;\r\n      newObj.translation = this.state.currentTranslation;\r\n      newObj.meaning = this.state.currentMeaning;\r\n      newObj.image = this.state.currentImage;\r\n      newObj.date = this.state.currentDate;\r\n      newObj.category = this.state.currentCategory;\r\n      positiveWords.push(newObj);\r\n      this.setState({\r\n        positiveWords,\r\n        isImageVisible: true,\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n      })\r\n    }\r\n\r\n    negativeResponse = () =>{\r\n      this.setState({\r\n        isTranslationVisible: true,\r\n        showNavButtons: false,\r\n        showContinueButton: true,\r\n        isImageVisible: true\r\n      })\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let wordsLength = this.state.words.length;\r\n      let newId =this.state.id;\r\n      newId = newId + 1;\r\n      const id = this.state.id;\r\n      const words = this.state.words;\r\n      if(newId < wordsLength){\r\n        const currentName = words[newId].name;\r\n        const currentTranslation = words[newId].translation;\r\n        const currentMeaning = words[newId].meaning;\r\n        const currentImage = words[newId].image;\r\n        const currentDate = words[newId].date;\r\n        const currentCategory = words[newId].category;     \r\n        this.setState({\r\n          id: newId,\r\n          words, \r\n          currentName, \r\n          currentImage, \r\n          currentTranslation, \r\n          currentMeaning,\r\n          currentDate,\r\n          currentCategory,\r\n          isImageVisible: false,\r\n          isTranslationVisible: false,\r\n          showNavButtons: true,\r\n          showContinueButton: false        \r\n        })\r\n\r\n      }\r\n      else this.setState({\r\n          isFinalVisible: true,\r\n          isTranslationVisible: false,\r\n          showNavButtons: false,\r\n          showContinueButton: false, \r\n          isCardVisible: false,\r\n          isButtonVisible: false\r\n\r\n      })\r\n    }\r\n\r\n    consoleState = () =>{\r\n      console.log(this.state)\r\n    }\r\n\r\n    consoleMessage = () =>{\r\n      console.log('hello');\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newWord = this.state.currentName;\r\n      speech.say(newWord);\r\n   }   \r\n\r\n   setStateOnStart = () => {\r\n      this.setState({\r\n        words: [],\r\n        negativeWords: [],\r\n        positiveWords: [],\r\n        id: 0,\r\n        currentName: '',\r\n        currentTranslation: '',\r\n        currentMeaning: '',\r\n        currentImage: null,\r\n        currentDate : null,\r\n        currentCategory: '',\r\n        isCardVisible: false,\r\n        isImageVisible: false,\r\n        isButtonVisible: true,\r\n        isTranslationVisible: false,\r\n        showNavButtons: true,\r\n        showContinueButton: false,\r\n        isFinalVisible: false         \r\n      }, () => this.initialLoad())\r\n   } \r\n\r\n   initialLoad = () => {\r\n      var id = this.state.id;\r\n      axios.get('/vocabulary2.json')\r\n        .then(res => {\r\n          const words = res.data;\r\n          const currentName = words[id].name;\r\n          const currentTranslation = words[id].translation;\r\n          const currentMeaning = words[id].meaning;\r\n          const currentImage = words[id].image;\r\n          const currentDate = words[id].date;\r\n          const currentCategory = words[id].category;           \r\n          this.setState({ \r\n            words, \r\n            currentName, \r\n            currentImage, \r\n            currentTranslation, \r\n            currentMeaning,\r\n            currentDate,\r\n            currentCategory }, () => console.log(this.state));\r\n        })\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n      <div className=\"content-wrapper\">\r\n      <TopMenu/>\r\n       {this.state.isButtonVisible ?\r\n        <Card.Group className=\"card-header-wrapper\">\r\n          <Card>\r\n            <div className=\"training-wrapper-image\">\r\n              <Image src='training/memory.png' />\r\n            </div>  \r\n            <Card.Content>\r\n              <Card.Header>Верно-неверно</Card.Header>\r\n              <Card.Description>\r\n                <Button primary onClick={this.renderComponent}>Начать</Button>\r\n              </Card.Description>\r\n            </Card.Content>\r\n          </Card>          \r\n        </Card.Group>:\r\n        null\r\n      }\r\n       {this.state.isCardVisible ?\r\n       <Card.Group itemsPerRow={1} className=\"card-header-wrapper\" >\r\n           <Card className=\"card-training\"  >\r\n              <Card.Content>\r\n                <Card.Header className=\"rightwrong-timer\"> \r\n                </Card.Header>\r\n                <Card.Header className=\"rightwrong-header\">{this.state.currentName} \r\n                </Card.Header>                \r\n                <Card.Header>{this.state.currentTranslation} \r\n                </Card.Header>\r\n                <div className=\"rightwrong-image-wrapper\">\r\n                {this.state.isImageVisible ?\r\n                  <Image src={this.state.currentImage} className=\"rightwrong-image\"></Image> : null               \r\n                }\r\n                </div>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Button.Group className=\"card-buttons-wrapper\">\r\n                {this.state.showNavButtons ?\r\n                <Fragment>\r\n                  <Button onClick={this.negativeResponse} className=\"red false-button\" primary>Неверно</Button>\r\n                  <Button onClick={this.positiveResponse} className=\"green true-button\" primary>Верно</Button>\r\n                </Fragment>:null\r\n                }  \r\n                {this.state.showContinueButton ?\r\n                  <Button onClick={this.continueTraining} primary>Продолжить</Button>:null\r\n                }\r\n                </Button.Group>\r\n              </Card.Content>\r\n            </Card>          \r\n      </Card.Group> :\r\n           null\r\n        }\r\n        {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Результаты</Card.Header>\r\n                  <Divider/>\r\n                  <Card.Description className=\"audio-list-container\"> \r\n                  {  (this.state.negativeWords.length !== 0 ) ?\r\n                    <List className=\"audio-list\">\r\n                    {this.state.negativeWords.map((item, index) => \r\n                        <List.Item key={index} ><span>{item.name}</span> - {item.translation}</List.Item>  \r\n                      )}\r\n                   </List>: \r\n                   <Message>\r\n                      <Message.Header>Поздравляем!</Message.Header>\r\n                      <p>\r\n                        Все задания выполнены правильно\r\n                      </p>\r\n                   </Message> \r\n                  }\r\n\r\n                  </Card.Description>\r\n                  <Card.Description className=\"results-wrapper\">\r\n                    <div className=\"positive-results-wrapper\"> \r\n                      <div className=\"positive-results\">\r\n                        {this.state.positiveWords.length}\r\n                      </div>\r\n                      <Label>Верно</Label>                    \r\n                    </div>\r\n                    <div className=\"negative-results-wrapper\"> \r\n                      <div className=\"negative-results\">\r\n                        {this.state.words.length - this.state.positiveWords.length}\r\n                      </div> \r\n                      <Label>Неверно</Label>                   \r\n                    </div>\r\n                  </Card.Description>\r\n                  <Button.Group className=\"card-buttons-wrapper\">\r\n                    <Button primary onClick={this.setStateOnStart}>Продолжить</Button>\r\n                    <Button primary><Link to=\"/training\" className=\"training-link\">Вернуться</Link></Button>\r\n                  </Button.Group>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>         \r\n           : null\r\n        }\r\n        </div>\r\n        <footer></footer>\r\n    </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default Rightwrong;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[0].main_points;\r\n          const fullData = res.data[0].rules[0].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[1].main_points;\r\n          const fullData = res.data[0].rules[1].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureSimple extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[2].main_points;\r\n          const fullData = res.data[0].rules[2].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureSimple;","import React, { Component, Fragment } from 'react';\r\nimport { Card,  Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[3].main_points;\r\n          const fullData = res.data[0].rules[3].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[4].main_points;\r\n          const fullData = res.data[0].rules[4].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFutureContinuos extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[5].main_points;\r\n          const fullData = res.data[0].rules[5].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFutureContinuos;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPresentPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[6].main_points;\r\n          const fullData = res.data[0].rules[6].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarFuturePerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[8].main_points;\r\n          const fullData = res.data[0].rules[8].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass GrammarPastPerfect extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[7].main_points;\r\n          const fullData = res.data[0].rules[7].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId === 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfect;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPresentPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[9].main_points;\r\n          const fullData = res.data[0].rules[9].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPresentPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass GrammarPastPerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[10].main_points;\r\n          const fullData = res.data[0].rules[10].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarPastPerfectContinuous;","import React, { Component, Fragment } from 'react';\r\nimport { Card, Button, List} from 'semantic-ui-react'\r\nimport TopMenu from '../TopMenu'\r\nimport axios from 'axios';\r\nimport speech from 'speech-synth';\r\nimport {Link} from \"react-router-dom\";\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass GrammarFuturePerfectContinuous extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfullData: [],\r\n      examples: [],\r\n      main_points: [],\r\n      id: 0,\r\n      stepId: 0,\r\n      currentTitle: '',\r\n      currentDescription: '',\r\n      currentExamples: [],\r\n      isCardVisible: true,\r\n      showContinueButton: false,\r\n      isFinalVisible: false,\r\n      isButtonVisible: true,\r\n      isBackButtonVisible: false,\r\n      array: []\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n  componentDidMount() {\r\n    var id = this.state.id;\r\n    var stepId = this.state.stepId;\r\n      axios.get('/grammar2.json')\r\n        .then(res => {\r\n          console.log(res.data);\r\n          let main_points = res.data[0].rules[11].main_points;\r\n          const fullData = res.data[0].rules[11].steps;\r\n          let currentTitle = fullData[stepId].title;\r\n          let currentDescription = fullData[stepId].description;\r\n          let currentExamples = fullData[stepId].examples;\r\n          this.setState({ \r\n            fullData: fullData,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples,\r\n            main_points: main_points\r\n          });\r\n        })\r\n    }\r\n\r\n    startTraining = () =>{\r\n      this.setState({\r\n        isButtonVisible: false,\r\n        isCardVisible: true\r\n      })\r\n    }\r\n\r\n   goBack = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId - 1;\r\n      console.log(newId);\r\n      if( (newId < length) && (newId > 0) ){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else if(newId == 0){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;        \r\n          this.setState({\r\n            isBackButtonVisible: false,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })         \r\n      }\r\n\r\n\r\n      else if(newId < 0 ) {\r\n        this.setState({\r\n          isBackButtonVisible: false         \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    continueTraining = () =>{\r\n      let fullData = this.state.fullData.slice();\r\n      let length = fullData.length;\r\n      let newId = this.state.stepId;\r\n      newId  = newId + 1;\r\n      if(newId < length){\r\n          let currentTitle = fullData[newId].title;\r\n          let currentDescription = fullData[newId].description;\r\n          let currentExamples = fullData[newId].examples;\r\n          this.setState({\r\n            isBackButtonVisible: true,\r\n            stepId: newId,\r\n            currentTitle: currentTitle,\r\n            currentDescription: currentDescription,\r\n            currentExamples: currentExamples            \r\n          })       \r\n      }\r\n\r\n      else{\r\n        this.setState({\r\n          isFinalVisible: true,\r\n          isCardVisible: false          \r\n        })\r\n      }\r\n\r\n    }\r\n\r\n   voiceWord = () =>{\r\n      var newfullData = this.state.currentName;\r\n      console.log(newfullData);\r\n      speech.say(newfullData);\r\n   }  \r\n\r\n\r\n   consoleFunction = () =>{\r\n    console.log(this.state);\r\n   }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TopMenu/>\r\n         {this.state.isCardVisible ?\r\n            <Card.Group itemsPerRow={1} className=\"grammar-item\">\r\n              <Card className=\"grammar-item-card\" >\r\n                <Card.Content>\r\n                  <Card.Header>{this.state.currentTitle}</Card.Header>\r\n                  <Card.Description className=\"grammar-item-main-description\">{this.state.currentDescription}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                    {this.state.currentExamples.map((item, index) =>\r\n                      <Card.Description className=\"grammar-item-description\" key ={index} >\r\n                        <h3>{item.exampleName}</h3>\r\n                        <p>{item.exampleTranslation} </p>\r\n                      </Card.Description>\r\n                    )}\r\n                 </Card.Content>\r\n                 <Card.Content className=\"grammar-button-container\">\r\n                 {this.state.isBackButtonVisible ?\r\n                 <Button primary onClick={this.goBack}>Назад</Button> :null }\r\n                   <Button primary onClick={this.continueTraining}>Дальше</Button>\r\n                 </Card.Content>   \r\n              </Card>\r\n            </Card.Group>:\r\n             null\r\n          }\r\n          {this.state.isFinalVisible ?\r\n         <Card.Group itemsPerRow={1} className=\"card-header-wrapper card-final-wrapper grammar-final-wrapper\" >\r\n             <Card className=\"card-training\" >\r\n                <Card.Content>\r\n                  <Card.Header>Итоги</Card.Header>\r\n                  <List className=\"grammar-final-list \">\r\n                    {this.state.main_points.map((item, index) =>\r\n                       <List.Item key={index}>{item}</List.Item> \r\n                    )}\r\n                  </List>\r\n                  <div className=\"link-wrapper\">\r\n                    <Link to=\"/grammar\">Вернуться к курсам</Link>                    \r\n                  </div>\r\n                </Card.Content>\r\n              </Card>          \r\n        </Card.Group>          \r\n             : null\r\n          }\r\n          <Button onClick={this.consoleFunction}>console</Button>\r\n      </Fragment>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default GrammarFuturePerfectContinuous;","import React,{Component} from 'react';\r\n//import './audioplayer.css';\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport '@fortawesome/fontawesome-free/js/all.js'\r\nimport jsmediatags from \"jsmediatags\";\r\nimport { Howl } from \"howler\";\r\nimport axios from 'axios';\r\n\r\n//import {bindActionCreators} from 'redux';\r\n//import actions from './actions/index';\r\n\r\n//import {connect} from 'react-redux';\r\n\r\nclass AudioPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audio: [],\r\n      soundVolume: 5,\r\n      playing: false,\r\n      muted: false,\r\n      currentTrack: null,\r\n      currentTrackLength: null,\r\n      currentTrackInfo: null,\r\n      currentTrackPicture: null,\r\n      currentId: 4,\r\n      order: \"consecutive\",\r\n      duration: 0,\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n      currentDuration: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\",\r\n      tracksVisible: true,\r\n      interval: null,\r\n      progress: 0,\r\n      decodingFinished: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      currentId: 1\r\n    }, () => {\r\n      axios\r\n        .get(\"tracks.json\")\r\n        .then((res) =>\r\n          this.setState({ audio: res.data })\r\n        );       \r\n    }) \r\n  }\r\n\r\n/*\r\n  componentDidUpdate(prevProps){\r\n    let currentTrack = this.state.currentTrack;\r\n    if(prevProps.store.playing !== this.state.playing) { \r\n      this.setState({playing: this.state.playing})\r\n      if (this.state.playing === false) {\r\n        currentTrack.pause();\r\n      } else {\r\n        let interval = this.state.interval;\r\n        currentTrack.play();\r\n        interval = setInterval(() => this.startCycle(), 1000);\r\n        this.setState({ interval });\r\n      }\r\n    }    \r\n\r\n    if(prevProps.store.currentId !== this.state.currentId) { \r\n      if (currentTrack) {\r\n        currentTrack.pause();\r\n      }   \r\n      this.setState({\r\n        currentTrack\r\n      }, () => this.callFunctions(this.state.currentId));\r\n    }\r\n  }\r\n*/\r\n  callFunctions = () => {\r\n    let id = this.state.currentId;\r\n    let currentTrack = new Howl({\r\n      src: \"tracks/\" + this.state.audio.slice(id, id + 1),\r\n      html5: true,\r\n      volume: this.state.soundVolume / 10\r\n    });\r\n    var duration, minutes, seconds, currentMinutes, currentSeconds;\r\n    currentTrack.on(\"load\", () => {\r\n      duration = currentTrack.duration();\r\n      minutes = Math.floor(duration / 60);\r\n      seconds = Math.floor(duration - minutes * 60);\r\n      minutes = (\"0\" + minutes).slice(-2);\r\n      seconds = (\"0\" + seconds).slice(-2);\r\n      currentMinutes = \"00\";\r\n      currentSeconds = \"00\";\r\n      this.setState({ minutes, seconds, duration, currentTrack }, () => {\r\n        this.setState({ decodingFinished: true });        \r\n        if (this.state.playing) {\r\n          this.continuePlay();\r\n        } \r\n      });\r\n    });\r\n    this.readTags(id);\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      progress: 0,\r\n      currentMinutes: \"00\",\r\n      currentSeconds: \"00\"\r\n    })\r\n  }\r\n\r\n  readTags = (id) => {\r\n    let track = this.state.audio[id];\r\n    jsmediatags.read(\r\n      \"http://localhost:3000/tracks/\" + `${this.state.audio[id]}`,\r\n      {\r\n        onSuccess: (tag) => {\r\n          this.setState({ currentTrackInfo: tag }, () => {\r\n            this.decodeTrackInfo();\r\n          });\r\n        },\r\n        onError: (error) => {\r\n          console.log(\":(\", error.type, error.info);\r\n        },\r\n      }\r\n    );\r\n  };\r\n\r\n  decodeTrackInfo = () => {\r\n    let title = this.state.currentTrackInfo.tags.title;\r\n    let artist = this.state.currentTrackInfo.tags.artist;\r\n    let currentTrackPicture;\r\n    if (this.state.currentTrackInfo.tags.picture) {\r\n      const { data, type } = this.state.currentTrackInfo.tags.picture;\r\n      const byteArray = new Uint8Array(data);\r\n      const blob = new Blob([byteArray], { type });\r\n      currentTrackPicture = URL.createObjectURL(blob);\r\n    }\r\n    this.setState({\r\n      currentTrackPicture,\r\n      currentTrackTitle: title,\r\n      currentTrackArtist: artist\r\n    })\r\n  };\r\n\r\n  playMusic = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let interval = this.state.interval;\r\n    if (this.state.playing) {\r\n      currentTrack.pause();\r\n      //this.props.actions.changePlayingState(false);\r\n      clearInterval(interval);\r\n      this.setState({ interval });\r\n    } else {\r\n      currentTrack.volume(this.state.soundVolume / 10);\r\n      currentTrack.play();\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n      this.setState({ interval });\r\n      //this.props.actions.changePlayingState(true);\r\n    }\r\n    //this.props.actions.changePlayingState(!this.state.playing);\r\n    this.setState({currentTrack});\r\n  };\r\n\r\n  continuePlay = () =>{\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.playing) {\r\n      currentTrack.stop();\r\n    }\r\n    let interval = this.state.interval;\r\n    clearInterval(interval);\r\n    currentTrack.play();\r\n    if (this.state.playing) {\r\n      interval = setInterval(() => this.startCycle(), 1000);\r\n    }    \r\n    this.setState({ interval });    \r\n  }\r\n\r\n  changeVolume = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(e.target.value / 10);\r\n    this.setState({ soundVolume: e.target.value, currentTrack });\r\n  };\r\n\r\n  nextTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    console.log(\"currentTrack\", currentTrack);\r\n    currentTrack.stop();\r\n    if (this.state.currentId < this.state.audio.length - 1) {\r\n      //this.props.actions.selectTrack(this.state.currentId + 1);\r\n    } else {\r\n       //this.props.actions.selectTrack(0);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  prevTrack = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    currentTrack.volume(this.state.volume / 10);\r\n    currentTrack.stop();\r\n    if (this.state.currentId > 0) {\r\n      //this.props.actions.selectTrack(this.state.currentId - 1);\r\n    } else {\r\n      //this.props.actions.selectTrack(this.state.audio.length - 1);\r\n    }\r\n    this.setState({ currentTrack, decodingFinished: false }, () => {\r\n      this.resetState();\r\n    });\r\n  };\r\n\r\n  muteSound = () => {\r\n    let currentTrack = this.state.currentTrack;\r\n    if (this.state.muted) {\r\n      currentTrack.mute(false);\r\n    } else {\r\n      currentTrack.mute(true);\r\n    }\r\n    this.setState({\r\n      muted: !this.state.muted,\r\n      currentTrack,\r\n    });\r\n  };\r\n\r\n  startCycle = () => {\r\n    this.incTime();\r\n    this.updateProgress();\r\n  };\r\n\r\n  updateProgress = () => {\r\n    let time = Math.round(this.state.currentTrack.seek());\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let progress = ((time / duration) * 100).toFixed(2);\r\n    this.setState({ progress });\r\n    //this.props.actions.changeProgressState(progress);\r\n  };\r\n\r\n  incTime = () => {\r\n    let currentDuration = Math.round(this.state.currentTrack.seek());\r\n    let currentMinutes = Math.floor(currentDuration / 60);\r\n    let currentSeconds = Math.floor(currentDuration - currentMinutes * 60);\r\n    currentMinutes = (\"0\" + currentMinutes).slice(-2);\r\n    currentSeconds = (\"0\" + currentSeconds).slice(-2);\r\n    this.setState({ currentSeconds, currentMinutes, currentDuration });\r\n    if (currentDuration === this.state.currentTrack.duration()) {\r\n      let currentTrack = this.state.currentTrack;\r\n      currentTrack.stop();      \r\n      if (this.state.currentId < this.state.audio.length - 1) {\r\n        //this.props.actions.selectTrack(this.state.currentId + 1);\r\n      } else {\r\n        //this.props.actions.selectTrack(0);\r\n      }\r\n      this.setState({ currentTrack, decodingFinished: false }, () => {\r\n        this.resetState();\r\n        this.callFunctions(this.state.currentId);\r\n      });      \r\n    }\r\n  };\r\n\r\n  setSeek = (e) => {\r\n    let currentTrack = this.state.currentTrack;\r\n    let duration = Math.round(this.state.currentTrack.duration());\r\n    let seek = (e.target.value * duration) / 100;\r\n    currentTrack.seek(seek);\r\n    console.log(\"seek\", Math.round(seek));\r\n    this.setState({ currentTrack, progress: e.target.value }, () => {\r\n      this.incTime();\r\n      //this.props.actions.changeProgressState(Math.round(seek));\r\n      console.log(this.state.progress);\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"player__visualizer player-visualizer\">\r\n          <div className=\"player-visualizer__waveform\" id=\"waveform\"></div>\r\n        </div>\r\n        <div className=\"player__top player-top\">\r\n          <span className=\"player-top__time\">{this.state.currentMinutes}.{this.state.currentSeconds}</span>\r\n          <div className=\"player-top__progress player-progress\">\r\n              <input\r\n                className=\"player-progress__input\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                type=\"range\"\r\n                value={this.state.progress}\r\n                onChange={this.setSeek}\r\n              />\r\n          </div>\r\n          <span className=\"player-top__time\">{this.state.minutes}.{this.state.seconds}</span>\r\n        </div>\r\n        <div className=\"player-main\">\r\n          <div className=\"player-left\">\r\n            <div className=\"player-info player__info\">\r\n              <div className=\"player-info__icon player-icon\">\r\n                  {this.state.currentTrackPicture ? (\r\n                    <img src={this.state.currentTrackPicture} className=\"player-icon__picture\" alt=\"\" />\r\n                  ) : null}              \r\n              </div>\r\n              <div className=\"player-info__description player-description\">\r\n                <p className=\"player-description__name\">{this.state.currentTrackTitle}</p>\r\n                <p className=\"player-description__artist\">{this.state.currentTrackArtist}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"player__controls player-controls\">\r\n              <div className=\"player-controls__navigation\">\r\n                <div className=\"player-controls__item player-controls__left\" onClick={this.prevTrack}><i className=\"fas fa-backward\"></i></div>\r\n                {!this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-play\"></i></div> : null}\r\n                {this.state.playing ? <div className=\"player-controls__item player-controls__play\" onClick={this.playMusic}><i className=\"fas fa-pause\"></i></div> : null}\r\n                <div className=\"player-controls__item player-controls__right\" onClick={this.nextTrack}><i className=\"fas fa-forward\"></i></div>         \r\n              </div>\r\n            </div>        \r\n          </div>\r\n          <div className=\"player-controls__volume player-volume\">\r\n            <div className=\"player-controls__item player-volume__item\"><i className=\"fas fa-volume-up\"></i></div>\r\n                      <input\r\n                        className=\"player-controls__audio\"\r\n                        value={this.state.soundVolume}\r\n                        min=\"0\"\r\n                        max=\"10\"\r\n                        onChange={this.changeVolume}\r\n                        type=\"range\"\r\n                      />        \r\n          </div>      \r\n        </div>\r\n      </div>        \r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\nfunction mapStateToProps(state){\r\n  return {store: state.reducer};\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: bindActionCreators(actions, dispatch)}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n*/\r\nexport default AudioPlayer;","let initialState = {\r\n\t\"totalScore\": 0,\r\n\t\"todayScore\": 0,\r\n\t\"exercisesComplete\": 0,\r\n\t\"testsComplete\": 0,\r\n\t\"wordsTotal\": 0,\r\n\t\"wordsStudied\": 0,\r\n\t\"wordsRemaining\": 0,\t\t\r\n};\r\n\r\nlet reducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'UPDATE_TOTAL_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalScore: action.payload\r\n\t\t\t}\r\n\t\tcase 'UPDATE_TODAY_SCORE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodayScore: action.payload }\r\n\t\tcase 'UPDATE_EXERCISES_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texercisesComplete: action.payload }\r\n\t\tcase 'UPDATE_TESTS_COMPLETE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttestsComplete: action.payload }\r\n\t\tcase 'UPDATE_WORDS_TOTAL':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsTotal: action.payload }\r\n\t\tcase 'UPDATE_WORDS_REMAINING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsRemaining: action.payload }\r\n\t\tcase 'UPDATE_WORDS_STUDIED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twordsStudied: action.payload }\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\tdefault: return state;\t\t\r\n\t}\r\n}\r\n\r\nexport default reducer;","import {combineReducers} from 'redux';\r\nimport reducer from './index';\r\n\r\nlet createRootReducer = () => combineReducers({\r\n\treducer\r\n})\r\n\r\nexport default createRootReducer;","import {createStore} from 'redux';\r\nimport createRootReducer from '../reducers/rootReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default function configureStore(){\r\n\tlet store = createStore(createRootReducer(), initialState);\r\n\treturn store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport GrammarList from './GrammarList'\r\nimport Statistics from './Statistics'\r\nimport CoursesList from './CoursesList'\r\nimport Training from './Training'\r\nimport Main from './Main'\r\nimport CoursesSimple from './CoursesSimple'\r\nimport ConstructWord from './ConstructWord'\r\nimport Proverbs from './Proverbs'\r\nimport Cards from './Cards'\r\nimport Audio from './Audio'\r\nimport EnglishToRussian from './EnglishToRussian'\r\nimport RussianToEnglish from './RussianToEnglish'\r\nimport Videos from './Videos'\r\nimport Fragments from './Fragments'\r\nimport Pronunciation from './Pronunciation'\r\nimport RecreateText from './RecreateText'\r\nimport RecreateAudioText from './RecreateAudioText'\r\nimport InsertSpaces from './InsertSpaces'\r\nimport TED from './videos/TED'\r\nimport EngVid from './videos/EngVid'\r\nimport BritishCouncil from './videos/BritishCouncil'\r\nimport Khan from './videos/Khan'\r\nimport Coursera from './videos/Coursera'\r\nimport JimmyFallon from './videos/JimmyFallon'\r\nimport JimmyKimmel from './videos/JimmyKimmel'\r\nimport ConanOBrien from './videos/ConanOBrien'\r\nimport Ellen from './videos/Ellen'\r\nimport JamesCorden from './videos/JamesCorden'\r\nimport SethMeyers from './videos/SethMeyers'\r\nimport StephenColbert from './videos/StephenColbert'\r\nimport TextsList from './TextsList'\r\nimport Decks from './Decks'\r\nimport AudioList from './AudioList'\r\nimport Settings from './Settings'\r\nimport BookList from './BookList'\r\nimport Materials from './Materials'\r\nimport Example from './Example'\r\nimport Rightwrong from './Rightwrong'\r\nimport GrammarItem from './grammar/GrammarItem'\r\nimport GrammarPresentSimple from './grammar/GrammarPresentSimple'\r\nimport GrammarPastSimple from './grammar/GrammarPastSimple'\r\nimport GrammarFutureSimple from './grammar/GrammarFutureSimple'\r\nimport GrammarPresentContinuous from './grammar/GrammarPresentContinuous'\r\nimport GrammarPastContinuous from './grammar/GrammarPastContinuous'\r\nimport GrammarFutureContinuous from './grammar/GrammarFutureContinuous'\r\nimport GrammarPresentPerfect from './grammar/GrammarPresentPerfect'\r\nimport GrammarFuturePerfect from './grammar/GrammarFuturePerfect'\r\nimport GrammarPastPerfect from './grammar/GrammarPastPerfect'\r\nimport GrammarPresentPerfectContinuous from './grammar/GrammarPresentPerfectContinuous'\r\nimport GrammarPastPerfectContinuous from './grammar/GrammarPastPerfectContinuous'\r\nimport GrammarFuturePerfectContinuous from './grammar/GrammarFuturePerfectContinuous'\r\nimport AudioPlayer from './AudioPlayer'\r\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport configureStore from \"./store/index\";\r\n\r\nlet initialState = [];\r\n\r\nlet store = configureStore(initialState);\r\n\r\n\r\nReactDOM.render(  \r\n\t<Provider store={store}>\r\n\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t<div className=\"router-wrapper\">\r\n\t\t\t\t<Route exact path=\"/\" component={Main}/>\r\n\t\t\t\t<Route path=\"/vocab\" component={App} />\r\n\t\t\t\t<Route path=\"/settings\" component={Settings} />\r\n\t\t\t\t<Route path=\"/grammar\" component={GrammarList} />\r\n\t\t\t\t<Route path=\"/materials\" component={Materials} />\r\n\t\t\t\t<Route path=\"/statistics\" component={Statistics} />\r\n\t\t\t\t<Route path=\"/courses\" component={CoursesList} />\r\n\t\t\t\t<Route path=\"/coursessimple\" component={CoursesSimple} />\r\n\t\t\t\t<Route path=\"/training\" component={Training} />\t\t  \r\n\t\t\t\t<Route path=\"/cards\" component={Cards} />\r\n\t\t\t\t<Route path=\"/rightwrong\" component={Rightwrong} />\t\t\r\n\t\t\t\t<Route path=\"/constructword\" component={ConstructWord} />\r\n\t\t\t\t<Route path=\"/proverbs\" component={Proverbs}/>\r\n\t\t\t\t<Route path=\"/audio\" component={Audio} />\r\n\t\t\t\t<Route path=\"/pronunciation\" component={Pronunciation} />\r\n\t\t\t\t<Route path=\"/recreatetext\" component={RecreateText} />\r\n\t\t\t\t<Route path=\"/recreateaudiotext\" component={RecreateAudioText} />\r\n\t\t\t\t<Route path=\"/insertspaces\" component={InsertSpaces} />\t\t\t\t\t\t\r\n\t\t\t\t<Route path=\"/englishtorussian\" component={EnglishToRussian} />\r\n\t\t\t\t<Route path=\"/russiantoenglish\" component={RussianToEnglish} />\r\n\t\t\t\t<Route path=\"/videos\" component={Videos} />\r\n\t\t\t\t<Route path=\"/fragments\" component={Fragments} />\r\n\t\t\t\t<Route path=\"/decks\" component={Decks} />\t\t\r\n\t\t\t\t<Route path=\"/ted\" component={TED} />\r\n\t\t\t\t<Route path=\"/engvideo\" component={EngVid} />\r\n\t\t\t\t<Route path=\"/britishcouncil\" component={BritishCouncil} />\r\n\t\t\t\t<Route path=\"/khan\" component={Khan} />\r\n\t\t\t\t<Route path=\"/conanobrien\" component={ConanOBrien} />\r\n\t\t\t\t<Route path=\"/jimmyfallon\" component={JimmyFallon} />\r\n\t\t\t\t<Route path=\"/jimmykimmel\" component={JimmyKimmel} />\r\n\t\t\t\t<Route path=\"/coursera\" component={Coursera} />\r\n\t\t\t\t<Route path=\"/ellen\" component={Ellen} />\r\n\t\t\t\t<Route path=\"/stephencolbert\" component={StephenColbert} />\r\n\t\t\t\t<Route path=\"/jamescorden\" component={JamesCorden} />\r\n\t\t\t\t<Route path=\"/sethmeyers\" component={SethMeyers} />\r\n\t\t\t\t<Route path=\"/texts\" component={TextsList} />\r\n\t\t\t\t<Route path=\"/books\" component={BookList} />\t\t\r\n\t\t\t\t<Route path=\"/tests\" component={Example} />\r\n\t\t\t\t<Route path=\"/audiolist\" component={AudioList} />\r\n\t\t\t\t<Route path=\"/grammarpresentsimple\" component={GrammarPresentSimple} />\r\n\t\t\t\t<Route path=\"/grammarpastsimple\" component={GrammarPastSimple} />\r\n\t\t\t\t<Route path=\"/grammarfuturesimple\" component={GrammarFutureSimple} />\r\n\t\t\t\t<Route path=\"/grammarpresentcontinuous\" component={GrammarPresentContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastcontinuous\" component={GrammarPastContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfuturecontinuous\" component={GrammarFutureContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfect\" component={GrammarPresentPerfect} />\r\n\t\t\t\t<Route path=\"/grammarpastperfect\" component={GrammarPastPerfect} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfect\" component={GrammarFuturePerfect} />\r\n\t\t\t\t<Route path=\"/grammarpresentperfectcontinuous\" component={GrammarPresentPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarpastperfectcontinuous\" component={GrammarPastPerfectContinuous} />\r\n\t\t\t\t<Route path=\"/grammarfutureperfectcontinuous\" component={GrammarFuturePerfectContinuous} />\r\n\t\t\t\t<Route path=\"/audioplayer\" component={AudioPlayer} />\r\n\t\t\t</div>\r\n\t\t</Router>\t\r\n\t</Provider>, document.getElementById('root'));\r\n\r\n/*\r\n\tconst routes = [\r\n\t\t{\r\n\t\t\tpath: '/',\r\n\t\t\tcomponent: App\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/grammar',\r\n\t\t\tcomponent: GrammarList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/courses',\r\n\t\t\tcomponent: CoursesList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursessimple',\r\n\t\t\tcomponent: CoursesSimple\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/training',\r\n\t\t\tcomponent: Training\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/constructword',\r\n\t\t\tcomponent: ConstructWord\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/cards',\r\n\t\t\tcomponent: Cards\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/audio',\r\n\t\t\tcomponent: Audio\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/pronunciation',\r\n\t\t\tcomponent: Pronunciation\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/englishtorussian',\r\n\t\t\tcomponent: EnglishToRussian\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/russiantoenglish',\r\n\t\t\tcomponent: RussianToEnglish\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/videos', \r\n\t\t\tcomponent: Videos\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ted', \r\n\t\t\tcomponent: TED\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/engvid', \r\n\t\t\tcomponent: EngVid\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/britishcouncil', \r\n\t\t\tcomponent: BritishCouncil\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/khan', \r\n\t\t\tcomponent: Khan\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/conanobrien', \r\n\t\t\tcomponent: ConanOBrien\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmyfallon', \r\n\t\t\tcomponent: JimmyFallon\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jimmykimmel', \r\n\t\t\tcomponent: JimmyKimmel\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/coursera',\r\n\t\t\tcomponent: Coursera\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/ellen',\r\n\t\t\tcomponent: Ellen\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/stephencolbert',\r\n\t\t\tcomponent: StephenColbert\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/jamescorden',\r\n\t\t\tcomponent: JamesCorden\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/sethmeyers',\r\n\t\t\tcomponent: SethMeyers\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/texts',\r\n\t\t\tcomponent: TextsList\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: '/tests',\r\n\t\t\tcomponent: Example\r\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t]\r\n\t*/\r\n/*\r\nReactDOM.render(  \r\n  <Router>\r\n\t  <div className=\"router-wrapper\">\r\n          {routes.map((route) => (\r\n            <Route\r\n              key={route.path}\r\n              path={route.path}\r\n              component={route.component}\r\n            />\r\n          ))}\r\n\t  </div>\r\n  </Router>, document.getElementById('root'));\r\n*/"],"sourceRoot":""}